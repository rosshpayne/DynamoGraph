DB:2020/08/13 04:41:58 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:41:58.929287 Powering on...
rdfLoader: 2020/08/13 04:41:58.933941 verify started....xx.
rdfLoader: 2020/08/13 04:41:58.933957 saveNode started......
rdfuuid: 2020/08/13 04:41:58.933966 Powering on...
rdfLoader: 2020/08/13 04:41:58.933972 *************** All started 
rdfLoader: 2020/08/13 04:41:58.937163 .  getType..
rdfLoader: 2020/08/13 04:41:58.937172 node.TyName : [Person]
DB: 2020/08/13 04:41:59.028020 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 90.795187ms
verify: 2020/08/13 04:41:59.028182 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:41:59.028228 Find Ty Address
rdfLoader: 2020/08/13 04:41:59.028233 Find Ty Age
rdfLoader: 2020/08/13 04:41:59.028239 Find Ty Cars
rdfLoader: 2020/08/13 04:41:59.028245 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:41:59.028250 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:41:59.028254 Find Ty DOB
rdfLoader: 2020/08/13 04:41:59.028259 Find Ty Friends
rdfLoader: 2020/08/13 04:41:59.028263 Find Ty Jobs
rdfLoader: 2020/08/13 04:41:59.028267 Find Ty Name
rdfLoader: 2020/08/13 04:41:59.028272 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:41:59.028276 Find Ty Siblings
rdfLoader: 2020/08/13 04:41:59.028286 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:41:59.028316 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:41:59.028321 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:41:59.028346 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.028353 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.028359 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.028365 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.028386 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.028392 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.028398 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:41:59.028402 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:41:59.028410 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc00037eae0)}
SaveRDFNode: 2020/08/13 04:41:59.028414 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:41:59.028423 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.028427 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.028432 UID received  : DSh0/Iv9QbaxzW4RIMapWQ==
grmgr: 2020/08/13 04:41:59.028627 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:41:59.028635 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:41:59.028640 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:41:59.028646 EndCh received for unmarshall. rCnt = 0 
grmgr: 2020/08/13 04:41:59.028651 WAIT on end - send on unmarshall local channel 
verify: 2020/08/13 04:41:59.028666 *** Verify running...... 1
rdfLoader: 2020/08/13 04:41:59.028671 .  getType..
rdfLoader: 2020/08/13 04:41:59.028675 node.TyName : [Person]
verify: 2020/08/13 04:41:59.028718 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 04:41:59.028724 *** Verify running...... 1
grmgr: 2020/08/13 04:41:59.028729 SENT on end - send on unmarshall local channel 
rdfLoader: 2020/08/13 04:41:59.028779 .  getType..
rdfLoader: 2020/08/13 04:41:59.028783 node.TyName : [Person]
verify: 2020/08/13 04:41:59.028802 *** Verify waiting on umarshal ch............................................. 2
grmgr: 2020/08/13 04:41:59.028865 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:41:59.028870 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:41:59.028874 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:41:59.028879 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 04:41:59.028883 WAIT on start - send on unmarshall local channel 
rdfLoader: 2020/08/13 04:41:59.028888 Find Ty Address
rdfLoader: 2020/08/13 04:41:59.028892 Find Ty Age
rdfLoader: 2020/08/13 04:41:59.028897 Find Ty Cars
rdfLoader: 2020/08/13 04:41:59.028902 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:41:59.028907 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:41:59.028911 Find Ty DOB
rdfLoader: 2020/08/13 04:41:59.028916 Find Ty Friends
rdfLoader: 2020/08/13 04:41:59.028920 Find Ty Jobs
rdfLoader: 2020/08/13 04:41:59.028924 Find Ty Name
rdfLoader: 2020/08/13 04:41:59.028929 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:41:59.028933 Find Ty Siblings
rdfLoader: 2020/08/13 04:41:59.028941 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:41:59.028967 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:41:59.028971 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:41:59.028994 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.029001 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.029008 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.029014 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.029020 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.029026 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.029032 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:41:59.029036 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:41:59.029041 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc00037eea0)}
SaveRDFNode: 2020/08/13 04:41:59.029045 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:41:59.029053 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.029057 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.029062 UID received  : e76WQo6sRN2KpUEMisHTtg==
rdfLoader: 2020/08/13 04:41:59.031371 Find Ty Address
rdfLoader: 2020/08/13 04:41:59.031389 Find Ty Age
rdfLoader: 2020/08/13 04:41:59.031395 Find Ty Cars
rdfLoader: 2020/08/13 04:41:59.031400 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:41:59.031404 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:41:59.031409 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:41:59.031413 Find Ty DOB
rdfLoader: 2020/08/13 04:41:59.031417 Find Ty Friends
rdfLoader: 2020/08/13 04:41:59.031421 Find Ty Jobs
rdfLoader: 2020/08/13 04:41:59.031424 Find Ty Name
rdfLoader: 2020/08/13 04:41:59.031429 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:41:59.031433 Find Ty Siblings
rdfLoader: 2020/08/13 04:41:59.031443 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:41:59.031472 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:41:59.031476 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:41:59.031497 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.031520 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.031528 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.031533 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.031539 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.031544 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:59.031550 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:41:59.031554 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:41:59.031559 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc00037f380)}
SaveRDFNode: 2020/08/13 04:41:59.031563 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:41:59.031571 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.031575 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.031581 UID received  : aZfujCOpQMmPX/HgWTL+jg==
verify: 2020/08/13 04:41:59.031769 *** Verify running...... 2
rdfLoader: 2020/08/13 04:41:59.031778 .  getType..
rdfLoader: 2020/08/13 04:41:59.031782 node.TyName : [Person]
verify: 2020/08/13 04:41:59.032216 *** Verify waiting on umarshal ch............................................. 2
verify: 2020/08/13 04:41:59.032225 *** Verify running...... 2
grmgr: 2020/08/13 04:41:59.032230 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:41:59.032236 EndCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:41:59.032240 WAIT on end - send on unmarshall local channel 
DB: 2020/08/13 04:41:59.034923 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.461951ms
DB: 2020/08/13 04:41:59.041730 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.638876ms
DB: 2020/08/13 04:41:59.046889 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.28092ms
DB: 2020/08/13 04:41:59.050224 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.296988ms
DB: 2020/08/13 04:41:59.053661 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.392413ms
DB: 2020/08/13 04:41:59.057690 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.912126ms
DB: 2020/08/13 04:41:59.061031 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.233088ms
DB: 2020/08/13 04:41:59.062805 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 27.848583ms
DB: 2020/08/13 04:41:59.064174 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.110481ms
DB: 2020/08/13 04:41:59.066691 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.710658ms
DB: 2020/08/13 04:41:59.067441 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.233111ms
SaveRDFNode: 2020/08/13 04:41:59.067455 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037eea0)}
rdfUIDdb: 2020/08/13 04:41:59.067463 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.067467 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.067472 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:59.067486 a: = db.Item{PKey:[]uint8{0x7b, 0xbe, 0x96, 0x42, 0x8e, 0xac, 0x44, 0xdd, 0x8a, 0xa5, 0x41, 0xc, 0x8a, 0xc1, 0xd3, 0xb6}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:59.070196 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.470063ms
DB: 2020/08/13 04:41:59.070482 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.759203ms
DB: 2020/08/13 04:41:59.070831 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.315164ms
SaveRDFNode: 2020/08/13 04:41:59.070843 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037eea0)}
rdfUIDdb: 2020/08/13 04:41:59.070848 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.070852 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.070858 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:59.070868 a: = db.Item{PKey:[]uint8{0x7b, 0xbe, 0x96, 0x42, 0x8e, 0xac, 0x44, 0xdd, 0x8a, 0xa5, 0x41, 0xc, 0x8a, 0xc1, 0xd3, 0xb6}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:59.073570 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.323916ms
SaveRDFNode: 2020/08/13 04:41:59.073586 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037eae0)}
rdfUIDdb: 2020/08/13 04:41:59.073592 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.073596 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.073601 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:59.073613 a: = db.Item{PKey:[]uint8{0xd, 0x28, 0x74, 0xfc, 0x8b, 0xfd, 0x41, 0xb6, 0xb1, 0xcd, 0x6e, 0x11, 0x20, 0xc6, 0xa9, 0x59}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:59.073959 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.446307ms
SaveRDFNode: 2020/08/13 04:41:59.073998 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037f380)}
rdfUIDdb: 2020/08/13 04:41:59.074006 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.074009 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.074016 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:59.074026 a: = db.Item{PKey:[]uint8{0x69, 0x97, 0xee, 0x8c, 0x23, 0xa9, 0x40, 0xc9, 0x8f, 0x5f, 0xf1, 0xe0, 0x59, 0x32, 0xfe, 0x8e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:59.074329 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.396054ms
SaveRDFNode: 2020/08/13 04:41:59.074345 Returned.+++++++++++ No error
DB: 2020/08/13 04:41:59.077745 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.690594ms
SaveRDFNode: 2020/08/13 04:41:59.077770 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037f380)}
rdfUIDdb: 2020/08/13 04:41:59.077776 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.077780 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.077785 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:59.077795 a: = db.Item{PKey:[]uint8{0x69, 0x97, 0xee, 0x8c, 0x23, 0xa9, 0x40, 0xc9, 0x8f, 0x5f, 0xf1, 0xe0, 0x59, 0x32, 0xfe, 0x8e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:59.078206 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.540169ms
SaveRDFNode: 2020/08/13 04:41:59.078369 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037eae0)}
rdfUIDdb: 2020/08/13 04:41:59.078381 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:59.078385 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:59.078391 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:59.078401 a: = db.Item{PKey:[]uint8{0xd, 0x28, 0x74, 0xfc, 0x8b, 0xfd, 0x41, 0xb6, 0xb1, 0xcd, 0x6e, 0x11, 0x20, 0xc6, 0xa9, 0x59}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:59.081120 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.292819ms
SaveRDFNode: 2020/08/13 04:41:59.081131 Returned.+++++++++++ No error
DB: 2020/08/13 04:41:59.082165 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.733322ms
SaveRDFNode: 2020/08/13 04:41:59.082175 Returned.+++++++++++ No error
DB:2020/08/13 04:45:58 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:45:58.792005 Powering on...
rdfLoader: 2020/08/13 04:45:58.792315 verify started....xx.
rdfLoader: 2020/08/13 04:45:58.792331 saveNode started......
rdfuuid: 2020/08/13 04:45:58.792341 Powering on...
rdfLoader: 2020/08/13 04:45:58.792348 *************** All started 
rdfLoader: 2020/08/13 04:45:58.799492 .  getType..
rdfLoader: 2020/08/13 04:45:58.799505 node.TyName : [Person]
DB: 2020/08/13 04:45:58.868702 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 69.142262ms
verify: 2020/08/13 04:45:58.868841 *** Verify waiting on umarshal ch............................................. 0
rdfLoader: 2020/08/13 04:45:58.868881 Find Ty Address
rdfLoader: 2020/08/13 04:45:58.868887 Find Ty Age
rdfLoader: 2020/08/13 04:45:58.868893 Find Ty Cars
rdfLoader: 2020/08/13 04:45:58.868899 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:45:58.868903 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:45:58.868908 Find Ty DOB
rdfLoader: 2020/08/13 04:45:58.868914 Find Ty Friends
rdfLoader: 2020/08/13 04:45:58.868918 Find Ty Jobs
rdfLoader: 2020/08/13 04:45:58.868923 Find Ty Name
rdfLoader: 2020/08/13 04:45:58.868928 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:45:58.868932 Find Ty Siblings
rdfLoader: 2020/08/13 04:45:58.868940 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:45:58.868967 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:45:58.868981 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:45:58.869004 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869011 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869017 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869023 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869028 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869034 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869039 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:45:58.869044 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:45:58.869051 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000384480)}
SaveRDFNode: 2020/08/13 04:45:58.869055 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:45:58.869064 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.869071 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.869077 UID received  : Jy8alrLiTUyJLQFrO9qhKg==
grmgr: 2020/08/13 04:45:58.869293 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:45:58.869302 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:45:58.869307 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:45:58.869313 EndCh received for unmarshall. rCnt = 0 
grmgr: 2020/08/13 04:45:58.869317 WAIT on end - send on unmarshall local channel 
verify: 2020/08/13 04:45:58.869324 *** Verify running...... 0
rdfLoader: 2020/08/13 04:45:58.869328 .  getType..
rdfLoader: 2020/08/13 04:45:58.869333 node.TyName : [Person]
verify: 2020/08/13 04:45:58.869373 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 04:45:58.869380 *** Verify running...... 1
verify: 2020/08/13 04:45:58.869385 *** Verify back to waiting on veryifyCh
grmgr: 2020/08/13 04:45:58.869390 SENT on end - send on unmarshall local channel 
rdfLoader: 2020/08/13 04:45:58.869437 .  getType..
rdfLoader: 2020/08/13 04:45:58.869442 node.TyName : [Person]
verify: 2020/08/13 04:45:58.869460 *** Verify waiting on umarshal ch............................................. 0
grmgr: 2020/08/13 04:45:58.869521 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:45:58.869527 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:45:58.869531 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:45:58.869537 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 04:45:58.869541 WAIT on start - send on unmarshall local channel 
rdfLoader: 2020/08/13 04:45:58.869546 Find Ty Address
rdfLoader: 2020/08/13 04:45:58.869550 Find Ty Age
rdfLoader: 2020/08/13 04:45:58.869556 Find Ty Cars
rdfLoader: 2020/08/13 04:45:58.869562 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:45:58.869567 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:45:58.869572 Find Ty DOB
rdfLoader: 2020/08/13 04:45:58.869577 Find Ty Friends
rdfLoader: 2020/08/13 04:45:58.869581 Find Ty Jobs
rdfLoader: 2020/08/13 04:45:58.869586 Find Ty Name
rdfLoader: 2020/08/13 04:45:58.869590 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:45:58.869595 Find Ty Siblings
rdfLoader: 2020/08/13 04:45:58.869604 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:45:58.869630 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:45:58.869641 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:45:58.869662 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869681 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869687 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869692 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869699 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869705 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.869711 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:45:58.869716 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:45:58.869721 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000384a20)}
SaveRDFNode: 2020/08/13 04:45:58.869726 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:45:58.869733 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.869737 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.869743 UID received  : id/uqo4hTY6y/kxmM6aFXw==
rdfLoader: 2020/08/13 04:45:58.872883 Find Ty Address
rdfLoader: 2020/08/13 04:45:58.872895 Find Ty Age
rdfLoader: 2020/08/13 04:45:58.872901 Find Ty Cars
rdfLoader: 2020/08/13 04:45:58.872906 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:45:58.872911 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:45:58.872915 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:45:58.872919 Find Ty DOB
rdfLoader: 2020/08/13 04:45:58.872923 Find Ty Friends
rdfLoader: 2020/08/13 04:45:58.872927 Find Ty Jobs
rdfLoader: 2020/08/13 04:45:58.872930 Find Ty Name
rdfLoader: 2020/08/13 04:45:58.872947 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:45:58.872951 Find Ty Siblings
rdfLoader: 2020/08/13 04:45:58.872960 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:45:58.872984 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:45:58.872988 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:45:58.873007 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.873012 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.873017 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.873038 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.873052 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.873057 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.873062 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:45:58.873066 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:45:58.873071 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000384f00)}
SaveRDFNode: 2020/08/13 04:45:58.873075 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:45:58.873082 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.873085 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.873090 UID received  : EmGGlmq8TcWCINYpONq9jw==
verify: 2020/08/13 04:45:58.873275 *** Verify running...... 0
rdfLoader: 2020/08/13 04:45:58.873283 .  getType..
rdfLoader: 2020/08/13 04:45:58.873287 node.TyName : [Person]
verify: 2020/08/13 04:45:58.873819 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 04:45:58.873828 *** Verify running...... 1
verify: 2020/08/13 04:45:58.873833 *** Verify back to waiting on veryifyCh
grmgr: 2020/08/13 04:45:58.873837 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:45:58.873844 EndCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:45:58.873849 EndCh received for unmarshall. rCnt = 0 
rdfLoader: 2020/08/13 04:45:58.874417 Find Ty Address
rdfLoader: 2020/08/13 04:45:58.874427 Find Ty Age
rdfLoader: 2020/08/13 04:45:58.874433 Find Ty Cars
rdfLoader: 2020/08/13 04:45:58.874438 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:45:58.874442 Find Ty DOB
rdfLoader: 2020/08/13 04:45:58.874446 Find Ty Friends
rdfLoader: 2020/08/13 04:45:58.874450 Find Ty Jobs
rdfLoader: 2020/08/13 04:45:58.874453 Find Ty Name
rdfLoader: 2020/08/13 04:45:58.874457 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:45:58.874461 Find Ty Siblings
rdfLoader: 2020/08/13 04:45:58.874469 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:45:58.874494 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:45:58.874498 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:45:58.874520 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.874527 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.874533 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.874538 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.874543 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.874549 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:45:58.874554 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:45:58.874558 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:45:58.874599 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000385380)}
SaveRDFNode: 2020/08/13 04:45:58.874602 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:45:58.874610 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.874613 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.874618 UID received  : ta2+zabZR6aTQdxRh/2IwA==
grmgr: 2020/08/13 04:45:58.874770 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:45:58.874777 WAIT on start - send on unmarshall local channel 
DB: 2020/08/13 04:45:58.874949 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.845511ms
DB: 2020/08/13 04:45:58.878269 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.498383ms
DB: 2020/08/13 04:45:58.888273 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.145634ms
DB: 2020/08/13 04:45:58.893066 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 14.761141ms
DB: 2020/08/13 04:45:58.906686 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 13.587384ms
DB: 2020/08/13 04:45:58.908648 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.141065ms
DB: 2020/08/13 04:45:58.908943 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 34.295912ms
DB: 2020/08/13 04:45:58.909212 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 34.233553ms
DB: 2020/08/13 04:45:58.913376 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.645319ms
DB: 2020/08/13 04:45:58.913784 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.759083ms
DB: 2020/08/13 04:45:58.914026 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.782463ms
DB: 2020/08/13 04:45:58.918159 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.693672ms
DB: 2020/08/13 04:45:58.918519 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.700995ms
DB: 2020/08/13 04:45:58.919322 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.266892ms
DB: 2020/08/13 04:45:58.923409 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.85958ms
DB: 2020/08/13 04:45:58.924200 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.848726ms
SaveRDFNode: 2020/08/13 04:45:58.924214 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384480)}
rdfUIDdb: 2020/08/13 04:45:58.924221 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.924225 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.924230 Received UID: X18=
SaveRDFNode: 2020/08/13 04:45:58.924243 a: = db.Item{PKey:[]uint8{0x27, 0x2f, 0x1a, 0x96, 0xb2, 0xe2, 0x4d, 0x4c, 0x89, 0x2d, 0x1, 0x6b, 0x3b, 0xda, 0xa1, 0x2a}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:45:58.924519 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.322307ms
SaveRDFNode: 2020/08/13 04:45:58.924530 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384f00)}
rdfUIDdb: 2020/08/13 04:45:58.924536 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.924540 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.924545 Received UID: X18=
SaveRDFNode: 2020/08/13 04:45:58.924555 a: = db.Item{PKey:[]uint8{0x12, 0x61, 0x86, 0x96, 0x6a, 0xbc, 0x4d, 0xc5, 0x82, 0x20, 0xd6, 0x29, 0x38, 0xda, 0xbd, 0x8f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:45:58.928674 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 21.7947ms
DB: 2020/08/13 04:45:58.928957 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.343188ms
SaveRDFNode: 2020/08/13 04:45:58.928973 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385380)}
rdfUIDdb: 2020/08/13 04:45:58.928980 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.928983 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.928989 Received UID: X18=
SaveRDFNode: 2020/08/13 04:45:58.928999 a: = db.Item{PKey:[]uint8{0xb5, 0xad, 0xbe, 0xcd, 0xa6, 0xd9, 0x47, 0xa6, 0x93, 0x41, 0xdc, 0x51, 0x87, 0xfd, 0x88, 0xc0}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:45:58.929271 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.679206ms
SaveRDFNode: 2020/08/13 04:45:58.929282 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384f00)}
rdfUIDdb: 2020/08/13 04:45:58.929287 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.929291 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.929296 Received UID: X18=
SaveRDFNode: 2020/08/13 04:45:58.929305 a: = db.Item{PKey:[]uint8{0x12, 0x61, 0x86, 0x96, 0x6a, 0xbc, 0x4d, 0xc5, 0x82, 0x20, 0xd6, 0x29, 0x38, 0xda, 0xbd, 0x8f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:45:58.929526 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.255687ms
SaveRDFNode: 2020/08/13 04:45:58.929569 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384480)}
rdfUIDdb: 2020/08/13 04:45:58.929580 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.929584 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.929589 Received UID: X18=
SaveRDFNode: 2020/08/13 04:45:58.929599 a: = db.Item{PKey:[]uint8{0x27, 0x2f, 0x1a, 0x96, 0xb2, 0xe2, 0x4d, 0x4c, 0x89, 0x2d, 0x1, 0x6b, 0x3b, 0xda, 0xa1, 0x2a}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:45:58.933642 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.932809ms
SaveRDFNode: 2020/08/13 04:45:58.933654 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384a20)}
rdfUIDdb: 2020/08/13 04:45:58.933660 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.933664 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.933669 Received UID: X18=
SaveRDFNode: 2020/08/13 04:45:58.933679 a: = db.Item{PKey:[]uint8{0x89, 0xdf, 0xee, 0xaa, 0x8e, 0x21, 0x4d, 0x8e, 0xb2, 0xfe, 0x4c, 0x66, 0x33, 0xa6, 0x85, 0x5f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:45:58.933971 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.930888ms
SaveRDFNode: 2020/08/13 04:45:58.933988 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385380)}
rdfUIDdb: 2020/08/13 04:45:58.933994 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.933998 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.934014 Received UID: X18=
SaveRDFNode: 2020/08/13 04:45:58.934023 a: = db.Item{PKey:[]uint8{0xb5, 0xad, 0xbe, 0xcd, 0xa6, 0xd9, 0x47, 0xa6, 0x93, 0x41, 0xdc, 0x51, 0x87, 0xfd, 0x88, 0xc0}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:45:58.934300 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.674949ms
SaveRDFNode: 2020/08/13 04:45:58.934307 Returned.+++++++++++ No error
DB: 2020/08/13 04:45:58.934409 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.069963ms
SaveRDFNode: 2020/08/13 04:45:58.934416 Returned.+++++++++++ No error
DB: 2020/08/13 04:45:58.938528 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.815118ms
SaveRDFNode: 2020/08/13 04:45:58.938543 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384a20)}
rdfUIDdb: 2020/08/13 04:45:58.938549 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:45:58.938553 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:45:58.938559 Received UID: X18=
SaveRDFNode: 2020/08/13 04:45:58.938570 a: = db.Item{PKey:[]uint8{0x89, 0xdf, 0xee, 0xaa, 0x8e, 0x21, 0x4d, 0x8e, 0xb2, 0xfe, 0x4c, 0x66, 0x33, 0xa6, 0x85, 0x5f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:45:58.939270 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.218912ms
SaveRDFNode: 2020/08/13 04:45:58.939427 Returned.+++++++++++ No error
DB: 2020/08/13 04:45:58.944133 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.532646ms
SaveRDFNode: 2020/08/13 04:45:58.944142 Returned.+++++++++++ No error
DB:2020/08/13 06:00:38 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:00:38.825825 Powering on...
rdfLoader: 2020/08/13 06:00:38.826362 verify started....xx.
rdfLoader: 2020/08/13 06:00:38.826379 saveNode started......
rdfuuid: 2020/08/13 06:00:38.826393 Powering on...
rdfLoader: 2020/08/13 06:00:38.826399 *************** All started 
rdfLoader: 2020/08/13 06:00:38.833827 .  getType..
rdfLoader: 2020/08/13 06:00:38.833839 node.TyName : [Person]
DB: 2020/08/13 06:00:38.904255 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 70.350638ms
DB:2020/08/13 06:04:23 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:04:23.258725 Powering on...
rdfLoader: 2020/08/13 06:04:23.258755 verify started....xx.
rdfLoader: 2020/08/13 06:04:23.258764 saveNode started......
rdfuuid: 2020/08/13 06:04:23.258775 Powering on...
rdfLoader: 2020/08/13 06:04:23.258782 *************** All started 
rdfLoader: 2020/08/13 06:04:23.267560 .  getType..
rdfLoader: 2020/08/13 06:04:23.267571 node.TyName : [Person]
DB: 2020/08/13 06:04:23.338929 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.307419ms
DB:2020/08/13 06:09:19 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:09:19.974587 Powering on...
rdfLoader: 2020/08/13 06:09:19.974615 verify started....xx.
rdfLoader: 2020/08/13 06:09:19.974635 saveNode started......
rdfuuid: 2020/08/13 06:09:19.974658 Powering on...
rdfLoader: 2020/08/13 06:09:19.974665 *************** All started 
rdfLoader: 2020/08/13 06:09:19.985860 .  getType..
rdfLoader: 2020/08/13 06:09:19.985885 node.TyName : [Person]
DB: 2020/08/13 06:09:20.058542 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 72.580322ms
verify: 2020/08/13 06:09:20.058707 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
grmgr: 2020/08/13 06:09:20.058720 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:09:20.058742 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:09:20.058747 *** Verify running...... 0
rdfLoader: 2020/08/13 06:09:20.058752 .  getType..
rdfLoader: 2020/08/13 06:09:20.058758 node.TyName : [Person]
verify: 2020/08/13 06:09:20.058787 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
grmgr: 2020/08/13 06:09:20.058794 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:09:20.058802 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:09:20.058807 *** Verify running...... 1
verify: 2020/08/13 06:09:20.058812 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:09:20.058860 .  getType..
rdfLoader: 2020/08/13 06:09:20.058865 node.TyName : [Person]
verify: 2020/08/13 06:09:20.058885 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
grmgr: 2020/08/13 06:09:20.058892 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:09:20.058899 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:09:20.058903 *** Verify running...... 0
rdfLoader: 2020/08/13 06:09:20.058908 .  getType..
rdfLoader: 2020/08/13 06:09:20.058912 node.TyName : [Person]
verify: 2020/08/13 06:09:20.058927 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
grmgr: 2020/08/13 06:09:20.058932 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:09:20.058938 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:09:20.058943 *** Verify running...... 1
verify: 2020/08/13 06:09:20.058948 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:09:20.058985 Find Ty Address
rdfLoader: 2020/08/13 06:09:20.058990 Find Ty Age
rdfLoader: 2020/08/13 06:09:20.058996 Find Ty Cars
rdfLoader: 2020/08/13 06:09:20.059003 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:09:20.059008 Find Ty DOB
rdfLoader: 2020/08/13 06:09:20.059013 Find Ty Friends
rdfLoader: 2020/08/13 06:09:20.059017 Find Ty Jobs
rdfLoader: 2020/08/13 06:09:20.059021 Find Ty Name
rdfLoader: 2020/08/13 06:09:20.059038 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:09:20.059043 Find Ty Siblings
rdfLoader: 2020/08/13 06:09:20.059051 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:09:20.059074 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 06:09:20.059079 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 06:09:20.059116 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:09:20.059123 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:09:20.059130 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:09:20.059136 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:09:20.059143 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:09:20.059150 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:09:20.059157 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:09:20.059161 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:09:20.059171 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007da2a0)}
SaveRDFNode: 2020/08/13 06:09:20.059176 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:09:20.059187 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:09:20.059192 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:09:20.059198 UID received  : sy1TzC1dSt+xF3ULwtcaTA==
grmgr: 2020/08/13 06:09:20.059512 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:09:20.059523 EndCh received for unmarshall. rCnt = 0 
DB: 2020/08/13 06:09:20.067173 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.944486ms
DB: 2020/08/13 06:09:20.070867 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.654652ms
DB: 2020/08/13 06:09:20.074324 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.422291ms
DB: 2020/08/13 06:09:20.079089 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.717289ms
DB: 2020/08/13 06:09:20.084431 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.287682ms
SaveRDFNode: 2020/08/13 06:09:20.084499 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007da2a0)}
rdfUIDdb: 2020/08/13 06:09:20.084515 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:09:20.084523 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:09:20.084536 Received UID: X18=
SaveRDFNode: 2020/08/13 06:09:20.084563 a: = db.Item{PKey:[]uint8{0xb3, 0x2d, 0x53, 0xcc, 0x2d, 0x5d, 0x4a, 0xdf, 0xb1, 0x17, 0x75, 0xb, 0xc2, 0xd7, 0x1a, 0x4c}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:09:20.088531 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.917099ms
SaveRDFNode: 2020/08/13 06:09:20.088545 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007da2a0)}
rdfUIDdb: 2020/08/13 06:09:20.088550 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:09:20.088554 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:09:20.088560 Received UID: X18=
SaveRDFNode: 2020/08/13 06:09:20.088570 a: = db.Item{PKey:[]uint8{0xb3, 0x2d, 0x53, 0xcc, 0x2d, 0x5d, 0x4a, 0xdf, 0xb1, 0x17, 0x75, 0xb, 0xc2, 0xd7, 0x1a, 0x4c}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:09:20.092275 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.671883ms
SaveRDFNode: 2020/08/13 06:09:20.092285 Returned.+++++++++++ No error
DB:2020/08/13 06:13:42 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:13:42.442460 Powering on...
rdfLoader: 2020/08/13 06:13:42.442487 verify started....xx.
rdfLoader: 2020/08/13 06:13:42.442506 saveNode started......
rdfuuid: 2020/08/13 06:13:42.442518 Powering on...
rdfLoader: 2020/08/13 06:13:42.442524 *************** All started 
rdfLoader: 2020/08/13 06:13:42.450776 .  getType..
rdfLoader: 2020/08/13 06:13:42.450792 node.TyName : [Person]
DB: 2020/08/13 06:13:42.524916 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 74.043679ms
verify: 2020/08/13 06:13:42.525083 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
grmgr: 2020/08/13 06:13:42.525095 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:13:42.525104 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:13:42.525109 *** Verify running...... 0
rdfLoader: 2020/08/13 06:13:42.525113 .  getType..
rdfLoader: 2020/08/13 06:13:42.525118 node.TyName : [Person]
verify: 2020/08/13 06:13:42.525137 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
grmgr: 2020/08/13 06:13:42.525143 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:13:42.525151 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:13:42.525156 *** Verify running...... 1
verify: 2020/08/13 06:13:42.525160 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:13:42.525206 .  getType..
rdfLoader: 2020/08/13 06:13:42.525210 node.TyName : [Person]
verify: 2020/08/13 06:13:42.525228 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
grmgr: 2020/08/13 06:13:42.525235 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:13:42.525241 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:13:42.525246 *** Verify running...... 0
rdfLoader: 2020/08/13 06:13:42.525250 .  getType..
rdfLoader: 2020/08/13 06:13:42.525254 node.TyName : [Person]
verify: 2020/08/13 06:13:42.525269 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
grmgr: 2020/08/13 06:13:42.525274 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:13:42.525280 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:13:42.525284 *** Verify running...... 1
verify: 2020/08/13 06:13:42.525289 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:13:42.525333 Find Ty Address
rdfLoader: 2020/08/13 06:13:42.525339 Find Ty Age
rdfLoader: 2020/08/13 06:13:42.525345 Find Ty Cars
rdfLoader: 2020/08/13 06:13:42.525351 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:13:42.525356 Find Ty DOB
rdfLoader: 2020/08/13 06:13:42.525361 Find Ty Friends
rdfLoader: 2020/08/13 06:13:42.525365 Find Ty Jobs
rdfLoader: 2020/08/13 06:13:42.525370 Find Ty Name
rdfLoader: 2020/08/13 06:13:42.525374 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:13:42.525379 Find Ty Siblings
rdfLoader: 2020/08/13 06:13:42.525387 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:13:42.525413 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 06:13:42.525418 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 06:13:42.525440 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:13:42.525446 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:13:42.525453 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:13:42.525459 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:13:42.525465 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:13:42.525472 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:13:42.525478 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:13:42.525482 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:13:42.525491 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0003925a0)}
SaveRDFNode: 2020/08/13 06:13:42.525496 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:13:42.525518 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:13:42.525523 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:13:42.525530 UID received  : Gjv64dBrQiWb+4mAiFH20w==
grmgr: 2020/08/13 06:13:42.525847 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:13:42.525858 EndCh received for unmarshall. rCnt = 0 
grmgr: 2020/08/13 06:13:42.525863 Send ack to waiting unmarshall...
DB: 2020/08/13 06:13:42.534014 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.455801ms
DB: 2020/08/13 06:13:42.537337 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.2859ms
DB: 2020/08/13 06:13:42.540674 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.231646ms
DB: 2020/08/13 06:13:42.543999 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.270186ms
DB: 2020/08/13 06:13:42.547638 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.461709ms
SaveRDFNode: 2020/08/13 06:13:42.547652 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003925a0)}
rdfUIDdb: 2020/08/13 06:13:42.547658 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:13:42.547662 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:13:42.547673 Received UID: X18=
SaveRDFNode: 2020/08/13 06:13:42.547685 a: = db.Item{PKey:[]uint8{0x1a, 0x3b, 0xfa, 0xe1, 0xd0, 0x6b, 0x42, 0x25, 0x9b, 0xfb, 0x89, 0x80, 0x88, 0x51, 0xf6, 0xd3}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:13:42.550884 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.150438ms
SaveRDFNode: 2020/08/13 06:13:42.550897 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003925a0)}
rdfUIDdb: 2020/08/13 06:13:42.550902 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:13:42.550906 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:13:42.550911 Received UID: X18=
SaveRDFNode: 2020/08/13 06:13:42.550922 a: = db.Item{PKey:[]uint8{0x1a, 0x3b, 0xfa, 0xe1, 0xd0, 0x6b, 0x42, 0x25, 0x9b, 0xfb, 0x89, 0x80, 0x88, 0x51, 0xf6, 0xd3}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:13:42.556475 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.521375ms
SaveRDFNode: 2020/08/13 06:13:42.556485 Returned.+++++++++++ No error
DB:2020/08/13 06:16:13 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:16:13.972292 Powering on...
rdfLoader: 2020/08/13 06:16:13.972598 verify started....xx.
rdfLoader: 2020/08/13 06:16:13.972614 saveNode started......
rdfuuid: 2020/08/13 06:16:13.972628 Powering on...
rdfLoader: 2020/08/13 06:16:13.972635 *************** All started 
rdfLoader: 2020/08/13 06:16:13.981596 .  getType..
rdfLoader: 2020/08/13 06:16:13.981609 node.TyName : [Person]
DB: 2020/08/13 06:16:14.056786 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 75.105842ms
verify: 2020/08/13 06:16:14.056938 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:16:14.056947  Send Ask request to limiter.
verify: 2020/08/13 06:16:14.056952 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:16:14.056961 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:16:14.056970 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:16:14.056975 *** Verify running...... 0
rdfLoader: 2020/08/13 06:16:14.056980 .  getType..
rdfLoader: 2020/08/13 06:16:14.056985 node.TyName : [Person]
verify: 2020/08/13 06:16:14.057005 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:16:14.057009  Send Ask request to limiter.
verify: 2020/08/13 06:16:14.057015 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:16:14.057020 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:16:14.057028 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:16:14.057033 *** Verify running...... 1
verify: 2020/08/13 06:16:14.057038 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:16:14.057086 .  getType..
rdfLoader: 2020/08/13 06:16:14.057100 node.TyName : [Person]
verify: 2020/08/13 06:16:14.057119 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:16:14.057124  Send Ask request to limiter.
verify: 2020/08/13 06:16:14.057129 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:16:14.057134 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:16:14.057141 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:16:14.057145 *** Verify running...... 0
rdfLoader: 2020/08/13 06:16:14.057150 .  getType..
rdfLoader: 2020/08/13 06:16:14.057154 node.TyName : [Person]
verify: 2020/08/13 06:16:14.057169 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:16:14.057173  Send Ask request to limiter.
verify: 2020/08/13 06:16:14.057177 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:16:14.057182 verify has ASKed. rWait for unmarshall set to true..
verify: 2020/08/13 06:16:14.057189 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:16:14.057194 *** Verify running...... 1
verify: 2020/08/13 06:16:14.057198 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:16:14.057234 Find Ty Address
rdfLoader: 2020/08/13 06:16:14.057239 Find Ty Age
rdfLoader: 2020/08/13 06:16:14.057245 Find Ty Cars
rdfLoader: 2020/08/13 06:16:14.057251 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:16:14.057256 Find Ty DOB
rdfLoader: 2020/08/13 06:16:14.057261 Find Ty Friends
rdfLoader: 2020/08/13 06:16:14.057265 Find Ty Jobs
rdfLoader: 2020/08/13 06:16:14.057270 Find Ty Name
rdfLoader: 2020/08/13 06:16:14.057274 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:16:14.057279 Find Ty Siblings
rdfLoader: 2020/08/13 06:16:14.057287 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:16:14.057310 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 06:16:14.057315 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 06:16:14.057335 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.057342 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.057349 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.057355 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.057361 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.057372 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.057378 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:16:14.057386 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:16:14.057396 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007d82a0)}
SaveRDFNode: 2020/08/13 06:16:14.057401 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:16:14.057411 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.057416 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.057423 UID received  : W/7T3wNmScaB7wTJhnu88A==
grmgr: 2020/08/13 06:16:14.057733 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:16:14.057744 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:16:14.057750 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:16:14.057755 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:16:14.059594 EndCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:16:14.059606 Send ack to waiting unmarshall...
rdfLoader: 2020/08/13 06:16:14.059613 Find Ty Address
rdfLoader: 2020/08/13 06:16:14.059618 Find Ty Age
rdfLoader: 2020/08/13 06:16:14.059623 Find Ty Cars
rdfLoader: 2020/08/13 06:16:14.059628 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:16:14.059633 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:16:14.059637 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:16:14.059649 Find Ty DOB
rdfLoader: 2020/08/13 06:16:14.059654 Find Ty Friends
rdfLoader: 2020/08/13 06:16:14.059657 Find Ty Jobs
rdfLoader: 2020/08/13 06:16:14.059662 Find Ty Name
rdfLoader: 2020/08/13 06:16:14.059666 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:16:14.059670 Find Ty Siblings
rdfLoader: 2020/08/13 06:16:14.059680 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:16:14.059708 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 06:16:14.059713 Send End on channel grmgr.EndCh
rdfLoader: 2020/08/13 06:16:14.059717 Find Ty Address
rdfLoader: 2020/08/13 06:16:14.059739 Find Ty Age
rdfLoader: 2020/08/13 06:16:14.059744 Find Ty Cars
rdfLoader: 2020/08/13 06:16:14.059748 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:16:14.059753 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:16:14.059757 Find Ty DOB
rdfLoader: 2020/08/13 06:16:14.059761 Find Ty Friends
rdfLoader: 2020/08/13 06:16:14.059765 Find Ty Jobs
rdfLoader: 2020/08/13 06:16:14.059768 Find Ty Name
rdfLoader: 2020/08/13 06:16:14.059773 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:16:14.059777 Find Ty Siblings
rdfLoader: 2020/08/13 06:16:14.059795 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:16:14.059824 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 06:16:14.059833 Send End on channel grmgr.EndCh
rdfLoader: 2020/08/13 06:16:14.059838 Find Ty Address
rdfLoader: 2020/08/13 06:16:14.059842 Find Ty Age
rdfLoader: 2020/08/13 06:16:14.059846 Find Ty Cars
rdfLoader: 2020/08/13 06:16:14.059851 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:16:14.059855 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:16:14.059859 Find Ty DOB
rdfLoader: 2020/08/13 06:16:14.059864 Find Ty Friends
rdfLoader: 2020/08/13 06:16:14.059867 Find Ty Jobs
rdfLoader: 2020/08/13 06:16:14.059871 Find Ty Name
rdfLoader: 2020/08/13 06:16:14.059875 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:16:14.059879 Find Ty Siblings
rdfLoader: 2020/08/13 06:16:14.059902 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:16:14.059926 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 06:16:14.059930 Send End on channel grmgr.EndCh
DB: 2020/08/13 06:16:14.068309 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.8559ms
DB: 2020/08/13 06:16:14.073236 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.890135ms
DB: 2020/08/13 06:16:14.078125 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.851388ms
DB: 2020/08/13 06:16:14.083254 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.086196ms
DB: 2020/08/13 06:16:14.088292 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.002002ms
SaveRDFNode: 2020/08/13 06:16:14.088307 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007d82a0)}
rdfUIDdb: 2020/08/13 06:16:14.088314 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.088318 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.088324 Received UID: X18=
SaveRDFNode: 2020/08/13 06:16:14.088338 a: = db.Item{PKey:[]uint8{0x5b, 0xfe, 0xd3, 0xdf, 0x3, 0x66, 0x49, 0xc6, 0x81, 0xef, 0x4, 0xc9, 0x86, 0x7b, 0xbc, 0xf0}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:16:14.093451 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.081868ms
SaveRDFNode: 2020/08/13 06:16:14.093464 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007d82a0)}
rdfUIDdb: 2020/08/13 06:16:14.093470 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.093474 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.093479 Received UID: X18=
SaveRDFNode: 2020/08/13 06:16:14.093490 a: = db.Item{PKey:[]uint8{0x5b, 0xfe, 0xd3, 0xdf, 0x3, 0x66, 0x49, 0xc6, 0x81, 0xef, 0x4, 0xc9, 0x86, 0x7b, 0xbc, 0xf0}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:16:14.099944 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.422182ms
SaveRDFNode: 2020/08/13 06:16:14.100112 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:16:14.100128 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.100138 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.100153 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.100159 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.100164 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.100170 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.100176 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:16:14.100180 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:16:14.100186 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0007d9260)}
SaveRDFNode: 2020/08/13 06:16:14.100191 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:16:14.100201 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.100205 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.100211 UID received  : 58YTIXbPTEa8QOJiXGzwPw==
DB: 2020/08/13 06:16:14.105122 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.864131ms
DB: 2020/08/13 06:16:14.109863 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.707703ms
DB: 2020/08/13 06:16:14.114846 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.952407ms
DB: 2020/08/13 06:16:14.119894 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.016669ms
DB: 2020/08/13 06:16:14.125712 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.64133ms
SaveRDFNode: 2020/08/13 06:16:14.125726 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007d9260)}
rdfUIDdb: 2020/08/13 06:16:14.125732 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.125736 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.125742 Received UID: X18=
SaveRDFNode: 2020/08/13 06:16:14.125756 a: = db.Item{PKey:[]uint8{0xe7, 0xc6, 0x13, 0x21, 0x76, 0xcf, 0x4c, 0x46, 0xbc, 0x40, 0xe2, 0x62, 0x5c, 0x6c, 0xf0, 0x3f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:16:14.130717 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.928931ms
SaveRDFNode: 2020/08/13 06:16:14.130731 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007d9260)}
rdfUIDdb: 2020/08/13 06:16:14.130737 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.130740 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.130746 Received UID: X18=
SaveRDFNode: 2020/08/13 06:16:14.130756 a: = db.Item{PKey:[]uint8{0xe7, 0xc6, 0x13, 0x21, 0x76, 0xcf, 0x4c, 0x46, 0xbc, 0x40, 0xe2, 0x62, 0x5c, 0x6c, 0xf0, 0x3f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:16:14.137644 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.857659ms
SaveRDFNode: 2020/08/13 06:16:14.137795 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:16:14.137811 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.137819 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.137825 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.137831 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.137838 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.137853 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.137859 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:16:14.137863 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:16:14.137869 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000016960)}
SaveRDFNode: 2020/08/13 06:16:14.137873 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:16:14.137883 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.137887 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.137917 UID received  : Gl9Rl5RwTCSG3We1QogUug==
DB: 2020/08/13 06:16:14.145828 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.882306ms
DB: 2020/08/13 06:16:14.151143 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.270524ms
DB: 2020/08/13 06:16:14.156094 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.914506ms
DB: 2020/08/13 06:16:14.164510 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.211602ms
DB: 2020/08/13 06:16:14.170340 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.795802ms
SaveRDFNode: 2020/08/13 06:16:14.170355 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016960)}
rdfUIDdb: 2020/08/13 06:16:14.170362 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.170366 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.170372 Received UID: X18=
SaveRDFNode: 2020/08/13 06:16:14.170384 a: = db.Item{PKey:[]uint8{0x1a, 0x5f, 0x51, 0x97, 0x94, 0x70, 0x4c, 0x24, 0x86, 0xdd, 0x67, 0xb5, 0x42, 0x88, 0x14, 0xba}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:16:14.175443 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.01073ms
SaveRDFNode: 2020/08/13 06:16:14.175605 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016960)}
rdfUIDdb: 2020/08/13 06:16:14.175617 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.175621 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.175627 Received UID: X18=
SaveRDFNode: 2020/08/13 06:16:14.175638 a: = db.Item{PKey:[]uint8{0x1a, 0x5f, 0x51, 0x97, 0x94, 0x70, 0x4c, 0x24, 0x86, 0xdd, 0x67, 0xb5, 0x42, 0x88, 0x14, 0xba}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:16:14.180575 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.905822ms
SaveRDFNode: 2020/08/13 06:16:14.180587 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:16:14.180597 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.180603 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.180609 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.180615 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.180623 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.180630 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:16:14.180636 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:16:14.180648 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:16:14.180672 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0003924e0)}
SaveRDFNode: 2020/08/13 06:16:14.180677 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:16:14.180687 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.180691 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.180696 UID received  : g8u2e3ocTHKjZiuFfTa4Rw==
DB: 2020/08/13 06:16:14.185473 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.749064ms
DB: 2020/08/13 06:16:14.190393 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.883409ms
DB: 2020/08/13 06:16:14.195291 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.864531ms
DB: 2020/08/13 06:16:14.200356 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.850825ms
DB: 2020/08/13 06:16:14.205801 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.413475ms
SaveRDFNode: 2020/08/13 06:16:14.205815 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003924e0)}
rdfUIDdb: 2020/08/13 06:16:14.205821 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.205825 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.205831 Received UID: X18=
SaveRDFNode: 2020/08/13 06:16:14.205843 a: = db.Item{PKey:[]uint8{0x83, 0xcb, 0xb6, 0x7b, 0x7a, 0x1c, 0x4c, 0x72, 0xa3, 0x66, 0x2b, 0x85, 0x7d, 0x36, 0xb8, 0x47}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:16:14.210789 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.915948ms
SaveRDFNode: 2020/08/13 06:16:14.210957 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003924e0)}
rdfUIDdb: 2020/08/13 06:16:14.210968 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:16:14.210973 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:16:14.210979 Received UID: X18=
SaveRDFNode: 2020/08/13 06:16:14.210992 a: = db.Item{PKey:[]uint8{0x83, 0xcb, 0xb6, 0x7b, 0x7a, 0x1c, 0x4c, 0x72, 0xa3, 0x66, 0x2b, 0x85, 0x7d, 0x36, 0xb8, 0x47}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:16:14.215986 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.960101ms
SaveRDFNode: 2020/08/13 06:16:14.215996 Returned.+++++++++++ No error
DB:2020/08/13 06:20:02 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:20:02.232511 Powering on...
rdfLoader: 2020/08/13 06:20:02.232801 verify started....xx.
rdfLoader: 2020/08/13 06:20:02.232825 saveNode started......
rdfuuid: 2020/08/13 06:20:02.232838 Powering on...
rdfLoader: 2020/08/13 06:20:02.232845 *************** All started 
rdfLoader: 2020/08/13 06:20:02.241300 .  getType..
rdfLoader: 2020/08/13 06:20:02.241312 node.TyName : [Person]
DB: 2020/08/13 06:20:02.320574 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 79.20179ms
verify: 2020/08/13 06:20:02.320733 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:20:02.320741  Send Ask request to limiter.
verify: 2020/08/13 06:20:02.320747 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:20:02.320764 verify has ASKed. Under cnt limit. Send ACK on routine channel..%!(EXTRA string=unmarshall)
verify: 2020/08/13 06:20:02.320773 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:20:02.320778 *** Verify running...... 0
rdfLoader: 2020/08/13 06:20:02.320782 .  getType..
rdfLoader: 2020/08/13 06:20:02.320787 node.TyName : [Person]
verify: 2020/08/13 06:20:02.320808 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:20:02.320813  Send Ask request to limiter.
verify: 2020/08/13 06:20:02.320818 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:20:02.320824 verify has ASKed. Under cnt limit. Send ACK on routine channel..%!(EXTRA string=unmarshall)
verify: 2020/08/13 06:20:02.320832 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:20:02.320837 *** Verify running...... 1
verify: 2020/08/13 06:20:02.320842 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:20:02.320890 .  getType..
rdfLoader: 2020/08/13 06:20:02.320895 node.TyName : [Person]
verify: 2020/08/13 06:20:02.320915 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:20:02.320920  Send Ask request to limiter.
verify: 2020/08/13 06:20:02.320924 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:20:02.320930 verify has ASKed. Under cnt limit. Send ACK on routine channel..%!(EXTRA string=unmarshall)
verify: 2020/08/13 06:20:02.320936 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:20:02.320941 *** Verify running...... 0
rdfLoader: 2020/08/13 06:20:02.320945 .  getType..
rdfLoader: 2020/08/13 06:20:02.320950 node.TyName : [Person]
verify: 2020/08/13 06:20:02.320965 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:20:02.320969  Send Ask request to limiter.
verify: 2020/08/13 06:20:02.320973 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:20:02.320979 verify has ASKed. Under cnt limit. Send ACK on routine channel..%!(EXTRA string=unmarshall)
verify: 2020/08/13 06:20:02.320986 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:20:02.320991 *** Verify running...... 1
verify: 2020/08/13 06:20:02.320995 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:20:02.321036 Find Ty Address
rdfLoader: 2020/08/13 06:20:02.321042 Find Ty Age
rdfLoader: 2020/08/13 06:20:02.321049 Find Ty Cars
rdfLoader: 2020/08/13 06:20:02.321055 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:20:02.321060 Find Ty DOB
rdfLoader: 2020/08/13 06:20:02.321065 Find Ty Friends
rdfLoader: 2020/08/13 06:20:02.321069 Find Ty Jobs
rdfLoader: 2020/08/13 06:20:02.321078 Find Ty Name
rdfLoader: 2020/08/13 06:20:02.321083 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:20:02.321088 Find Ty Siblings
rdfLoader: 2020/08/13 06:20:02.321097 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:20:02.321123 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 06:20:02.321128 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 06:20:02.321152 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:20:02.321159 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:20:02.321166 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:20:02.321172 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:20:02.321178 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:20:02.321184 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:20:02.321190 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:20:02.321195 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:20:02.321204 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000017b60)}
SaveRDFNode: 2020/08/13 06:20:02.321209 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:20:02.321220 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:20:02.321224 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:20:02.321231 UID received  : o6y098IiRqykp1s8mpvoUw==
grmgr: 2020/08/13 06:20:02.321540 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:20:02.321551 EndCh received for unmarshall. rCnt = 0 
grmgr: 2020/08/13 06:20:02.321556 Send ack to waiting unmarshall...
DB: 2020/08/13 06:20:02.333303 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.039104ms
DB: 2020/08/13 06:20:02.340647 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.295329ms
DB: 2020/08/13 06:20:02.349251 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.406168ms
DB: 2020/08/13 06:20:02.354947 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.659622ms
DB: 2020/08/13 06:20:02.360663 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.681654ms
SaveRDFNode: 2020/08/13 06:20:02.360836 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017b60)}
rdfUIDdb: 2020/08/13 06:20:02.360848 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:20:02.360853 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:20:02.360859 Received UID: X18=
SaveRDFNode: 2020/08/13 06:20:02.360874 a: = db.Item{PKey:[]uint8{0xa3, 0xac, 0xb4, 0xf7, 0xc2, 0x22, 0x46, 0xac, 0xa4, 0xa7, 0x5b, 0x3c, 0x9a, 0x9b, 0xe8, 0x53}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:20:02.365255 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.349654ms
SaveRDFNode: 2020/08/13 06:20:02.365277 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017b60)}
rdfUIDdb: 2020/08/13 06:20:02.365282 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:20:02.365286 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:20:02.365292 Received UID: X18=
SaveRDFNode: 2020/08/13 06:20:02.365302 a: = db.Item{PKey:[]uint8{0xa3, 0xac, 0xb4, 0xf7, 0xc2, 0x22, 0x46, 0xac, 0xa4, 0xa7, 0x5b, 0x3c, 0x9a, 0x9b, 0xe8, 0x53}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:20:02.369174 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.841125ms
SaveRDFNode: 2020/08/13 06:20:02.369184 Returned.+++++++++++ No error
DB:2020/08/13 06:22:49 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:22:49.829247 Powering on...
rdfLoader: 2020/08/13 06:22:49.829552 verify started....xx.
rdfLoader: 2020/08/13 06:22:49.829567 saveNode started......
rdfuuid: 2020/08/13 06:22:49.829579 Powering on...
rdfLoader: 2020/08/13 06:22:49.829585 *************** All started 
rdfLoader: 2020/08/13 06:22:49.838027 .  getType..
rdfLoader: 2020/08/13 06:22:49.838042 node.TyName : [Person]
DB: 2020/08/13 06:22:49.911526 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 73.432122ms
verify: 2020/08/13 06:22:49.911678 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:22:49.911698  Send Ask request to limiter.
verify: 2020/08/13 06:22:49.911703 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:22:49.911723 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:22:49.911744 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:22:49.911749 *** Verify running...... 0
rdfLoader: 2020/08/13 06:22:49.911753 .  getType..
rdfLoader: 2020/08/13 06:22:49.911758 node.TyName : [Person]
verify: 2020/08/13 06:22:49.911776 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:22:49.911781  Send Ask request to limiter.
verify: 2020/08/13 06:22:49.911785 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:22:49.911791 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:22:49.911798 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:22:49.911803 *** Verify running...... 1
verify: 2020/08/13 06:22:49.911808 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:22:49.914297 .  getType..
rdfLoader: 2020/08/13 06:22:49.914310 node.TyName : [Person]
verify: 2020/08/13 06:22:49.914340 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:22:49.914355  Send Ask request to limiter.
verify: 2020/08/13 06:22:49.914364 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:22:49.914383 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:22:49.914392 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:22:49.914413 *** Verify running...... 0
rdfLoader: 2020/08/13 06:22:49.914417 .  getType..
rdfLoader: 2020/08/13 06:22:49.914421 node.TyName : [Person]
verify: 2020/08/13 06:22:49.914437 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:22:49.914441  Send Ask request to limiter.
verify: 2020/08/13 06:22:49.914445 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:22:49.914450 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:22:49.914456 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:22:49.914460 *** Verify running...... 1
verify: 2020/08/13 06:22:49.914464 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:22:49.914468 verify at wg.Wait() .....
rdfLoader: 2020/08/13 06:22:49.914918 Find Ty Address
rdfLoader: 2020/08/13 06:22:49.914931 Find Ty Age
rdfLoader: 2020/08/13 06:22:49.914937 Find Ty Cars
rdfLoader: 2020/08/13 06:22:49.914943 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:22:49.914947 Find Ty DOB
rdfLoader: 2020/08/13 06:22:49.914951 Find Ty Friends
rdfLoader: 2020/08/13 06:22:49.914955 Find Ty Jobs
rdfLoader: 2020/08/13 06:22:49.914958 Find Ty Name
rdfLoader: 2020/08/13 06:22:49.914962 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:22:49.914979 Find Ty Siblings
rdfLoader: 2020/08/13 06:22:49.915040 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:22:49.915068 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 06:22:49.915072 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 06:22:49.915096 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:22:49.915102 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:22:49.915108 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:22:49.915114 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:22:49.915119 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:22:49.915124 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:22:49.915135 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:22:49.915139 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:22:49.915149 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007d82a0)}
SaveRDFNode: 2020/08/13 06:22:49.915154 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:22:49.915186 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:22:49.915192 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:22:49.915198 UID received  : Pkzy/OfMQo29B1qOLws/JQ==
grmgr: 2020/08/13 06:22:49.915889 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:22:49.915900 EndCh received for unmarshall. rCnt = 0 
grmgr: 2020/08/13 06:22:49.915904 Send ack to waiting unmarshall...
DB: 2020/08/13 06:22:49.925780 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.550814ms
DB: 2020/08/13 06:22:49.930033 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.214962ms
DB: 2020/08/13 06:22:49.934776 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.698059ms
DB: 2020/08/13 06:22:49.939107 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.291768ms
DB: 2020/08/13 06:22:49.942996 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.845045ms
SaveRDFNode: 2020/08/13 06:22:49.943011 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007d82a0)}
rdfUIDdb: 2020/08/13 06:22:49.943018 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:22:49.943022 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:22:49.943028 Received UID: X18=
SaveRDFNode: 2020/08/13 06:22:49.943042 a: = db.Item{PKey:[]uint8{0x3e, 0x4c, 0xf2, 0xfc, 0xe7, 0xcc, 0x42, 0x8d, 0xbd, 0x7, 0x5a, 0x8e, 0x2f, 0xb, 0x3f, 0x25}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:22:49.946823 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.75105ms
SaveRDFNode: 2020/08/13 06:22:49.946839 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007d82a0)}
rdfUIDdb: 2020/08/13 06:22:49.946846 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:22:49.946850 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:22:49.946857 Received UID: X18=
SaveRDFNode: 2020/08/13 06:22:49.946867 a: = db.Item{PKey:[]uint8{0x3e, 0x4c, 0xf2, 0xfc, 0xe7, 0xcc, 0x42, 0x8d, 0xbd, 0x7, 0x5a, 0x8e, 0x2f, 0xb, 0x3f, 0x25}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:22:49.965548 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 18.641497ms
SaveRDFNode: 2020/08/13 06:22:49.965572 Returned.+++++++++++ No error
DB:2020/08/13 06:30:52 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:30:52.557380 Powering on...
rdfLoader: 2020/08/13 06:30:52.557407 verify started....xx.
rdfLoader: 2020/08/13 06:30:52.557416 saveNode started......
rdfuuid: 2020/08/13 06:30:52.557428 Powering on...
rdfLoader: 2020/08/13 06:30:52.557434 *************** All started 
rdfLoader: 2020/08/13 06:30:52.566405 .  getType..
rdfLoader: 2020/08/13 06:30:52.566427 node.TyName : [Person]
DB: 2020/08/13 06:30:52.643262 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 76.772471ms
verify: 2020/08/13 06:30:52.643419 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:30:52.643436  Send Ask request to limiter.
verify: 2020/08/13 06:30:52.643441 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:30:52.643449 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:30:52.643459 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:30:52.643467 *** Verify running...... 0
rdfLoader: 2020/08/13 06:30:52.643472 .  getType..
rdfLoader: 2020/08/13 06:30:52.643477 node.TyName : [Person]
verify: 2020/08/13 06:30:52.643499 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:30:52.643504  Send Ask request to limiter.
verify: 2020/08/13 06:30:52.643508 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:30:52.643514 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:30:52.643522 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:30:52.643526 *** Verify running...... 1
verify: 2020/08/13 06:30:52.643531 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:30:52.643579 .  getType..
rdfLoader: 2020/08/13 06:30:52.643584 node.TyName : [Person]
verify: 2020/08/13 06:30:52.643603 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:30:52.643608  Send Ask request to limiter.
verify: 2020/08/13 06:30:52.643613 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:30:52.643618 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:30:52.643626 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:30:52.643630 *** Verify running...... 0
rdfLoader: 2020/08/13 06:30:52.643634 .  getType..
rdfLoader: 2020/08/13 06:30:52.643639 node.TyName : [Person]
verify: 2020/08/13 06:30:52.643654 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:30:52.643658  Send Ask request to limiter.
verify: 2020/08/13 06:30:52.643663 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:30:52.643668 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:30:52.643675 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:30:52.643679 *** Verify running...... 1
verify: 2020/08/13 06:30:52.643684 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:30:52.643692 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:30:52.643705 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:30:52.643712 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:30:52.643718 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:30:52.643723 Find Ty Address
rdfLoader: 2020/08/13 06:30:52.643729 Find Ty Age
rdfLoader: 2020/08/13 06:30:52.643735 Find Ty Cars
rdfLoader: 2020/08/13 06:30:52.643741 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:30:52.643746 Find Ty DOB
rdfLoader: 2020/08/13 06:30:52.643751 Find Ty Friends
rdfLoader: 2020/08/13 06:30:52.643755 Find Ty Jobs
rdfLoader: 2020/08/13 06:30:52.643760 Find Ty Name
rdfLoader: 2020/08/13 06:30:52.643765 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:30:52.643769 Find Ty Siblings
rdfLoader: 2020/08/13 06:30:52.643787 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:30:52.643812 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:30:52.643817 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:30:52.643824 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:30:52.643834 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:30:52.643840 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:30:52.643845 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:30:52.643850 Find Ty Address
rdfLoader: 2020/08/13 06:30:52.643855 Find Ty Age
rdfLoader: 2020/08/13 06:30:52.643860 Find Ty Cars
rdfLoader: 2020/08/13 06:30:52.643865 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:30:52.643870 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:30:52.643875 Find Ty DOB
rdfLoader: 2020/08/13 06:30:52.643880 Find Ty Friends
rdfLoader: 2020/08/13 06:30:52.643884 Find Ty Jobs
rdfLoader: 2020/08/13 06:30:52.643889 Find Ty Name
rdfLoader: 2020/08/13 06:30:52.643895 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:30:52.643899 Find Ty Siblings
rdfLoader: 2020/08/13 06:30:52.643912 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:30:52.643938 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:30:52.643943 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:30:52.643948 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:30:52.643958 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:30:52.643964 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:30:52.643969 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:30:52.643974 Find Ty Address
rdfLoader: 2020/08/13 06:30:52.643979 Find Ty Age
rdfLoader: 2020/08/13 06:30:52.643984 Find Ty Cars
rdfLoader: 2020/08/13 06:30:52.643989 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:30:52.643994 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:30:52.643998 Find Ty DOB
rdfLoader: 2020/08/13 06:30:52.644004 Find Ty Friends
rdfLoader: 2020/08/13 06:30:52.644008 Find Ty Jobs
rdfLoader: 2020/08/13 06:30:52.644016 Find Ty Name
rdfLoader: 2020/08/13 06:30:52.644021 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:30:52.644026 Find Ty Siblings
rdfLoader: 2020/08/13 06:30:52.644038 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:30:52.644064 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:30:52.644069 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:30:52.644075 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:30:52.644085 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:30:52.644101 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:30:52.644107 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:30:52.644123 Find Ty Address
rdfLoader: 2020/08/13 06:30:52.644128 Find Ty Age
rdfLoader: 2020/08/13 06:30:52.644132 Find Ty Cars
rdfLoader: 2020/08/13 06:30:52.644138 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:30:52.644142 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:30:52.644147 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:30:52.644152 Find Ty DOB
rdfLoader: 2020/08/13 06:30:52.644159 Find Ty Friends
rdfLoader: 2020/08/13 06:30:52.644163 Find Ty Jobs
rdfLoader: 2020/08/13 06:30:52.644167 Find Ty Name
rdfLoader: 2020/08/13 06:30:52.644172 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:30:52.644177 Find Ty Siblings
rdfLoader: 2020/08/13 06:30:52.644188 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:30:52.644213 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:30:52.644218 Exit  unmarshalRDF. 
verify: 2020/08/13 06:30:52.644223 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:30:52.644244 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.644251 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.644258 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.644264 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.644270 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.644277 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.644283 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:30:52.644287 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:30:52.644300 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000392660)}
SaveRDFNode: 2020/08/13 06:30:52.644309 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:30:52.644319 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.644323 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.644330 UID received  : Y3BpVJ0tTiSTF9SgIGCRrA==
grmgr: 2020/08/13 06:30:52.644527 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:30:52.655000 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.639126ms
DB: 2020/08/13 06:30:52.660477 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.440672ms
DB: 2020/08/13 06:30:52.665720 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.033697ms
DB: 2020/08/13 06:30:52.670918 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.166818ms
DB: 2020/08/13 06:30:52.676190 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.217178ms
SaveRDFNode: 2020/08/13 06:30:52.676503 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000392660)}
rdfUIDdb: 2020/08/13 06:30:52.676516 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.676520 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.676526 Received UID: X18=
SaveRDFNode: 2020/08/13 06:30:52.676540 a: = db.Item{PKey:[]uint8{0x63, 0x70, 0x69, 0x54, 0x9d, 0x2d, 0x4e, 0x24, 0x93, 0x17, 0xd4, 0xa0, 0x20, 0x60, 0x91, 0xac}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:30:52.681782 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.211076ms
SaveRDFNode: 2020/08/13 06:30:52.681794 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000392660)}
rdfUIDdb: 2020/08/13 06:30:52.681799 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.681803 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.681808 Received UID: X18=
SaveRDFNode: 2020/08/13 06:30:52.681818 a: = db.Item{PKey:[]uint8{0x63, 0x70, 0x69, 0x54, 0x9d, 0x2d, 0x4e, 0x24, 0x93, 0x17, 0xd4, 0xa0, 0x20, 0x60, 0x91, 0xac}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:30:52.686839 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.99139ms
SaveRDFNode: 2020/08/13 06:30:52.686849 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:30:52.686857 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.686864 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.686870 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.686876 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.686882 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.686891 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.686897 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:30:52.686901 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:30:52.686907 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000393620)}
SaveRDFNode: 2020/08/13 06:30:52.686911 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:30:52.686920 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.686924 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.686930 UID received  : O6IoJvKPTEag+Nkhkw7i7A==
DB: 2020/08/13 06:30:52.692109 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.14175ms
DB: 2020/08/13 06:30:52.697428 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.148114ms
DB: 2020/08/13 06:30:52.702727 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.265147ms
DB: 2020/08/13 06:30:52.708011 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.238416ms
DB: 2020/08/13 06:30:52.713339 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.148379ms
SaveRDFNode: 2020/08/13 06:30:52.713353 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000393620)}
rdfUIDdb: 2020/08/13 06:30:52.713359 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.713363 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.713369 Received UID: X18=
SaveRDFNode: 2020/08/13 06:30:52.713383 a: = db.Item{PKey:[]uint8{0x3b, 0xa2, 0x28, 0x26, 0xf2, 0x8f, 0x4c, 0x46, 0xa0, 0xf8, 0xd9, 0x21, 0x93, 0xe, 0xe2, 0xec}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:30:52.718566 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.134441ms
SaveRDFNode: 2020/08/13 06:30:52.718578 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000393620)}
rdfUIDdb: 2020/08/13 06:30:52.718638 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.718645 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.718652 Received UID: X18=
SaveRDFNode: 2020/08/13 06:30:52.718678 a: = db.Item{PKey:[]uint8{0x3b, 0xa2, 0x28, 0x26, 0xf2, 0x8f, 0x4c, 0x46, 0xa0, 0xf8, 0xd9, 0x21, 0x93, 0xe, 0xe2, 0xec}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:30:52.723799 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.090369ms
SaveRDFNode: 2020/08/13 06:30:52.723971 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:30:52.723986 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.723992 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.723998 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.724004 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.724011 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.724017 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.724023 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:30:52.724027 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:30:52.724033 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017740)}
SaveRDFNode: 2020/08/13 06:30:52.724037 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:30:52.724047 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.724051 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.724057 UID received  : ptEt7ZBZRGWWv8l1lQNhdg==
DB: 2020/08/13 06:30:52.729228 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.145894ms
DB: 2020/08/13 06:30:52.734431 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.168941ms
DB: 2020/08/13 06:30:52.739882 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.416356ms
DB: 2020/08/13 06:30:52.746348 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.261935ms
DB: 2020/08/13 06:30:52.751871 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.430915ms
SaveRDFNode: 2020/08/13 06:30:52.751885 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017740)}
rdfUIDdb: 2020/08/13 06:30:52.751890 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.751894 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.751900 Received UID: X18=
SaveRDFNode: 2020/08/13 06:30:52.751911 a: = db.Item{PKey:[]uint8{0xa6, 0xd1, 0x2d, 0xed, 0x90, 0x59, 0x44, 0x65, 0x96, 0xbf, 0xc9, 0x75, 0x95, 0x3, 0x61, 0x76}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:30:52.757116 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.172277ms
SaveRDFNode: 2020/08/13 06:30:52.757286 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017740)}
rdfUIDdb: 2020/08/13 06:30:52.757297 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.757301 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.757306 Received UID: X18=
SaveRDFNode: 2020/08/13 06:30:52.757316 a: = db.Item{PKey:[]uint8{0xa6, 0xd1, 0x2d, 0xed, 0x90, 0x59, 0x44, 0x65, 0x96, 0xbf, 0xc9, 0x75, 0x95, 0x3, 0x61, 0x76}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:30:52.762410 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.067031ms
SaveRDFNode: 2020/08/13 06:30:52.762419 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:30:52.762426 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.762432 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.762442 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.762448 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.762453 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.762458 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:30:52.762463 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:30:52.762467 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:30:52.762472 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000220960)}
SaveRDFNode: 2020/08/13 06:30:52.762475 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:30:52.762483 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.762486 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.762491 UID received  : Z3Jkysf+QmO4ZZmgE4Viag==
DB: 2020/08/13 06:30:52.767875 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.309451ms
DB: 2020/08/13 06:30:52.773600 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.690484ms
DB: 2020/08/13 06:30:52.778786 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.988368ms
DB: 2020/08/13 06:30:52.784289 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.471086ms
DB: 2020/08/13 06:30:52.790137 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.78155ms
SaveRDFNode: 2020/08/13 06:30:52.790338 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000220960)}
rdfUIDdb: 2020/08/13 06:30:52.790707 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.790722 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.790729 Received UID: X18=
SaveRDFNode: 2020/08/13 06:30:52.790747 a: = db.Item{PKey:[]uint8{0x67, 0x72, 0x64, 0xca, 0xc7, 0xfe, 0x42, 0x63, 0xb8, 0x65, 0x99, 0xa0, 0x13, 0x85, 0x62, 0x6a}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:30:52.796268 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.482421ms
SaveRDFNode: 2020/08/13 06:30:52.796281 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000220960)}
rdfUIDdb: 2020/08/13 06:30:52.796287 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:30:52.796291 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:30:52.796296 Received UID: X18=
SaveRDFNode: 2020/08/13 06:30:52.796306 a: = db.Item{PKey:[]uint8{0x67, 0x72, 0x64, 0xca, 0xc7, 0xfe, 0x42, 0x63, 0xb8, 0x65, 0x99, 0xa0, 0x13, 0x85, 0x62, 0x6a}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:30:52.801416 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.081551ms
SaveRDFNode: 2020/08/13 06:30:52.801426 Returned.+++++++++++ No error
DB: 2020/08/13 06:30:52.806418 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:52.810772 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:52.815139 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:52.818324 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:52.823828 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.449876ms
DB: 2020/08/13 06:30:52.832387 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.865472ms
FetchForUpdate: 2020/08/13 06:30:52.832403 ** Cache FetchForUpdate Cache Key Value: [ptEt7ZBZRGWWv8l1lQNhdg==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:30:52.832410  node: ptEt7ZBZRGWWv8l1lQNhdg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:30:52.832666 ** Cache FetchForUpdate Cache Key Value: [O6IoJvKPTEag+Nkhkw7i7A==]   sortk: A#
FetchNode: 2020/08/13 06:30:52.832712  node: O6IoJvKPTEag+Nkhkw7i7A== subKey: A#
DB: 2020/08/13 06:30:52.836101 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.641851ms
FetchForUpdate: 2020/08/13 06:30:52.836181 len(nb): 1
fetchItems: 2020/08/13 06:30:52.836190 +++  Cache FetchItems for sortk A#G#:S UID: [ptEt7ZBZRGWWv8l1lQNhdg==] 
FetchNode: 2020/08/13 06:30:52.836195  node: ptEt7ZBZRGWWv8l1lQNhdg== subKey: A#G#:S
DB: 2020/08/13 06:30:52.840803 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 8.044234ms
FetchForUpdate: 2020/08/13 06:30:52.841036 len(nb): 7
fetchItems: 2020/08/13 06:30:52.841048 +++  Cache FetchItems for sortk A# UID: [O6IoJvKPTEag+Nkhkw7i7A==] 
FetchNode: 2020/08/13 06:30:52.841053  node: O6IoJvKPTEag+Nkhkw7i7A== subKey: A#
DB: 2020/08/13 06:30:52.845556 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 9.331551ms
DB: 2020/08/13 06:30:52.851666 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.510152ms
Unlock: 2020/08/13 06:30:52.851676 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:30:52.858008 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 16.925484ms
Unlock: 2020/08/13 06:30:52.861546 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:30:52.863413 ** Cache FetchForUpdate Cache Key Value: [ptEt7ZBZRGWWv8l1lQNhdg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:52.863424 +++  Cache FetchItems for sortk A#G#:S UID: [ptEt7ZBZRGWWv8l1lQNhdg==] 
FetchNode: 2020/08/13 06:30:52.863429  node: ptEt7ZBZRGWWv8l1lQNhdg== subKey: A#G#:S
DB: 2020/08/13 06:30:52.881904 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 18.442866ms
DB: 2020/08/13 06:30:52.888337 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.327801ms
DB: 2020/08/13 06:30:52.893323 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.937102ms
DB: 2020/08/13 06:30:52.898982 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.538347ms
DB: 2020/08/13 06:30:52.905802 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.694249ms
DB: 2020/08/13 06:30:52.911073 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.191865ms
DB: 2020/08/13 06:30:52.916464 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.325762ms
DB: 2020/08/13 06:30:52.923177 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.642511ms
DB: 2020/08/13 06:30:52.928309 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.075731ms
DB: 2020/08/13 06:30:52.933736 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.361501ms
Unlock: 2020/08/13 06:30:52.933752 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:30:52.939011 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.197699ms
FetchForUpdate: 2020/08/13 06:30:52.939024 ** Cache FetchForUpdate Cache Key Value: [ptEt7ZBZRGWWv8l1lQNhdg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:52.939030 +++  Cache FetchItems for sortk A#G#:S UID: [ptEt7ZBZRGWWv8l1lQNhdg==] 
FetchNode: 2020/08/13 06:30:52.939034  node: ptEt7ZBZRGWWv8l1lQNhdg== subKey: A#G#:S
DB: 2020/08/13 06:30:52.942374 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.308406ms
AttachNode: gr1 2020/08/13 06:30:52.942457 Errored: SetUpredAvailable :for  ptEt7ZBZRGWWv8l1lQNhdg==
Cache: 2020/08/13 06:30:52.942465 In SetUpredAvailable: pUid, tUID:  ptEt7ZBZRGWWv8l1lQNhdg== ptEt7ZBZRGWWv8l1lQNhdg== A#G#:S
Cache: 2020/08/13 06:30:52.942469 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:30:52.947739 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.239774ms
Unlock: 2020/08/13 06:30:52.947749 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:30:52.955733 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.912835ms
DB: 2020/08/13 06:30:52.959076 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:52.963133 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:52.966259 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:52.970187 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:52.975449 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.213303ms
DB: 2020/08/13 06:30:52.980535 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.881245ms
FetchForUpdate: 2020/08/13 06:30:52.980549 ** Cache FetchForUpdate Cache Key Value: [Z3Jkysf+QmO4ZZmgE4Viag==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:30:52.980564  node: Z3Jkysf+QmO4ZZmgE4Viag== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:30:52.980805 ** Cache FetchForUpdate Cache Key Value: [O6IoJvKPTEag+Nkhkw7i7A==]   sortk: A#
fetchItems: 2020/08/13 06:30:52.980815 +++  Cache FetchItems for sortk A# UID: [O6IoJvKPTEag+Nkhkw7i7A==] 
FetchNode: 2020/08/13 06:30:52.980826  node: O6IoJvKPTEag+Nkhkw7i7A== subKey: A#
DB: 2020/08/13 06:30:52.983944 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.336719ms
FetchForUpdate: 2020/08/13 06:30:52.983978 len(nb): 1
fetchItems: 2020/08/13 06:30:52.983985 +++  Cache FetchItems for sortk A#G#:S UID: [Z3Jkysf+QmO4ZZmgE4Viag==] 
FetchNode: 2020/08/13 06:30:52.983989  node: Z3Jkysf+QmO4ZZmgE4Viag== subKey: A#G#:S
DB: 2020/08/13 06:30:52.987599 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.563663ms
DB: 2020/08/13 06:30:52.993119 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.304342ms
Unlock: 2020/08/13 06:30:52.993135 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:30:53.001100 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 20.211729ms
Unlock: 2020/08/13 06:30:53.001768 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:30:53.002103 ** Cache FetchForUpdate Cache Key Value: [Z3Jkysf+QmO4ZZmgE4Viag==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.002114 +++  Cache FetchItems for sortk A#G#:S UID: [Z3Jkysf+QmO4ZZmgE4Viag==] 
FetchNode: 2020/08/13 06:30:53.002119  node: Z3Jkysf+QmO4ZZmgE4Viag== subKey: A#G#:S
DB: 2020/08/13 06:30:53.006360 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.204269ms
DB: 2020/08/13 06:30:53.013652 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.94151ms
DB: 2020/08/13 06:30:53.018755 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.937627ms
DB: 2020/08/13 06:30:53.024359 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.193318ms
DB: 2020/08/13 06:30:53.030559 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.771746ms
DB: 2020/08/13 06:30:53.036837 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.942791ms
DB: 2020/08/13 06:30:53.042586 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.313962ms
DB: 2020/08/13 06:30:53.049488 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.594079ms
DB: 2020/08/13 06:30:53.054730 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.849063ms
DB: 2020/08/13 06:30:53.060298 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.058356ms
Unlock: 2020/08/13 06:30:53.060309 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:30:53.065957 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.10258ms
FetchForUpdate: 2020/08/13 06:30:53.065972 ** Cache FetchForUpdate Cache Key Value: [Z3Jkysf+QmO4ZZmgE4Viag==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.065980 +++  Cache FetchItems for sortk A#G#:S UID: [Z3Jkysf+QmO4ZZmgE4Viag==] 
FetchNode: 2020/08/13 06:30:53.065986  node: Z3Jkysf+QmO4ZZmgE4Viag== subKey: A#G#:S
DB: 2020/08/13 06:30:53.069532 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.514154ms
AttachNode: gr1 2020/08/13 06:30:53.069627 Errored: SetUpredAvailable :for  Z3Jkysf+QmO4ZZmgE4Viag==
Cache: 2020/08/13 06:30:53.069656 In SetUpredAvailable: pUid, tUID:  Z3Jkysf+QmO4ZZmgE4Viag== Z3Jkysf+QmO4ZZmgE4Viag== A#G#:S
Cache: 2020/08/13 06:30:53.069660 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:30:53.075169 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.460986ms
Unlock: 2020/08/13 06:30:53.075191 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:30:53.083494 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.881685ms
DB: 2020/08/13 06:30:53.087711 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.091541 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.095562 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.098429 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.103568 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.076638ms
DB: 2020/08/13 06:30:53.109099 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.93103ms
FetchForUpdate: 2020/08/13 06:30:53.109113 ** Cache FetchForUpdate Cache Key Value: [O6IoJvKPTEag+Nkhkw7i7A==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.109119 +++  Cache FetchItems for sortk A#G#:S UID: [O6IoJvKPTEag+Nkhkw7i7A==] 
FetchNode: 2020/08/13 06:30:53.109123  node: O6IoJvKPTEag+Nkhkw7i7A== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:30:53.109306 ** Cache FetchForUpdate Cache Key Value: [ptEt7ZBZRGWWv8l1lQNhdg==]   sortk: A#
fetchItems: 2020/08/13 06:30:53.109315 +++  Cache FetchItems for sortk A# UID: [ptEt7ZBZRGWWv8l1lQNhdg==] 
FetchNode: 2020/08/13 06:30:53.109325  node: ptEt7ZBZRGWWv8l1lQNhdg== subKey: A#
DB: 2020/08/13 06:30:53.112150 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.997782ms
DB: 2020/08/13 06:30:53.112914 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.547133ms
Unlock: 2020/08/13 06:30:53.114080 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:30:53.117298 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.036949ms
Unlock: 2020/08/13 06:30:53.117309 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:30:53.117694 ** Cache FetchForUpdate Cache Key Value: [O6IoJvKPTEag+Nkhkw7i7A==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.117704 +++  Cache FetchItems for sortk A#G#:S UID: [O6IoJvKPTEag+Nkhkw7i7A==] 
FetchNode: 2020/08/13 06:30:53.117709  node: O6IoJvKPTEag+Nkhkw7i7A== subKey: A#G#:S
DB: 2020/08/13 06:30:53.121919 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.179357ms
DB: 2020/08/13 06:30:53.129132 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.475213ms
DB: 2020/08/13 06:30:53.134496 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.07819ms
DB: 2020/08/13 06:30:53.140414 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.292639ms
DB: 2020/08/13 06:30:53.147062 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.00205ms
DB: 2020/08/13 06:30:53.152417 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.009367ms
DB: 2020/08/13 06:30:53.157791 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.062833ms
DB: 2020/08/13 06:30:53.164901 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.780179ms
DB: 2020/08/13 06:30:53.170121 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.801175ms
DB: 2020/08/13 06:30:53.175840 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.152992ms
Unlock: 2020/08/13 06:30:53.176013 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:30:53.181667 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.998663ms
FetchForUpdate: 2020/08/13 06:30:53.181678 ** Cache FetchForUpdate Cache Key Value: [O6IoJvKPTEag+Nkhkw7i7A==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.181701 +++  Cache FetchItems for sortk A#G#:S UID: [O6IoJvKPTEag+Nkhkw7i7A==] 
FetchNode: 2020/08/13 06:30:53.181706  node: O6IoJvKPTEag+Nkhkw7i7A== subKey: A#G#:S
DB: 2020/08/13 06:30:53.185938 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.203077ms
AttachNode: gr1 2020/08/13 06:30:53.186010 Errored: SetUpredAvailable :for  O6IoJvKPTEag+Nkhkw7i7A==
Cache: 2020/08/13 06:30:53.186016 In SetUpredAvailable: pUid, tUID:  O6IoJvKPTEag+Nkhkw7i7A== O6IoJvKPTEag+Nkhkw7i7A== A#G#:S
Cache: 2020/08/13 06:30:53.186020 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:30:53.190983 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.91835ms
Unlock: 2020/08/13 06:30:53.190993 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:30:53.196760 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.12804ms
DB: 2020/08/13 06:30:53.200225 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.204122 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.207441 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.210513 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.216891 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.328762ms
DB: 2020/08/13 06:30:53.222226 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.9074ms
FetchForUpdate: 2020/08/13 06:30:53.222257 ** Cache FetchForUpdate Cache Key Value: [Z3Jkysf+QmO4ZZmgE4Viag==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.222270 +++  Cache FetchItems for sortk A#G#:S UID: [Z3Jkysf+QmO4ZZmgE4Viag==] 
FetchNode: 2020/08/13 06:30:53.222279  node: Z3Jkysf+QmO4ZZmgE4Viag== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:30:53.222601 ** Cache FetchForUpdate Cache Key Value: [ptEt7ZBZRGWWv8l1lQNhdg==]   sortk: A#
fetchItems: 2020/08/13 06:30:53.222615 +++  Cache FetchItems for sortk A# UID: [ptEt7ZBZRGWWv8l1lQNhdg==] 
FetchNode: 2020/08/13 06:30:53.222629  node: ptEt7ZBZRGWWv8l1lQNhdg== subKey: A#
DB: 2020/08/13 06:30:53.225607 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.252916ms
DB: 2020/08/13 06:30:53.226736 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.05978ms
Unlock: 2020/08/13 06:30:53.226915 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:30:53.232391 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.247665ms
DB: 2020/08/13 06:30:53.237265 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.835562ms
DB: 2020/08/13 06:30:53.237285 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.835562ms
DB: 2020/08/13 06:30:53.242318 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.991654ms
DB: 2020/08/13 06:30:53.242334 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.991654ms
DB: 2020/08/13 06:30:53.247999 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.421311ms
DB: 2020/08/13 06:30:53.253871 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.564604ms
Unlock: 2020/08/13 06:30:53.254051 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:30:53.261478 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.608611ms
DB: 2020/08/13 06:30:53.266845 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.10884ms
DB: 2020/08/13 06:30:53.272691 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.25725ms
DB: 2020/08/13 06:30:53.280472 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.810827ms
DB: 2020/08/13 06:30:53.285413 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.890082ms
DB: 2020/08/13 06:30:53.290567 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.087185ms
DB: 2020/08/13 06:30:53.297076 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.437731ms
DB: 2020/08/13 06:30:53.302118 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.983808ms
DB: 2020/08/13 06:30:53.307450 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.266006ms
DB: 2020/08/13 06:30:53.313112 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.58557ms
FetchForUpdate: 2020/08/13 06:30:53.313126 ** Cache FetchForUpdate Cache Key Value: [Z3Jkysf+QmO4ZZmgE4Viag==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.313132 +++  Cache FetchItems for sortk A#G#:S UID: [Z3Jkysf+QmO4ZZmgE4Viag==] 
FetchNode: 2020/08/13 06:30:53.313136  node: Z3Jkysf+QmO4ZZmgE4Viag== subKey: A#G#:S
DB: 2020/08/13 06:30:53.316887 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.718472ms
AttachNode: gr1 2020/08/13 06:30:53.316986 Errored: SetUpredAvailable :for  Z3Jkysf+QmO4ZZmgE4Viag==
Cache: 2020/08/13 06:30:53.316995 In SetUpredAvailable: pUid, tUID:  Z3Jkysf+QmO4ZZmgE4Viag== rPvLkMThQzKu/dCCPjZ8ng== A#G#:S
Cache: 2020/08/13 06:30:53.316999 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:30:53.322212 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.180724ms
Unlock: 2020/08/13 06:30:53.322328 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:30:53.327753 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.953172ms
DB: 2020/08/13 06:30:53.330888 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.334330 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.339322 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.343104 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.348232 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.041843ms
DB: 2020/08/13 06:30:53.354728 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.426664ms
FetchForUpdate: 2020/08/13 06:30:53.354750 ** Cache FetchForUpdate Cache Key Value: [O6IoJvKPTEag+Nkhkw7i7A==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.354756 +++  Cache FetchItems for sortk A#G#:S UID: [O6IoJvKPTEag+Nkhkw7i7A==] 
FetchNode: 2020/08/13 06:30:53.354761  node: O6IoJvKPTEag+Nkhkw7i7A== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:30:53.354975 ** Cache FetchForUpdate Cache Key Value: [Z3Jkysf+QmO4ZZmgE4Viag==]   sortk: A#
fetchItems: 2020/08/13 06:30:53.354985 +++  Cache FetchItems for sortk A# UID: [Z3Jkysf+QmO4ZZmgE4Viag==] 
FetchNode: 2020/08/13 06:30:53.354998  node: Z3Jkysf+QmO4ZZmgE4Viag== subKey: A#
DB: 2020/08/13 06:30:53.358978 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.162203ms
DB: 2020/08/13 06:30:53.359688 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.614082ms
Unlock: 2020/08/13 06:30:53.360509 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:30:53.364323 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.165181ms
DB: 2020/08/13 06:30:53.369134 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.77757ms
DB: 2020/08/13 06:30:53.369151 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.77757ms
DB: 2020/08/13 06:30:53.373973 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.791702ms
DB: 2020/08/13 06:30:53.373988 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.791702ms
DB: 2020/08/13 06:30:53.379297 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.2503ms
DB: 2020/08/13 06:30:53.384809 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.448838ms
Unlock: 2020/08/13 06:30:53.384824 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:30:53.392376 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.473448ms
DB: 2020/08/13 06:30:53.397263 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.833048ms
DB: 2020/08/13 06:30:53.402780 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.13201ms
DB: 2020/08/13 06:30:53.410692 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.586679ms
DB: 2020/08/13 06:30:53.416099 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.015441ms
DB: 2020/08/13 06:30:53.421678 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.304811ms
DB: 2020/08/13 06:30:53.428516 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.532135ms
DB: 2020/08/13 06:30:53.433979 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.170786ms
DB: 2020/08/13 06:30:53.439478 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.213602ms
DB: 2020/08/13 06:30:53.444815 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.156939ms
FetchForUpdate: 2020/08/13 06:30:53.444827 ** Cache FetchForUpdate Cache Key Value: [O6IoJvKPTEag+Nkhkw7i7A==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.444833 +++  Cache FetchItems for sortk A#G#:S UID: [O6IoJvKPTEag+Nkhkw7i7A==] 
FetchNode: 2020/08/13 06:30:53.444838  node: O6IoJvKPTEag+Nkhkw7i7A== subKey: A#G#:S
DB: 2020/08/13 06:30:53.448589 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.720249ms
AttachNode: gr1 2020/08/13 06:30:53.448675 Errored: SetUpredAvailable :for  O6IoJvKPTEag+Nkhkw7i7A==
Cache: 2020/08/13 06:30:53.448682 In SetUpredAvailable: pUid, tUID:  O6IoJvKPTEag+Nkhkw7i7A== LF4PJl2zRAKA3FlJIUI5/w== A#G#:S
Cache: 2020/08/13 06:30:53.448686 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:30:53.453638 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.922096ms
Unlock: 2020/08/13 06:30:53.453648 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:30:53.458527 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.798094ms
DB: 2020/08/13 06:30:53.462145 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.466150 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.469554 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.472870 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:30:53.481161 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 8.24169ms
DB: 2020/08/13 06:30:53.486392 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.053108ms
FetchForUpdate: 2020/08/13 06:30:53.486408 ** Cache FetchForUpdate Cache Key Value: [ptEt7ZBZRGWWv8l1lQNhdg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.486425 +++  Cache FetchItems for sortk A#G#:S UID: [ptEt7ZBZRGWWv8l1lQNhdg==] 
FetchNode: 2020/08/13 06:30:53.486429  node: ptEt7ZBZRGWWv8l1lQNhdg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:30:53.486659 ** Cache FetchForUpdate Cache Key Value: [Z3Jkysf+QmO4ZZmgE4Viag==]   sortk: A#
fetchItems: 2020/08/13 06:30:53.486669 +++  Cache FetchItems for sortk A# UID: [Z3Jkysf+QmO4ZZmgE4Viag==] 
FetchNode: 2020/08/13 06:30:53.486688  node: Z3Jkysf+QmO4ZZmgE4Viag== subKey: A#
DB: 2020/08/13 06:30:53.490964 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.204745ms
Unlock: 2020/08/13 06:30:53.491648 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:30:53.492255 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.793351ms
DB: 2020/08/13 06:30:53.498577 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.349981ms
DB: 2020/08/13 06:30:53.503358 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.734043ms
DB: 2020/08/13 06:30:53.503375 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.734043ms
DB: 2020/08/13 06:30:53.508395 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.988168ms
DB: 2020/08/13 06:30:53.508412 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.988168ms
DB: 2020/08/13 06:30:53.514000 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.513238ms
DB: 2020/08/13 06:30:53.519251 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.177328ms
Unlock: 2020/08/13 06:30:53.519265 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:30:53.526488 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.549082ms
DB: 2020/08/13 06:30:53.531633 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.901731ms
DB: 2020/08/13 06:30:53.537102 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.095868ms
DB: 2020/08/13 06:30:53.543881 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.46591ms
DB: 2020/08/13 06:30:53.549951 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.763491ms
DB: 2020/08/13 06:30:53.555764 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.495837ms
DB: 2020/08/13 06:30:53.562747 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.667425ms
DB: 2020/08/13 06:30:53.567857 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.795633ms
DB: 2020/08/13 06:30:53.573199 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.033076ms
DB: 2020/08/13 06:30:53.578349 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.94383ms
FetchForUpdate: 2020/08/13 06:30:53.578362 ** Cache FetchForUpdate Cache Key Value: [ptEt7ZBZRGWWv8l1lQNhdg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:30:53.578369 +++  Cache FetchItems for sortk A#G#:S UID: [ptEt7ZBZRGWWv8l1lQNhdg==] 
FetchNode: 2020/08/13 06:30:53.578374  node: ptEt7ZBZRGWWv8l1lQNhdg== subKey: A#G#:S
DB: 2020/08/13 06:30:53.581546 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.113642ms
AttachNode: gr1 2020/08/13 06:30:53.581646 Errored: SetUpredAvailable :for  ptEt7ZBZRGWWv8l1lQNhdg==
Cache: 2020/08/13 06:30:53.581655 In SetUpredAvailable: pUid, tUID:  ptEt7ZBZRGWWv8l1lQNhdg== J0KuWRO1Q4SQ5TGBGv2dbQ== A#G#:S
Cache: 2020/08/13 06:30:53.581659 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:30:53.586750 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.056152ms
Unlock: 2020/08/13 06:30:53.586760 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:30:53.592401 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.111311ms
rdfLoader: 2020/08/13 06:30:53.592416 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:30:53.592426 Powering down...
rdfuuid: 2020/08/13 06:30:53.592433 Powering down...
DB:2020/08/13 06:31:35 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:31:35.221854 Powering on...
rdfLoader: 2020/08/13 06:31:35.222310 verify started....xx.
rdfLoader: 2020/08/13 06:31:35.222327 saveNode started......
rdfuuid: 2020/08/13 06:31:35.222340 Powering on...
rdfLoader: 2020/08/13 06:31:35.222347 *************** All started 
rdfLoader: 2020/08/13 06:31:35.228752 .  getType..
rdfLoader: 2020/08/13 06:31:35.228762 node.TyName : [Person]
DB: 2020/08/13 06:31:35.298799 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 69.987564ms
verify: 2020/08/13 06:31:35.298961 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:31:35.298969  Send Ask request to limiter.
verify: 2020/08/13 06:31:35.298975 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:31:35.298982 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:31:35.298991 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:31:35.298996 *** Verify running...... 0
rdfLoader: 2020/08/13 06:31:35.299001 .  getType..
rdfLoader: 2020/08/13 06:31:35.299015 node.TyName : [Person]
verify: 2020/08/13 06:31:35.299035 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:31:35.299039  Send Ask request to limiter.
verify: 2020/08/13 06:31:35.299043 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:31:35.299049 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:31:35.299057 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:31:35.299061 *** Verify running...... 1
verify: 2020/08/13 06:31:35.299066 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:31:35.299114 .  getType..
rdfLoader: 2020/08/13 06:31:35.299123 node.TyName : [Person]
verify: 2020/08/13 06:31:35.299145 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:31:35.299152  Send Ask request to limiter.
verify: 2020/08/13 06:31:35.299156 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:31:35.299162 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:31:35.299168 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:31:35.299173 *** Verify running...... 0
rdfLoader: 2020/08/13 06:31:35.299177 .  getType..
rdfLoader: 2020/08/13 06:31:35.299181 node.TyName : [Person]
verify: 2020/08/13 06:31:35.299196 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:31:35.299200  Send Ask request to limiter.
verify: 2020/08/13 06:31:35.299205 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:31:35.299210 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:31:35.299216 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:31:35.299221 *** Verify running...... 1
verify: 2020/08/13 06:31:35.299225 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:31:35.299229 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:31:35.299242 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:31:35.299249 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:31:35.299255 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:31:35.299260 Find Ty Address
rdfLoader: 2020/08/13 06:31:35.299265 Find Ty Age
rdfLoader: 2020/08/13 06:31:35.299283 Find Ty Cars
rdfLoader: 2020/08/13 06:31:35.299300 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:31:35.299305 Find Ty DOB
rdfLoader: 2020/08/13 06:31:35.299310 Find Ty Friends
rdfLoader: 2020/08/13 06:31:35.299315 Find Ty Jobs
rdfLoader: 2020/08/13 06:31:35.299319 Find Ty Name
rdfLoader: 2020/08/13 06:31:35.299331 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:31:35.299336 Find Ty Siblings
rdfLoader: 2020/08/13 06:31:35.299354 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:31:35.299379 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:31:35.299384 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:31:35.299391 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:31:35.299401 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:31:35.299406 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:31:35.299413 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:31:35.299418 Find Ty Address
rdfLoader: 2020/08/13 06:31:35.299422 Find Ty Age
rdfLoader: 2020/08/13 06:31:35.299439 Find Ty Cars
rdfLoader: 2020/08/13 06:31:35.299444 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:31:35.299449 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:31:35.299453 Find Ty DOB
rdfLoader: 2020/08/13 06:31:35.299458 Find Ty Friends
rdfLoader: 2020/08/13 06:31:35.299462 Find Ty Jobs
rdfLoader: 2020/08/13 06:31:35.299467 Find Ty Name
rdfLoader: 2020/08/13 06:31:35.299471 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:31:35.299476 Find Ty Siblings
rdfLoader: 2020/08/13 06:31:35.299488 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:31:35.299524 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:31:35.299529 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:31:35.299535 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:31:35.299544 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:31:35.299550 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:31:35.299555 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:31:35.299560 Find Ty Address
rdfLoader: 2020/08/13 06:31:35.299564 Find Ty Age
rdfLoader: 2020/08/13 06:31:35.299569 Find Ty Cars
rdfLoader: 2020/08/13 06:31:35.299574 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:31:35.299579 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:31:35.299584 Find Ty DOB
rdfLoader: 2020/08/13 06:31:35.299589 Find Ty Friends
rdfLoader: 2020/08/13 06:31:35.299593 Find Ty Jobs
rdfLoader: 2020/08/13 06:31:35.299598 Find Ty Name
rdfLoader: 2020/08/13 06:31:35.299602 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:31:35.299607 Find Ty Siblings
rdfLoader: 2020/08/13 06:31:35.299618 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:31:35.299654 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:31:35.299662 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:31:35.299668 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:31:35.299677 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:31:35.299682 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:31:35.299687 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:31:35.299692 Find Ty Address
rdfLoader: 2020/08/13 06:31:35.299697 Find Ty Age
rdfLoader: 2020/08/13 06:31:35.299701 Find Ty Cars
rdfLoader: 2020/08/13 06:31:35.299706 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:31:35.299711 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:31:35.299716 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:31:35.299720 Find Ty DOB
rdfLoader: 2020/08/13 06:31:35.299725 Find Ty Friends
rdfLoader: 2020/08/13 06:31:35.299729 Find Ty Jobs
rdfLoader: 2020/08/13 06:31:35.299733 Find Ty Name
rdfLoader: 2020/08/13 06:31:35.299738 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:31:35.299742 Find Ty Siblings
rdfLoader: 2020/08/13 06:31:35.299753 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:31:35.299777 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:31:35.299782 Exit  unmarshalRDF. 
verify: 2020/08/13 06:31:35.299787 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:31:35.299831 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.299838 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.299845 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.299851 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.299857 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.299863 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.299869 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:31:35.299874 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:31:35.299884 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000017500)}
SaveRDFNode: 2020/08/13 06:31:35.299889 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:31:35.299899 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.299903 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.299909 UID received  : 66jKX8yVQheRNXuSe4mQ5Q==
grmgr: 2020/08/13 06:31:35.300111 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:31:35.306186 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.23645ms
DB: 2020/08/13 06:31:35.309786 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.560639ms
DB: 2020/08/13 06:31:35.313417 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.598793ms
DB: 2020/08/13 06:31:35.317037 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.582612ms
DB: 2020/08/13 06:31:35.320815 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.581923ms
SaveRDFNode: 2020/08/13 06:31:35.320829 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017500)}
rdfUIDdb: 2020/08/13 06:31:35.320836 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.320839 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.320845 Received UID: X18=
SaveRDFNode: 2020/08/13 06:31:35.320858 a: = db.Item{PKey:[]uint8{0xeb, 0xa8, 0xca, 0x5f, 0xcc, 0x95, 0x42, 0x17, 0x91, 0x35, 0x7b, 0x92, 0x7b, 0x89, 0x90, 0xe5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:31:35.324623 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.736552ms
SaveRDFNode: 2020/08/13 06:31:35.324636 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017500)}
rdfUIDdb: 2020/08/13 06:31:35.324641 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.324645 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.324650 Received UID: X18=
SaveRDFNode: 2020/08/13 06:31:35.324660 a: = db.Item{PKey:[]uint8{0xeb, 0xa8, 0xca, 0x5f, 0xcc, 0x95, 0x42, 0x17, 0x91, 0x35, 0x7b, 0x92, 0x7b, 0x89, 0x90, 0xe5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:31:35.328341 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.649365ms
SaveRDFNode: 2020/08/13 06:31:35.328351 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:31:35.328362 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.328369 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.328375 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.328381 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.328387 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.328392 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.328398 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:31:35.328402 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:31:35.328408 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000390ba0)}
SaveRDFNode: 2020/08/13 06:31:35.328412 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:31:35.328420 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.328424 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.328456 UID received  : IIwvjntgQXu8lE3Oe1k+7Q==
DB: 2020/08/13 06:31:35.332158 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.676119ms
DB: 2020/08/13 06:31:35.342784 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.580294ms
DB: 2020/08/13 06:31:35.346385 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.562615ms
DB: 2020/08/13 06:31:35.350004 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.587742ms
DB: 2020/08/13 06:31:35.355841 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.806222ms
SaveRDFNode: 2020/08/13 06:31:35.355860 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000390ba0)}
rdfUIDdb: 2020/08/13 06:31:35.355866 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.355870 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.355876 Received UID: X18=
SaveRDFNode: 2020/08/13 06:31:35.355887 a: = db.Item{PKey:[]uint8{0x20, 0x8c, 0x2f, 0x8e, 0x7b, 0x60, 0x41, 0x7b, 0xbc, 0x94, 0x4d, 0xce, 0x7b, 0x59, 0x3e, 0xed}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:31:35.359502 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.588199ms
SaveRDFNode: 2020/08/13 06:31:35.359517 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000390ba0)}
rdfUIDdb: 2020/08/13 06:31:35.359523 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.359527 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.359533 Received UID: X18=
SaveRDFNode: 2020/08/13 06:31:35.359542 a: = db.Item{PKey:[]uint8{0x20, 0x8c, 0x2f, 0x8e, 0x7b, 0x60, 0x41, 0x7b, 0xbc, 0x94, 0x4d, 0xce, 0x7b, 0x59, 0x3e, 0xed}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:31:35.363044 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.472938ms
SaveRDFNode: 2020/08/13 06:31:35.363054 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:31:35.363063 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.363069 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.363077 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.363082 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.363089 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.363094 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.363100 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:31:35.363123 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:31:35.363129 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017c20)}
SaveRDFNode: 2020/08/13 06:31:35.363134 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:31:35.363142 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.363146 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.363152 UID received  : b9bxG4SnSG2wsLnWGmr8yA==
DB: 2020/08/13 06:31:35.366761 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.584595ms
DB: 2020/08/13 06:31:35.370973 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.180782ms
DB: 2020/08/13 06:31:35.374537 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.532015ms
DB: 2020/08/13 06:31:35.378254 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.686019ms
DB: 2020/08/13 06:31:35.382082 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.651452ms
SaveRDFNode: 2020/08/13 06:31:35.382095 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017c20)}
rdfUIDdb: 2020/08/13 06:31:35.382101 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.382105 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.382110 Received UID: X18=
SaveRDFNode: 2020/08/13 06:31:35.382120 a: = db.Item{PKey:[]uint8{0x6f, 0xd6, 0xf1, 0x1b, 0x84, 0xa7, 0x48, 0x6d, 0xb0, 0xb0, 0xb9, 0xd6, 0x1a, 0x6a, 0xfc, 0xc8}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:31:35.385721 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.563416ms
SaveRDFNode: 2020/08/13 06:31:35.385732 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017c20)}
rdfUIDdb: 2020/08/13 06:31:35.385738 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.385741 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.385746 Received UID: X18=
SaveRDFNode: 2020/08/13 06:31:35.385756 a: = db.Item{PKey:[]uint8{0x6f, 0xd6, 0xf1, 0x1b, 0x84, 0xa7, 0x48, 0x6d, 0xb0, 0xb0, 0xb9, 0xd6, 0x1a, 0x6a, 0xfc, 0xc8}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:31:35.389495 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.694843ms
SaveRDFNode: 2020/08/13 06:31:35.389505 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:31:35.389513 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.389519 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.389527 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.389533 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.389541 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.389547 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:31:35.389552 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:31:35.389556 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:31:35.389562 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000391260)}
SaveRDFNode: 2020/08/13 06:31:35.389566 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:31:35.389574 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.389578 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.389601 UID received  : x7qinaekTj+/90ohNxO0Vw==
DB: 2020/08/13 06:31:35.393354 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.726095ms
DB: 2020/08/13 06:31:35.397050 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.663544ms
DB: 2020/08/13 06:31:35.400791 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.553908ms
DB: 2020/08/13 06:31:35.404544 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.70674ms
DB: 2020/08/13 06:31:35.409263 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.689483ms
SaveRDFNode: 2020/08/13 06:31:35.409275 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000391260)}
rdfUIDdb: 2020/08/13 06:31:35.409280 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.409284 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.409288 Received UID: X18=
SaveRDFNode: 2020/08/13 06:31:35.409298 a: = db.Item{PKey:[]uint8{0xc7, 0xba, 0xa2, 0x9d, 0xa7, 0xa4, 0x4e, 0x3f, 0xbf, 0xf7, 0x4a, 0x21, 0x37, 0x13, 0xb4, 0x57}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:31:35.413117 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.792421ms
SaveRDFNode: 2020/08/13 06:31:35.413303 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000391260)}
rdfUIDdb: 2020/08/13 06:31:35.413315 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:31:35.413319 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:31:35.413325 Received UID: X18=
SaveRDFNode: 2020/08/13 06:31:35.413336 a: = db.Item{PKey:[]uint8{0xc7, 0xba, 0xa2, 0x9d, 0xa7, 0xa4, 0x4e, 0x3f, 0xbf, 0xf7, 0x4a, 0x21, 0x37, 0x13, 0xb4, 0x57}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:31:35.417237 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.871256ms
SaveRDFNode: 2020/08/13 06:31:35.417247 Returned.+++++++++++ No error
DB: 2020/08/13 06:31:35.420382 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.424017 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.426770 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.430197 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.434041 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.78841ms
DB: 2020/08/13 06:31:35.443980 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 9.436252ms
FetchForUpdate: 2020/08/13 06:31:35.443995 ** Cache FetchForUpdate Cache Key Value: [b9bxG4SnSG2wsLnWGmr8yA==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:31:35.444001  node: b9bxG4SnSG2wsLnWGmr8yA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:31:35.444174 ** Cache FetchForUpdate Cache Key Value: [IIwvjntgQXu8lE3Oe1k+7Q==]   sortk: A#
FetchNode: 2020/08/13 06:31:35.444190  node: IIwvjntgQXu8lE3Oe1k+7Q== subKey: A#
DB: 2020/08/13 06:31:35.447156 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.122621ms
FetchForUpdate: 2020/08/13 06:31:35.447372 len(nb): 1
fetchItems: 2020/08/13 06:31:35.447384 +++  Cache FetchItems for sortk A#G#:S UID: [b9bxG4SnSG2wsLnWGmr8yA==] 
FetchNode: 2020/08/13 06:31:35.447389  node: b9bxG4SnSG2wsLnWGmr8yA== subKey: A#G#:S
DB: 2020/08/13 06:31:35.451322 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 7.089062ms
FetchForUpdate: 2020/08/13 06:31:35.451450 len(nb): 7
fetchItems: 2020/08/13 06:31:35.451459 +++  Cache FetchItems for sortk A# UID: [IIwvjntgQXu8lE3Oe1k+7Q==] 
FetchNode: 2020/08/13 06:31:35.451464  node: IIwvjntgQXu8lE3Oe1k+7Q== subKey: A#
DB: 2020/08/13 06:31:35.454413 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 6.994951ms
DB: 2020/08/13 06:31:35.459389 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.37685ms
Unlock: 2020/08/13 06:31:35.459400 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:31:35.468969 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 17.475272ms
Unlock: 2020/08/13 06:31:35.469126 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:31:35.469156 ** Cache FetchForUpdate Cache Key Value: [b9bxG4SnSG2wsLnWGmr8yA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.469163 +++  Cache FetchItems for sortk A#G#:S UID: [b9bxG4SnSG2wsLnWGmr8yA==] 
FetchNode: 2020/08/13 06:31:35.469169  node: b9bxG4SnSG2wsLnWGmr8yA== subKey: A#G#:S
DB: 2020/08/13 06:31:35.472239 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.043072ms
DB: 2020/08/13 06:31:35.478594 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.2729ms
DB: 2020/08/13 06:31:35.483759 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.631169ms
DB: 2020/08/13 06:31:35.488544 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.645642ms
DB: 2020/08/13 06:31:35.495054 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.450481ms
DB: 2020/08/13 06:31:35.498714 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.598277ms
DB: 2020/08/13 06:31:35.502624 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.845481ms
DB: 2020/08/13 06:31:35.508851 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.139841ms
DB: 2020/08/13 06:31:35.512892 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.8952ms
DB: 2020/08/13 06:31:35.517267 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.056077ms
Unlock: 2020/08/13 06:31:35.517279 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:31:35.521376 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.699342ms
FetchForUpdate: 2020/08/13 06:31:35.521388 ** Cache FetchForUpdate Cache Key Value: [b9bxG4SnSG2wsLnWGmr8yA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.521394 +++  Cache FetchItems for sortk A#G#:S UID: [b9bxG4SnSG2wsLnWGmr8yA==] 
FetchNode: 2020/08/13 06:31:35.521399  node: b9bxG4SnSG2wsLnWGmr8yA== subKey: A#G#:S
DB: 2020/08/13 06:31:35.524470 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.037672ms
AttachNode: gr1 2020/08/13 06:31:35.524587 Errored: SetUpredAvailable :for  b9bxG4SnSG2wsLnWGmr8yA==
Cache: 2020/08/13 06:31:35.524595 In SetUpredAvailable: pUid, tUID:  b9bxG4SnSG2wsLnWGmr8yA== b9bxG4SnSG2wsLnWGmr8yA== A#G#:S
Cache: 2020/08/13 06:31:35.524599 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:31:35.528385 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.751376ms
Unlock: 2020/08/13 06:31:35.528401 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:31:35.533151 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.389623ms
DB: 2020/08/13 06:31:35.536404 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.539042 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.541789 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.545278 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.549432 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.101299ms
DB: 2020/08/13 06:31:35.554319 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.391755ms
FetchForUpdate: 2020/08/13 06:31:35.554345 ** Cache FetchForUpdate Cache Key Value: [x7qinaekTj+/90ohNxO0Vw==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:31:35.554350  node: x7qinaekTj+/90ohNxO0Vw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:31:35.554516 ** Cache FetchForUpdate Cache Key Value: [IIwvjntgQXu8lE3Oe1k+7Q==]   sortk: A#
fetchItems: 2020/08/13 06:31:35.554525 +++  Cache FetchItems for sortk A# UID: [IIwvjntgQXu8lE3Oe1k+7Q==] 
FetchNode: 2020/08/13 06:31:35.554537  node: IIwvjntgQXu8lE3Oe1k+7Q== subKey: A#
DB: 2020/08/13 06:31:35.558105 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.727604ms
FetchForUpdate: 2020/08/13 06:31:35.558151 len(nb): 1
fetchItems: 2020/08/13 06:31:35.558174 +++  Cache FetchItems for sortk A#G#:S UID: [x7qinaekTj+/90ohNxO0Vw==] 
FetchNode: 2020/08/13 06:31:35.558188  node: x7qinaekTj+/90ohNxO0Vw== subKey: A#G#:S
DB: 2020/08/13 06:31:35.569503 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 14.92484ms
Unlock: 2020/08/13 06:31:35.570101 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:31:35.570956 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 12.740933ms
DB: 2020/08/13 06:31:35.575998 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.774028ms
Unlock: 2020/08/13 06:31:35.576010 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:31:35.576060 ** Cache FetchForUpdate Cache Key Value: [x7qinaekTj+/90ohNxO0Vw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.576067 +++  Cache FetchItems for sortk A#G#:S UID: [x7qinaekTj+/90ohNxO0Vw==] 
FetchNode: 2020/08/13 06:31:35.576072  node: x7qinaekTj+/90ohNxO0Vw== subKey: A#G#:S
DB: 2020/08/13 06:31:35.579129 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.011025ms
DB: 2020/08/13 06:31:35.585520 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.292207ms
DB: 2020/08/13 06:31:35.589139 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.570468ms
DB: 2020/08/13 06:31:35.593273 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.785699ms
DB: 2020/08/13 06:31:35.599805 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.237229ms
DB: 2020/08/13 06:31:35.603705 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.621995ms
DB: 2020/08/13 06:31:35.607758 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.70524ms
DB: 2020/08/13 06:31:35.614277 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.20538ms
DB: 2020/08/13 06:31:35.618891 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.29507ms
DB: 2020/08/13 06:31:35.623327 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.110257ms
Unlock: 2020/08/13 06:31:35.623338 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:31:35.628095 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.725559ms
FetchForUpdate: 2020/08/13 06:31:35.628111 ** Cache FetchForUpdate Cache Key Value: [x7qinaekTj+/90ohNxO0Vw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.628118 +++  Cache FetchItems for sortk A#G#:S UID: [x7qinaekTj+/90ohNxO0Vw==] 
FetchNode: 2020/08/13 06:31:35.628124  node: x7qinaekTj+/90ohNxO0Vw== subKey: A#G#:S
DB: 2020/08/13 06:31:35.631992 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.834016ms
AttachNode: gr1 2020/08/13 06:31:35.632089 Errored: SetUpredAvailable :for  x7qinaekTj+/90ohNxO0Vw==
Cache: 2020/08/13 06:31:35.632097 In SetUpredAvailable: pUid, tUID:  x7qinaekTj+/90ohNxO0Vw== x7qinaekTj+/90ohNxO0Vw== A#G#:S
Cache: 2020/08/13 06:31:35.632101 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:31:35.635889 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.754085ms
Unlock: 2020/08/13 06:31:35.635901 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:31:35.640597 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.601722ms
DB: 2020/08/13 06:31:35.645382 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.648337 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.652036 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.655300 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.659234 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.882888ms
DB: 2020/08/13 06:31:35.663783 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.356272ms
FetchForUpdate: 2020/08/13 06:31:35.663801 ** Cache FetchForUpdate Cache Key Value: [IIwvjntgQXu8lE3Oe1k+7Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.663809 +++  Cache FetchItems for sortk A#G#:S UID: [IIwvjntgQXu8lE3Oe1k+7Q==] 
FetchNode: 2020/08/13 06:31:35.663814  node: IIwvjntgQXu8lE3Oe1k+7Q== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:31:35.664014 ** Cache FetchForUpdate Cache Key Value: [b9bxG4SnSG2wsLnWGmr8yA==]   sortk: A#
fetchItems: 2020/08/13 06:31:35.664025 +++  Cache FetchItems for sortk A# UID: [b9bxG4SnSG2wsLnWGmr8yA==] 
FetchNode: 2020/08/13 06:31:35.664036  node: b9bxG4SnSG2wsLnWGmr8yA== subKey: A#
DB: 2020/08/13 06:31:35.667452 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.576719ms
DB: 2020/08/13 06:31:35.668408 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.306825ms
Unlock: 2020/08/13 06:31:35.669397 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:31:35.671675 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.965784ms
Unlock: 2020/08/13 06:31:35.671686 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:31:35.672034 ** Cache FetchForUpdate Cache Key Value: [IIwvjntgQXu8lE3Oe1k+7Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.672044 +++  Cache FetchItems for sortk A#G#:S UID: [IIwvjntgQXu8lE3Oe1k+7Q==] 
FetchNode: 2020/08/13 06:31:35.672049  node: IIwvjntgQXu8lE3Oe1k+7Q== subKey: A#G#:S
DB: 2020/08/13 06:31:35.674940 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.860577ms
DB: 2020/08/13 06:31:35.681800 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.382281ms
DB: 2020/08/13 06:31:35.686057 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.922092ms
DB: 2020/08/13 06:31:35.690212 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.875899ms
DB: 2020/08/13 06:31:35.697931 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.434424ms
DB: 2020/08/13 06:31:35.701819 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.589512ms
DB: 2020/08/13 06:31:35.705931 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.808018ms
DB: 2020/08/13 06:31:35.712745 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.496115ms
DB: 2020/08/13 06:31:35.716641 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.593742ms
DB: 2020/08/13 06:31:35.720812 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.862474ms
Unlock: 2020/08/13 06:31:35.720828 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:31:35.725038 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.704016ms
FetchForUpdate: 2020/08/13 06:31:35.725070 ** Cache FetchForUpdate Cache Key Value: [IIwvjntgQXu8lE3Oe1k+7Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.725086 +++  Cache FetchItems for sortk A#G#:S UID: [IIwvjntgQXu8lE3Oe1k+7Q==] 
FetchNode: 2020/08/13 06:31:35.725091  node: IIwvjntgQXu8lE3Oe1k+7Q== subKey: A#G#:S
DB: 2020/08/13 06:31:35.728130 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.005461ms
AttachNode: gr1 2020/08/13 06:31:35.728233 Errored: SetUpredAvailable :for  IIwvjntgQXu8lE3Oe1k+7Q==
Cache: 2020/08/13 06:31:35.728241 In SetUpredAvailable: pUid, tUID:  IIwvjntgQXu8lE3Oe1k+7Q== IIwvjntgQXu8lE3Oe1k+7Q== A#G#:S
Cache: 2020/08/13 06:31:35.728245 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:31:35.731929 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.644791ms
Unlock: 2020/08/13 06:31:35.731938 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:31:35.736986 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.575084ms
DB: 2020/08/13 06:31:35.741222 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.743894 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.747476 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.751316 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.755253 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.86537ms
DB: 2020/08/13 06:31:35.760050 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.326837ms
FetchForUpdate: 2020/08/13 06:31:35.760077 ** Cache FetchForUpdate Cache Key Value: [x7qinaekTj+/90ohNxO0Vw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.760084 +++  Cache FetchItems for sortk A#G#:S UID: [x7qinaekTj+/90ohNxO0Vw==] 
FetchNode: 2020/08/13 06:31:35.760088  node: x7qinaekTj+/90ohNxO0Vw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:31:35.760266 ** Cache FetchForUpdate Cache Key Value: [b9bxG4SnSG2wsLnWGmr8yA==]   sortk: A#
fetchItems: 2020/08/13 06:31:35.760276 +++  Cache FetchItems for sortk A# UID: [b9bxG4SnSG2wsLnWGmr8yA==] 
FetchNode: 2020/08/13 06:31:35.760288  node: b9bxG4SnSG2wsLnWGmr8yA== subKey: A#
DB: 2020/08/13 06:31:35.763604 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.224111ms
Unlock: 2020/08/13 06:31:35.764768 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:31:35.765307 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.18751ms
DB: 2020/08/13 06:31:35.772719 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.895457ms
DB: 2020/08/13 06:31:35.776368 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.614282ms
DB: 2020/08/13 06:31:35.776384 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.614282ms
DB: 2020/08/13 06:31:35.779988 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.568721ms
DB: 2020/08/13 06:31:35.780005 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.568721ms
DB: 2020/08/13 06:31:35.784447 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.354922ms
DB: 2020/08/13 06:31:35.793070 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 8.551619ms
Unlock: 2020/08/13 06:31:35.793084 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:31:35.799635 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.31925ms
DB: 2020/08/13 06:31:35.803431 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.616719ms
DB: 2020/08/13 06:31:35.807733 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.822072ms
DB: 2020/08/13 06:31:35.814582 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.270915ms
DB: 2020/08/13 06:31:35.819115 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.13954ms
DB: 2020/08/13 06:31:35.860575 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 40.918956ms
DB: 2020/08/13 06:31:35.867477 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.489829ms
DB: 2020/08/13 06:31:35.872138 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.34546ms
DB: 2020/08/13 06:31:35.877600 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.932851ms
DB: 2020/08/13 06:31:35.882703 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.63546ms
FetchForUpdate: 2020/08/13 06:31:35.882717 ** Cache FetchForUpdate Cache Key Value: [x7qinaekTj+/90ohNxO0Vw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.882724 +++  Cache FetchItems for sortk A#G#:S UID: [x7qinaekTj+/90ohNxO0Vw==] 
FetchNode: 2020/08/13 06:31:35.882729  node: x7qinaekTj+/90ohNxO0Vw== subKey: A#G#:S
DB: 2020/08/13 06:31:35.897094 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 14.330488ms
AttachNode: gr1 2020/08/13 06:31:35.897182 Errored: SetUpredAvailable :for  x7qinaekTj+/90ohNxO0Vw==
Cache: 2020/08/13 06:31:35.897191 In SetUpredAvailable: pUid, tUID:  x7qinaekTj+/90ohNxO0Vw== qnswz4oqTOiUWfD5Jk29JA== A#G#:S
Cache: 2020/08/13 06:31:35.897196 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:31:35.900897 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.665599ms
Unlock: 2020/08/13 06:31:35.900908 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:31:35.905570 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.566162ms
DB: 2020/08/13 06:31:35.909063 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.911950 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.915465 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.919079 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:35.923748 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.594705ms
DB: 2020/08/13 06:31:35.929057 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.869744ms
FetchForUpdate: 2020/08/13 06:31:35.929072 ** Cache FetchForUpdate Cache Key Value: [IIwvjntgQXu8lE3Oe1k+7Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:35.929078 +++  Cache FetchItems for sortk A#G#:S UID: [IIwvjntgQXu8lE3Oe1k+7Q==] 
FetchNode: 2020/08/13 06:31:35.929083  node: IIwvjntgQXu8lE3Oe1k+7Q== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:31:35.929244 ** Cache FetchForUpdate Cache Key Value: [x7qinaekTj+/90ohNxO0Vw==]   sortk: A#
fetchItems: 2020/08/13 06:31:35.929253 +++  Cache FetchItems for sortk A# UID: [x7qinaekTj+/90ohNxO0Vw==] 
FetchNode: 2020/08/13 06:31:35.929264  node: x7qinaekTj+/90ohNxO0Vw== subKey: A#
DB: 2020/08/13 06:31:35.932161 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.044218ms
DB: 2020/08/13 06:31:35.933635 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.328479ms
Unlock: 2020/08/13 06:31:35.934539 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:31:35.936337 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.815824ms
DB: 2020/08/13 06:31:35.939900 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.512849ms
DB: 2020/08/13 06:31:35.939915 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.512849ms
DB: 2020/08/13 06:31:35.944463 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.516914ms
DB: 2020/08/13 06:31:35.944478 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.516914ms
DB: 2020/08/13 06:31:35.949134 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.448065ms
DB: 2020/08/13 06:31:35.953394 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.901331ms
Unlock: 2020/08/13 06:31:35.953406 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:31:35.960191 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.675959ms
DB: 2020/08/13 06:31:35.963754 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.494089ms
DB: 2020/08/13 06:31:36.033402 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 69.37155ms
DB: 2020/08/13 06:31:36.040459 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.618667ms
DB: 2020/08/13 06:31:36.044398 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.548433ms
DB: 2020/08/13 06:31:36.048388 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.920409ms
DB: 2020/08/13 06:31:36.055307 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.849724ms
DB: 2020/08/13 06:31:36.059361 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.98595ms
DB: 2020/08/13 06:31:36.063489 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.034422ms
DB: 2020/08/13 06:31:36.067378 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.835281ms
FetchForUpdate: 2020/08/13 06:31:36.067390 ** Cache FetchForUpdate Cache Key Value: [IIwvjntgQXu8lE3Oe1k+7Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:36.067396 +++  Cache FetchItems for sortk A#G#:S UID: [IIwvjntgQXu8lE3Oe1k+7Q==] 
FetchNode: 2020/08/13 06:31:36.067401  node: IIwvjntgQXu8lE3Oe1k+7Q== subKey: A#G#:S
DB: 2020/08/13 06:31:36.071766 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.333164ms
AttachNode: gr1 2020/08/13 06:31:36.071851 Errored: SetUpredAvailable :for  IIwvjntgQXu8lE3Oe1k+7Q==
Cache: 2020/08/13 06:31:36.071860 In SetUpredAvailable: pUid, tUID:  IIwvjntgQXu8lE3Oe1k+7Q== yCWUwh92SIu2qmoXrMQ3gA== A#G#:S
Cache: 2020/08/13 06:31:36.071864 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:31:36.075996 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.101708ms
Unlock: 2020/08/13 06:31:36.076006 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:31:36.081180 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.744394ms
DB: 2020/08/13 06:31:36.085569 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:36.090067 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:36.093566 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:36.096327 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:31:36.100505 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.110939ms
DB: 2020/08/13 06:31:36.104629 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.94694ms
FetchForUpdate: 2020/08/13 06:31:36.104644 ** Cache FetchForUpdate Cache Key Value: [b9bxG4SnSG2wsLnWGmr8yA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:36.104650 +++  Cache FetchItems for sortk A#G#:S UID: [b9bxG4SnSG2wsLnWGmr8yA==] 
FetchNode: 2020/08/13 06:31:36.104654  node: b9bxG4SnSG2wsLnWGmr8yA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:31:36.104833 ** Cache FetchForUpdate Cache Key Value: [x7qinaekTj+/90ohNxO0Vw==]   sortk: A#
fetchItems: 2020/08/13 06:31:36.104842 +++  Cache FetchItems for sortk A# UID: [x7qinaekTj+/90ohNxO0Vw==] 
FetchNode: 2020/08/13 06:31:36.104854  node: x7qinaekTj+/90ohNxO0Vw== subKey: A#
DB: 2020/08/13 06:31:36.107843 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 2.908797ms
Unlock: 2020/08/13 06:31:36.108557 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:31:36.109192 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.502726ms
DB: 2020/08/13 06:31:36.114394 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.720223ms
DB: 2020/08/13 06:31:36.119318 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.890872ms
DB: 2020/08/13 06:31:36.119340 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.890872ms
DB: 2020/08/13 06:31:36.123361 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.988219ms
DB: 2020/08/13 06:31:36.123378 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.988219ms
DB: 2020/08/13 06:31:36.128296 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.669882ms
DB: 2020/08/13 06:31:36.133292 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.805296ms
Unlock: 2020/08/13 06:31:36.133304 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:31:36.140700 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.275588ms
DB: 2020/08/13 06:31:36.144697 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.530146ms
DB: 2020/08/13 06:31:36.149261 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.923539ms
DB: 2020/08/13 06:31:36.156161 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.427902ms
DB: 2020/08/13 06:31:36.160356 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.538214ms
DB: 2020/08/13 06:31:36.164277 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.853307ms
DB: 2020/08/13 06:31:36.170551 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.211205ms
DB: 2020/08/13 06:31:36.174343 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.73104ms
DB: 2020/08/13 06:31:36.180597 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.171378ms
DB: 2020/08/13 06:31:36.184571 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.778078ms
FetchForUpdate: 2020/08/13 06:31:36.184595 ** Cache FetchForUpdate Cache Key Value: [b9bxG4SnSG2wsLnWGmr8yA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:31:36.184613 +++  Cache FetchItems for sortk A#G#:S UID: [b9bxG4SnSG2wsLnWGmr8yA==] 
FetchNode: 2020/08/13 06:31:36.184618  node: b9bxG4SnSG2wsLnWGmr8yA== subKey: A#G#:S
DB: 2020/08/13 06:31:36.187527 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.876ms
AttachNode: gr1 2020/08/13 06:31:36.187625 Errored: SetUpredAvailable :for  b9bxG4SnSG2wsLnWGmr8yA==
Cache: 2020/08/13 06:31:36.187633 In SetUpredAvailable: pUid, tUID:  b9bxG4SnSG2wsLnWGmr8yA== IDHOeQd3RU2SW9VpJNQ3XQ== A#G#:S
Cache: 2020/08/13 06:31:36.187638 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:31:36.197979 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 10.304008ms
Unlock: 2020/08/13 06:31:36.197996 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:31:36.203244 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.492892ms
rdfLoader: 2020/08/13 06:31:36.203258 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:31:36.203269 Powering down...
rdfuuid: 2020/08/13 06:31:36.203275 Powering down...
DB:2020/08/13 06:38:29 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:38:29.894196 Powering on...
rdfLoader: 2020/08/13 06:38:29.894221 verify started....xx.
rdfLoader: 2020/08/13 06:38:29.894230 saveNode started......
rdfuuid: 2020/08/13 06:38:29.894241 Powering on...
rdfLoader: 2020/08/13 06:38:29.894248 *************** All started 
rdfLoader: 2020/08/13 06:38:29.900095 .  getType..
rdfLoader: 2020/08/13 06:38:29.900105 node.TyName : [Person]
DB: 2020/08/13 06:38:29.976917 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 76.761145ms
verify: 2020/08/13 06:38:29.977260 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:38:29.977270  Send Ask request to limiter.
verify: 2020/08/13 06:38:29.977276 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:38:29.977485 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:38:29.977541 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:38:29.977548 *** Verify running...... 0
rdfLoader: 2020/08/13 06:38:29.977554 .  getType..
rdfLoader: 2020/08/13 06:38:29.977560 node.TyName : [Person]
verify: 2020/08/13 06:38:29.977597 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:38:29.977603  Send Ask request to limiter.
verify: 2020/08/13 06:38:29.977618 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:38:29.977631 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:38:29.977641 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:38:29.977646 *** Verify running...... 1
verify: 2020/08/13 06:38:29.977651 *** Verify back to waiting on veryifyCh
unmarshalRDF2020/08/13 06:38:29.978333 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:38:29.978774 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:38:29.978783 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:38:29.978810 Find Ty Address
rdfLoader: 2020/08/13 06:38:29.978816 Find Ty Age
rdfLoader: 2020/08/13 06:38:29.978822 Find Ty Cars
rdfLoader: 2020/08/13 06:38:29.978828 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:38:29.978833 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:38:29.978843 Find Ty DOB
rdfLoader: 2020/08/13 06:38:29.978847 Find Ty Friends
rdfLoader: 2020/08/13 06:38:29.978852 Find Ty Jobs
rdfLoader: 2020/08/13 06:38:29.978856 Find Ty Name
rdfLoader: 2020/08/13 06:38:29.978860 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:38:29.978864 Find Ty Siblings
rdfLoader: 2020/08/13 06:38:29.978890 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:38:29.978970 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:38:29.978983 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:38:29.978992 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:38:29.979003 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:38:29.979015 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:38:29.979020 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:38:29.979025 Find Ty Address
rdfLoader: 2020/08/13 06:38:29.979030 Find Ty Age
rdfLoader: 2020/08/13 06:38:29.979038 Find Ty Cars
rdfLoader: 2020/08/13 06:38:29.979043 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:38:29.979048 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:38:29.979053 Find Ty DOB
rdfLoader: 2020/08/13 06:38:29.979057 Find Ty Friends
rdfLoader: 2020/08/13 06:38:29.979065 Find Ty Jobs
rdfLoader: 2020/08/13 06:38:29.979069 Find Ty Name
rdfLoader: 2020/08/13 06:38:29.979074 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:38:29.979078 Find Ty Siblings
rdfLoader: 2020/08/13 06:38:29.979096 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:38:29.979138 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:38:29.979143 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:38:29.979154 EndCh received for unmarshall. rCnt = 2 
SaveRDFNode: xxx 2020/08/13 06:38:29.979176 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:38:29.979183 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:38:29.979201 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:38:29.979207 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:38:29.979218 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:38:29.979224 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:38:29.979231 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:38:29.979235 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:38:29.979251 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017560)}
SaveRDFNode: 2020/08/13 06:38:29.979256 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:38:29.979267 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:29.979271 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:29.979283 UID received  : lJbguKAcQoGD7iZLPynUKQ==
rdfLoader: 2020/08/13 06:38:29.982009 .  getType..
rdfLoader: 2020/08/13 06:38:29.982031 node.TyName : [Person]
verify: 2020/08/13 06:38:29.982056 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:38:29.982060  Send Ask request to limiter.
verify: 2020/08/13 06:38:29.982065 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:38:29.982070 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:38:29.982078 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:38:29.982082 *** Verify running...... 0
rdfLoader: 2020/08/13 06:38:29.982085 .  getType..
rdfLoader: 2020/08/13 06:38:29.982089 node.TyName : [Person]
verify: 2020/08/13 06:38:29.982103 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:38:29.982107  Send Ask request to limiter.
verify: 2020/08/13 06:38:29.982110 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:38:29.982115 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:38:29.982120 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:38:29.982124 *** Verify running...... 1
verify: 2020/08/13 06:38:29.982128 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:38:29.982151 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:38:29.982165 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:38:29.982171 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:38:29.982176 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:38:29.982181 Find Ty Address
rdfLoader: 2020/08/13 06:38:29.982185 Find Ty Age
rdfLoader: 2020/08/13 06:38:29.982190 Find Ty Cars
rdfLoader: 2020/08/13 06:38:29.982195 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:38:29.982205 Find Ty DOB
rdfLoader: 2020/08/13 06:38:29.982209 Find Ty Friends
rdfLoader: 2020/08/13 06:38:29.982213 Find Ty Jobs
rdfLoader: 2020/08/13 06:38:29.982216 Find Ty Name
rdfLoader: 2020/08/13 06:38:29.982221 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:38:29.982224 Find Ty Siblings
rdfLoader: 2020/08/13 06:38:29.982239 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:38:29.982263 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:38:29.982267 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:38:29.982273 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:38:29.982283 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:38:29.982289 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:38:29.982293 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:38:29.982315 Find Ty Address
rdfLoader: 2020/08/13 06:38:29.982319 Find Ty Age
rdfLoader: 2020/08/13 06:38:29.982336 Find Ty Cars
rdfLoader: 2020/08/13 06:38:29.982341 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:38:29.982345 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:38:29.982349 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:38:29.982353 Find Ty DOB
rdfLoader: 2020/08/13 06:38:29.982357 Find Ty Friends
rdfLoader: 2020/08/13 06:38:29.982361 Find Ty Jobs
rdfLoader: 2020/08/13 06:38:29.982365 Find Ty Name
rdfLoader: 2020/08/13 06:38:29.982369 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:38:29.982373 Find Ty Siblings
rdfLoader: 2020/08/13 06:38:29.982386 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:38:29.982412 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:38:29.982416 Exit  unmarshalRDF. 
verify: 2020/08/13 06:38:29.982421 verify exited.....
grmgr: 2020/08/13 06:38:29.982427 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:38:29.989968 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.652999ms
DB: 2020/08/13 06:38:29.995547 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.546107ms
DB: 2020/08/13 06:38:30.000522 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.936922ms
DB: 2020/08/13 06:38:30.005536 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.976063ms
DB: 2020/08/13 06:38:30.010713 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.128849ms
SaveRDFNode: 2020/08/13 06:38:30.010739 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017560)}
rdfUIDdb: 2020/08/13 06:38:30.010747 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.010752 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.010759 Received UID: X18=
SaveRDFNode: 2020/08/13 06:38:30.010974 a: = db.Item{PKey:[]uint8{0x94, 0x96, 0xe0, 0xb8, 0xa0, 0x1c, 0x42, 0x81, 0x83, 0xee, 0x26, 0x4b, 0x3f, 0x29, 0xd4, 0x29}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:38:30.015997 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.983157ms
SaveRDFNode: 2020/08/13 06:38:30.016011 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017560)}
rdfUIDdb: 2020/08/13 06:38:30.016016 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.016020 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.016026 Received UID: X18=
SaveRDFNode: 2020/08/13 06:38:30.016037 a: = db.Item{PKey:[]uint8{0x94, 0x96, 0xe0, 0xb8, 0xa0, 0x1c, 0x42, 0x81, 0x83, 0xee, 0x26, 0x4b, 0x3f, 0x29, 0xd4, 0x29}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:38:30.021049 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.979207ms
SaveRDFNode: 2020/08/13 06:38:30.021060 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:38:30.021069 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.021076 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.021084 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.021090 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.021095 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.021102 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.021108 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:38:30.021112 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:38:30.021118 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc00037c480)}
SaveRDFNode: 2020/08/13 06:38:30.021140 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:38:30.021150 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.021154 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.021160 UID received  : VEHdtb2TQOeuk8TS/Azj0g==
DB: 2020/08/13 06:38:30.026229 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.032335ms
DB: 2020/08/13 06:38:30.031541 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.092289ms
DB: 2020/08/13 06:38:30.036623 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.928144ms
DB: 2020/08/13 06:38:30.041717 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.05925ms
DB: 2020/08/13 06:38:30.047026 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.272968ms
SaveRDFNode: 2020/08/13 06:38:30.047196 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037c480)}
rdfUIDdb: 2020/08/13 06:38:30.047210 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.047214 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.047220 Received UID: X18=
SaveRDFNode: 2020/08/13 06:38:30.047232 a: = db.Item{PKey:[]uint8{0x54, 0x41, 0xdd, 0xb5, 0xbd, 0x93, 0x40, 0xe7, 0xae, 0x93, 0xc4, 0xd2, 0xfc, 0xc, 0xe3, 0xd2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:38:30.052224 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.959617ms
SaveRDFNode: 2020/08/13 06:38:30.052246 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037c480)}
rdfUIDdb: 2020/08/13 06:38:30.052251 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.052255 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.052260 Received UID: X18=
SaveRDFNode: 2020/08/13 06:38:30.052270 a: = db.Item{PKey:[]uint8{0x54, 0x41, 0xdd, 0xb5, 0xbd, 0x93, 0x40, 0xe7, 0xae, 0x93, 0xc4, 0xd2, 0xfc, 0xc, 0xe3, 0xd2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:38:30.057222 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.921923ms
SaveRDFNode: 2020/08/13 06:38:30.057232 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:38:30.057241 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.057247 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.057254 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.057260 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.057265 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.057271 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.057276 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:38:30.057280 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:38:30.057286 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc00037d560)}
SaveRDFNode: 2020/08/13 06:38:30.057289 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:38:30.057299 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.057302 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.057308 UID received  : t8ecbAG5QjWhVszDyKrq1A==
DB: 2020/08/13 06:38:30.062586 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.234145ms
DB: 2020/08/13 06:38:30.067790 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.029438ms
DB: 2020/08/13 06:38:30.072755 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.928703ms
DB: 2020/08/13 06:38:30.078028 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.240179ms
DB: 2020/08/13 06:38:30.083125 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.91749ms
SaveRDFNode: 2020/08/13 06:38:30.083142 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037d560)}
rdfUIDdb: 2020/08/13 06:38:30.083149 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.083153 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.083159 Received UID: X18=
SaveRDFNode: 2020/08/13 06:38:30.083171 a: = db.Item{PKey:[]uint8{0xb7, 0xc7, 0x9c, 0x6c, 0x1, 0xb9, 0x42, 0x35, 0xa1, 0x56, 0xcc, 0xc3, 0xc8, 0xaa, 0xea, 0xd4}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:38:30.088161 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.941482ms
SaveRDFNode: 2020/08/13 06:38:30.088176 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037d560)}
rdfUIDdb: 2020/08/13 06:38:30.088182 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.088186 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.088192 Received UID: X18=
SaveRDFNode: 2020/08/13 06:38:30.088203 a: = db.Item{PKey:[]uint8{0xb7, 0xc7, 0x9c, 0x6c, 0x1, 0xb9, 0x42, 0x35, 0xa1, 0x56, 0xcc, 0xc3, 0xc8, 0xaa, 0xea, 0xd4}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:38:30.093213 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.966012ms
SaveRDFNode: 2020/08/13 06:38:30.093225 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:38:30.093234 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.093241 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.093248 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.093254 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.093416 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.093551 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:38:30.093580 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:38:30.093584 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:38:30.093591 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0001c8480)}
SaveRDFNode: 2020/08/13 06:38:30.093595 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:38:30.093605 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.093609 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.093615 UID received  : sil7Cy/xSz6yi2RV04WZpg==
DB: 2020/08/13 06:38:30.098755 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.112217ms
DB: 2020/08/13 06:38:30.104448 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.657294ms
DB: 2020/08/13 06:38:30.109440 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.960091ms
DB: 2020/08/13 06:38:30.115327 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.700311ms
DB: 2020/08/13 06:38:30.120250 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.886056ms
SaveRDFNode: 2020/08/13 06:38:30.120265 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0001c8480)}
rdfUIDdb: 2020/08/13 06:38:30.120272 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.120276 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.120282 Received UID: X18=
SaveRDFNode: 2020/08/13 06:38:30.120294 a: = db.Item{PKey:[]uint8{0xb2, 0x29, 0x7b, 0xb, 0x2f, 0xf1, 0x4b, 0x3e, 0xb2, 0x8b, 0x64, 0x55, 0xd3, 0x85, 0x99, 0xa6}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:38:30.125522 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.165412ms
SaveRDFNode: 2020/08/13 06:38:30.125707 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0001c8480)}
rdfUIDdb: 2020/08/13 06:38:30.125719 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:38:30.125724 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:38:30.125729 Received UID: X18=
SaveRDFNode: 2020/08/13 06:38:30.125741 a: = db.Item{PKey:[]uint8{0xb2, 0x29, 0x7b, 0xb, 0x2f, 0xf1, 0x4b, 0x3e, 0xb2, 0x8b, 0x64, 0x55, 0xd3, 0x85, 0x99, 0xa6}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:38:30.130985 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.210238ms
SaveRDFNode: 2020/08/13 06:38:30.130999 Returned.+++++++++++ No error
DB: 2020/08/13 06:38:30.136055 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.139035 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.142429 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.146832 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.152085 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.197869ms
DB: 2020/08/13 06:38:30.160659 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 8.493122ms
FetchForUpdate: 2020/08/13 06:38:30.160679 ** Cache FetchForUpdate Cache Key Value: [VEHdtb2TQOeuk8TS/Azj0g==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:38:30.160686  node: VEHdtb2TQOeuk8TS/Azj0g== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:38:30.161017 ** Cache FetchForUpdate Cache Key Value: [lJbguKAcQoGD7iZLPynUKQ==]   sortk: A#
FetchNode: 2020/08/13 06:38:30.161035  node: lJbguKAcQoGD7iZLPynUKQ== subKey: A#
DB: 2020/08/13 06:38:30.164465 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.743983ms
FetchForUpdate: 2020/08/13 06:38:30.164530 len(nb): 1
fetchItems: 2020/08/13 06:38:30.164538 +++  Cache FetchItems for sortk A#G#:S UID: [VEHdtb2TQOeuk8TS/Azj0g==] 
FetchNode: 2020/08/13 06:38:30.164543  node: VEHdtb2TQOeuk8TS/Azj0g== subKey: A#G#:S
DB: 2020/08/13 06:38:30.169047 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 7.924444ms
FetchForUpdate: 2020/08/13 06:38:30.169192 len(nb): 7
fetchItems: 2020/08/13 06:38:30.169202 +++  Cache FetchItems for sortk A# UID: [lJbguKAcQoGD7iZLPynUKQ==] 
FetchNode: 2020/08/13 06:38:30.169206  node: lJbguKAcQoGD7iZLPynUKQ== subKey: A#
DB: 2020/08/13 06:38:30.172936 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 8.362917ms
DB: 2020/08/13 06:38:30.178946 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.273953ms
Unlock: 2020/08/13 06:38:30.179115 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:38:30.186889 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 17.653913ms
Unlock: 2020/08/13 06:38:30.187036 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:38:30.187062 ** Cache FetchForUpdate Cache Key Value: [VEHdtb2TQOeuk8TS/Azj0g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.187068 +++  Cache FetchItems for sortk A#G#:S UID: [VEHdtb2TQOeuk8TS/Azj0g==] 
FetchNode: 2020/08/13 06:38:30.187073  node: VEHdtb2TQOeuk8TS/Azj0g== subKey: A#G#:S
DB: 2020/08/13 06:38:30.204920 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 17.812779ms
DB: 2020/08/13 06:38:30.216986 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 11.943945ms
DB: 2020/08/13 06:38:30.222675 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.143282ms
DB: 2020/08/13 06:38:30.229883 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.47551ms
DB: 2020/08/13 06:38:30.237990 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.918872ms
DB: 2020/08/13 06:38:30.243237 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.949818ms
DB: 2020/08/13 06:38:30.248925 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.374898ms
DB: 2020/08/13 06:38:30.256052 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.816181ms
DB: 2020/08/13 06:38:30.261497 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.089094ms
DB: 2020/08/13 06:38:30.267302 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.476434ms
Unlock: 2020/08/13 06:38:30.267315 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:38:30.278057 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 10.326497ms
FetchForUpdate: 2020/08/13 06:38:30.278075 ** Cache FetchForUpdate Cache Key Value: [VEHdtb2TQOeuk8TS/Azj0g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.278082 +++  Cache FetchItems for sortk A#G#:S UID: [VEHdtb2TQOeuk8TS/Azj0g==] 
FetchNode: 2020/08/13 06:38:30.278088  node: VEHdtb2TQOeuk8TS/Azj0g== subKey: A#G#:S
DB: 2020/08/13 06:38:30.281485 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.352396ms
AttachNode: gr1 2020/08/13 06:38:30.281589 Errored: SetUpredAvailable :for  VEHdtb2TQOeuk8TS/Azj0g==
Cache: 2020/08/13 06:38:30.281598 In SetUpredAvailable: pUid, tUID:  VEHdtb2TQOeuk8TS/Azj0g== VEHdtb2TQOeuk8TS/Azj0g== A#G#:S
Cache: 2020/08/13 06:38:30.281603 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:38:30.287426 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.776137ms
Unlock: 2020/08/13 06:38:30.287435 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:38:30.296688 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 8.886271ms
DB: 2020/08/13 06:38:30.299713 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.303174 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.306615 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.309600 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.315166 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.517337ms
DB: 2020/08/13 06:38:30.321164 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.808934ms
FetchForUpdate: 2020/08/13 06:38:30.321179 ** Cache FetchForUpdate Cache Key Value: [sil7Cy/xSz6yi2RV04WZpg==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:38:30.321186  node: sil7Cy/xSz6yi2RV04WZpg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:38:30.321348 ** Cache FetchForUpdate Cache Key Value: [lJbguKAcQoGD7iZLPynUKQ==]   sortk: A#
fetchItems: 2020/08/13 06:38:30.321358 +++  Cache FetchItems for sortk A# UID: [lJbguKAcQoGD7iZLPynUKQ==] 
FetchNode: 2020/08/13 06:38:30.321369  node: lJbguKAcQoGD7iZLPynUKQ== subKey: A#
DB: 2020/08/13 06:38:30.325672 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.453348ms
FetchForUpdate: 2020/08/13 06:38:30.325714 len(nb): 1
fetchItems: 2020/08/13 06:38:30.325721 +++  Cache FetchItems for sortk A#G#:S UID: [sil7Cy/xSz6yi2RV04WZpg==] 
FetchNode: 2020/08/13 06:38:30.325725  node: sil7Cy/xSz6yi2RV04WZpg== subKey: A#G#:S
DB: 2020/08/13 06:38:30.328932 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.178776ms
DB: 2020/08/13 06:38:30.334554 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.398292ms
Unlock: 2020/08/13 06:38:30.334569 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:38:30.342912 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 21.495246ms
Unlock: 2020/08/13 06:38:30.343716 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:38:30.344066 ** Cache FetchForUpdate Cache Key Value: [sil7Cy/xSz6yi2RV04WZpg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.344076 +++  Cache FetchItems for sortk A#G#:S UID: [sil7Cy/xSz6yi2RV04WZpg==] 
FetchNode: 2020/08/13 06:38:30.344080  node: sil7Cy/xSz6yi2RV04WZpg== subKey: A#G#:S
DB: 2020/08/13 06:38:30.348713 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.599252ms
DB: 2020/08/13 06:38:30.355745 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.439ms
DB: 2020/08/13 06:38:30.361171 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.012414ms
DB: 2020/08/13 06:38:30.366409 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.136573ms
DB: 2020/08/13 06:38:30.373106 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.637286ms
DB: 2020/08/13 06:38:30.378341 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.176167ms
DB: 2020/08/13 06:38:30.383606 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.195152ms
DB: 2020/08/13 06:38:30.390359 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.655781ms
DB: 2020/08/13 06:38:30.395200 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.760248ms
DB: 2020/08/13 06:38:30.400346 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.068165ms
Unlock: 2020/08/13 06:38:30.400357 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:38:30.406131 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.635261ms
FetchForUpdate: 2020/08/13 06:38:30.406149 ** Cache FetchForUpdate Cache Key Value: [sil7Cy/xSz6yi2RV04WZpg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.406157 +++  Cache FetchItems for sortk A#G#:S UID: [sil7Cy/xSz6yi2RV04WZpg==] 
FetchNode: 2020/08/13 06:38:30.406178  node: sil7Cy/xSz6yi2RV04WZpg== subKey: A#G#:S
DB: 2020/08/13 06:38:30.410308 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.091678ms
AttachNode: gr1 2020/08/13 06:38:30.410506 Errored: SetUpredAvailable :for  sil7Cy/xSz6yi2RV04WZpg==
Cache: 2020/08/13 06:38:30.410518 In SetUpredAvailable: pUid, tUID:  sil7Cy/xSz6yi2RV04WZpg== sil7Cy/xSz6yi2RV04WZpg== A#G#:S
Cache: 2020/08/13 06:38:30.410522 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:38:30.415999 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.442986ms
Unlock: 2020/08/13 06:38:30.416010 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:38:30.423405 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.988947ms
DB: 2020/08/13 06:38:30.427591 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.431602 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.435714 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.439269 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.445002 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.67496ms
DB: 2020/08/13 06:38:30.450070 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.85183ms
FetchForUpdate: 2020/08/13 06:38:30.450096 ** Cache FetchForUpdate Cache Key Value: [lJbguKAcQoGD7iZLPynUKQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.450102 +++  Cache FetchItems for sortk A#G#:S UID: [lJbguKAcQoGD7iZLPynUKQ==] 
FetchNode: 2020/08/13 06:38:30.450107  node: lJbguKAcQoGD7iZLPynUKQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:38:30.450323 ** Cache FetchForUpdate Cache Key Value: [VEHdtb2TQOeuk8TS/Azj0g==]   sortk: A#
fetchItems: 2020/08/13 06:38:30.450332 +++  Cache FetchItems for sortk A# UID: [VEHdtb2TQOeuk8TS/Azj0g==] 
FetchNode: 2020/08/13 06:38:30.450343  node: VEHdtb2TQOeuk8TS/Azj0g== subKey: A#
DB: 2020/08/13 06:38:30.454205 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.05879ms
DB: 2020/08/13 06:38:30.455758 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 5.354877ms
Unlock: 2020/08/13 06:38:30.457532 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:38:30.462123 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.840431ms
Unlock: 2020/08/13 06:38:30.462138 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:38:30.462506 ** Cache FetchForUpdate Cache Key Value: [lJbguKAcQoGD7iZLPynUKQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.462516 +++  Cache FetchItems for sortk A#G#:S UID: [lJbguKAcQoGD7iZLPynUKQ==] 
FetchNode: 2020/08/13 06:38:30.462520  node: lJbguKAcQoGD7iZLPynUKQ== subKey: A#G#:S
DB: 2020/08/13 06:38:30.466083 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.519188ms
DB: 2020/08/13 06:38:30.473396 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.737732ms
DB: 2020/08/13 06:38:30.481790 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 8.046281ms
DB: 2020/08/13 06:38:30.487766 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.265172ms
DB: 2020/08/13 06:38:30.494911 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.614352ms
DB: 2020/08/13 06:38:30.500384 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.973784ms
DB: 2020/08/13 06:38:30.506202 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.256795ms
DB: 2020/08/13 06:38:30.512749 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.101762ms
DB: 2020/08/13 06:38:30.519050 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.793106ms
DB: 2020/08/13 06:38:30.524958 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.352709ms
Unlock: 2020/08/13 06:38:30.524971 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:38:30.530775 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.216884ms
FetchForUpdate: 2020/08/13 06:38:30.530876 ** Cache FetchForUpdate Cache Key Value: [lJbguKAcQoGD7iZLPynUKQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.530888 +++  Cache FetchItems for sortk A#G#:S UID: [lJbguKAcQoGD7iZLPynUKQ==] 
FetchNode: 2020/08/13 06:38:30.530892  node: lJbguKAcQoGD7iZLPynUKQ== subKey: A#G#:S
DB: 2020/08/13 06:38:30.534304 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.378549ms
AttachNode: gr1 2020/08/13 06:38:30.534508 Errored: SetUpredAvailable :for  lJbguKAcQoGD7iZLPynUKQ==
Cache: 2020/08/13 06:38:30.534519 In SetUpredAvailable: pUid, tUID:  lJbguKAcQoGD7iZLPynUKQ== lJbguKAcQoGD7iZLPynUKQ== A#G#:S
Cache: 2020/08/13 06:38:30.534524 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:38:30.540494 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.928194ms
Unlock: 2020/08/13 06:38:30.540505 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:38:30.546547 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.567793ms
DB: 2020/08/13 06:38:30.549810 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.553342 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.556639 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.560221 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.565718 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.426814ms
DB: 2020/08/13 06:38:30.571301 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.234966ms
FetchForUpdate: 2020/08/13 06:38:30.571424 ** Cache FetchForUpdate Cache Key Value: [sil7Cy/xSz6yi2RV04WZpg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.571434 +++  Cache FetchItems for sortk A#G#:S UID: [sil7Cy/xSz6yi2RV04WZpg==] 
FetchNode: 2020/08/13 06:38:30.571439  node: sil7Cy/xSz6yi2RV04WZpg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:38:30.571625 ** Cache FetchForUpdate Cache Key Value: [VEHdtb2TQOeuk8TS/Azj0g==]   sortk: A#
fetchItems: 2020/08/13 06:38:30.571635 +++  Cache FetchItems for sortk A# UID: [VEHdtb2TQOeuk8TS/Azj0g==] 
FetchNode: 2020/08/13 06:38:30.571646  node: VEHdtb2TQOeuk8TS/Azj0g== subKey: A#
DB: 2020/08/13 06:38:30.574792 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.312074ms
DB: 2020/08/13 06:38:30.576371 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.679965ms
Unlock: 2020/08/13 06:38:30.577759 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:38:30.580539 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.253179ms
DB: 2020/08/13 06:38:30.585782 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.11177ms
DB: 2020/08/13 06:38:30.585799 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.11177ms
DB: 2020/08/13 06:38:30.590995 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.163963ms
DB: 2020/08/13 06:38:30.591124 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.163963ms
DB: 2020/08/13 06:38:30.596847 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.499857ms
DB: 2020/08/13 06:38:30.602516 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.40385ms
Unlock: 2020/08/13 06:38:30.602529 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:38:30.610117 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.750937ms
DB: 2020/08/13 06:38:30.616137 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.622567ms
DB: 2020/08/13 06:38:30.622058 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.260984ms
DB: 2020/08/13 06:38:30.629301 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.773275ms
DB: 2020/08/13 06:38:30.634959 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.143146ms
DB: 2020/08/13 06:38:30.640810 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.293495ms
DB: 2020/08/13 06:38:30.647235 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.958601ms
DB: 2020/08/13 06:38:30.653345 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.517356ms
DB: 2020/08/13 06:38:30.659825 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.923788ms
DB: 2020/08/13 06:38:30.666112 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.030852ms
FetchForUpdate: 2020/08/13 06:38:30.666232 ** Cache FetchForUpdate Cache Key Value: [sil7Cy/xSz6yi2RV04WZpg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.666243 +++  Cache FetchItems for sortk A#G#:S UID: [sil7Cy/xSz6yi2RV04WZpg==] 
FetchNode: 2020/08/13 06:38:30.666247  node: sil7Cy/xSz6yi2RV04WZpg== subKey: A#G#:S
DB: 2020/08/13 06:38:30.670202 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.916414ms
AttachNode: gr1 2020/08/13 06:38:30.670287 Errored: SetUpredAvailable :for  sil7Cy/xSz6yi2RV04WZpg==
Cache: 2020/08/13 06:38:30.670295 In SetUpredAvailable: pUid, tUID:  sil7Cy/xSz6yi2RV04WZpg== x140NnASS6KHHcLsCbtH7g== A#G#:S
Cache: 2020/08/13 06:38:30.670300 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:38:30.675592 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.257203ms
Unlock: 2020/08/13 06:38:30.675604 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:38:30.682575 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.881283ms
DB: 2020/08/13 06:38:30.685960 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.708335 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.712679 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.726520 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.731871 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.293516ms
DB: 2020/08/13 06:38:30.739162 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.219444ms
FetchForUpdate: 2020/08/13 06:38:30.739178 ** Cache FetchForUpdate Cache Key Value: [VEHdtb2TQOeuk8TS/Azj0g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.739185 +++  Cache FetchItems for sortk A#G#:S UID: [VEHdtb2TQOeuk8TS/Azj0g==] 
FetchNode: 2020/08/13 06:38:30.739190  node: VEHdtb2TQOeuk8TS/Azj0g== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:38:30.739359 ** Cache FetchForUpdate Cache Key Value: [sil7Cy/xSz6yi2RV04WZpg==]   sortk: A#
fetchItems: 2020/08/13 06:38:30.739368 +++  Cache FetchItems for sortk A# UID: [sil7Cy/xSz6yi2RV04WZpg==] 
FetchNode: 2020/08/13 06:38:30.739380  node: sil7Cy/xSz6yi2RV04WZpg== subKey: A#
DB: 2020/08/13 06:38:30.743067 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.623602ms
Unlock: 2020/08/13 06:38:30.743746 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:38:30.744372 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.148589ms
DB: 2020/08/13 06:38:30.750331 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.640286ms
DB: 2020/08/13 06:38:30.756110 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.742417ms
DB: 2020/08/13 06:38:30.756126 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.742417ms
DB: 2020/08/13 06:38:30.761673 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.506483ms
DB: 2020/08/13 06:38:30.761689 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.506483ms
DB: 2020/08/13 06:38:30.767743 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.983806ms
DB: 2020/08/13 06:38:30.773279 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.471389ms
Unlock: 2020/08/13 06:38:30.773292 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:38:30.780209 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.827185ms
DB: 2020/08/13 06:38:30.786012 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.751119ms
DB: 2020/08/13 06:38:30.793686 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.293427ms
DB: 2020/08/13 06:38:30.801785 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.736726ms
DB: 2020/08/13 06:38:30.807369 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.279609ms
DB: 2020/08/13 06:38:30.813335 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.65846ms
DB: 2020/08/13 06:38:30.819488 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.854081ms
DB: 2020/08/13 06:38:30.825022 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.226286ms
DB: 2020/08/13 06:38:30.831030 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.691591ms
DB: 2020/08/13 06:38:30.836524 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.309288ms
FetchForUpdate: 2020/08/13 06:38:30.836539 ** Cache FetchForUpdate Cache Key Value: [VEHdtb2TQOeuk8TS/Azj0g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.836547 +++  Cache FetchItems for sortk A#G#:S UID: [VEHdtb2TQOeuk8TS/Azj0g==] 
FetchNode: 2020/08/13 06:38:30.836552  node: VEHdtb2TQOeuk8TS/Azj0g== subKey: A#G#:S
DB: 2020/08/13 06:38:30.841091 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.499674ms
AttachNode: gr1 2020/08/13 06:38:30.841192 Errored: SetUpredAvailable :for  VEHdtb2TQOeuk8TS/Azj0g==
Cache: 2020/08/13 06:38:30.841201 In SetUpredAvailable: pUid, tUID:  VEHdtb2TQOeuk8TS/Azj0g== G19/Ir3FRzGcqQ1eJo1MPw== A#G#:S
Cache: 2020/08/13 06:38:30.841205 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:38:30.846536 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.295822ms
Unlock: 2020/08/13 06:38:30.846550 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:38:30.852303 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.296966ms
DB: 2020/08/13 06:38:30.855751 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.860033 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.864235 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.868525 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:38:30.874126 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.454489ms
DB: 2020/08/13 06:38:30.879502 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.016291ms
FetchForUpdate: 2020/08/13 06:38:30.879527 ** Cache FetchForUpdate Cache Key Value: [lJbguKAcQoGD7iZLPynUKQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.879536 +++  Cache FetchItems for sortk A#G#:S UID: [lJbguKAcQoGD7iZLPynUKQ==] 
FetchNode: 2020/08/13 06:38:30.879541  node: lJbguKAcQoGD7iZLPynUKQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:38:30.879726 ** Cache FetchForUpdate Cache Key Value: [sil7Cy/xSz6yi2RV04WZpg==]   sortk: A#
fetchItems: 2020/08/13 06:38:30.879736 +++  Cache FetchItems for sortk A# UID: [sil7Cy/xSz6yi2RV04WZpg==] 
FetchNode: 2020/08/13 06:38:30.879747  node: sil7Cy/xSz6yi2RV04WZpg== subKey: A#
DB: 2020/08/13 06:38:30.884206 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.629251ms
DB: 2020/08/13 06:38:30.885316 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 5.487797ms
Unlock: 2020/08/13 06:38:30.886666 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:38:30.890241 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.467251ms
DB: 2020/08/13 06:38:30.895905 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.526949ms
DB: 2020/08/13 06:38:30.895921 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.526949ms
DB: 2020/08/13 06:38:30.900944 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.98902ms
DB: 2020/08/13 06:38:30.901051 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.98902ms
DB: 2020/08/13 06:38:30.918188 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 16.915962ms
DB: 2020/08/13 06:38:30.924059 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.449763ms
Unlock: 2020/08/13 06:38:30.924072 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:38:30.931022 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.019943ms
DB: 2020/08/13 06:38:30.937246 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.965932ms
DB: 2020/08/13 06:38:30.943567 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.548452ms
DB: 2020/08/13 06:38:30.949921 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.877984ms
DB: 2020/08/13 06:38:30.955703 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.342317ms
DB: 2020/08/13 06:38:30.962045 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.71035ms
DB: 2020/08/13 06:38:30.969283 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.766489ms
DB: 2020/08/13 06:38:30.976938 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.246152ms
DB: 2020/08/13 06:38:30.983541 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.988838ms
DB: 2020/08/13 06:38:30.989125 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.331824ms
FetchForUpdate: 2020/08/13 06:38:30.989136 ** Cache FetchForUpdate Cache Key Value: [lJbguKAcQoGD7iZLPynUKQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:38:30.989143 +++  Cache FetchItems for sortk A#G#:S UID: [lJbguKAcQoGD7iZLPynUKQ==] 
FetchNode: 2020/08/13 06:38:30.989148  node: lJbguKAcQoGD7iZLPynUKQ== subKey: A#G#:S
DB: 2020/08/13 06:38:30.993678 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.49843ms
AttachNode: gr1 2020/08/13 06:38:30.993971 Errored: SetUpredAvailable :for  lJbguKAcQoGD7iZLPynUKQ==
Cache: 2020/08/13 06:38:30.993983 In SetUpredAvailable: pUid, tUID:  lJbguKAcQoGD7iZLPynUKQ== kpoDF7etQwCohXZXgu/Img== A#G#:S
Cache: 2020/08/13 06:38:30.993988 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:38:30.999632 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.611961ms
Unlock: 2020/08/13 06:38:30.999642 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:38:31.005880 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.748705ms
rdfLoader: 2020/08/13 06:38:31.005894 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:38:31.005905 Powering down...
rdfuuid: 2020/08/13 06:38:31.005911 Powering down...
DB:2020/08/13 06:39:09 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:39:09.532980 Powering on...
rdfLoader: 2020/08/13 06:39:09.533008 verify started....xx.
rdfLoader: 2020/08/13 06:39:09.533016 saveNode started......
rdfuuid: 2020/08/13 06:39:09.533049 Powering on...
rdfLoader: 2020/08/13 06:39:09.533058 *************** All started 
rdfLoader: 2020/08/13 06:39:09.543798 .  getType..
rdfLoader: 2020/08/13 06:39:09.543811 node.TyName : [Person]
DB: 2020/08/13 06:39:09.621490 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 77.623518ms
verify: 2020/08/13 06:39:09.621678 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:39:09.621686  Send Ask request to limiter.
verify: 2020/08/13 06:39:09.621691 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:39:09.621699 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:39:09.621707 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:39:09.621712 *** Verify running...... 0
rdfLoader: 2020/08/13 06:39:09.621717 .  getType..
rdfLoader: 2020/08/13 06:39:09.621721 node.TyName : [Person]
verify: 2020/08/13 06:39:09.621742 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:39:09.621746  Send Ask request to limiter.
verify: 2020/08/13 06:39:09.621752 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:39:09.621758 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:39:09.621766 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:39:09.621770 *** Verify running...... 1
verify: 2020/08/13 06:39:09.621775 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:39:09.621823 .  getType..
rdfLoader: 2020/08/13 06:39:09.621828 node.TyName : [Person]
verify: 2020/08/13 06:39:09.621848 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:39:09.621863  Send Ask request to limiter.
verify: 2020/08/13 06:39:09.621867 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:39:09.621872 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:39:09.621879 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:39:09.621883 *** Verify running...... 0
rdfLoader: 2020/08/13 06:39:09.621887 .  getType..
rdfLoader: 2020/08/13 06:39:09.623017 node.TyName : [Person]
verify: 2020/08/13 06:39:09.623052 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:39:09.623056  Send Ask request to limiter.
verify: 2020/08/13 06:39:09.623061 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:39:09.623066 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:39:09.623077 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:39:09.623081 *** Verify running...... 1
verify: 2020/08/13 06:39:09.623085 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:39:09.623089 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:39:09.623098 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:39:09.623104 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:39:09.623109 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:39:09.623114 Find Ty Address
rdfLoader: 2020/08/13 06:39:09.623118 Find Ty Age
rdfLoader: 2020/08/13 06:39:09.623124 Find Ty Cars
rdfLoader: 2020/08/13 06:39:09.623149 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:39:09.623153 Find Ty DOB
rdfLoader: 2020/08/13 06:39:09.623158 Find Ty Friends
rdfLoader: 2020/08/13 06:39:09.623162 Find Ty Jobs
rdfLoader: 2020/08/13 06:39:09.623166 Find Ty Name
rdfLoader: 2020/08/13 06:39:09.623170 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:39:09.623174 Find Ty Siblings
rdfLoader: 2020/08/13 06:39:09.623197 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:39:09.623221 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:39:09.623225 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:39:09.623232 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:39:09.623238 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:39:09.623243 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:39:09.623247 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:39:09.623252 Find Ty Address
rdfLoader: 2020/08/13 06:39:09.623256 Find Ty Age
rdfLoader: 2020/08/13 06:39:09.623261 Find Ty Cars
rdfLoader: 2020/08/13 06:39:09.623265 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:39:09.623275 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:39:09.623279 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:39:09.623283 Find Ty DOB
rdfLoader: 2020/08/13 06:39:09.623287 Find Ty Friends
rdfLoader: 2020/08/13 06:39:09.623307 Find Ty Jobs
rdfLoader: 2020/08/13 06:39:09.623311 Find Ty Name
rdfLoader: 2020/08/13 06:39:09.623315 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:39:09.623319 Find Ty Siblings
rdfLoader: 2020/08/13 06:39:09.623333 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:39:09.623361 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:39:09.623365 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:39:09.623371 EndCh received for unmarshall. rCnt = 2 
SaveRDFNode: xxx 2020/08/13 06:39:09.623391 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.623398 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.623404 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.623409 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.623415 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.623421 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.623426 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:39:09.623430 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:39:09.623438 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000017560)}
SaveRDFNode: 2020/08/13 06:39:09.623442 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:39:09.623460 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.623471 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.623478 UID received  : DmnWte7VQquqavSC28vegQ==
unmarshalRDF2020/08/13 06:39:09.623712 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:39:09.623722 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:39:09.623727 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:39:09.623732 Find Ty Address
rdfLoader: 2020/08/13 06:39:09.623736 Find Ty Age
rdfLoader: 2020/08/13 06:39:09.623741 Find Ty Cars
rdfLoader: 2020/08/13 06:39:09.623746 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:39:09.623751 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:39:09.623771 Find Ty DOB
rdfLoader: 2020/08/13 06:39:09.623777 Find Ty Friends
rdfLoader: 2020/08/13 06:39:09.623784 Find Ty Jobs
rdfLoader: 2020/08/13 06:39:09.623788 Find Ty Name
rdfLoader: 2020/08/13 06:39:09.623808 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:39:09.623813 Find Ty Siblings
rdfLoader: 2020/08/13 06:39:09.623833 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:39:09.623869 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:39:09.623879 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:39:09.623885 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:39:09.623891 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:39:09.623896 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:39:09.623900 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:39:09.623905 Find Ty Address
rdfLoader: 2020/08/13 06:39:09.623909 Find Ty Age
rdfLoader: 2020/08/13 06:39:09.623914 Find Ty Cars
rdfLoader: 2020/08/13 06:39:09.623918 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:39:09.623923 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:39:09.623927 Find Ty DOB
rdfLoader: 2020/08/13 06:39:09.623931 Find Ty Friends
rdfLoader: 2020/08/13 06:39:09.623935 Find Ty Jobs
rdfLoader: 2020/08/13 06:39:09.623938 Find Ty Name
rdfLoader: 2020/08/13 06:39:09.623943 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:39:09.623947 Find Ty Siblings
rdfLoader: 2020/08/13 06:39:09.623976 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:39:09.624002 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:39:09.624007 Exit  unmarshalRDF. 
verify: 2020/08/13 06:39:09.624012 verify exited.....
grmgr: 2020/08/13 06:39:09.624018 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:39:09.632917 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 9.407635ms
DB: 2020/08/13 06:39:09.637607 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.654177ms
DB: 2020/08/13 06:39:09.642409 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.618188ms
DB: 2020/08/13 06:39:09.647452 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.009049ms
DB: 2020/08/13 06:39:09.652396 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.91149ms
SaveRDFNode: 2020/08/13 06:39:09.652409 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017560)}
rdfUIDdb: 2020/08/13 06:39:09.652416 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.652420 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.652425 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:09.652442 a: = db.Item{PKey:[]uint8{0xe, 0x69, 0xd6, 0xb5, 0xee, 0xd5, 0x42, 0xab, 0xaa, 0x6a, 0xf4, 0x82, 0xdb, 0xcb, 0xde, 0x81}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:09.657075 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.602257ms
SaveRDFNode: 2020/08/13 06:39:09.657270 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017560)}
rdfUIDdb: 2020/08/13 06:39:09.657281 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.657285 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.657291 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:09.657301 a: = db.Item{PKey:[]uint8{0xe, 0x69, 0xd6, 0xb5, 0xee, 0xd5, 0x42, 0xab, 0xaa, 0x6a, 0xf4, 0x82, 0xdb, 0xcb, 0xde, 0x81}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:09.662024 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.670852ms
SaveRDFNode: 2020/08/13 06:39:09.662034 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:39:09.662043 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.662049 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.662057 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.662063 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.662071 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.662077 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.662083 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:39:09.662087 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:39:09.662093 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc00037acc0)}
SaveRDFNode: 2020/08/13 06:39:09.662097 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:39:09.662106 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.662121 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.662134 UID received  : FXHRQGXhQzCH5w5lYf06Mw==
DB: 2020/08/13 06:39:09.666611 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.450128ms
DB: 2020/08/13 06:39:09.671101 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.459119ms
DB: 2020/08/13 06:39:09.676530 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.395447ms
DB: 2020/08/13 06:39:09.683628 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.929548ms
DB: 2020/08/13 06:39:09.688512 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.842707ms
SaveRDFNode: 2020/08/13 06:39:09.688544 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037acc0)}
rdfUIDdb: 2020/08/13 06:39:09.688789 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.688796 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.689002 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:09.689040 a: = db.Item{PKey:[]uint8{0x15, 0x71, 0xd1, 0x40, 0x65, 0xe1, 0x43, 0x30, 0x87, 0xe7, 0xe, 0x65, 0x61, 0xfd, 0x3a, 0x33}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:09.694385 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.3032ms
SaveRDFNode: 2020/08/13 06:39:09.694402 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037acc0)}
rdfUIDdb: 2020/08/13 06:39:09.694409 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.694414 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.694420 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:09.694432 a: = db.Item{PKey:[]uint8{0x15, 0x71, 0xd1, 0x40, 0x65, 0xe1, 0x43, 0x30, 0x87, 0xe7, 0xe, 0x65, 0x61, 0xfd, 0x3a, 0x33}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:09.699119 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.656625ms
SaveRDFNode: 2020/08/13 06:39:09.699138 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:39:09.699147 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.699153 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.699159 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.699166 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.699172 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.699178 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.699183 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:39:09.699187 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:39:09.699193 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000016ba0)}
SaveRDFNode: 2020/08/13 06:39:09.699197 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:39:09.699206 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.699210 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.699216 UID received  : q99m5Tw1ShiMoONHeU6gdw==
DB: 2020/08/13 06:39:09.704262 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.019711ms
DB: 2020/08/13 06:39:09.708949 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.655263ms
DB: 2020/08/13 06:39:09.713572 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.59071ms
DB: 2020/08/13 06:39:09.718711 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.931405ms
DB: 2020/08/13 06:39:09.723596 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.850318ms
SaveRDFNode: 2020/08/13 06:39:09.723611 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016ba0)}
rdfUIDdb: 2020/08/13 06:39:09.723617 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.723621 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.723627 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:09.723638 a: = db.Item{PKey:[]uint8{0xab, 0xdf, 0x66, 0xe5, 0x3c, 0x35, 0x4a, 0x18, 0x8c, 0xa0, 0xe3, 0x47, 0x79, 0x4e, 0xa0, 0x77}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:09.728540 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.870475ms
SaveRDFNode: 2020/08/13 06:39:09.728554 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016ba0)}
rdfUIDdb: 2020/08/13 06:39:09.728560 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.728564 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.728569 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:09.728580 a: = db.Item{PKey:[]uint8{0xab, 0xdf, 0x66, 0xe5, 0x3c, 0x35, 0x4a, 0x18, 0x8c, 0xa0, 0xe3, 0x47, 0x79, 0x4e, 0xa0, 0x77}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:09.733193 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.58099ms
SaveRDFNode: 2020/08/13 06:39:09.733357 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:39:09.733374 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.733383 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.733410 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.733416 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.733422 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.733440 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:09.733446 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:39:09.733450 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:39:09.733456 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc00037a6c0)}
SaveRDFNode: 2020/08/13 06:39:09.733460 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:39:09.733471 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.733475 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.733481 UID received  : 2g9n9+nnQ0aCJyrrxNZBaQ==
DB: 2020/08/13 06:39:09.738187 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.678709ms
DB: 2020/08/13 06:39:09.743011 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.787467ms
DB: 2020/08/13 06:39:09.747838 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.794015ms
DB: 2020/08/13 06:39:09.752553 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.67942ms
DB: 2020/08/13 06:39:09.758698 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.916927ms
SaveRDFNode: 2020/08/13 06:39:09.758719 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037a6c0)}
rdfUIDdb: 2020/08/13 06:39:09.758727 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.758731 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.758737 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:09.758749 a: = db.Item{PKey:[]uint8{0xda, 0xf, 0x67, 0xf7, 0xe9, 0xe7, 0x43, 0x46, 0x82, 0x27, 0x2a, 0xeb, 0xc4, 0xd6, 0x41, 0x69}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:09.763513 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.729914ms
SaveRDFNode: 2020/08/13 06:39:09.763526 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037a6c0)}
rdfUIDdb: 2020/08/13 06:39:09.763531 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:09.763535 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:09.763541 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:09.763552 a: = db.Item{PKey:[]uint8{0xda, 0xf, 0x67, 0xf7, 0xe9, 0xe7, 0x43, 0x46, 0x82, 0x27, 0x2a, 0xeb, 0xc4, 0xd6, 0x41, 0x69}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:09.768358 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.775231ms
SaveRDFNode: 2020/08/13 06:39:09.768548 Returned.+++++++++++ No error
DB: 2020/08/13 06:39:09.771841 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:09.775757 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:09.778723 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:09.782037 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:09.787111 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.010416ms
DB: 2020/08/13 06:39:09.794705 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.515768ms
FetchForUpdate: 2020/08/13 06:39:09.794731 ** Cache FetchForUpdate Cache Key Value: [q99m5Tw1ShiMoONHeU6gdw==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:39:09.794738  node: q99m5Tw1ShiMoONHeU6gdw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:09.794910 ** Cache FetchForUpdate Cache Key Value: [FXHRQGXhQzCH5w5lYf06Mw==]   sortk: A#
FetchNode: 2020/08/13 06:39:09.794926  node: FXHRQGXhQzCH5w5lYf06Mw== subKey: A#
DB: 2020/08/13 06:39:09.798628 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.855508ms
FetchForUpdate: 2020/08/13 06:39:09.798692 len(nb): 1
fetchItems: 2020/08/13 06:39:09.798701 +++  Cache FetchItems for sortk A#G#:S UID: [q99m5Tw1ShiMoONHeU6gdw==] 
FetchNode: 2020/08/13 06:39:09.798706  node: q99m5Tw1ShiMoONHeU6gdw== subKey: A#G#:S
DB: 2020/08/13 06:39:09.802516 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 7.514029ms
FetchForUpdate: 2020/08/13 06:39:09.802639 len(nb): 7
fetchItems: 2020/08/13 06:39:09.802648 +++  Cache FetchItems for sortk A# UID: [FXHRQGXhQzCH5w5lYf06Mw==] 
FetchNode: 2020/08/13 06:39:09.802652  node: FXHRQGXhQzCH5w5lYf06Mw== subKey: A#
DB: 2020/08/13 06:39:09.808296 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 9.562019ms
DB: 2020/08/13 06:39:09.818814 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 9.795868ms
Unlock: 2020/08/13 06:39:09.818826 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:09.822378 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 19.696803ms
Unlock: 2020/08/13 06:39:09.822527 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:39:09.822566 ** Cache FetchForUpdate Cache Key Value: [q99m5Tw1ShiMoONHeU6gdw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:09.822572 +++  Cache FetchItems for sortk A#G#:S UID: [q99m5Tw1ShiMoONHeU6gdw==] 
FetchNode: 2020/08/13 06:39:09.822576  node: q99m5Tw1ShiMoONHeU6gdw== subKey: A#G#:S
DB: 2020/08/13 06:39:09.842431 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 19.826562ms
DB: 2020/08/13 06:39:09.848809 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.270752ms
DB: 2020/08/13 06:39:09.853949 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.092719ms
DB: 2020/08/13 06:39:09.860281 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.163377ms
DB: 2020/08/13 06:39:09.868765 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.024706ms
DB: 2020/08/13 06:39:09.873778 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.953791ms
DB: 2020/08/13 06:39:09.879312 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.466589ms
DB: 2020/08/13 06:39:09.885993 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.618511ms
DB: 2020/08/13 06:39:09.890844 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.796561ms
DB: 2020/08/13 06:39:09.896939 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.133603ms
Unlock: 2020/08/13 06:39:09.896955 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:39:09.903396 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.1714ms
FetchForUpdate: 2020/08/13 06:39:09.903410 ** Cache FetchForUpdate Cache Key Value: [q99m5Tw1ShiMoONHeU6gdw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:09.903426 +++  Cache FetchItems for sortk A#G#:S UID: [q99m5Tw1ShiMoONHeU6gdw==] 
FetchNode: 2020/08/13 06:39:09.903430  node: q99m5Tw1ShiMoONHeU6gdw== subKey: A#G#:S
DB: 2020/08/13 06:39:09.907333 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.870142ms
AttachNode: gr1 2020/08/13 06:39:09.907421 Errored: SetUpredAvailable :for  q99m5Tw1ShiMoONHeU6gdw==
Cache: 2020/08/13 06:39:09.907428 In SetUpredAvailable: pUid, tUID:  q99m5Tw1ShiMoONHeU6gdw== q99m5Tw1ShiMoONHeU6gdw== A#G#:S
Cache: 2020/08/13 06:39:09.907433 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:09.912597 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.131676ms
Unlock: 2020/08/13 06:39:09.912611 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:09.922475 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 9.108307ms
DB: 2020/08/13 06:39:09.925823 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:09.928782 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:09.932219 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:09.936401 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:09.941758 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.302356ms
DB: 2020/08/13 06:39:09.947448 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.86994ms
FetchForUpdate: 2020/08/13 06:39:09.947470 ** Cache FetchForUpdate Cache Key Value: [2g9n9+nnQ0aCJyrrxNZBaQ==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:39:09.947478  node: 2g9n9+nnQ0aCJyrrxNZBaQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:09.947680 ** Cache FetchForUpdate Cache Key Value: [FXHRQGXhQzCH5w5lYf06Mw==]   sortk: A#
fetchItems: 2020/08/13 06:39:09.947709 +++  Cache FetchItems for sortk A# UID: [FXHRQGXhQzCH5w5lYf06Mw==] 
FetchNode: 2020/08/13 06:39:09.947741  node: FXHRQGXhQzCH5w5lYf06Mw== subKey: A#
DB: 2020/08/13 06:39:09.951147 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.631563ms
FetchForUpdate: 2020/08/13 06:39:09.951206 len(nb): 1
fetchItems: 2020/08/13 06:39:09.951214 +++  Cache FetchItems for sortk A#G#:S UID: [2g9n9+nnQ0aCJyrrxNZBaQ==] 
FetchNode: 2020/08/13 06:39:09.951219  node: 2g9n9+nnQ0aCJyrrxNZBaQ== subKey: A#G#:S
DB: 2020/08/13 06:39:09.955452 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.204274ms
DB: 2020/08/13 06:39:09.961863 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.597157ms
Unlock: 2020/08/13 06:39:09.961876 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:09.964406 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 16.619073ms
Unlock: 2020/08/13 06:39:09.965589 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:39:09.965944 ** Cache FetchForUpdate Cache Key Value: [2g9n9+nnQ0aCJyrrxNZBaQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:09.965954 +++  Cache FetchItems for sortk A#G#:S UID: [2g9n9+nnQ0aCJyrrxNZBaQ==] 
FetchNode: 2020/08/13 06:39:09.965959  node: 2g9n9+nnQ0aCJyrrxNZBaQ== subKey: A#G#:S
DB: 2020/08/13 06:39:09.969676 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.680445ms
DB: 2020/08/13 06:39:09.978623 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.2297ms
DB: 2020/08/13 06:39:09.983367 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.675418ms
DB: 2020/08/13 06:39:09.988510 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.031169ms
DB: 2020/08/13 06:39:09.994783 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.203951ms
DB: 2020/08/13 06:39:09.999548 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.69398ms
DB: 2020/08/13 06:39:10.004986 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.116097ms
DB: 2020/08/13 06:39:10.011634 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.287923ms
DB: 2020/08/13 06:39:10.016614 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.673231ms
DB: 2020/08/13 06:39:10.021852 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.914023ms
Unlock: 2020/08/13 06:39:10.021871 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:39:10.027227 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.914388ms
FetchForUpdate: 2020/08/13 06:39:10.027241 ** Cache FetchForUpdate Cache Key Value: [2g9n9+nnQ0aCJyrrxNZBaQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.027248 +++  Cache FetchItems for sortk A#G#:S UID: [2g9n9+nnQ0aCJyrrxNZBaQ==] 
FetchNode: 2020/08/13 06:39:10.027252  node: 2g9n9+nnQ0aCJyrrxNZBaQ== subKey: A#G#:S
DB: 2020/08/13 06:39:10.030471 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.184837ms
AttachNode: gr1 2020/08/13 06:39:10.030579 Errored: SetUpredAvailable :for  2g9n9+nnQ0aCJyrrxNZBaQ==
Cache: 2020/08/13 06:39:10.030588 In SetUpredAvailable: pUid, tUID:  2g9n9+nnQ0aCJyrrxNZBaQ== 2g9n9+nnQ0aCJyrrxNZBaQ== A#G#:S
Cache: 2020/08/13 06:39:10.030592 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:10.035563 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.928935ms
Unlock: 2020/08/13 06:39:10.035579 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:10.044175 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.735982ms
DB: 2020/08/13 06:39:10.047530 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.051416 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.054539 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.057739 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.062693 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.899588ms
DB: 2020/08/13 06:39:10.067279 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.39449ms
FetchForUpdate: 2020/08/13 06:39:10.067296 ** Cache FetchForUpdate Cache Key Value: [2g9n9+nnQ0aCJyrrxNZBaQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.067303 +++  Cache FetchItems for sortk A#G#:S UID: [2g9n9+nnQ0aCJyrrxNZBaQ==] 
FetchNode: 2020/08/13 06:39:10.067307  node: 2g9n9+nnQ0aCJyrrxNZBaQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:10.067492 ** Cache FetchForUpdate Cache Key Value: [q99m5Tw1ShiMoONHeU6gdw==]   sortk: A#
fetchItems: 2020/08/13 06:39:10.067501 +++  Cache FetchItems for sortk A# UID: [q99m5Tw1ShiMoONHeU6gdw==] 
FetchNode: 2020/08/13 06:39:10.067513  node: q99m5Tw1ShiMoONHeU6gdw== subKey: A#
DB: 2020/08/13 06:39:10.071382 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.039865ms
DB: 2020/08/13 06:39:10.072636 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 5.043539ms
Unlock: 2020/08/13 06:39:10.073712 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:39:10.076593 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.845489ms
DB: 2020/08/13 06:39:10.081299 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.672552ms
DB: 2020/08/13 06:39:10.081320 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.672552ms
DB: 2020/08/13 06:39:10.086102 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.748382ms
DB: 2020/08/13 06:39:10.086118 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.748382ms
DB: 2020/08/13 06:39:10.091464 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.164474ms
DB: 2020/08/13 06:39:10.096571 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.868702ms
Unlock: 2020/08/13 06:39:10.096584 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:10.103667 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.45911ms
DB: 2020/08/13 06:39:10.108527 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.665509ms
DB: 2020/08/13 06:39:10.113826 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.913699ms
DB: 2020/08/13 06:39:10.120347 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.198419ms
DB: 2020/08/13 06:39:10.125635 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.88433ms
DB: 2020/08/13 06:39:10.131222 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.00797ms
DB: 2020/08/13 06:39:10.137847 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.315305ms
DB: 2020/08/13 06:39:10.142879 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.730818ms
DB: 2020/08/13 06:39:10.148331 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.054465ms
DB: 2020/08/13 06:39:10.153620 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.00791ms
FetchForUpdate: 2020/08/13 06:39:10.153632 ** Cache FetchForUpdate Cache Key Value: [2g9n9+nnQ0aCJyrrxNZBaQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.153639 +++  Cache FetchItems for sortk A#G#:S UID: [2g9n9+nnQ0aCJyrrxNZBaQ==] 
FetchNode: 2020/08/13 06:39:10.153644  node: 2g9n9+nnQ0aCJyrrxNZBaQ== subKey: A#G#:S
DB: 2020/08/13 06:39:10.157946 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.268707ms
AttachNode: gr1 2020/08/13 06:39:10.158207 Errored: SetUpredAvailable :for  2g9n9+nnQ0aCJyrrxNZBaQ==
Cache: 2020/08/13 06:39:10.158222 In SetUpredAvailable: pUid, tUID:  2g9n9+nnQ0aCJyrrxNZBaQ== iUG55RBjTNWVSizmV/arpA== A#G#:S
Cache: 2020/08/13 06:39:10.158227 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:10.163296 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.023976ms
Unlock: 2020/08/13 06:39:10.163308 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:10.168428 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.655668ms
DB: 2020/08/13 06:39:10.171319 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.219664 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.223181 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.227074 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.232214 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.061706ms
DB: 2020/08/13 06:39:10.237331 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.91063ms
FetchForUpdate: 2020/08/13 06:39:10.237351 ** Cache FetchForUpdate Cache Key Value: [FXHRQGXhQzCH5w5lYf06Mw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.237358 +++  Cache FetchItems for sortk A#G#:S UID: [FXHRQGXhQzCH5w5lYf06Mw==] 
FetchNode: 2020/08/13 06:39:10.237364  node: FXHRQGXhQzCH5w5lYf06Mw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:10.237555 ** Cache FetchForUpdate Cache Key Value: [q99m5Tw1ShiMoONHeU6gdw==]   sortk: A#
fetchItems: 2020/08/13 06:39:10.237567 +++  Cache FetchItems for sortk A# UID: [q99m5Tw1ShiMoONHeU6gdw==] 
FetchNode: 2020/08/13 06:39:10.237598  node: q99m5Tw1ShiMoONHeU6gdw== subKey: A#
DB: 2020/08/13 06:39:10.241559 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.153893ms
DB: 2020/08/13 06:39:10.242481 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.818738ms
Unlock: 2020/08/13 06:39:10.243852 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:39:10.247092 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.197652ms
Unlock: 2020/08/13 06:39:10.247104 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:39:10.247456 ** Cache FetchForUpdate Cache Key Value: [FXHRQGXhQzCH5w5lYf06Mw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.247466 +++  Cache FetchItems for sortk A#G#:S UID: [FXHRQGXhQzCH5w5lYf06Mw==] 
FetchNode: 2020/08/13 06:39:10.247471  node: FXHRQGXhQzCH5w5lYf06Mw== subKey: A#G#:S
DB: 2020/08/13 06:39:10.251757 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.228085ms
DB: 2020/08/13 06:39:10.258434 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.310824ms
DB: 2020/08/13 06:39:10.263362 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.716427ms
DB: 2020/08/13 06:39:10.268641 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.903105ms
DB: 2020/08/13 06:39:10.275821 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.696366ms
DB: 2020/08/13 06:39:10.281171 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.852373ms
DB: 2020/08/13 06:39:10.286533 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.029834ms
DB: 2020/08/13 06:39:10.293498 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.637337ms
DB: 2020/08/13 06:39:10.298837 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.020528ms
DB: 2020/08/13 06:39:10.304159 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.011975ms
Unlock: 2020/08/13 06:39:10.304171 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:39:10.314684 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 9.857325ms
FetchForUpdate: 2020/08/13 06:39:10.314712 ** Cache FetchForUpdate Cache Key Value: [FXHRQGXhQzCH5w5lYf06Mw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.314719 +++  Cache FetchItems for sortk A#G#:S UID: [FXHRQGXhQzCH5w5lYf06Mw==] 
FetchNode: 2020/08/13 06:39:10.314724  node: FXHRQGXhQzCH5w5lYf06Mw== subKey: A#G#:S
DB: 2020/08/13 06:39:10.318866 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.077516ms
AttachNode: gr1 2020/08/13 06:39:10.318972 Errored: SetUpredAvailable :for  FXHRQGXhQzCH5w5lYf06Mw==
Cache: 2020/08/13 06:39:10.318981 In SetUpredAvailable: pUid, tUID:  FXHRQGXhQzCH5w5lYf06Mw== FXHRQGXhQzCH5w5lYf06Mw== A#G#:S
Cache: 2020/08/13 06:39:10.318985 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:10.324016 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.000478ms
Unlock: 2020/08/13 06:39:10.324026 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:10.329262 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.713989ms
DB: 2020/08/13 06:39:10.333119 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.336984 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.340352 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.343345 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.348494 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.070667ms
DB: 2020/08/13 06:39:10.353381 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.402266ms
FetchForUpdate: 2020/08/13 06:39:10.353399 ** Cache FetchForUpdate Cache Key Value: [q99m5Tw1ShiMoONHeU6gdw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.353407 +++  Cache FetchItems for sortk A#G#:S UID: [q99m5Tw1ShiMoONHeU6gdw==] 
FetchNode: 2020/08/13 06:39:10.353411  node: q99m5Tw1ShiMoONHeU6gdw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:10.353577 ** Cache FetchForUpdate Cache Key Value: [2g9n9+nnQ0aCJyrrxNZBaQ==]   sortk: A#
fetchItems: 2020/08/13 06:39:10.353586 +++  Cache FetchItems for sortk A# UID: [2g9n9+nnQ0aCJyrrxNZBaQ==] 
FetchNode: 2020/08/13 06:39:10.353598  node: 2g9n9+nnQ0aCJyrrxNZBaQ== subKey: A#
DB: 2020/08/13 06:39:10.356914 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.469111ms
DB: 2020/08/13 06:39:10.358166 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.505018ms
Unlock: 2020/08/13 06:39:10.359368 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:39:10.362319 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.879352ms
DB: 2020/08/13 06:39:10.366999 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.647648ms
DB: 2020/08/13 06:39:10.367020 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.647648ms
DB: 2020/08/13 06:39:10.373160 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.103132ms
DB: 2020/08/13 06:39:10.373180 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.103132ms
DB: 2020/08/13 06:39:10.378636 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.171718ms
DB: 2020/08/13 06:39:10.383684 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.769944ms
Unlock: 2020/08/13 06:39:10.383700 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:10.391303 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.440708ms
DB: 2020/08/13 06:39:10.396201 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.714896ms
DB: 2020/08/13 06:39:10.402191 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.509486ms
DB: 2020/08/13 06:39:10.408744 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.463435ms
DB: 2020/08/13 06:39:10.413602 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.782629ms
DB: 2020/08/13 06:39:10.418645 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.964749ms
DB: 2020/08/13 06:39:10.424860 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.15505ms
DB: 2020/08/13 06:39:10.429573 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.653304ms
DB: 2020/08/13 06:39:10.434833 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.197466ms
DB: 2020/08/13 06:39:10.439660 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.769445ms
FetchForUpdate: 2020/08/13 06:39:10.439671 ** Cache FetchForUpdate Cache Key Value: [q99m5Tw1ShiMoONHeU6gdw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.439677 +++  Cache FetchItems for sortk A#G#:S UID: [q99m5Tw1ShiMoONHeU6gdw==] 
FetchNode: 2020/08/13 06:39:10.439682  node: q99m5Tw1ShiMoONHeU6gdw== subKey: A#G#:S
DB: 2020/08/13 06:39:10.442864 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.150228ms
AttachNode: gr1 2020/08/13 06:39:10.442955 Errored: SetUpredAvailable :for  q99m5Tw1ShiMoONHeU6gdw==
Cache: 2020/08/13 06:39:10.442964 In SetUpredAvailable: pUid, tUID:  q99m5Tw1ShiMoONHeU6gdw== AFPfXrPmRBOuVyan+cmYgQ== A#G#:S
Cache: 2020/08/13 06:39:10.442969 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:10.447746 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.744127ms
Unlock: 2020/08/13 06:39:10.447757 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:10.452851 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.660705ms
DB: 2020/08/13 06:39:10.456624 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.460375 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.466162 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.469254 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:10.474159 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.836653ms
DB: 2020/08/13 06:39:10.478731 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.510819ms
FetchForUpdate: 2020/08/13 06:39:10.478750 ** Cache FetchForUpdate Cache Key Value: [FXHRQGXhQzCH5w5lYf06Mw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.478758 +++  Cache FetchItems for sortk A#G#:S UID: [FXHRQGXhQzCH5w5lYf06Mw==] 
FetchNode: 2020/08/13 06:39:10.478763  node: FXHRQGXhQzCH5w5lYf06Mw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:10.478934 ** Cache FetchForUpdate Cache Key Value: [2g9n9+nnQ0aCJyrrxNZBaQ==]   sortk: A#
fetchItems: 2020/08/13 06:39:10.478946 +++  Cache FetchItems for sortk A# UID: [2g9n9+nnQ0aCJyrrxNZBaQ==] 
FetchNode: 2020/08/13 06:39:10.478959  node: 2g9n9+nnQ0aCJyrrxNZBaQ== subKey: A#
DB: 2020/08/13 06:39:10.481925 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.127613ms
DB: 2020/08/13 06:39:10.483302 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.251566ms
Unlock: 2020/08/13 06:39:10.483992 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:39:10.486963 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.897483ms
DB: 2020/08/13 06:39:10.491698 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.702989ms
DB: 2020/08/13 06:39:10.491725 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.702989ms
DB: 2020/08/13 06:39:10.496557 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.797241ms
DB: 2020/08/13 06:39:10.496580 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.797241ms
DB: 2020/08/13 06:39:10.501669 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.019564ms
DB: 2020/08/13 06:39:10.506734 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.99999ms
Unlock: 2020/08/13 06:39:10.506746 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:10.513081 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.250833ms
DB: 2020/08/13 06:39:10.517995 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.73451ms
DB: 2020/08/13 06:39:10.523453 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.078662ms
DB: 2020/08/13 06:39:10.530397 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.624871ms
DB: 2020/08/13 06:39:10.535486 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.741336ms
DB: 2020/08/13 06:39:10.540607 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.807449ms
DB: 2020/08/13 06:39:10.547192 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.171647ms
DB: 2020/08/13 06:39:10.552128 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.629758ms
DB: 2020/08/13 06:39:10.557285 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.854004ms
DB: 2020/08/13 06:39:10.562374 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.901502ms
FetchForUpdate: 2020/08/13 06:39:10.562386 ** Cache FetchForUpdate Cache Key Value: [FXHRQGXhQzCH5w5lYf06Mw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:10.562392 +++  Cache FetchItems for sortk A#G#:S UID: [FXHRQGXhQzCH5w5lYf06Mw==] 
FetchNode: 2020/08/13 06:39:10.562397  node: FXHRQGXhQzCH5w5lYf06Mw== subKey: A#G#:S
DB: 2020/08/13 06:39:10.565682 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.253078ms
AttachNode: gr1 2020/08/13 06:39:10.565788 Errored: SetUpredAvailable :for  FXHRQGXhQzCH5w5lYf06Mw==
Cache: 2020/08/13 06:39:10.565798 In SetUpredAvailable: pUid, tUID:  FXHRQGXhQzCH5w5lYf06Mw== 4WZ6aLo8SpiP0lZKAY1M0w== A#G#:S
Cache: 2020/08/13 06:39:10.565803 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:10.570705 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.870253ms
Unlock: 2020/08/13 06:39:10.570717 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:10.576030 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.881522ms
rdfLoader: 2020/08/13 06:39:10.576049 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:39:10.576060 Powering down...
rdfuuid: 2020/08/13 06:39:10.576066 Powering down...
DB:2020/08/13 06:39:44 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:39:44.343594 Powering on...
rdfLoader: 2020/08/13 06:39:44.343624 verify started....xx.
rdfLoader: 2020/08/13 06:39:44.343633 saveNode started......
rdfuuid: 2020/08/13 06:39:44.343645 Powering on...
rdfLoader: 2020/08/13 06:39:44.343651 *************** All started 
rdfLoader: 2020/08/13 06:39:44.350931 .  getType..
rdfLoader: 2020/08/13 06:39:44.350949 node.TyName : [Person]
DB: 2020/08/13 06:39:44.421936 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 70.911502ms
verify: 2020/08/13 06:39:44.422093 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:39:44.422102  Send Ask request to limiter.
verify: 2020/08/13 06:39:44.422108 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:39:44.422118 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:39:44.422127 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:39:44.422132 *** Verify running...... 0
rdfLoader: 2020/08/13 06:39:44.422137 .  getType..
rdfLoader: 2020/08/13 06:39:44.422142 node.TyName : [Person]
verify: 2020/08/13 06:39:44.422165 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:39:44.422171  Send Ask request to limiter.
verify: 2020/08/13 06:39:44.422176 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:39:44.422181 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:39:44.422190 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:39:44.422195 *** Verify running...... 1
verify: 2020/08/13 06:39:44.422200 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:39:44.422248 .  getType..
rdfLoader: 2020/08/13 06:39:44.422253 node.TyName : [Person]
verify: 2020/08/13 06:39:44.422273 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:39:44.422279  Send Ask request to limiter.
verify: 2020/08/13 06:39:44.422284 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:39:44.422289 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:39:44.422307 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:39:44.422312 *** Verify running...... 0
rdfLoader: 2020/08/13 06:39:44.422316 .  getType..
rdfLoader: 2020/08/13 06:39:44.422321 node.TyName : [Person]
verify: 2020/08/13 06:39:44.422336 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:39:44.422340  Send Ask request to limiter.
verify: 2020/08/13 06:39:44.422345 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:39:44.422350 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:39:44.422357 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:39:44.422361 *** Verify running...... 1
verify: 2020/08/13 06:39:44.422365 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:39:44.422370 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:39:44.422383 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:39:44.422389 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:39:44.422395 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:39:44.422401 Find Ty Address
rdfLoader: 2020/08/13 06:39:44.422405 Find Ty Age
rdfLoader: 2020/08/13 06:39:44.422412 Find Ty Cars
rdfLoader: 2020/08/13 06:39:44.422418 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:39:44.422423 Find Ty DOB
rdfLoader: 2020/08/13 06:39:44.422428 Find Ty Friends
rdfLoader: 2020/08/13 06:39:44.422433 Find Ty Jobs
rdfLoader: 2020/08/13 06:39:44.422437 Find Ty Name
rdfLoader: 2020/08/13 06:39:44.422442 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:39:44.422446 Find Ty Siblings
rdfLoader: 2020/08/13 06:39:44.422465 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:39:44.422490 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:39:44.422495 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:39:44.422502 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:39:44.422512 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:39:44.422518 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:39:44.422523 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:39:44.422528 Find Ty Address
rdfLoader: 2020/08/13 06:39:44.422533 Find Ty Age
rdfLoader: 2020/08/13 06:39:44.422538 Find Ty Cars
rdfLoader: 2020/08/13 06:39:44.422544 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:39:44.422549 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:39:44.422564 Find Ty DOB
rdfLoader: 2020/08/13 06:39:44.423551 Find Ty Friends
rdfLoader: 2020/08/13 06:39:44.423556 Find Ty Jobs
rdfLoader: 2020/08/13 06:39:44.423560 Find Ty Name
rdfLoader: 2020/08/13 06:39:44.423564 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:39:44.423568 Find Ty Siblings
rdfLoader: 2020/08/13 06:39:44.423594 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:39:44.423625 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:39:44.423634 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:39:44.423641 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:39:44.423652 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:39:44.423657 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:39:44.423662 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:39:44.423666 Find Ty Address
rdfLoader: 2020/08/13 06:39:44.423670 Find Ty Age
rdfLoader: 2020/08/13 06:39:44.423675 Find Ty Cars
rdfLoader: 2020/08/13 06:39:44.423698 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:39:44.423703 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:39:44.423707 Find Ty DOB
rdfLoader: 2020/08/13 06:39:44.423712 Find Ty Friends
rdfLoader: 2020/08/13 06:39:44.423715 Find Ty Jobs
rdfLoader: 2020/08/13 06:39:44.423719 Find Ty Name
rdfLoader: 2020/08/13 06:39:44.423723 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:39:44.423727 Find Ty Siblings
rdfLoader: 2020/08/13 06:39:44.423741 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:39:44.423770 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:39:44.423774 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:39:44.423780 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:39:44.423789 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:39:44.423794 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:39:44.423799 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:39:44.423804 Find Ty Address
rdfLoader: 2020/08/13 06:39:44.423807 Find Ty Age
rdfLoader: 2020/08/13 06:39:44.423812 Find Ty Cars
rdfLoader: 2020/08/13 06:39:44.423816 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:39:44.423821 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:39:44.423825 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:39:44.423829 Find Ty DOB
rdfLoader: 2020/08/13 06:39:44.423833 Find Ty Friends
rdfLoader: 2020/08/13 06:39:44.423837 Find Ty Jobs
rdfLoader: 2020/08/13 06:39:44.423840 Find Ty Name
rdfLoader: 2020/08/13 06:39:44.423860 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:39:44.423865 Find Ty Siblings
rdfLoader: 2020/08/13 06:39:44.423877 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:39:44.423902 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:39:44.423906 Exit  unmarshalRDF. 
verify: 2020/08/13 06:39:44.423912 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:39:44.423938 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.423944 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.423950 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.423956 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.423962 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.423968 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.423974 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:39:44.423978 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:39:44.423989 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0003925a0)}
SaveRDFNode: 2020/08/13 06:39:44.423993 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:39:44.424003 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.424024 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.424030 UID received  : YcDD6s87QjGdMLDrA5ZxVw==
grmgr: 2020/08/13 06:39:44.424264 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:39:44.430357 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.297742ms
DB: 2020/08/13 06:39:44.433728 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.337292ms
DB: 2020/08/13 06:39:44.437001 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.241078ms
DB: 2020/08/13 06:39:44.440406 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.372018ms
DB: 2020/08/13 06:39:44.443927 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.307368ms
SaveRDFNode: 2020/08/13 06:39:44.443942 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003925a0)}
rdfUIDdb: 2020/08/13 06:39:44.443949 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.443953 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.443959 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:44.443972 a: = db.Item{PKey:[]uint8{0x61, 0xc0, 0xc3, 0xea, 0xcf, 0x3b, 0x42, 0x31, 0x9d, 0x30, 0xb0, 0xeb, 0x3, 0x96, 0x71, 0x57}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:44.447856 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.848419ms
SaveRDFNode: 2020/08/13 06:39:44.447868 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003925a0)}
rdfUIDdb: 2020/08/13 06:39:44.447873 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.447877 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.447883 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:44.447893 a: = db.Item{PKey:[]uint8{0x61, 0xc0, 0xc3, 0xea, 0xcf, 0x3b, 0x42, 0x31, 0x9d, 0x30, 0xb0, 0xeb, 0x3, 0x96, 0x71, 0x57}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:44.452439 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.513272ms
SaveRDFNode: 2020/08/13 06:39:44.452449 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:39:44.452458 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.452464 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.452479 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.452485 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.452491 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.452497 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.452507 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:39:44.452511 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:39:44.452517 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000393620)}
SaveRDFNode: 2020/08/13 06:39:44.452521 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:39:44.452585 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.452592 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.452598 UID received  : LWOLHgc+TAONkBTuakoeSg==
DB: 2020/08/13 06:39:44.455915 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.287328ms
DB: 2020/08/13 06:39:44.459263 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.176956ms
DB: 2020/08/13 06:39:44.462688 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.390942ms
DB: 2020/08/13 06:39:44.466049 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.329662ms
DB: 2020/08/13 06:39:44.469544 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.463314ms
SaveRDFNode: 2020/08/13 06:39:44.469557 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000393620)}
rdfUIDdb: 2020/08/13 06:39:44.469562 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.469566 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.469572 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:44.469587 a: = db.Item{PKey:[]uint8{0x2d, 0x63, 0x8b, 0x1e, 0x7, 0x3e, 0x4c, 0x3, 0x8d, 0x90, 0x14, 0xee, 0x6a, 0x4a, 0x1e, 0x4a}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:44.472768 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.101493ms
SaveRDFNode: 2020/08/13 06:39:44.472922 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000393620)}
rdfUIDdb: 2020/08/13 06:39:44.472934 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.472938 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.472944 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:44.472955 a: = db.Item{PKey:[]uint8{0x2d, 0x63, 0x8b, 0x1e, 0x7, 0x3e, 0x4c, 0x3, 0x8d, 0x90, 0x14, 0xee, 0x6a, 0x4a, 0x1e, 0x4a}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:44.476285 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.300466ms
SaveRDFNode: 2020/08/13 06:39:44.476295 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:39:44.476304 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.476310 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.476318 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.476323 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.476329 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.476342 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.476348 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:39:44.476351 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:39:44.476357 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017380)}
SaveRDFNode: 2020/08/13 06:39:44.476396 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:39:44.476407 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.476411 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.476416 UID received  : ymQeIzbbSyu33ZRLfHD5Lw==
DB: 2020/08/13 06:39:44.479812 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.369657ms
DB: 2020/08/13 06:39:44.483001 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.158102ms
DB: 2020/08/13 06:39:44.486300 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.263647ms
DB: 2020/08/13 06:39:44.489596 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.264651ms
DB: 2020/08/13 06:39:44.493185 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.401413ms
SaveRDFNode: 2020/08/13 06:39:44.493199 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017380)}
rdfUIDdb: 2020/08/13 06:39:44.493205 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.493209 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.493215 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:44.493225 a: = db.Item{PKey:[]uint8{0xca, 0x64, 0x1e, 0x23, 0x36, 0xdb, 0x4b, 0x2b, 0xb7, 0xdd, 0x94, 0x4b, 0x7c, 0x70, 0xf9, 0x2f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:44.496789 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.534391ms
SaveRDFNode: 2020/08/13 06:39:44.496803 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017380)}
rdfUIDdb: 2020/08/13 06:39:44.496810 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.496813 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.496819 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:44.496829 a: = db.Item{PKey:[]uint8{0xca, 0x64, 0x1e, 0x23, 0x36, 0xdb, 0x4b, 0x2b, 0xb7, 0xdd, 0x94, 0x4b, 0x7c, 0x70, 0xf9, 0x2f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:44.499894 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.035147ms
SaveRDFNode: 2020/08/13 06:39:44.499904 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:39:44.499913 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.499919 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.499928 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.499934 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.499939 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.499946 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:39:44.499952 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:39:44.499964 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:39:44.499970 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000232660)}
SaveRDFNode: 2020/08/13 06:39:44.499974 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:39:44.500002 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.500007 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.500013 UID received  : 4dMVHRazTD28hadd0Uanag==
DB: 2020/08/13 06:39:44.503192 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.151662ms
DB: 2020/08/13 06:39:44.506644 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.417504ms
DB: 2020/08/13 06:39:44.510047 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.194809ms
DB: 2020/08/13 06:39:44.513141 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.060074ms
DB: 2020/08/13 06:39:44.516419 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.247208ms
SaveRDFNode: 2020/08/13 06:39:44.516434 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000232660)}
rdfUIDdb: 2020/08/13 06:39:44.516441 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.516445 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.516451 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:44.516464 a: = db.Item{PKey:[]uint8{0xe1, 0xd3, 0x15, 0x1d, 0x16, 0xb3, 0x4c, 0x3d, 0xbc, 0x85, 0xa7, 0x5d, 0xd1, 0x46, 0xa7, 0x6a}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:44.519996 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.50287ms
SaveRDFNode: 2020/08/13 06:39:44.520009 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000232660)}
rdfUIDdb: 2020/08/13 06:39:44.520014 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:39:44.520019 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:39:44.520024 Received UID: X18=
SaveRDFNode: 2020/08/13 06:39:44.520037 a: = db.Item{PKey:[]uint8{0xe1, 0xd3, 0x15, 0x1d, 0x16, 0xb3, 0x4c, 0x3d, 0xbc, 0x85, 0xa7, 0x5d, 0xd1, 0x46, 0xa7, 0x6a}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:39:44.523195 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.126675ms
SaveRDFNode: 2020/08/13 06:39:44.523353 Returned.+++++++++++ No error
DB: 2020/08/13 06:39:44.526190 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.528701 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.531289 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.533590 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.537034 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.391092ms
DB: 2020/08/13 06:39:44.543433 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.307685ms
FetchForUpdate: 2020/08/13 06:39:44.543450 ** Cache FetchForUpdate Cache Key Value: [ymQeIzbbSyu33ZRLfHD5Lw==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:39:44.543458  node: ymQeIzbbSyu33ZRLfHD5Lw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:44.543615 ** Cache FetchForUpdate Cache Key Value: [LWOLHgc+TAONkBTuakoeSg==]   sortk: A#
FetchNode: 2020/08/13 06:39:44.543632  node: LWOLHgc+TAONkBTuakoeSg== subKey: A#
DB: 2020/08/13 06:39:44.546920 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.428376ms
FetchForUpdate: 2020/08/13 06:39:44.547000 len(nb): 1
fetchItems: 2020/08/13 06:39:44.547009 +++  Cache FetchItems for sortk A#G#:S UID: [ymQeIzbbSyu33ZRLfHD5Lw==] 
FetchNode: 2020/08/13 06:39:44.547014  node: ymQeIzbbSyu33ZRLfHD5Lw== subKey: A#G#:S
DB: 2020/08/13 06:39:44.550781 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 7.083413ms
FetchForUpdate: 2020/08/13 06:39:44.550912 len(nb): 7
fetchItems: 2020/08/13 06:39:44.550921 +++  Cache FetchItems for sortk A# UID: [LWOLHgc+TAONkBTuakoeSg==] 
FetchNode: 2020/08/13 06:39:44.550925  node: LWOLHgc+TAONkBTuakoeSg== subKey: A#
DB: 2020/08/13 06:39:44.554123 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 7.080118ms
DB: 2020/08/13 06:39:44.558864 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.083433ms
Unlock: 2020/08/13 06:39:44.558875 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:44.568952 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 17.99823ms
Unlock: 2020/08/13 06:39:44.571781 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:39:44.572289 ** Cache FetchForUpdate Cache Key Value: [ymQeIzbbSyu33ZRLfHD5Lw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.572315 +++  Cache FetchItems for sortk A#G#:S UID: [ymQeIzbbSyu33ZRLfHD5Lw==] 
FetchNode: 2020/08/13 06:39:44.572321  node: ymQeIzbbSyu33ZRLfHD5Lw== subKey: A#G#:S
DB: 2020/08/13 06:39:44.588354 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 15.990267ms
DB: 2020/08/13 06:39:44.594929 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.463458ms
DB: 2020/08/13 06:39:44.598479 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.492188ms
DB: 2020/08/13 06:39:44.602445 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.849832ms
DB: 2020/08/13 06:39:44.608763 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.232787ms
DB: 2020/08/13 06:39:44.612697 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.643563ms
DB: 2020/08/13 06:39:44.616971 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.957756ms
DB: 2020/08/13 06:39:44.624083 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.801933ms
DB: 2020/08/13 06:39:44.627969 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.575927ms
DB: 2020/08/13 06:39:44.632345 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.059726ms
Unlock: 2020/08/13 06:39:44.632358 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:39:44.636525 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.696924ms
FetchForUpdate: 2020/08/13 06:39:44.636539 ** Cache FetchForUpdate Cache Key Value: [ymQeIzbbSyu33ZRLfHD5Lw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.636545 +++  Cache FetchItems for sortk A#G#:S UID: [ymQeIzbbSyu33ZRLfHD5Lw==] 
FetchNode: 2020/08/13 06:39:44.636550  node: ymQeIzbbSyu33ZRLfHD5Lw== subKey: A#G#:S
DB: 2020/08/13 06:39:44.639567 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.980888ms
AttachNode: gr1 2020/08/13 06:39:44.639678 Errored: SetUpredAvailable :for  ymQeIzbbSyu33ZRLfHD5Lw==
Cache: 2020/08/13 06:39:44.639688 In SetUpredAvailable: pUid, tUID:  ymQeIzbbSyu33ZRLfHD5Lw== ymQeIzbbSyu33ZRLfHD5Lw== A#G#:S
Cache: 2020/08/13 06:39:44.639692 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:44.643424 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.670077ms
Unlock: 2020/08/13 06:39:44.643438 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:44.653914 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 10.079896ms
DB: 2020/08/13 06:39:44.656552 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.659876 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.663442 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.665983 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.669800 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.767069ms
DB: 2020/08/13 06:39:44.674333 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.218242ms
FetchForUpdate: 2020/08/13 06:39:44.674348 ** Cache FetchForUpdate Cache Key Value: [4dMVHRazTD28hadd0Uanag==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:39:44.674354  node: 4dMVHRazTD28hadd0Uanag== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:44.674540 ** Cache FetchForUpdate Cache Key Value: [LWOLHgc+TAONkBTuakoeSg==]   sortk: A#
fetchItems: 2020/08/13 06:39:44.674549 +++  Cache FetchItems for sortk A# UID: [LWOLHgc+TAONkBTuakoeSg==] 
FetchNode: 2020/08/13 06:39:44.674561  node: LWOLHgc+TAONkBTuakoeSg== subKey: A#
DB: 2020/08/13 06:39:44.678863 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.47488ms
FetchForUpdate: 2020/08/13 06:39:44.678927 len(nb): 1
fetchItems: 2020/08/13 06:39:44.678937 +++  Cache FetchItems for sortk A#G#:S UID: [4dMVHRazTD28hadd0Uanag==] 
FetchNode: 2020/08/13 06:39:44.678942  node: 4dMVHRazTD28hadd0Uanag== subKey: A#G#:S
DB: 2020/08/13 06:39:44.681679 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.70654ms
DB: 2020/08/13 06:39:44.686020 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.028697ms
Unlock: 2020/08/13 06:39:44.686030 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:44.695167 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 20.521665ms
Unlock: 2020/08/13 06:39:44.696427 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:39:44.696790 ** Cache FetchForUpdate Cache Key Value: [4dMVHRazTD28hadd0Uanag==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.696800 +++  Cache FetchItems for sortk A#G#:S UID: [4dMVHRazTD28hadd0Uanag==] 
FetchNode: 2020/08/13 06:39:44.696805  node: 4dMVHRazTD28hadd0Uanag== subKey: A#G#:S
DB: 2020/08/13 06:39:44.700356 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.519238ms
DB: 2020/08/13 06:39:44.707306 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.340903ms
DB: 2020/08/13 06:39:44.711471 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.881279ms
DB: 2020/08/13 06:39:44.715925 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.734892ms
DB: 2020/08/13 06:39:44.722401 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.182522ms
DB: 2020/08/13 06:39:44.726221 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.503703ms
DB: 2020/08/13 06:39:44.730332 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.797003ms
DB: 2020/08/13 06:39:44.736888 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.21894ms
DB: 2020/08/13 06:39:44.748711 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 11.505429ms
DB: 2020/08/13 06:39:44.752745 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.688737ms
Unlock: 2020/08/13 06:39:44.752757 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:39:44.756891 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.695421ms
FetchForUpdate: 2020/08/13 06:39:44.756902 ** Cache FetchForUpdate Cache Key Value: [4dMVHRazTD28hadd0Uanag==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.756909 +++  Cache FetchItems for sortk A#G#:S UID: [4dMVHRazTD28hadd0Uanag==] 
FetchNode: 2020/08/13 06:39:44.756914  node: 4dMVHRazTD28hadd0Uanag== subKey: A#G#:S
DB: 2020/08/13 06:39:44.760888 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.939984ms
AttachNode: gr1 2020/08/13 06:39:44.761002 Errored: SetUpredAvailable :for  4dMVHRazTD28hadd0Uanag==
Cache: 2020/08/13 06:39:44.761011 In SetUpredAvailable: pUid, tUID:  4dMVHRazTD28hadd0Uanag== 4dMVHRazTD28hadd0Uanag== A#G#:S
Cache: 2020/08/13 06:39:44.761016 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:44.764895 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.846138ms
Unlock: 2020/08/13 06:39:44.764910 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:44.773332 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.767136ms
DB: 2020/08/13 06:39:44.776021 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.778590 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.781072 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.783676 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.787343 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.595612ms
DB: 2020/08/13 06:39:44.791530 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.004271ms
FetchForUpdate: 2020/08/13 06:39:44.791544 ** Cache FetchForUpdate Cache Key Value: [LWOLHgc+TAONkBTuakoeSg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.791550 +++  Cache FetchItems for sortk A#G#:S UID: [LWOLHgc+TAONkBTuakoeSg==] 
FetchNode: 2020/08/13 06:39:44.791554  node: LWOLHgc+TAONkBTuakoeSg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:44.791733 ** Cache FetchForUpdate Cache Key Value: [ymQeIzbbSyu33ZRLfHD5Lw==]   sortk: A#
fetchItems: 2020/08/13 06:39:44.791743 +++  Cache FetchItems for sortk A# UID: [ymQeIzbbSyu33ZRLfHD5Lw==] 
FetchNode: 2020/08/13 06:39:44.791766  node: ymQeIzbbSyu33ZRLfHD5Lw== subKey: A#
DB: 2020/08/13 06:39:44.795052 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.209763ms
Unlock: 2020/08/13 06:39:44.796613 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:39:44.797965 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 6.379318ms
DB: 2020/08/13 06:39:44.801783 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.733829ms
Unlock: 2020/08/13 06:39:44.801792 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:39:44.802125 ** Cache FetchForUpdate Cache Key Value: [LWOLHgc+TAONkBTuakoeSg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.802145 +++  Cache FetchItems for sortk A#G#:S UID: [LWOLHgc+TAONkBTuakoeSg==] 
FetchNode: 2020/08/13 06:39:44.802150  node: LWOLHgc+TAONkBTuakoeSg== subKey: A#G#:S
DB: 2020/08/13 06:39:44.804946 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.767032ms
DB: 2020/08/13 06:39:44.811700 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.355595ms
DB: 2020/08/13 06:39:44.815418 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.522747ms
DB: 2020/08/13 06:39:44.819658 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.862372ms
DB: 2020/08/13 06:39:44.825335 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.34374ms
DB: 2020/08/13 06:39:44.829073 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.425752ms
DB: 2020/08/13 06:39:44.833646 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.074164ms
DB: 2020/08/13 06:39:44.840447 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.130436ms
DB: 2020/08/13 06:39:44.844181 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.654382ms
DB: 2020/08/13 06:39:44.848200 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.916803ms
Unlock: 2020/08/13 06:39:44.848214 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:39:44.852636 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.322814ms
FetchForUpdate: 2020/08/13 06:39:44.852656 ** Cache FetchForUpdate Cache Key Value: [LWOLHgc+TAONkBTuakoeSg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.852663 +++  Cache FetchItems for sortk A#G#:S UID: [LWOLHgc+TAONkBTuakoeSg==] 
FetchNode: 2020/08/13 06:39:44.852668  node: LWOLHgc+TAONkBTuakoeSg== subKey: A#G#:S
DB: 2020/08/13 06:39:44.858361 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.652586ms
AttachNode: gr1 2020/08/13 06:39:44.858482 Errored: SetUpredAvailable :for  LWOLHgc+TAONkBTuakoeSg==
Cache: 2020/08/13 06:39:44.858491 In SetUpredAvailable: pUid, tUID:  LWOLHgc+TAONkBTuakoeSg== LWOLHgc+TAONkBTuakoeSg== A#G#:S
Cache: 2020/08/13 06:39:44.858495 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:44.862247 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.709909ms
Unlock: 2020/08/13 06:39:44.862258 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:44.867017 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.076438ms
DB: 2020/08/13 06:39:44.869565 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.872428 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.875530 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.878382 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.882194 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.75643ms
DB: 2020/08/13 06:39:44.886663 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.281656ms
FetchForUpdate: 2020/08/13 06:39:44.886682 ** Cache FetchForUpdate Cache Key Value: [4dMVHRazTD28hadd0Uanag==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.886689 +++  Cache FetchItems for sortk A#G#:S UID: [4dMVHRazTD28hadd0Uanag==] 
FetchNode: 2020/08/13 06:39:44.886704  node: 4dMVHRazTD28hadd0Uanag== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:44.886914 ** Cache FetchForUpdate Cache Key Value: [ymQeIzbbSyu33ZRLfHD5Lw==]   sortk: A#
fetchItems: 2020/08/13 06:39:44.886924 +++  Cache FetchItems for sortk A# UID: [ymQeIzbbSyu33ZRLfHD5Lw==] 
FetchNode: 2020/08/13 06:39:44.886936  node: ymQeIzbbSyu33ZRLfHD5Lw== subKey: A#
DB: 2020/08/13 06:39:44.890073 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.073518ms
Unlock: 2020/08/13 06:39:44.891409 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:39:44.892063 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.301353ms
DB: 2020/08/13 06:39:44.896435 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.832381ms
DB: 2020/08/13 06:39:44.899973 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.506026ms
DB: 2020/08/13 06:39:44.899992 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.506026ms
DB: 2020/08/13 06:39:44.903677 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.654173ms
DB: 2020/08/13 06:39:44.903696 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.654173ms
DB: 2020/08/13 06:39:44.908002 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.938289ms
DB: 2020/08/13 06:39:44.911847 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.685296ms
Unlock: 2020/08/13 06:39:44.911858 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:44.920059 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.23154ms
DB: 2020/08/13 06:39:44.924159 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.738592ms
DB: 2020/08/13 06:39:44.928680 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.842238ms
DB: 2020/08/13 06:39:44.934552 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.358811ms
DB: 2020/08/13 06:39:44.938610 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.450894ms
DB: 2020/08/13 06:39:44.942783 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.093019ms
DB: 2020/08/13 06:39:44.949184 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.224574ms
DB: 2020/08/13 06:39:44.952968 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.487598ms
DB: 2020/08/13 06:39:44.957046 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.719945ms
DB: 2020/08/13 06:39:44.961087 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.658819ms
FetchForUpdate: 2020/08/13 06:39:44.961099 ** Cache FetchForUpdate Cache Key Value: [4dMVHRazTD28hadd0Uanag==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.961105 +++  Cache FetchItems for sortk A#G#:S UID: [4dMVHRazTD28hadd0Uanag==] 
FetchNode: 2020/08/13 06:39:44.961110  node: 4dMVHRazTD28hadd0Uanag== subKey: A#G#:S
DB: 2020/08/13 06:39:44.964112 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.969149ms
AttachNode: gr1 2020/08/13 06:39:44.964212 Errored: SetUpredAvailable :for  4dMVHRazTD28hadd0Uanag==
Cache: 2020/08/13 06:39:44.964220 In SetUpredAvailable: pUid, tUID:  4dMVHRazTD28hadd0Uanag== J6BSKo+iRny6FZFrQrL3yA== A#G#:S
Cache: 2020/08/13 06:39:44.964233 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:44.967893 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.628216ms
Unlock: 2020/08/13 06:39:44.967903 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:44.972313 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.956199ms
DB: 2020/08/13 06:39:44.977056 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.980590 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.984100 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.987474 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:44.991443 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.886817ms
DB: 2020/08/13 06:39:44.995709 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.963877ms
FetchForUpdate: 2020/08/13 06:39:44.995727 ** Cache FetchForUpdate Cache Key Value: [LWOLHgc+TAONkBTuakoeSg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:44.995735 +++  Cache FetchItems for sortk A#G#:S UID: [LWOLHgc+TAONkBTuakoeSg==] 
FetchNode: 2020/08/13 06:39:44.995740  node: LWOLHgc+TAONkBTuakoeSg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:44.996081 ** Cache FetchForUpdate Cache Key Value: [4dMVHRazTD28hadd0Uanag==]   sortk: A#
fetchItems: 2020/08/13 06:39:44.996092 +++  Cache FetchItems for sortk A# UID: [4dMVHRazTD28hadd0Uanag==] 
FetchNode: 2020/08/13 06:39:44.996104  node: 4dMVHRazTD28hadd0Uanag== subKey: A#
DB: 2020/08/13 06:39:44.999637 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.451649ms
Unlock: 2020/08/13 06:39:45.001074 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:39:45.001752 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.980727ms
DB: 2020/08/13 06:39:45.006033 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.783314ms
DB: 2020/08/13 06:39:45.009510 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.436371ms
DB: 2020/08/13 06:39:45.009527 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.436371ms
DB: 2020/08/13 06:39:45.013048 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.484515ms
DB: 2020/08/13 06:39:45.013249 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.484515ms
DB: 2020/08/13 06:39:45.017543 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.970919ms
DB: 2020/08/13 06:39:45.021267 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.659616ms
Unlock: 2020/08/13 06:39:45.021279 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:45.027568 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.192493ms
DB: 2020/08/13 06:39:45.031283 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.609947ms
DB: 2020/08/13 06:39:45.035386 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.938303ms
DB: 2020/08/13 06:39:45.041627 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.145083ms
DB: 2020/08/13 06:39:45.045605 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.83723ms
DB: 2020/08/13 06:39:45.049767 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.826106ms
DB: 2020/08/13 06:39:45.056337 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.05345ms
DB: 2020/08/13 06:39:45.060041 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.38179ms
DB: 2020/08/13 06:39:45.065150 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.771725ms
DB: 2020/08/13 06:39:45.069615 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.852088ms
FetchForUpdate: 2020/08/13 06:39:45.069634 ** Cache FetchForUpdate Cache Key Value: [LWOLHgc+TAONkBTuakoeSg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:45.069642 +++  Cache FetchItems for sortk A#G#:S UID: [LWOLHgc+TAONkBTuakoeSg==] 
FetchNode: 2020/08/13 06:39:45.069646  node: LWOLHgc+TAONkBTuakoeSg== subKey: A#G#:S
DB: 2020/08/13 06:39:45.073636 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.944837ms
AttachNode: gr1 2020/08/13 06:39:45.073753 Errored: SetUpredAvailable :for  LWOLHgc+TAONkBTuakoeSg==
Cache: 2020/08/13 06:39:45.073762 In SetUpredAvailable: pUid, tUID:  LWOLHgc+TAONkBTuakoeSg== OXxI4l79TW6e/tio/OOK9Q== A#G#:S
Cache: 2020/08/13 06:39:45.073766 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:45.077749 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.931841ms
Unlock: 2020/08/13 06:39:45.077770 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:45.082728 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.826189ms
DB: 2020/08/13 06:39:45.085669 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:45.089186 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:45.093531 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:45.096838 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:39:45.100741 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.835745ms
DB: 2020/08/13 06:39:45.104640 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.825475ms
FetchForUpdate: 2020/08/13 06:39:45.104657 ** Cache FetchForUpdate Cache Key Value: [ymQeIzbbSyu33ZRLfHD5Lw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:45.104664 +++  Cache FetchItems for sortk A#G#:S UID: [ymQeIzbbSyu33ZRLfHD5Lw==] 
FetchNode: 2020/08/13 06:39:45.104669  node: ymQeIzbbSyu33ZRLfHD5Lw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:39:45.104878 ** Cache FetchForUpdate Cache Key Value: [4dMVHRazTD28hadd0Uanag==]   sortk: A#
fetchItems: 2020/08/13 06:39:45.104887 +++  Cache FetchItems for sortk A# UID: [4dMVHRazTD28hadd0Uanag==] 
FetchNode: 2020/08/13 06:39:45.104899  node: 4dMVHRazTD28hadd0Uanag== subKey: A#
DB: 2020/08/13 06:39:45.107520 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.785807ms
DB: 2020/08/13 06:39:45.108858 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.899138ms
Unlock: 2020/08/13 06:39:45.109578 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:39:45.111724 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.819795ms
DB: 2020/08/13 06:39:45.115430 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.669565ms
DB: 2020/08/13 06:39:45.115463 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.669565ms
DB: 2020/08/13 06:39:45.119222 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.719027ms
DB: 2020/08/13 06:39:45.119241 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.719027ms
DB: 2020/08/13 06:39:45.124754 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.053165ms
DB: 2020/08/13 06:39:45.128892 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.057359ms
Unlock: 2020/08/13 06:39:45.128905 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:39:45.135696 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.671473ms
DB: 2020/08/13 06:39:45.139519 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.756523ms
DB: 2020/08/13 06:39:45.143663 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.759199ms
DB: 2020/08/13 06:39:45.150097 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.131073ms
DB: 2020/08/13 06:39:45.154026 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.610765ms
DB: 2020/08/13 06:39:45.158114 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.751055ms
DB: 2020/08/13 06:39:45.164540 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.113081ms
DB: 2020/08/13 06:39:45.168349 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.494894ms
DB: 2020/08/13 06:39:45.173230 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.360954ms
DB: 2020/08/13 06:39:45.177390 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.72275ms
FetchForUpdate: 2020/08/13 06:39:45.177402 ** Cache FetchForUpdate Cache Key Value: [ymQeIzbbSyu33ZRLfHD5Lw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:39:45.177408 +++  Cache FetchItems for sortk A#G#:S UID: [ymQeIzbbSyu33ZRLfHD5Lw==] 
FetchNode: 2020/08/13 06:39:45.177413  node: ymQeIzbbSyu33ZRLfHD5Lw== subKey: A#G#:S
DB: 2020/08/13 06:39:45.180449 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.001453ms
AttachNode: gr1 2020/08/13 06:39:45.180529 Errored: SetUpredAvailable :for  ymQeIzbbSyu33ZRLfHD5Lw==
Cache: 2020/08/13 06:39:45.180536 In SetUpredAvailable: pUid, tUID:  ymQeIzbbSyu33ZRLfHD5Lw== BfpXf/cNSJuHc4ifWs1AOA== A#G#:S
Cache: 2020/08/13 06:39:45.180540 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:39:45.184370 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.798739ms
Unlock: 2020/08/13 06:39:45.184380 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:39:45.188835 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.377268ms
rdfLoader: 2020/08/13 06:39:45.188850 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:39:45.188861 Powering down...
rdfuuid: 2020/08/13 06:39:45.188868 Powering down...
DB:2020/08/13 06:41:37 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:41:37.511708 Powering on...
rdfLoader: 2020/08/13 06:41:37.511738 verify started....xx.
rdfLoader: 2020/08/13 06:41:37.511746 saveNode started......
rdfuuid: 2020/08/13 06:41:37.511758 Powering on...
rdfLoader: 2020/08/13 06:41:37.511777 *************** All started 
rdfLoader: 2020/08/13 06:41:37.518559 .  getType..
rdfLoader: 2020/08/13 06:41:37.518576 node.TyName : [Person]
DB: 2020/08/13 06:41:37.593171 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 74.540738ms
verify: 2020/08/13 06:41:37.593327 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:41:37.593335  Send Ask request to limiter.
verify: 2020/08/13 06:41:37.593341 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:41:37.593350 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:41:37.593357 ACK from gcmgr....received...
verify: 2020/08/13 06:41:37.593364 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:41:37.593368 *** Verify running...... 0
rdfLoader: 2020/08/13 06:41:37.593373 .  getType..
rdfLoader: 2020/08/13 06:41:37.593378 node.TyName : [Person]
verify: 2020/08/13 06:41:37.593401 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:41:37.593406  Send Ask request to limiter.
verify: 2020/08/13 06:41:37.593411 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:41:37.593416 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:41:37.593421 ACK from gcmgr....received...
verify: 2020/08/13 06:41:37.593428 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:41:37.593433 *** Verify running...... 1
verify: 2020/08/13 06:41:37.593438 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:41:37.593487 .  getType..
rdfLoader: 2020/08/13 06:41:37.593492 node.TyName : [Person]
verify: 2020/08/13 06:41:37.593515 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:41:37.593521  Send Ask request to limiter.
verify: 2020/08/13 06:41:37.593525 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:41:37.593532 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:41:37.593537 ACK from gcmgr....received...
verify: 2020/08/13 06:41:37.593543 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:41:37.593547 *** Verify running...... 0
rdfLoader: 2020/08/13 06:41:37.593552 .  getType..
rdfLoader: 2020/08/13 06:41:37.593556 node.TyName : [Person]
verify: 2020/08/13 06:41:37.593571 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:41:37.593585  Send Ask request to limiter.
verify: 2020/08/13 06:41:37.593590 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:41:37.593595 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:41:37.593600 ACK from gcmgr....received...
verify: 2020/08/13 06:41:37.593606 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:41:37.593610 *** Verify running...... 1
verify: 2020/08/13 06:41:37.593614 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:41:37.593619 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:41:37.593633 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:41:37.593639 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:41:37.593645 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:41:37.593650 Find Ty Address
rdfLoader: 2020/08/13 06:41:37.593655 Find Ty Age
rdfLoader: 2020/08/13 06:41:37.593662 Find Ty Cars
rdfLoader: 2020/08/13 06:41:37.593668 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:41:37.593673 Find Ty DOB
rdfLoader: 2020/08/13 06:41:37.593678 Find Ty Friends
rdfLoader: 2020/08/13 06:41:37.593683 Find Ty Jobs
rdfLoader: 2020/08/13 06:41:37.593687 Find Ty Name
rdfLoader: 2020/08/13 06:41:37.593692 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:41:37.593697 Find Ty Siblings
rdfLoader: 2020/08/13 06:41:37.593716 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:41:37.593742 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:41:37.593761 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:41:37.593769 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:41:37.593780 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:41:37.593786 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:41:37.593791 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:41:37.593796 Find Ty Address
rdfLoader: 2020/08/13 06:41:37.593801 Find Ty Age
rdfLoader: 2020/08/13 06:41:37.593806 Find Ty Cars
rdfLoader: 2020/08/13 06:41:37.593811 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:41:37.593816 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:41:37.593821 Find Ty DOB
rdfLoader: 2020/08/13 06:41:37.593826 Find Ty Friends
rdfLoader: 2020/08/13 06:41:37.593830 Find Ty Jobs
rdfLoader: 2020/08/13 06:41:37.593835 Find Ty Name
rdfLoader: 2020/08/13 06:41:37.593840 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:41:37.593845 Find Ty Siblings
rdfLoader: 2020/08/13 06:41:37.593858 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:41:37.593885 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:41:37.593895 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:41:37.593901 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:41:37.594915 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:41:37.594933 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:41:37.594939 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:41:37.594944 Find Ty Address
rdfLoader: 2020/08/13 06:41:37.594948 Find Ty Age
rdfLoader: 2020/08/13 06:41:37.594953 Find Ty Cars
rdfLoader: 2020/08/13 06:41:37.594958 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:41:37.594963 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:41:37.594967 Find Ty DOB
rdfLoader: 2020/08/13 06:41:37.594971 Find Ty Friends
rdfLoader: 2020/08/13 06:41:37.594975 Find Ty Jobs
rdfLoader: 2020/08/13 06:41:37.594979 Find Ty Name
rdfLoader: 2020/08/13 06:41:37.594983 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:41:37.594987 Find Ty Siblings
rdfLoader: 2020/08/13 06:41:37.595019 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:41:37.595050 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:41:37.595054 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:41:37.595060 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:41:37.595066 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:41:37.595071 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:41:37.595075 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:41:37.595079 Find Ty Address
rdfLoader: 2020/08/13 06:41:37.595083 Find Ty Age
rdfLoader: 2020/08/13 06:41:37.595088 Find Ty Cars
rdfLoader: 2020/08/13 06:41:37.595092 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:41:37.595096 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:41:37.595101 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:41:37.595104 Find Ty DOB
rdfLoader: 2020/08/13 06:41:37.595109 Find Ty Friends
rdfLoader: 2020/08/13 06:41:37.595112 Find Ty Jobs
rdfLoader: 2020/08/13 06:41:37.595116 Find Ty Name
rdfLoader: 2020/08/13 06:41:37.595120 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:41:37.595124 Find Ty Siblings
rdfLoader: 2020/08/13 06:41:37.595136 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:41:37.595161 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:41:37.595191 Exit  unmarshalRDF. 
verify: 2020/08/13 06:41:37.595197 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:41:37.595203 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.595209 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.595216 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.595227 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.595233 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.595239 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.595245 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:41:37.595249 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:41:37.595260 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0003905a0)}
SaveRDFNode: 2020/08/13 06:41:37.595264 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:41:37.595274 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.595278 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.595284 UID received  : iNG1xtR0QSaAibhNLXjUyA==
grmgr: 2020/08/13 06:41:37.595525 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:41:37.604717 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 9.399522ms
DB: 2020/08/13 06:41:37.609705 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.95069ms
DB: 2020/08/13 06:41:37.615392 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.650042ms
DB: 2020/08/13 06:41:37.620073 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.633386ms
DB: 2020/08/13 06:41:37.624833 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.713641ms
SaveRDFNode: 2020/08/13 06:41:37.624851 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003905a0)}
rdfUIDdb: 2020/08/13 06:41:37.624858 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.624863 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.624869 Received UID: X18=
SaveRDFNode: 2020/08/13 06:41:37.624883 a: = db.Item{PKey:[]uint8{0x88, 0xd1, 0xb5, 0xc6, 0xd4, 0x74, 0x41, 0x26, 0x80, 0x89, 0xb8, 0x4d, 0x2d, 0x78, 0xd4, 0xc8}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:41:37.629618 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.701872ms
SaveRDFNode: 2020/08/13 06:41:37.629632 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003905a0)}
rdfUIDdb: 2020/08/13 06:41:37.629637 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.629642 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.629647 Received UID: X18=
SaveRDFNode: 2020/08/13 06:41:37.629658 a: = db.Item{PKey:[]uint8{0x88, 0xd1, 0xb5, 0xc6, 0xd4, 0x74, 0x41, 0x26, 0x80, 0x89, 0xb8, 0x4d, 0x2d, 0x78, 0xd4, 0xc8}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:41:37.634584 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.890963ms
SaveRDFNode: 2020/08/13 06:41:37.634599 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:41:37.634609 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.634617 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.634624 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.634632 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.634638 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.634656 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.634676 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:41:37.634865 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:41:37.634873 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000391620)}
SaveRDFNode: 2020/08/13 06:41:37.634878 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:41:37.634899 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.634903 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.634908 UID received  : 38b9/PpMQ02uei9POF46EQ==
DB: 2020/08/13 06:41:37.639635 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.696638ms
DB: 2020/08/13 06:41:37.644394 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.727401ms
DB: 2020/08/13 06:41:37.649292 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.85539ms
DB: 2020/08/13 06:41:37.654119 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.795478ms
DB: 2020/08/13 06:41:37.659112 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.804941ms
SaveRDFNode: 2020/08/13 06:41:37.659128 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000391620)}
rdfUIDdb: 2020/08/13 06:41:37.659135 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.659139 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.659146 Received UID: X18=
SaveRDFNode: 2020/08/13 06:41:37.659160 a: = db.Item{PKey:[]uint8{0xdf, 0xc6, 0xfd, 0xfc, 0xfa, 0x4c, 0x43, 0x4d, 0xae, 0x7a, 0x2f, 0x4f, 0x38, 0x5e, 0x3a, 0x11}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:41:37.664010 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.815115ms
SaveRDFNode: 2020/08/13 06:41:37.664027 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000391620)}
rdfUIDdb: 2020/08/13 06:41:37.664033 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.664037 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.664043 Received UID: X18=
SaveRDFNode: 2020/08/13 06:41:37.664054 a: = db.Item{PKey:[]uint8{0xdf, 0xc6, 0xfd, 0xfc, 0xfa, 0x4c, 0x43, 0x4d, 0xae, 0x7a, 0x2f, 0x4f, 0x38, 0x5e, 0x3a, 0x11}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:41:37.669285 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.191982ms
SaveRDFNode: 2020/08/13 06:41:37.669306 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:41:37.669561 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.669725 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.669739 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.669746 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.669752 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.669758 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.669764 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:41:37.669768 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:41:37.669784 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017380)}
SaveRDFNode: 2020/08/13 06:41:37.669789 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:41:37.669801 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.669805 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.669811 UID received  : 65OnDjUFQ1aUvrZWJcGSpQ==
DB: 2020/08/13 06:41:37.674694 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.84694ms
DB: 2020/08/13 06:41:37.680750 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.013912ms
DB: 2020/08/13 06:41:37.685756 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.960548ms
DB: 2020/08/13 06:41:37.690696 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.738075ms
DB: 2020/08/13 06:41:37.695938 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.202986ms
SaveRDFNode: 2020/08/13 06:41:37.695954 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017380)}
rdfUIDdb: 2020/08/13 06:41:37.695961 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.695965 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.695971 Received UID: X18=
SaveRDFNode: 2020/08/13 06:41:37.695983 a: = db.Item{PKey:[]uint8{0xeb, 0x93, 0xa7, 0xe, 0x35, 0x5, 0x43, 0x56, 0x94, 0xbe, 0xb6, 0x56, 0x25, 0xc1, 0x92, 0xa5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:41:37.701275 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.258085ms
SaveRDFNode: 2020/08/13 06:41:37.701462 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017380)}
rdfUIDdb: 2020/08/13 06:41:37.701477 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.701482 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.701488 Received UID: X18=
SaveRDFNode: 2020/08/13 06:41:37.701501 a: = db.Item{PKey:[]uint8{0xeb, 0x93, 0xa7, 0xe, 0x35, 0x5, 0x43, 0x56, 0x94, 0xbe, 0xb6, 0x56, 0x25, 0xc1, 0x92, 0xa5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:41:37.759502 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 57.960079ms
SaveRDFNode: 2020/08/13 06:41:37.759756 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:41:37.759786 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.759794 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.759803 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.759809 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.759815 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.759821 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:41:37.759827 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:41:37.759831 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:41:37.759838 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc00022a660)}
SaveRDFNode: 2020/08/13 06:41:37.759842 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:41:37.759853 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.759857 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.759872 UID received  : HmA5CHhVQte5uUpXAqYVOA==
DB: 2020/08/13 06:41:37.767619 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.690803ms
DB: 2020/08/13 06:41:37.772773 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.086939ms
DB: 2020/08/13 06:41:37.778760 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.908144ms
DB: 2020/08/13 06:41:37.784625 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.807345ms
DB: 2020/08/13 06:41:37.790546 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.876852ms
SaveRDFNode: 2020/08/13 06:41:37.790562 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00022a660)}
rdfUIDdb: 2020/08/13 06:41:37.790569 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.790573 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.790579 Received UID: X18=
SaveRDFNode: 2020/08/13 06:41:37.790592 a: = db.Item{PKey:[]uint8{0x1e, 0x60, 0x39, 0x8, 0x78, 0x55, 0x42, 0xd7, 0xb9, 0xb9, 0x4a, 0x57, 0x2, 0xa6, 0x15, 0x38}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:41:37.795914 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.278812ms
SaveRDFNode: 2020/08/13 06:41:37.795934 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00022a660)}
rdfUIDdb: 2020/08/13 06:41:37.795942 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:41:37.795947 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:41:37.795954 Received UID: X18=
SaveRDFNode: 2020/08/13 06:41:37.795967 a: = db.Item{PKey:[]uint8{0x1e, 0x60, 0x39, 0x8, 0x78, 0x55, 0x42, 0xd7, 0xb9, 0xb9, 0x4a, 0x57, 0x2, 0xa6, 0x15, 0x38}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:41:37.801807 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.64328ms
SaveRDFNode: 2020/08/13 06:41:37.801819 Returned.+++++++++++ No error
DB: 2020/08/13 06:41:37.805228 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:37.810507 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:37.814375 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:37.818823 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:37.824830 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.935133ms
DB: 2020/08/13 06:41:37.833704 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 8.798864ms
FetchForUpdate: 2020/08/13 06:41:37.833726 ** Cache FetchForUpdate Cache Key Value: [65OnDjUFQ1aUvrZWJcGSpQ==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:41:37.833735  node: 65OnDjUFQ1aUvrZWJcGSpQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:41:37.833938 ** Cache FetchForUpdate Cache Key Value: [38b9/PpMQ02uei9POF46EQ==]   sortk: A#
FetchNode: 2020/08/13 06:41:37.833957  node: 38b9/PpMQ02uei9POF46EQ== subKey: A#
DB: 2020/08/13 06:41:37.836771 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.987903ms
FetchForUpdate: 2020/08/13 06:41:37.836851 len(nb): 1
fetchItems: 2020/08/13 06:41:37.836861 +++  Cache FetchItems for sortk A#G#:S UID: [65OnDjUFQ1aUvrZWJcGSpQ==] 
FetchNode: 2020/08/13 06:41:37.836866  node: 65OnDjUFQ1aUvrZWJcGSpQ== subKey: A#G#:S
DB: 2020/08/13 06:41:37.841071 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 7.024227ms
FetchForUpdate: 2020/08/13 06:41:37.841195 len(nb): 7
fetchItems: 2020/08/13 06:41:37.841214 +++  Cache FetchItems for sortk A# UID: [38b9/PpMQ02uei9POF46EQ==] 
FetchNode: 2020/08/13 06:41:37.841218  node: 38b9/PpMQ02uei9POF46EQ== subKey: A#
DB: 2020/08/13 06:41:37.844416 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 7.520054ms
DB: 2020/08/13 06:41:37.850772 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.584109ms
Unlock: 2020/08/13 06:41:37.850973 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:41:37.863047 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 21.791055ms
Unlock: 2020/08/13 06:41:37.866426 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:41:37.867132 ** Cache FetchForUpdate Cache Key Value: [65OnDjUFQ1aUvrZWJcGSpQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:37.867145 +++  Cache FetchItems for sortk A#G#:S UID: [65OnDjUFQ1aUvrZWJcGSpQ==] 
FetchNode: 2020/08/13 06:41:37.867179  node: 65OnDjUFQ1aUvrZWJcGSpQ== subKey: A#G#:S
DB: 2020/08/13 06:41:37.871271 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.049411ms
DB: 2020/08/13 06:41:37.878081 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.455803ms
DB: 2020/08/13 06:41:37.883480 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.726446ms
DB: 2020/08/13 06:41:37.889512 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.197861ms
DB: 2020/08/13 06:41:37.896702 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.618099ms
DB: 2020/08/13 06:41:37.902656 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.126874ms
DB: 2020/08/13 06:41:37.909950 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.223886ms
DB: 2020/08/13 06:41:37.916530 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.517132ms
DB: 2020/08/13 06:41:37.921728 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.972243ms
DB: 2020/08/13 06:41:37.927429 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.361698ms
Unlock: 2020/08/13 06:41:37.927443 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:41:37.932660 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.140297ms
FetchForUpdate: 2020/08/13 06:41:37.932673 ** Cache FetchForUpdate Cache Key Value: [65OnDjUFQ1aUvrZWJcGSpQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:37.932679 +++  Cache FetchItems for sortk A#G#:S UID: [65OnDjUFQ1aUvrZWJcGSpQ==] 
FetchNode: 2020/08/13 06:41:37.932684  node: 65OnDjUFQ1aUvrZWJcGSpQ== subKey: A#G#:S
DB: 2020/08/13 06:41:37.935927 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.208007ms
AttachNode: gr1 2020/08/13 06:41:37.936055 Errored: SetUpredAvailable :for  65OnDjUFQ1aUvrZWJcGSpQ==
Cache: 2020/08/13 06:41:37.936063 In SetUpredAvailable: pUid, tUID:  65OnDjUFQ1aUvrZWJcGSpQ== 65OnDjUFQ1aUvrZWJcGSpQ== A#G#:S
Cache: 2020/08/13 06:41:37.936068 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:41:37.941328 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.219851ms
Unlock: 2020/08/13 06:41:37.941344 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:41:37.946893 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.142826ms
DB: 2020/08/13 06:41:37.967618 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:37.970696 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:37.974666 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:37.978049 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:37.983606 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.482124ms
DB: 2020/08/13 06:41:37.988517 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.687889ms
FetchForUpdate: 2020/08/13 06:41:37.988545 ** Cache FetchForUpdate Cache Key Value: [HmA5CHhVQte5uUpXAqYVOA==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:41:37.988552  node: HmA5CHhVQte5uUpXAqYVOA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:41:37.988722 ** Cache FetchForUpdate Cache Key Value: [38b9/PpMQ02uei9POF46EQ==]   sortk: A#
fetchItems: 2020/08/13 06:41:37.988732 +++  Cache FetchItems for sortk A# UID: [38b9/PpMQ02uei9POF46EQ==] 
FetchNode: 2020/08/13 06:41:37.988744  node: 38b9/PpMQ02uei9POF46EQ== subKey: A#
DB: 2020/08/13 06:41:37.991789 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.193505ms
FetchForUpdate: 2020/08/13 06:41:37.991846 len(nb): 1
fetchItems: 2020/08/13 06:41:37.991855 +++  Cache FetchItems for sortk A#G#:S UID: [HmA5CHhVQte5uUpXAqYVOA==] 
FetchNode: 2020/08/13 06:41:37.991859  node: HmA5CHhVQte5uUpXAqYVOA== subKey: A#G#:S
DB: 2020/08/13 06:41:37.996027 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.137718ms
DB: 2020/08/13 06:41:38.001528 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.23659ms
Unlock: 2020/08/13 06:41:38.001545 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:41:38.004803 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 16.015269ms
Unlock: 2020/08/13 06:41:38.005364 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:41:38.005715 ** Cache FetchForUpdate Cache Key Value: [HmA5CHhVQte5uUpXAqYVOA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.005725 +++  Cache FetchItems for sortk A#G#:S UID: [HmA5CHhVQte5uUpXAqYVOA==] 
FetchNode: 2020/08/13 06:41:38.005730  node: HmA5CHhVQte5uUpXAqYVOA== subKey: A#G#:S
DB: 2020/08/13 06:41:38.009949 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.182896ms
DB: 2020/08/13 06:41:38.018167 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.847128ms
DB: 2020/08/13 06:41:38.024297 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.921587ms
DB: 2020/08/13 06:41:38.030766 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.046894ms
DB: 2020/08/13 06:41:38.037487 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.4077ms
DB: 2020/08/13 06:41:38.042747 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.941745ms
DB: 2020/08/13 06:41:38.048337 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.268414ms
DB: 2020/08/13 06:41:38.055097 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.445214ms
DB: 2020/08/13 06:41:38.060188 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.785335ms
DB: 2020/08/13 06:41:38.065825 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.322303ms
Unlock: 2020/08/13 06:41:38.065861 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:41:38.071312 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.999577ms
FetchForUpdate: 2020/08/13 06:41:38.071329 ** Cache FetchForUpdate Cache Key Value: [HmA5CHhVQte5uUpXAqYVOA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.071337 +++  Cache FetchItems for sortk A#G#:S UID: [HmA5CHhVQte5uUpXAqYVOA==] 
FetchNode: 2020/08/13 06:41:38.071342  node: HmA5CHhVQte5uUpXAqYVOA== subKey: A#G#:S
DB: 2020/08/13 06:41:38.075351 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.972455ms
AttachNode: gr1 2020/08/13 06:41:38.075440 Errored: SetUpredAvailable :for  HmA5CHhVQte5uUpXAqYVOA==
Cache: 2020/08/13 06:41:38.075448 In SetUpredAvailable: pUid, tUID:  HmA5CHhVQte5uUpXAqYVOA== HmA5CHhVQte5uUpXAqYVOA== A#G#:S
Cache: 2020/08/13 06:41:38.075452 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:41:38.080745 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.259257ms
Unlock: 2020/08/13 06:41:38.080755 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:41:38.090526 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 9.684592ms
DB: 2020/08/13 06:41:38.094011 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.098263 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.101856 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.105687 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.110756 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.010201ms
DB: 2020/08/13 06:41:38.115699 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.723906ms
FetchForUpdate: 2020/08/13 06:41:38.115718 ** Cache FetchForUpdate Cache Key Value: [38b9/PpMQ02uei9POF46EQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.115724 +++  Cache FetchItems for sortk A#G#:S UID: [38b9/PpMQ02uei9POF46EQ==] 
FetchNode: 2020/08/13 06:41:38.115729  node: 38b9/PpMQ02uei9POF46EQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:41:38.115929 ** Cache FetchForUpdate Cache Key Value: [65OnDjUFQ1aUvrZWJcGSpQ==]   sortk: A#
fetchItems: 2020/08/13 06:41:38.115955 +++  Cache FetchItems for sortk A# UID: [65OnDjUFQ1aUvrZWJcGSpQ==] 
FetchNode: 2020/08/13 06:41:38.115969  node: 65OnDjUFQ1aUvrZWJcGSpQ== subKey: A#
DB: 2020/08/13 06:41:38.119920 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.87779ms
Unlock: 2020/08/13 06:41:38.120643 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:41:38.121217 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.441809ms
DB: 2020/08/13 06:41:38.126901 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.394021ms
Unlock: 2020/08/13 06:41:38.126918 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:41:38.127482 ** Cache FetchForUpdate Cache Key Value: [38b9/PpMQ02uei9POF46EQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.127494 +++  Cache FetchItems for sortk A#G#:S UID: [38b9/PpMQ02uei9POF46EQ==] 
FetchNode: 2020/08/13 06:41:38.127500  node: 38b9/PpMQ02uei9POF46EQ== subKey: A#G#:S
DB: 2020/08/13 06:41:38.130600 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.064777ms
DB: 2020/08/13 06:41:38.137184 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.489261ms
DB: 2020/08/13 06:41:38.142266 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.009533ms
DB: 2020/08/13 06:41:38.147627 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.25818ms
DB: 2020/08/13 06:41:38.154603 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.680403ms
DB: 2020/08/13 06:41:38.159936 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.017949ms
DB: 2020/08/13 06:41:38.165469 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.227621ms
DB: 2020/08/13 06:41:38.172355 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.54698ms
DB: 2020/08/13 06:41:38.177590 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.881909ms
DB: 2020/08/13 06:41:38.184043 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.122749ms
Unlock: 2020/08/13 06:41:38.184065 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:41:38.189621 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.00844ms
FetchForUpdate: 2020/08/13 06:41:38.189635 ** Cache FetchForUpdate Cache Key Value: [38b9/PpMQ02uei9POF46EQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.189641 +++  Cache FetchItems for sortk A#G#:S UID: [38b9/PpMQ02uei9POF46EQ==] 
FetchNode: 2020/08/13 06:41:38.189645  node: 38b9/PpMQ02uei9POF46EQ== subKey: A#G#:S
DB: 2020/08/13 06:41:38.192940 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.250674ms
AttachNode: gr1 2020/08/13 06:41:38.193052 Errored: SetUpredAvailable :for  38b9/PpMQ02uei9POF46EQ==
Cache: 2020/08/13 06:41:38.193060 In SetUpredAvailable: pUid, tUID:  38b9/PpMQ02uei9POF46EQ== 38b9/PpMQ02uei9POF46EQ== A#G#:S
Cache: 2020/08/13 06:41:38.193065 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:41:38.198638 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.539212ms
Unlock: 2020/08/13 06:41:38.198661 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:41:38.204456 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.18228ms
DB: 2020/08/13 06:41:38.211922 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.216734 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.220692 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.224522 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.229799 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.220501ms
DB: 2020/08/13 06:41:38.234841 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.844424ms
FetchForUpdate: 2020/08/13 06:41:38.234858 ** Cache FetchForUpdate Cache Key Value: [HmA5CHhVQte5uUpXAqYVOA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.234865 +++  Cache FetchItems for sortk A#G#:S UID: [HmA5CHhVQte5uUpXAqYVOA==] 
FetchNode: 2020/08/13 06:41:38.234870  node: HmA5CHhVQte5uUpXAqYVOA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:41:38.235080 ** Cache FetchForUpdate Cache Key Value: [65OnDjUFQ1aUvrZWJcGSpQ==]   sortk: A#
fetchItems: 2020/08/13 06:41:38.235107 +++  Cache FetchItems for sortk A# UID: [65OnDjUFQ1aUvrZWJcGSpQ==] 
FetchNode: 2020/08/13 06:41:38.235119  node: 65OnDjUFQ1aUvrZWJcGSpQ== subKey: A#
DB: 2020/08/13 06:41:38.238679 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.4966ms
Unlock: 2020/08/13 06:41:38.239432 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:41:38.240062 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.157726ms
DB: 2020/08/13 06:41:38.245978 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.496626ms
DB: 2020/08/13 06:41:38.251028 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.015345ms
DB: 2020/08/13 06:41:38.251044 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.015345ms
DB: 2020/08/13 06:41:38.256346 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.267882ms
DB: 2020/08/13 06:41:38.256370 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.267882ms
DB: 2020/08/13 06:41:38.262605 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.803984ms
DB: 2020/08/13 06:41:38.268631 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.835554ms
Unlock: 2020/08/13 06:41:38.268646 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:41:38.275959 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.693224ms
DB: 2020/08/13 06:41:38.281156 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.993084ms
DB: 2020/08/13 06:41:38.286833 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.287894ms
DB: 2020/08/13 06:41:38.294040 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.886017ms
DB: 2020/08/13 06:41:38.299324 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.955068ms
DB: 2020/08/13 06:41:38.304759 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.067052ms
DB: 2020/08/13 06:41:38.312022 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.75581ms
DB: 2020/08/13 06:41:38.317573 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.940026ms
DB: 2020/08/13 06:41:38.323246 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.135993ms
DB: 2020/08/13 06:41:38.328399 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.966984ms
FetchForUpdate: 2020/08/13 06:41:38.328414 ** Cache FetchForUpdate Cache Key Value: [HmA5CHhVQte5uUpXAqYVOA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.328421 +++  Cache FetchItems for sortk A#G#:S UID: [HmA5CHhVQte5uUpXAqYVOA==] 
FetchNode: 2020/08/13 06:41:38.328427  node: HmA5CHhVQte5uUpXAqYVOA== subKey: A#G#:S
DB: 2020/08/13 06:41:38.331719 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.258598ms
AttachNode: gr1 2020/08/13 06:41:38.331824 Errored: SetUpredAvailable :for  HmA5CHhVQte5uUpXAqYVOA==
Cache: 2020/08/13 06:41:38.331832 In SetUpredAvailable: pUid, tUID:  HmA5CHhVQte5uUpXAqYVOA== kcFPJazpRPKpC5QHVws+yA== A#G#:S
Cache: 2020/08/13 06:41:38.331837 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:41:38.336992 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.123035ms
Unlock: 2020/08/13 06:41:38.337001 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:41:38.342170 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.798337ms
DB: 2020/08/13 06:41:38.346088 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.349728 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.353945 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.357341 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.362522 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.101488ms
DB: 2020/08/13 06:41:38.367652 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.669649ms
FetchForUpdate: 2020/08/13 06:41:38.367668 ** Cache FetchForUpdate Cache Key Value: [38b9/PpMQ02uei9POF46EQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.367674 +++  Cache FetchItems for sortk A#G#:S UID: [38b9/PpMQ02uei9POF46EQ==] 
FetchNode: 2020/08/13 06:41:38.367679  node: 38b9/PpMQ02uei9POF46EQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:41:38.367845 ** Cache FetchForUpdate Cache Key Value: [HmA5CHhVQte5uUpXAqYVOA==]   sortk: A#
fetchItems: 2020/08/13 06:41:38.367855 +++  Cache FetchItems for sortk A# UID: [HmA5CHhVQte5uUpXAqYVOA==] 
FetchNode: 2020/08/13 06:41:38.367867  node: HmA5CHhVQte5uUpXAqYVOA== subKey: A#
DB: 2020/08/13 06:41:38.372302 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.373668ms
Unlock: 2020/08/13 06:41:38.373044 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:41:38.373693 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.980917ms
DB: 2020/08/13 06:41:38.380536 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.491061ms
DB: 2020/08/13 06:41:38.385664 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.071278ms
DB: 2020/08/13 06:41:38.385688 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.071278ms
DB: 2020/08/13 06:41:38.390605 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.858445ms
DB: 2020/08/13 06:41:38.390621 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.858445ms
DB: 2020/08/13 06:41:38.396070 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.228363ms
DB: 2020/08/13 06:41:38.401368 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.137627ms
Unlock: 2020/08/13 06:41:38.401385 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:41:38.409184 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.839529ms
DB: 2020/08/13 06:41:38.414419 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.032576ms
DB: 2020/08/13 06:41:38.419922 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.099043ms
DB: 2020/08/13 06:41:38.426963 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.727221ms
DB: 2020/08/13 06:41:38.432374 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.037393ms
DB: 2020/08/13 06:41:38.438035 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.311298ms
DB: 2020/08/13 06:41:38.445368 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.720617ms
DB: 2020/08/13 06:41:38.450805 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.903921ms
DB: 2020/08/13 06:41:38.457777 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.956777ms
DB: 2020/08/13 06:41:38.463169 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.155852ms
FetchForUpdate: 2020/08/13 06:41:38.463185 ** Cache FetchForUpdate Cache Key Value: [38b9/PpMQ02uei9POF46EQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.463191 +++  Cache FetchItems for sortk A#G#:S UID: [38b9/PpMQ02uei9POF46EQ==] 
FetchNode: 2020/08/13 06:41:38.463196  node: 38b9/PpMQ02uei9POF46EQ== subKey: A#G#:S
DB: 2020/08/13 06:41:38.466517 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.278906ms
AttachNode: gr1 2020/08/13 06:41:38.466627 Errored: SetUpredAvailable :for  38b9/PpMQ02uei9POF46EQ==
Cache: 2020/08/13 06:41:38.466636 In SetUpredAvailable: pUid, tUID:  38b9/PpMQ02uei9POF46EQ== bj3ctFZMTPOPI10jUO4xRw== A#G#:S
Cache: 2020/08/13 06:41:38.466640 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:41:38.473364 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.676607ms
Unlock: 2020/08/13 06:41:38.473389 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:41:38.478945 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.052496ms
DB: 2020/08/13 06:41:38.482120 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.485110 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.489171 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.492892 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:41:38.500310 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 7.341949ms
DB: 2020/08/13 06:41:38.505117 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.71921ms
FetchForUpdate: 2020/08/13 06:41:38.505141 ** Cache FetchForUpdate Cache Key Value: [65OnDjUFQ1aUvrZWJcGSpQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.505148 +++  Cache FetchItems for sortk A#G#:S UID: [65OnDjUFQ1aUvrZWJcGSpQ==] 
FetchNode: 2020/08/13 06:41:38.505153  node: 65OnDjUFQ1aUvrZWJcGSpQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:41:38.505362 ** Cache FetchForUpdate Cache Key Value: [HmA5CHhVQte5uUpXAqYVOA==]   sortk: A#
fetchItems: 2020/08/13 06:41:38.505372 +++  Cache FetchItems for sortk A# UID: [HmA5CHhVQte5uUpXAqYVOA==] 
FetchNode: 2020/08/13 06:41:38.505384  node: HmA5CHhVQte5uUpXAqYVOA== subKey: A#
DB: 2020/08/13 06:41:38.508332 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.139133ms
DB: 2020/08/13 06:41:38.509918 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.476889ms
Unlock: 2020/08/13 06:41:38.510627 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:41:38.513780 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.082854ms
DB: 2020/08/13 06:41:38.528144 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 14.326606ms
DB: 2020/08/13 06:41:38.528171 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 14.326606ms
DB: 2020/08/13 06:41:38.533647 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.409025ms
DB: 2020/08/13 06:41:38.533669 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.409025ms
DB: 2020/08/13 06:41:38.539276 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.517976ms
DB: 2020/08/13 06:41:38.544543 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.188098ms
Unlock: 2020/08/13 06:41:38.544555 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:41:38.551151 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.478797ms
DB: 2020/08/13 06:41:38.556352 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.971494ms
DB: 2020/08/13 06:41:38.562085 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.293476ms
DB: 2020/08/13 06:41:38.568963 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.547141ms
DB: 2020/08/13 06:41:38.574600 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.22183ms
DB: 2020/08/13 06:41:38.580745 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.764826ms
DB: 2020/08/13 06:41:38.590156 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 8.193938ms
DB: 2020/08/13 06:41:38.595040 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.807599ms
DB: 2020/08/13 06:41:38.600163 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.018578ms
DB: 2020/08/13 06:41:38.605242 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.012239ms
FetchForUpdate: 2020/08/13 06:41:38.605274 ** Cache FetchForUpdate Cache Key Value: [65OnDjUFQ1aUvrZWJcGSpQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:41:38.605281 +++  Cache FetchItems for sortk A#G#:S UID: [65OnDjUFQ1aUvrZWJcGSpQ==] 
FetchNode: 2020/08/13 06:41:38.605286  node: 65OnDjUFQ1aUvrZWJcGSpQ== subKey: A#G#:S
DB: 2020/08/13 06:41:38.610815 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.487097ms
AttachNode: gr1 2020/08/13 06:41:38.610907 Errored: SetUpredAvailable :for  65OnDjUFQ1aUvrZWJcGSpQ==
Cache: 2020/08/13 06:41:38.610917 In SetUpredAvailable: pUid, tUID:  65OnDjUFQ1aUvrZWJcGSpQ== 47n+lAsaRACrFs2PIRe31w== A#G#:S
Cache: 2020/08/13 06:41:38.610923 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:41:38.617017 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.053445ms
Unlock: 2020/08/13 06:41:38.617033 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:41:38.622531 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.919554ms
rdfLoader: 2020/08/13 06:41:38.622546 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:41:38.622556 Powering down...
rdfuuid: 2020/08/13 06:41:38.622563 Powering down...
DB:2020/08/13 06:45:06 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:45:06.139323 Powering on...
rdfLoader: 2020/08/13 06:45:06.139353 verify started....xx.
rdfLoader: 2020/08/13 06:45:06.139362 saveNode started......
rdfuuid: 2020/08/13 06:45:06.139374 Powering on...
rdfLoader: 2020/08/13 06:45:06.139380 *************** All started 
rdfLoader: 2020/08/13 06:45:06.147758 .  getType..
rdfLoader: 2020/08/13 06:45:06.147769 node.TyName : [Person]
DB: 2020/08/13 06:45:06.221347 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 73.524159ms
verify: 2020/08/13 06:45:06.221516 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:45:06.221533  Send Ask request to limiter.
verify: 2020/08/13 06:45:06.221539 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:45:06.221546 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:45:06.221553 ACK from gcmgr....received...
verify: 2020/08/13 06:45:06.221559 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:45:06.221565 *** Verify running...... 0
rdfLoader: 2020/08/13 06:45:06.221582 .  getType..
rdfLoader: 2020/08/13 06:45:06.221586 node.TyName : [Person]
verify: 2020/08/13 06:45:06.221607 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:45:06.221612  Send Ask request to limiter.
verify: 2020/08/13 06:45:06.221616 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:45:06.221622 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:45:06.221627 ACK from gcmgr....received...
verify: 2020/08/13 06:45:06.221634 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:45:06.221639 *** Verify running...... 1
verify: 2020/08/13 06:45:06.221643 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:45:06.221692 .  getType..
rdfLoader: 2020/08/13 06:45:06.221697 node.TyName : [Person]
verify: 2020/08/13 06:45:06.221721 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:45:06.221726  Send Ask request to limiter.
verify: 2020/08/13 06:45:06.221731 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:45:06.221736 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:45:06.221742 ACK from gcmgr....received...
verify: 2020/08/13 06:45:06.221748 *** Verify waiting on umarshal ch............................................. 0
verify: 2020/08/13 06:45:06.221753 *** Verify running...... 0
rdfLoader: 2020/08/13 06:45:06.221757 .  getType..
rdfLoader: 2020/08/13 06:45:06.221761 node.TyName : [Person]
verify: 2020/08/13 06:45:06.221775 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:45:06.221780  Send Ask request to limiter.
verify: 2020/08/13 06:45:06.221784 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:45:06.221789 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:45:06.221798 ACK from gcmgr....received...
verify: 2020/08/13 06:45:06.221803 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 06:45:06.221808 *** Verify running...... 1
verify: 2020/08/13 06:45:06.221812 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:45:06.221817 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:45:06.221830 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:45:06.221836 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:45:06.221842 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:45:06.221848 Find Ty Address
rdfLoader: 2020/08/13 06:45:06.221853 Find Ty Age
rdfLoader: 2020/08/13 06:45:06.221859 Find Ty Cars
rdfLoader: 2020/08/13 06:45:06.221865 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:45:06.221870 Find Ty DOB
rdfLoader: 2020/08/13 06:45:06.221875 Find Ty Friends
rdfLoader: 2020/08/13 06:45:06.221880 Find Ty Jobs
rdfLoader: 2020/08/13 06:45:06.221884 Find Ty Name
rdfLoader: 2020/08/13 06:45:06.221889 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:45:06.221911 Find Ty Siblings
rdfLoader: 2020/08/13 06:45:06.221930 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:45:06.221956 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:45:06.221961 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:45:06.221968 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:45:06.221979 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:45:06.221984 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:45:06.221995 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:45:06.222000 Find Ty Address
rdfLoader: 2020/08/13 06:45:06.222004 Find Ty Age
rdfLoader: 2020/08/13 06:45:06.222009 Find Ty Cars
rdfLoader: 2020/08/13 06:45:06.222015 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:45:06.222019 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:45:06.222024 Find Ty DOB
rdfLoader: 2020/08/13 06:45:06.222029 Find Ty Friends
rdfLoader: 2020/08/13 06:45:06.222034 Find Ty Jobs
rdfLoader: 2020/08/13 06:45:06.222039 Find Ty Name
rdfLoader: 2020/08/13 06:45:06.222044 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:45:06.222049 Find Ty Siblings
rdfLoader: 2020/08/13 06:45:06.222062 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:45:06.222101 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:45:06.222107 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:45:06.222113 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:45:06.222123 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:45:06.222129 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:45:06.222134 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:45:06.222139 Find Ty Address
rdfLoader: 2020/08/13 06:45:06.222159 Find Ty Age
rdfLoader: 2020/08/13 06:45:06.222164 Find Ty Cars
rdfLoader: 2020/08/13 06:45:06.222169 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:45:06.222174 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:45:06.222178 Find Ty DOB
rdfLoader: 2020/08/13 06:45:06.222183 Find Ty Friends
rdfLoader: 2020/08/13 06:45:06.222187 Find Ty Jobs
rdfLoader: 2020/08/13 06:45:06.222191 Find Ty Name
rdfLoader: 2020/08/13 06:45:06.222196 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:45:06.222200 Find Ty Siblings
rdfLoader: 2020/08/13 06:45:06.222212 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:45:06.222251 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:45:06.222257 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:45:06.222263 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:45:06.222273 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:45:06.222278 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:45:06.222283 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:45:06.222288 Find Ty Address
rdfLoader: 2020/08/13 06:45:06.222293 Find Ty Age
rdfLoader: 2020/08/13 06:45:06.222298 Find Ty Cars
rdfLoader: 2020/08/13 06:45:06.222303 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:45:06.222308 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:45:06.222313 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:45:06.222318 Find Ty DOB
rdfLoader: 2020/08/13 06:45:06.222322 Find Ty Friends
rdfLoader: 2020/08/13 06:45:06.222327 Find Ty Jobs
rdfLoader: 2020/08/13 06:45:06.222331 Find Ty Name
rdfLoader: 2020/08/13 06:45:06.222336 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:45:06.222341 Find Ty Siblings
rdfLoader: 2020/08/13 06:45:06.222352 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:45:06.222378 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:45:06.222383 Exit  unmarshalRDF. 
verify: 2020/08/13 06:45:06.222389 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:45:06.222411 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.222418 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.222427 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.222434 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.222441 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.222447 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.222457 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:45:06.222461 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:45:06.222472 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000386660)}
SaveRDFNode: 2020/08/13 06:45:06.222477 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:45:06.222487 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.222492 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.222498 UID received  : EsLOfpZySEm4ShcFLrriCA==
grmgr: 2020/08/13 06:45:06.222708 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:45:06.229312 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.780543ms
DB: 2020/08/13 06:45:06.232837 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.486795ms
DB: 2020/08/13 06:45:06.236343 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.472579ms
DB: 2020/08/13 06:45:06.239943 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.562698ms
DB: 2020/08/13 06:45:06.243647 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.517438ms
SaveRDFNode: 2020/08/13 06:45:06.243663 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386660)}
rdfUIDdb: 2020/08/13 06:45:06.243670 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.243675 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.243681 Received UID: X18=
SaveRDFNode: 2020/08/13 06:45:06.243695 a: = db.Item{PKey:[]uint8{0x12, 0xc2, 0xce, 0x7e, 0x96, 0x72, 0x48, 0x49, 0xb8, 0x4a, 0x17, 0x5, 0x2e, 0xba, 0xe2, 0x8}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:45:06.247216 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.489904ms
SaveRDFNode: 2020/08/13 06:45:06.247228 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386660)}
rdfUIDdb: 2020/08/13 06:45:06.247234 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.247238 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.247244 Received UID: X18=
SaveRDFNode: 2020/08/13 06:45:06.247255 a: = db.Item{PKey:[]uint8{0x12, 0xc2, 0xce, 0x7e, 0x96, 0x72, 0x48, 0x49, 0xb8, 0x4a, 0x17, 0x5, 0x2e, 0xba, 0xe2, 0x8}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:45:06.250867 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.581312ms
SaveRDFNode: 2020/08/13 06:45:06.250878 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:45:06.250887 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.250894 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.250901 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.250912 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.250918 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.250924 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.250930 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:45:06.250934 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:45:06.250940 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000387620)}
SaveRDFNode: 2020/08/13 06:45:06.250972 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:45:06.250982 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.250987 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.250992 UID received  : OFukhYHpT7Wmn6X5/ppQtA==
DB: 2020/08/13 06:45:06.254452 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.433153ms
DB: 2020/08/13 06:45:06.257981 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.497202ms
DB: 2020/08/13 06:45:06.261875 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.710548ms
DB: 2020/08/13 06:45:06.265398 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.48748ms
DB: 2020/08/13 06:45:06.268977 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.548909ms
SaveRDFNode: 2020/08/13 06:45:06.268991 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387620)}
rdfUIDdb: 2020/08/13 06:45:06.268998 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.269002 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.269008 Received UID: X18=
SaveRDFNode: 2020/08/13 06:45:06.269022 a: = db.Item{PKey:[]uint8{0x38, 0x5b, 0xa4, 0x85, 0x81, 0xe9, 0x4f, 0xb5, 0xa6, 0x9f, 0xa5, 0xf9, 0xfe, 0x9a, 0x50, 0xb4}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:45:06.273053 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.000702ms
SaveRDFNode: 2020/08/13 06:45:06.273066 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387620)}
rdfUIDdb: 2020/08/13 06:45:06.273072 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.273076 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.273081 Received UID: X18=
SaveRDFNode: 2020/08/13 06:45:06.273092 a: = db.Item{PKey:[]uint8{0x38, 0x5b, 0xa4, 0x85, 0x81, 0xe9, 0x4f, 0xb5, 0xa6, 0x9f, 0xa5, 0xf9, 0xfe, 0x9a, 0x50, 0xb4}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:45:06.276680 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.55956ms
SaveRDFNode: 2020/08/13 06:45:06.276694 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:45:06.276704 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.276713 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.276719 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.276725 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.276731 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.276741 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.276748 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:45:06.276753 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:45:06.276758 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0003866c0)}
SaveRDFNode: 2020/08/13 06:45:06.276763 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:45:06.276773 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.276777 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.276783 UID received  : DCzN9CT8TACUyvnaR6cxkw==
DB: 2020/08/13 06:45:06.280459 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.64959ms
DB: 2020/08/13 06:45:06.283993 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.489844ms
DB: 2020/08/13 06:45:06.287601 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.564052ms
DB: 2020/08/13 06:45:06.291005 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.371613ms
DB: 2020/08/13 06:45:06.294572 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.533741ms
SaveRDFNode: 2020/08/13 06:45:06.294754 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003866c0)}
rdfUIDdb: 2020/08/13 06:45:06.294766 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.294770 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.294777 Received UID: X18=
SaveRDFNode: 2020/08/13 06:45:06.294788 a: = db.Item{PKey:[]uint8{0xc, 0x2c, 0xcd, 0xf4, 0x24, 0xfc, 0x4c, 0x0, 0x94, 0xca, 0xf9, 0xda, 0x47, 0xa7, 0x31, 0x93}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:45:06.298238 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.417894ms
SaveRDFNode: 2020/08/13 06:45:06.298251 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003866c0)}
rdfUIDdb: 2020/08/13 06:45:06.298256 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.298260 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.298266 Received UID: X18=
SaveRDFNode: 2020/08/13 06:45:06.298276 a: = db.Item{PKey:[]uint8{0xc, 0x2c, 0xcd, 0xf4, 0x24, 0xfc, 0x4c, 0x0, 0x94, 0xca, 0xf9, 0xda, 0x47, 0xa7, 0x31, 0x93}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:45:06.301729 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.423288ms
SaveRDFNode: 2020/08/13 06:45:06.301738 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:45:06.301747 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.301754 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.301760 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.301766 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.301774 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.301780 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:45:06.301786 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:45:06.301790 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:45:06.301796 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0003877a0)}
SaveRDFNode: 2020/08/13 06:45:06.301800 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:45:06.301809 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.301813 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.301835 UID received  : WcBUC+tZTW6lRZhpM9I4CA==
DB: 2020/08/13 06:45:06.305403 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.541503ms
DB: 2020/08/13 06:45:06.308823 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.388242ms
DB: 2020/08/13 06:45:06.313218 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.355426ms
DB: 2020/08/13 06:45:06.316994 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.586687ms
DB: 2020/08/13 06:45:06.321497 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.465379ms
SaveRDFNode: 2020/08/13 06:45:06.321511 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003877a0)}
rdfUIDdb: 2020/08/13 06:45:06.321517 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.321521 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.321527 Received UID: X18=
SaveRDFNode: 2020/08/13 06:45:06.321539 a: = db.Item{PKey:[]uint8{0x59, 0xc0, 0x54, 0xb, 0xeb, 0x59, 0x4d, 0x6e, 0xa5, 0x45, 0x98, 0x69, 0x33, 0xd2, 0x38, 0x8}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:45:06.325249 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.659745ms
SaveRDFNode: 2020/08/13 06:45:06.325267 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003877a0)}
rdfUIDdb: 2020/08/13 06:45:06.325274 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:45:06.325278 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:45:06.325284 Received UID: X18=
SaveRDFNode: 2020/08/13 06:45:06.325296 a: = db.Item{PKey:[]uint8{0x59, 0xc0, 0x54, 0xb, 0xeb, 0x59, 0x4d, 0x6e, 0xa5, 0x45, 0x98, 0x69, 0x33, 0xd2, 0x38, 0x8}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:45:06.328993 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.663815ms
SaveRDFNode: 2020/08/13 06:45:06.329161 Returned.+++++++++++ No error
DB: 2020/08/13 06:45:06.331990 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.334435 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.337734 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.340482 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.345073 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.536992ms
DB: 2020/08/13 06:45:06.352018 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.871573ms
FetchForUpdate: 2020/08/13 06:45:06.352038 ** Cache FetchForUpdate Cache Key Value: [DCzN9CT8TACUyvnaR6cxkw==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:45:06.352044  node: DCzN9CT8TACUyvnaR6cxkw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:45:06.352217 ** Cache FetchForUpdate Cache Key Value: [OFukhYHpT7Wmn6X5/ppQtA==]   sortk: A#
FetchNode: 2020/08/13 06:45:06.352234  node: OFukhYHpT7Wmn6X5/ppQtA== subKey: A#
DB: 2020/08/13 06:45:06.355308 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.226519ms
FetchForUpdate: 2020/08/13 06:45:06.355370 len(nb): 1
fetchItems: 2020/08/13 06:45:06.355378 +++  Cache FetchItems for sortk A#G#:S UID: [DCzN9CT8TACUyvnaR6cxkw==] 
FetchNode: 2020/08/13 06:45:06.355387  node: DCzN9CT8TACUyvnaR6cxkw== subKey: A#G#:S
DB: 2020/08/13 06:45:06.360241 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 7.944901ms
FetchForUpdate: 2020/08/13 06:45:06.360362 len(nb): 7
fetchItems: 2020/08/13 06:45:06.360370 +++  Cache FetchItems for sortk A# UID: [OFukhYHpT7Wmn6X5/ppQtA==] 
FetchNode: 2020/08/13 06:45:06.360375  node: OFukhYHpT7Wmn6X5/ppQtA== subKey: A#
DB: 2020/08/13 06:45:06.363427 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.021157ms
Unlock: 2020/08/13 06:45:06.366261 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:45:06.376438 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 21.019664ms
DB: 2020/08/13 06:45:06.396178 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 19.624411ms
Unlock: 2020/08/13 06:45:06.396207 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:45:06.396244 ** Cache FetchForUpdate Cache Key Value: [DCzN9CT8TACUyvnaR6cxkw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.396253 +++  Cache FetchItems for sortk A#G#:S UID: [DCzN9CT8TACUyvnaR6cxkw==] 
FetchNode: 2020/08/13 06:45:06.396258  node: DCzN9CT8TACUyvnaR6cxkw== subKey: A#G#:S
DB: 2020/08/13 06:45:06.399211 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.914984ms
DB: 2020/08/13 06:45:06.405154 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.573561ms
DB: 2020/08/13 06:45:06.408802 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.459969ms
DB: 2020/08/13 06:45:06.412991 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.818408ms
DB: 2020/08/13 06:45:06.419627 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.329101ms
DB: 2020/08/13 06:45:06.423654 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.694352ms
DB: 2020/08/13 06:45:06.428254 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.905051ms
DB: 2020/08/13 06:45:06.434817 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.238095ms
DB: 2020/08/13 06:45:06.438838 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.716175ms
DB: 2020/08/13 06:45:06.443095 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.943314ms
Unlock: 2020/08/13 06:45:06.443107 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:45:06.447549 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.953874ms
FetchForUpdate: 2020/08/13 06:45:06.447560 ** Cache FetchForUpdate Cache Key Value: [DCzN9CT8TACUyvnaR6cxkw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.447567 +++  Cache FetchItems for sortk A#G#:S UID: [DCzN9CT8TACUyvnaR6cxkw==] 
FetchNode: 2020/08/13 06:45:06.447571  node: DCzN9CT8TACUyvnaR6cxkw== subKey: A#G#:S
DB: 2020/08/13 06:45:06.450958 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.355304ms
AttachNode: gr1 2020/08/13 06:45:06.451220 Errored: SetUpredAvailable :for  DCzN9CT8TACUyvnaR6cxkw==
Cache: 2020/08/13 06:45:06.451234 In SetUpredAvailable: pUid, tUID:  DCzN9CT8TACUyvnaR6cxkw== DCzN9CT8TACUyvnaR6cxkw== A#G#:S
Cache: 2020/08/13 06:45:06.451238 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:45:06.455265 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.976497ms
Unlock: 2020/08/13 06:45:06.455277 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:45:06.462601 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.863452ms
DB: 2020/08/13 06:45:06.465690 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.468668 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.470959 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.473224 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.477150 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.847275ms
DB: 2020/08/13 06:45:06.481003 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.783085ms
FetchForUpdate: 2020/08/13 06:45:06.481017 ** Cache FetchForUpdate Cache Key Value: [WcBUC+tZTW6lRZhpM9I4CA==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:45:06.481023  node: WcBUC+tZTW6lRZhpM9I4CA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:45:06.481205 ** Cache FetchForUpdate Cache Key Value: [OFukhYHpT7Wmn6X5/ppQtA==]   sortk: A#
fetchItems: 2020/08/13 06:45:06.481232 +++  Cache FetchItems for sortk A# UID: [OFukhYHpT7Wmn6X5/ppQtA==] 
FetchNode: 2020/08/13 06:45:06.481245  node: OFukhYHpT7Wmn6X5/ppQtA== subKey: A#
DB: 2020/08/13 06:45:06.483560 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.485223ms
FetchForUpdate: 2020/08/13 06:45:06.483598 len(nb): 1
fetchItems: 2020/08/13 06:45:06.483624 +++  Cache FetchItems for sortk A#G#:S UID: [WcBUC+tZTW6lRZhpM9I4CA==] 
FetchNode: 2020/08/13 06:45:06.483629  node: WcBUC+tZTW6lRZhpM9I4CA== subKey: A#G#:S
DB: 2020/08/13 06:45:06.484741 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.431126ms
Unlock: 2020/08/13 06:45:06.485316 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:45:06.486122 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.463673ms
DB: 2020/08/13 06:45:06.490377 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.020821ms
Unlock: 2020/08/13 06:45:06.490389 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:45:06.490668 ** Cache FetchForUpdate Cache Key Value: [WcBUC+tZTW6lRZhpM9I4CA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.490677 +++  Cache FetchItems for sortk A#G#:S UID: [WcBUC+tZTW6lRZhpM9I4CA==] 
FetchNode: 2020/08/13 06:45:06.490682  node: WcBUC+tZTW6lRZhpM9I4CA== subKey: A#G#:S
DB: 2020/08/13 06:45:06.493965 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.251952ms
DB: 2020/08/13 06:45:06.500420 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.099434ms
DB: 2020/08/13 06:45:06.505856 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.225331ms
DB: 2020/08/13 06:45:06.511290 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.991785ms
DB: 2020/08/13 06:45:06.517780 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.166928ms
DB: 2020/08/13 06:45:06.521850 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.614882ms
DB: 2020/08/13 06:45:06.526832 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.391092ms
DB: 2020/08/13 06:45:06.533547 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.385944ms
DB: 2020/08/13 06:45:06.538568 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.686553ms
DB: 2020/08/13 06:45:06.542947 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.048448ms
Unlock: 2020/08/13 06:45:06.542964 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:45:06.547192 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.643987ms
FetchForUpdate: 2020/08/13 06:45:06.547206 ** Cache FetchForUpdate Cache Key Value: [WcBUC+tZTW6lRZhpM9I4CA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.547212 +++  Cache FetchItems for sortk A#G#:S UID: [WcBUC+tZTW6lRZhpM9I4CA==] 
FetchNode: 2020/08/13 06:45:06.547227  node: WcBUC+tZTW6lRZhpM9I4CA== subKey: A#G#:S
DB: 2020/08/13 06:45:06.549936 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.673036ms
AttachNode: gr1 2020/08/13 06:45:06.550022 Errored: SetUpredAvailable :for  WcBUC+tZTW6lRZhpM9I4CA==
Cache: 2020/08/13 06:45:06.550030 In SetUpredAvailable: pUid, tUID:  WcBUC+tZTW6lRZhpM9I4CA== WcBUC+tZTW6lRZhpM9I4CA== A#G#:S
Cache: 2020/08/13 06:45:06.550034 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:45:06.554241 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.172647ms
Unlock: 2020/08/13 06:45:06.554251 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:45:06.559570 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.628112ms
DB: 2020/08/13 06:45:06.562535 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.565535 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.568470 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.571602 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.575367 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.699639ms
DB: 2020/08/13 06:45:06.579434 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.884139ms
FetchForUpdate: 2020/08/13 06:45:06.579454 ** Cache FetchForUpdate Cache Key Value: [OFukhYHpT7Wmn6X5/ppQtA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.579461 +++  Cache FetchItems for sortk A#G#:S UID: [OFukhYHpT7Wmn6X5/ppQtA==] 
FetchNode: 2020/08/13 06:45:06.579467  node: OFukhYHpT7Wmn6X5/ppQtA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:45:06.579834 ** Cache FetchForUpdate Cache Key Value: [DCzN9CT8TACUyvnaR6cxkw==]   sortk: A#
fetchItems: 2020/08/13 06:45:06.579861 +++  Cache FetchItems for sortk A# UID: [DCzN9CT8TACUyvnaR6cxkw==] 
FetchNode: 2020/08/13 06:45:06.579880  node: DCzN9CT8TACUyvnaR6cxkw== subKey: A#
DB: 2020/08/13 06:45:06.581973 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.306004ms
DB: 2020/08/13 06:45:06.583668 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.739551ms
Unlock: 2020/08/13 06:45:06.585147 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:45:06.586492 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.157327ms
Unlock: 2020/08/13 06:45:06.586503 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:45:06.586552 ** Cache FetchForUpdate Cache Key Value: [OFukhYHpT7Wmn6X5/ppQtA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.586559 +++  Cache FetchItems for sortk A#G#:S UID: [OFukhYHpT7Wmn6X5/ppQtA==] 
FetchNode: 2020/08/13 06:45:06.586564  node: OFukhYHpT7Wmn6X5/ppQtA== subKey: A#G#:S
DB: 2020/08/13 06:45:06.589671 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.040095ms
DB: 2020/08/13 06:45:06.595923 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.642279ms
DB: 2020/08/13 06:45:06.600052 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.724156ms
DB: 2020/08/13 06:45:06.604023 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.83563ms
DB: 2020/08/13 06:45:06.610222 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.127353ms
DB: 2020/08/13 06:45:06.613767 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.468133ms
DB: 2020/08/13 06:45:06.617754 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.908685ms
DB: 2020/08/13 06:45:06.623419 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.363474ms
DB: 2020/08/13 06:45:06.627386 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.505507ms
DB: 2020/08/13 06:45:06.631796 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.963605ms
Unlock: 2020/08/13 06:45:06.631811 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:45:06.636311 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.696741ms
FetchForUpdate: 2020/08/13 06:45:06.636324 ** Cache FetchForUpdate Cache Key Value: [OFukhYHpT7Wmn6X5/ppQtA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.636330 +++  Cache FetchItems for sortk A#G#:S UID: [OFukhYHpT7Wmn6X5/ppQtA==] 
FetchNode: 2020/08/13 06:45:06.636335  node: OFukhYHpT7Wmn6X5/ppQtA== subKey: A#G#:S
DB: 2020/08/13 06:45:06.639376 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.009286ms
AttachNode: gr1 2020/08/13 06:45:06.639486 Errored: SetUpredAvailable :for  OFukhYHpT7Wmn6X5/ppQtA==
Cache: 2020/08/13 06:45:06.639495 In SetUpredAvailable: pUid, tUID:  OFukhYHpT7Wmn6X5/ppQtA== OFukhYHpT7Wmn6X5/ppQtA== A#G#:S
Cache: 2020/08/13 06:45:06.639499 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:45:06.643243 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.711255ms
Unlock: 2020/08/13 06:45:06.643254 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:45:06.647261 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.898497ms
DB: 2020/08/13 06:45:06.649584 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.652146 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.655157 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.657437 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.661537 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.053399ms
DB: 2020/08/13 06:45:06.665647 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.826712ms
FetchForUpdate: 2020/08/13 06:45:06.665805 ** Cache FetchForUpdate Cache Key Value: [WcBUC+tZTW6lRZhpM9I4CA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.665832 +++  Cache FetchItems for sortk A#G#:S UID: [WcBUC+tZTW6lRZhpM9I4CA==] 
FetchNode: 2020/08/13 06:45:06.665837  node: WcBUC+tZTW6lRZhpM9I4CA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:45:06.666026 ** Cache FetchForUpdate Cache Key Value: [DCzN9CT8TACUyvnaR6cxkw==]   sortk: A#
fetchItems: 2020/08/13 06:45:06.666035 +++  Cache FetchItems for sortk A# UID: [DCzN9CT8TACUyvnaR6cxkw==] 
FetchNode: 2020/08/13 06:45:06.666048  node: DCzN9CT8TACUyvnaR6cxkw== subKey: A#
DB: 2020/08/13 06:45:06.668415 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.538133ms
DB: 2020/08/13 06:45:06.669613 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.505373ms
Unlock: 2020/08/13 06:45:06.671091 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:45:06.672875 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.961036ms
DB: 2020/08/13 06:45:06.676430 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.508602ms
DB: 2020/08/13 06:45:06.676446 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.508602ms
DB: 2020/08/13 06:45:06.679916 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.439845ms
DB: 2020/08/13 06:45:06.679932 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.439845ms
DB: 2020/08/13 06:45:06.684202 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.206427ms
DB: 2020/08/13 06:45:06.688413 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.14199ms
Unlock: 2020/08/13 06:45:06.688425 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:45:06.694755 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.215046ms
DB: 2020/08/13 06:45:06.698459 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.645467ms
DB: 2020/08/13 06:45:06.702764 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.146174ms
DB: 2020/08/13 06:45:06.708662 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.616252ms
DB: 2020/08/13 06:45:06.712448 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.714062ms
DB: 2020/08/13 06:45:06.716651 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.914309ms
DB: 2020/08/13 06:45:06.723339 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.1775ms
DB: 2020/08/13 06:45:06.728360 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.389396ms
DB: 2020/08/13 06:45:06.733013 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.120867ms
DB: 2020/08/13 06:45:06.737347 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.99302ms
FetchForUpdate: 2020/08/13 06:45:06.737365 ** Cache FetchForUpdate Cache Key Value: [WcBUC+tZTW6lRZhpM9I4CA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.737372 +++  Cache FetchItems for sortk A#G#:S UID: [WcBUC+tZTW6lRZhpM9I4CA==] 
FetchNode: 2020/08/13 06:45:06.737377  node: WcBUC+tZTW6lRZhpM9I4CA== subKey: A#G#:S
DB: 2020/08/13 06:45:06.740561 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.128329ms
AttachNode: gr1 2020/08/13 06:45:06.740865 Errored: SetUpredAvailable :for  WcBUC+tZTW6lRZhpM9I4CA==
Cache: 2020/08/13 06:45:06.740878 In SetUpredAvailable: pUid, tUID:  WcBUC+tZTW6lRZhpM9I4CA== yyopTaM/QeOPy32Jn66+MA== A#G#:S
Cache: 2020/08/13 06:45:06.740883 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:45:06.744560 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.644022ms
Unlock: 2020/08/13 06:45:06.744570 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:45:06.749044 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.947041ms
DB: 2020/08/13 06:45:06.751613 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.754783 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.756994 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.760009 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.763712 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.636464ms
DB: 2020/08/13 06:45:06.767762 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.975612ms
FetchForUpdate: 2020/08/13 06:45:06.767777 ** Cache FetchForUpdate Cache Key Value: [OFukhYHpT7Wmn6X5/ppQtA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.767784 +++  Cache FetchItems for sortk A#G#:S UID: [OFukhYHpT7Wmn6X5/ppQtA==] 
FetchNode: 2020/08/13 06:45:06.767788  node: OFukhYHpT7Wmn6X5/ppQtA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:45:06.767978 ** Cache FetchForUpdate Cache Key Value: [WcBUC+tZTW6lRZhpM9I4CA==]   sortk: A#
fetchItems: 2020/08/13 06:45:06.767989 +++  Cache FetchItems for sortk A# UID: [WcBUC+tZTW6lRZhpM9I4CA==] 
FetchNode: 2020/08/13 06:45:06.768001  node: WcBUC+tZTW6lRZhpM9I4CA== subKey: A#
DB: 2020/08/13 06:45:06.770732 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.909949ms
DB: 2020/08/13 06:45:06.771952 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.892949ms
Unlock: 2020/08/13 06:45:06.772903 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:45:06.775628 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.301444ms
DB: 2020/08/13 06:45:06.779663 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.997174ms
DB: 2020/08/13 06:45:06.779679 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.997174ms
DB: 2020/08/13 06:45:06.783300 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.584982ms
DB: 2020/08/13 06:45:06.783323 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.584982ms
DB: 2020/08/13 06:45:06.787999 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.602645ms
DB: 2020/08/13 06:45:06.792205 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.10281ms
Unlock: 2020/08/13 06:45:06.792406 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:45:06.799529 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.367307ms
DB: 2020/08/13 06:45:06.804045 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.317828ms
DB: 2020/08/13 06:45:06.808252 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.820828ms
DB: 2020/08/13 06:45:06.815167 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.460725ms
DB: 2020/08/13 06:45:06.819187 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.678064ms
DB: 2020/08/13 06:45:06.823681 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.14924ms
DB: 2020/08/13 06:45:06.830575 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.452752ms
DB: 2020/08/13 06:45:06.835401 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.508179ms
DB: 2020/08/13 06:45:06.839535 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.823754ms
DB: 2020/08/13 06:45:06.843937 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.080742ms
FetchForUpdate: 2020/08/13 06:45:06.843950 ** Cache FetchForUpdate Cache Key Value: [OFukhYHpT7Wmn6X5/ppQtA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.843966 +++  Cache FetchItems for sortk A#G#:S UID: [OFukhYHpT7Wmn6X5/ppQtA==] 
FetchNode: 2020/08/13 06:45:06.843970  node: OFukhYHpT7Wmn6X5/ppQtA== subKey: A#G#:S
DB: 2020/08/13 06:45:06.846492 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.488503ms
AttachNode: gr1 2020/08/13 06:45:06.846603 Errored: SetUpredAvailable :for  OFukhYHpT7Wmn6X5/ppQtA==
Cache: 2020/08/13 06:45:06.846612 In SetUpredAvailable: pUid, tUID:  OFukhYHpT7Wmn6X5/ppQtA== BLoXT/2OSrOfx0hTIzVYfw== A#G#:S
Cache: 2020/08/13 06:45:06.846617 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:45:06.850204 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.555677ms
Unlock: 2020/08/13 06:45:06.850214 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:45:06.856524 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.779548ms
DB: 2020/08/13 06:45:06.859693 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.863048 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.867300 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.870558 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:45:06.874554 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.922519ms
DB: 2020/08/13 06:45:06.878448 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.815124ms
FetchForUpdate: 2020/08/13 06:45:06.878466 ** Cache FetchForUpdate Cache Key Value: [DCzN9CT8TACUyvnaR6cxkw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.878473 +++  Cache FetchItems for sortk A#G#:S UID: [DCzN9CT8TACUyvnaR6cxkw==] 
FetchNode: 2020/08/13 06:45:06.878478  node: DCzN9CT8TACUyvnaR6cxkw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:45:06.878639 ** Cache FetchForUpdate Cache Key Value: [WcBUC+tZTW6lRZhpM9I4CA==]   sortk: A#
fetchItems: 2020/08/13 06:45:06.878649 +++  Cache FetchItems for sortk A# UID: [WcBUC+tZTW6lRZhpM9I4CA==] 
FetchNode: 2020/08/13 06:45:06.878661  node: WcBUC+tZTW6lRZhpM9I4CA== subKey: A#
DB: 2020/08/13 06:45:06.882432 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.717212ms
Unlock: 2020/08/13 06:45:06.883146 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:45:06.884200 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.689508ms
DB: 2020/08/13 06:45:06.889442 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.094263ms
DB: 2020/08/13 06:45:06.893238 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.762582ms
DB: 2020/08/13 06:45:06.893260 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.762582ms
DB: 2020/08/13 06:45:06.896860 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.562858ms
DB: 2020/08/13 06:45:06.896877 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.562858ms
DB: 2020/08/13 06:45:06.901223 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.276088ms
DB: 2020/08/13 06:45:06.906242 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.875525ms
Unlock: 2020/08/13 06:45:06.906254 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:45:06.913057 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.715119ms
DB: 2020/08/13 06:45:06.916816 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.530579ms
DB: 2020/08/13 06:45:06.921171 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.970138ms
DB: 2020/08/13 06:45:06.928870 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.396633ms
DB: 2020/08/13 06:45:06.932837 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.668455ms
DB: 2020/08/13 06:45:06.936935 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.782015ms
DB: 2020/08/13 06:45:06.942691 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.448198ms
DB: 2020/08/13 06:45:06.946849 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.856755ms
DB: 2020/08/13 06:45:06.952635 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.47922ms
DB: 2020/08/13 06:45:06.956865 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.036336ms
FetchForUpdate: 2020/08/13 06:45:06.956885 ** Cache FetchForUpdate Cache Key Value: [DCzN9CT8TACUyvnaR6cxkw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:45:06.956892 +++  Cache FetchItems for sortk A#G#:S UID: [DCzN9CT8TACUyvnaR6cxkw==] 
FetchNode: 2020/08/13 06:45:06.956897  node: DCzN9CT8TACUyvnaR6cxkw== subKey: A#G#:S
DB: 2020/08/13 06:45:06.959706 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.772418ms
AttachNode: gr1 2020/08/13 06:45:06.959818 Errored: SetUpredAvailable :for  DCzN9CT8TACUyvnaR6cxkw==
Cache: 2020/08/13 06:45:06.959826 In SetUpredAvailable: pUid, tUID:  DCzN9CT8TACUyvnaR6cxkw== WEBvll9pT+yp0vZK/mOjSg== A#G#:S
Cache: 2020/08/13 06:45:06.959831 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:45:06.964240 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.374397ms
Unlock: 2020/08/13 06:45:06.964253 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:45:06.969329 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.425733ms
rdfLoader: 2020/08/13 06:45:06.969345 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:45:06.969357 Powering down...
rdfuuid: 2020/08/13 06:45:06.969364 Powering down...
DB:2020/08/13 06:50:37 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:50:37.911667 Powering on...
rdfLoader: 2020/08/13 06:50:37.911984 verify started....xx.
rdfLoader: 2020/08/13 06:50:37.912000 saveNode started......
rdfuuid: 2020/08/13 06:50:37.912013 Powering on...
rdfLoader: 2020/08/13 06:50:37.912019 *************** All started 
rdfLoader: 2020/08/13 06:50:37.920664 .  getType..
rdfLoader: 2020/08/13 06:50:37.920681 node.TyName : [Person]
DB: 2020/08/13 06:50:37.996769 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 76.019635ms
verify: 2020/08/13 06:50:37.996928 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:50:37.996936  Send Ask request to limiter.
verify: 2020/08/13 06:50:37.996941 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:50:37.996959 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:50:37.996965 ACK from gcmgr....received...
rdfLoader: 2020/08/13 06:50:37.996971 .  getType..
rdfLoader: 2020/08/13 06:50:37.996976 node.TyName : [Person]
verify: 2020/08/13 06:50:37.996997 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:50:37.997001  Send Ask request to limiter.
verify: 2020/08/13 06:50:37.997007 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:50:37.997013 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:50:37.997018 ACK from gcmgr....received...
verify: 2020/08/13 06:50:37.997025 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:50:37.997075 .  getType..
rdfLoader: 2020/08/13 06:50:37.997080 node.TyName : [Person]
verify: 2020/08/13 06:50:37.997114 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:50:37.997121  Send Ask request to limiter.
verify: 2020/08/13 06:50:37.997125 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:50:37.997130 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:50:37.997135 ACK from gcmgr....received...
rdfLoader: 2020/08/13 06:50:37.997140 .  getType..
rdfLoader: 2020/08/13 06:50:37.997145 node.TyName : [Person]
verify: 2020/08/13 06:50:37.997159 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:50:37.997164  Send Ask request to limiter.
verify: 2020/08/13 06:50:37.997168 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:50:37.997173 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:50:37.997178 ACK from gcmgr....received...
verify: 2020/08/13 06:50:37.997183 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:50:37.997187 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:50:37.997200 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:50:37.997206 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:50:37.997212 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:50:37.997217 Find Ty Address
rdfLoader: 2020/08/13 06:50:37.997222 Find Ty Age
rdfLoader: 2020/08/13 06:50:37.997227 Find Ty Cars
rdfLoader: 2020/08/13 06:50:37.997233 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:50:37.997238 Find Ty DOB
rdfLoader: 2020/08/13 06:50:37.997243 Find Ty Friends
rdfLoader: 2020/08/13 06:50:37.997247 Find Ty Jobs
rdfLoader: 2020/08/13 06:50:37.997252 Find Ty Name
rdfLoader: 2020/08/13 06:50:37.997256 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:50:37.997261 Find Ty Siblings
rdfLoader: 2020/08/13 06:50:37.997282 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:50:37.997307 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:50:37.997311 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:50:37.997318 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:50:37.997328 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:50:37.997333 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:50:37.997339 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:50:37.997344 Find Ty Address
rdfLoader: 2020/08/13 06:50:37.997349 Find Ty Age
rdfLoader: 2020/08/13 06:50:37.997354 Find Ty Cars
rdfLoader: 2020/08/13 06:50:37.997359 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:50:37.997364 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:50:37.997368 Find Ty DOB
rdfLoader: 2020/08/13 06:50:37.997373 Find Ty Friends
rdfLoader: 2020/08/13 06:50:37.997378 Find Ty Jobs
rdfLoader: 2020/08/13 06:50:37.997382 Find Ty Name
rdfLoader: 2020/08/13 06:50:37.997387 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:50:37.997392 Find Ty Siblings
rdfLoader: 2020/08/13 06:50:37.997404 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:50:37.997429 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:50:37.997433 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:50:37.997439 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:50:37.997449 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:50:37.997454 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:50:37.997459 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:50:37.997464 Find Ty Address
rdfLoader: 2020/08/13 06:50:37.997468 Find Ty Age
rdfLoader: 2020/08/13 06:50:37.997473 Find Ty Cars
rdfLoader: 2020/08/13 06:50:37.997478 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:50:37.997482 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:50:37.997487 Find Ty DOB
rdfLoader: 2020/08/13 06:50:37.997491 Find Ty Friends
rdfLoader: 2020/08/13 06:50:37.997496 Find Ty Jobs
rdfLoader: 2020/08/13 06:50:37.997500 Find Ty Name
rdfLoader: 2020/08/13 06:50:37.997505 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:50:37.997509 Find Ty Siblings
rdfLoader: 2020/08/13 06:50:37.997520 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:50:37.997555 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:50:37.997563 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:50:37.997569 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:50:37.997579 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:50:37.997586 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:50:37.997591 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:50:37.997596 Find Ty Address
rdfLoader: 2020/08/13 06:50:37.997601 Find Ty Age
rdfLoader: 2020/08/13 06:50:37.997606 Find Ty Cars
rdfLoader: 2020/08/13 06:50:37.997611 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:50:37.997616 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:50:37.997620 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:50:37.997625 Find Ty DOB
rdfLoader: 2020/08/13 06:50:37.997630 Find Ty Friends
rdfLoader: 2020/08/13 06:50:37.997634 Find Ty Jobs
rdfLoader: 2020/08/13 06:50:37.997639 Find Ty Name
rdfLoader: 2020/08/13 06:50:37.997644 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:50:37.997648 Find Ty Siblings
rdfLoader: 2020/08/13 06:50:37.997660 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:50:37.997685 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:50:37.997690 Exit  unmarshalRDF. 
verify: 2020/08/13 06:50:37.997696 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:50:37.997717 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:50:37.997724 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:50:37.997730 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:37.997749 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:50:37.997756 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:50:37.997762 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:37.997769 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:50:37.997774 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:50:37.997781 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000384ba0)}
SaveRDFNode: 2020/08/13 06:50:37.997786 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:50:37.997795 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:37.997800 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:37.997806 UID received  : dglMipoBR8my2yDbC6OGTg==
grmgr: 2020/08/13 06:50:37.999028 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:50:38.009351 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.512558ms
DB: 2020/08/13 06:50:38.014348 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.94213ms
DB: 2020/08/13 06:50:38.020193 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.897341ms
DB: 2020/08/13 06:50:38.025238 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.009407ms
DB: 2020/08/13 06:50:38.030874 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.595227ms
SaveRDFNode: 2020/08/13 06:50:38.031014 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ba0)}
rdfUIDdb: 2020/08/13 06:50:38.031028 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.031032 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.031038 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:38.031053 a: = db.Item{PKey:[]uint8{0x76, 0x9, 0x4c, 0x8a, 0x9a, 0x1, 0x47, 0xc9, 0xb2, 0xdb, 0x20, 0xdb, 0xb, 0xa3, 0x86, 0x4e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:38.036222 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.13749ms
SaveRDFNode: 2020/08/13 06:50:38.036234 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ba0)}
rdfUIDdb: 2020/08/13 06:50:38.036239 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.036243 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.036248 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:38.036258 a: = db.Item{PKey:[]uint8{0x76, 0x9, 0x4c, 0x8a, 0x9a, 0x1, 0x47, 0xc9, 0xb2, 0xdb, 0x20, 0xdb, 0xb, 0xa3, 0x86, 0x4e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:38.041434 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.13821ms
SaveRDFNode: 2020/08/13 06:50:38.041444 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:50:38.041453 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.041462 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.041468 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.041473 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.041480 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.041486 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.041491 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:50:38.041495 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:50:38.041501 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000017440)}
SaveRDFNode: 2020/08/13 06:50:38.041505 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:50:38.041513 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.041536 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.041542 UID received  : HEPKjhmWRzyuPupTVEI5xQ==
DB: 2020/08/13 06:50:38.047287 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.510036ms
DB: 2020/08/13 06:50:38.052462 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.138338ms
DB: 2020/08/13 06:50:38.057497 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.001554ms
DB: 2020/08/13 06:50:38.062451 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.922099ms
DB: 2020/08/13 06:50:38.067474 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.989736ms
SaveRDFNode: 2020/08/13 06:50:38.067490 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/13 06:50:38.067507 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.067512 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.067531 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:38.067542 a: = db.Item{PKey:[]uint8{0x1c, 0x43, 0xca, 0x8e, 0x19, 0x96, 0x47, 0x3c, 0xae, 0x3e, 0xea, 0x53, 0x54, 0x42, 0x39, 0xc5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:38.072718 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.146386ms
SaveRDFNode: 2020/08/13 06:50:38.072733 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/13 06:50:38.072739 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.072743 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.072748 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:38.072758 a: = db.Item{PKey:[]uint8{0x1c, 0x43, 0xca, 0x8e, 0x19, 0x96, 0x47, 0x3c, 0xae, 0x3e, 0xea, 0x53, 0x54, 0x42, 0x39, 0xc5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:38.078318 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.530719ms
SaveRDFNode: 2020/08/13 06:50:38.078329 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:50:38.078338 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.078344 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.078350 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.078357 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.078362 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.078368 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.078374 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:50:38.078378 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:50:38.078383 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0003851a0)}
SaveRDFNode: 2020/08/13 06:50:38.078387 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:50:38.078395 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.078399 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.078423 UID received  : 4O5Ydh5STp60edD/VwggSQ==
DB: 2020/08/13 06:50:38.083448 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.996948ms
DB: 2020/08/13 06:50:38.089830 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.202562ms
DB: 2020/08/13 06:50:38.095189 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.322568ms
DB: 2020/08/13 06:50:38.100264 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.036148ms
DB: 2020/08/13 06:50:38.105370 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.911985ms
SaveRDFNode: 2020/08/13 06:50:38.105385 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003851a0)}
rdfUIDdb: 2020/08/13 06:50:38.105392 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.105396 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.105402 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:38.105413 a: = db.Item{PKey:[]uint8{0xe0, 0xee, 0x58, 0x76, 0x1e, 0x52, 0x4e, 0x9e, 0xb4, 0x79, 0xd0, 0xff, 0x57, 0x8, 0x20, 0x49}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:38.110801 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.351259ms
SaveRDFNode: 2020/08/13 06:50:38.110814 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003851a0)}
rdfUIDdb: 2020/08/13 06:50:38.110820 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.110824 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.110853 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:38.110867 a: = db.Item{PKey:[]uint8{0xe0, 0xee, 0x58, 0x76, 0x1e, 0x52, 0x4e, 0x9e, 0xb4, 0x79, 0xd0, 0xff, 0x57, 0x8, 0x20, 0x49}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:38.115751 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.851127ms
SaveRDFNode: 2020/08/13 06:50:38.115894 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:50:38.115908 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.115916 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.115924 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.115929 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.115946 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.115952 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:38.115958 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:50:38.115962 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:50:38.115968 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0000168a0)}
SaveRDFNode: 2020/08/13 06:50:38.115972 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:50:38.115982 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.115986 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.115991 UID received  : vGqhwuAoTQ6EfV8nxsAi0Q==
DB: 2020/08/13 06:50:38.123075 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.053578ms
DB: 2020/08/13 06:50:38.128039 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.92623ms
DB: 2020/08/13 06:50:38.133080 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.003597ms
DB: 2020/08/13 06:50:38.138137 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.875647ms
DB: 2020/08/13 06:50:38.143402 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.227633ms
SaveRDFNode: 2020/08/13 06:50:38.143417 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0000168a0)}
rdfUIDdb: 2020/08/13 06:50:38.143424 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.143428 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.143434 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:38.143447 a: = db.Item{PKey:[]uint8{0xbc, 0x6a, 0xa1, 0xc2, 0xe0, 0x28, 0x4d, 0xe, 0x84, 0x7d, 0x5f, 0x27, 0xc6, 0xc0, 0x22, 0xd1}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:38.148552 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.073625ms
SaveRDFNode: 2020/08/13 06:50:38.148747 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0000168a0)}
rdfUIDdb: 2020/08/13 06:50:38.148769 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:38.148773 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:38.148779 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:38.148789 a: = db.Item{PKey:[]uint8{0xbc, 0x6a, 0xa1, 0xc2, 0xe0, 0x28, 0x4d, 0xe, 0x84, 0x7d, 0x5f, 0x27, 0xc6, 0xc0, 0x22, 0xd1}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:38.154614 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.766134ms
SaveRDFNode: 2020/08/13 06:50:38.154625 Returned.+++++++++++ No error
DB: 2020/08/13 06:50:38.159644 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.163715 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.167800 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.173782 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.178984 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.142037ms
DB: 2020/08/13 06:50:38.188616 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 8.885039ms
FetchForUpdate: 2020/08/13 06:50:38.188823 ** Cache FetchForUpdate Cache Key Value: [4O5Ydh5STp60edD/VwggSQ==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:50:38.188836  node: 4O5Ydh5STp60edD/VwggSQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:38.189052 ** Cache FetchForUpdate Cache Key Value: [HEPKjhmWRzyuPupTVEI5xQ==]   sortk: A#
FetchNode: 2020/08/13 06:50:38.189068  node: HEPKjhmWRzyuPupTVEI5xQ== subKey: A#
DB: 2020/08/13 06:50:38.213023 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 24.148887ms
FetchForUpdate: 2020/08/13 06:50:38.213242 len(nb): 1
fetchItems: 2020/08/13 06:50:38.213255 +++  Cache FetchItems for sortk A#G#:S UID: [4O5Ydh5STp60edD/VwggSQ==] 
FetchNode: 2020/08/13 06:50:38.213260  node: 4O5Ydh5STp60edD/VwggSQ== subKey: A#G#:S
DB: 2020/08/13 06:50:38.216471 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 27.338063ms
FetchForUpdate: 2020/08/13 06:50:38.216632 len(nb): 7
fetchItems: 2020/08/13 06:50:38.216642 +++  Cache FetchItems for sortk A# UID: [HEPKjhmWRzyuPupTVEI5xQ==] 
FetchNode: 2020/08/13 06:50:38.216647  node: HEPKjhmWRzyuPupTVEI5xQ== subKey: A#
DB: 2020/08/13 06:50:38.216978 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.688174ms
DB: 2020/08/13 06:50:38.220463 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.787401ms
Unlock: 2020/08/13 06:50:38.220590 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:38.223225 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.54424ms
Unlock: 2020/08/13 06:50:38.223236 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:50:38.223266 ** Cache FetchForUpdate Cache Key Value: [4O5Ydh5STp60edD/VwggSQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.223272 +++  Cache FetchItems for sortk A#G#:S UID: [4O5Ydh5STp60edD/VwggSQ==] 
FetchNode: 2020/08/13 06:50:38.223277  node: 4O5Ydh5STp60edD/VwggSQ== subKey: A#G#:S
DB: 2020/08/13 06:50:38.226827 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.51054ms
DB: 2020/08/13 06:50:38.237613 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 10.697815ms
DB: 2020/08/13 06:50:38.243648 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.341691ms
DB: 2020/08/13 06:50:38.248902 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.131128ms
DB: 2020/08/13 06:50:38.255583 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.615929ms
DB: 2020/08/13 06:50:38.260714 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.071557ms
DB: 2020/08/13 06:50:38.266385 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.34337ms
DB: 2020/08/13 06:50:38.273371 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.630025ms
DB: 2020/08/13 06:50:38.278565 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.863915ms
DB: 2020/08/13 06:50:38.284227 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.299252ms
Unlock: 2020/08/13 06:50:38.284239 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:50:38.289760 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.125371ms
FetchForUpdate: 2020/08/13 06:50:38.289776 ** Cache FetchForUpdate Cache Key Value: [4O5Ydh5STp60edD/VwggSQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.289783 +++  Cache FetchItems for sortk A#G#:S UID: [4O5Ydh5STp60edD/VwggSQ==] 
FetchNode: 2020/08/13 06:50:38.289789  node: 4O5Ydh5STp60edD/VwggSQ== subKey: A#G#:S
DB: 2020/08/13 06:50:38.293454 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.629996ms
AttachNode: gr1 2020/08/13 06:50:38.293566 Errored: SetUpredAvailable :for  4O5Ydh5STp60edD/VwggSQ==
Cache: 2020/08/13 06:50:38.293574 In SetUpredAvailable: pUid, tUID:  4O5Ydh5STp60edD/VwggSQ== 4O5Ydh5STp60edD/VwggSQ== A#G#:S
Cache: 2020/08/13 06:50:38.293579 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:38.298604 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.994359ms
Unlock: 2020/08/13 06:50:38.298613 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:38.304089 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.340433ms
DB: 2020/08/13 06:50:38.308258 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.311412 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.315540 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.319670 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.325383 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.639168ms
DB: 2020/08/13 06:50:38.330759 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.191695ms
FetchForUpdate: 2020/08/13 06:50:38.330775 ** Cache FetchForUpdate Cache Key Value: [vGqhwuAoTQ6EfV8nxsAi0Q==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:50:38.330781  node: vGqhwuAoTQ6EfV8nxsAi0Q== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:38.330981 ** Cache FetchForUpdate Cache Key Value: [HEPKjhmWRzyuPupTVEI5xQ==]   sortk: A#
fetchItems: 2020/08/13 06:50:38.331008 +++  Cache FetchItems for sortk A# UID: [HEPKjhmWRzyuPupTVEI5xQ==] 
FetchNode: 2020/08/13 06:50:38.331021  node: HEPKjhmWRzyuPupTVEI5xQ== subKey: A#
DB: 2020/08/13 06:50:38.335146 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 4.063127ms
Unlock: 2020/08/13 06:50:38.335787 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:38.336240 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.411198ms
FetchForUpdate: 2020/08/13 06:50:38.336293 len(nb): 1
fetchItems: 2020/08/13 06:50:38.336300 +++  Cache FetchItems for sortk A#G#:S UID: [vGqhwuAoTQ6EfV8nxsAi0Q==] 
FetchNode: 2020/08/13 06:50:38.336304  node: vGqhwuAoTQ6EfV8nxsAi0Q== subKey: A#G#:S
DB: 2020/08/13 06:50:38.339896 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.563679ms
DB: 2020/08/13 06:50:38.345452 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.337338ms
Unlock: 2020/08/13 06:50:38.345467 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:50:38.345717 ** Cache FetchForUpdate Cache Key Value: [vGqhwuAoTQ6EfV8nxsAi0Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.345728 +++  Cache FetchItems for sortk A#G#:S UID: [vGqhwuAoTQ6EfV8nxsAi0Q==] 
FetchNode: 2020/08/13 06:50:38.345733  node: vGqhwuAoTQ6EfV8nxsAi0Q== subKey: A#G#:S
DB: 2020/08/13 06:50:38.349094 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.297361ms
DB: 2020/08/13 06:50:38.355928 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.474592ms
DB: 2020/08/13 06:50:38.361201 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.088539ms
DB: 2020/08/13 06:50:38.366741 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.174749ms
DB: 2020/08/13 06:50:38.373882 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.82134ms
DB: 2020/08/13 06:50:38.379421 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.19731ms
DB: 2020/08/13 06:50:38.385059 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.292984ms
DB: 2020/08/13 06:50:38.392040 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.649284ms
DB: 2020/08/13 06:50:38.397335 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.962672ms
DB: 2020/08/13 06:50:38.402999 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.332338ms
Unlock: 2020/08/13 06:50:38.403020 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:50:38.408610 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.167783ms
FetchForUpdate: 2020/08/13 06:50:38.408635 ** Cache FetchForUpdate Cache Key Value: [vGqhwuAoTQ6EfV8nxsAi0Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.408642 +++  Cache FetchItems for sortk A#G#:S UID: [vGqhwuAoTQ6EfV8nxsAi0Q==] 
FetchNode: 2020/08/13 06:50:38.408647  node: vGqhwuAoTQ6EfV8nxsAi0Q== subKey: A#G#:S
DB: 2020/08/13 06:50:38.412068 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.387409ms
AttachNode: gr1 2020/08/13 06:50:38.412372 Errored: SetUpredAvailable :for  vGqhwuAoTQ6EfV8nxsAi0Q==
Cache: 2020/08/13 06:50:38.412382 In SetUpredAvailable: pUid, tUID:  vGqhwuAoTQ6EfV8nxsAi0Q== vGqhwuAoTQ6EfV8nxsAi0Q== A#G#:S
Cache: 2020/08/13 06:50:38.412387 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:38.421707 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 9.275622ms
Unlock: 2020/08/13 06:50:38.421722 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:38.427949 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.816432ms
DB: 2020/08/13 06:50:38.431952 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.435024 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.438595 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.442613 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.447892 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.166799ms
DB: 2020/08/13 06:50:38.453038 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.961629ms
FetchForUpdate: 2020/08/13 06:50:38.453066 ** Cache FetchForUpdate Cache Key Value: [HEPKjhmWRzyuPupTVEI5xQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.453072 +++  Cache FetchItems for sortk A#G#:S UID: [HEPKjhmWRzyuPupTVEI5xQ==] 
FetchNode: 2020/08/13 06:50:38.453077  node: HEPKjhmWRzyuPupTVEI5xQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:38.453259 ** Cache FetchForUpdate Cache Key Value: [4O5Ydh5STp60edD/VwggSQ==]   sortk: A#
fetchItems: 2020/08/13 06:50:38.453268 +++  Cache FetchItems for sortk A# UID: [4O5Ydh5STp60edD/VwggSQ==] 
FetchNode: 2020/08/13 06:50:38.453298  node: 4O5Ydh5STp60edD/VwggSQ== subKey: A#
DB: 2020/08/13 06:50:38.457539 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.175928ms
Unlock: 2020/08/13 06:50:38.459171 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:38.459795 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 6.684001ms
DB: 2020/08/13 06:50:38.465407 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.163709ms
Unlock: 2020/08/13 06:50:38.465420 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:50:38.465456 ** Cache FetchForUpdate Cache Key Value: [HEPKjhmWRzyuPupTVEI5xQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.465464 +++  Cache FetchItems for sortk A#G#:S UID: [HEPKjhmWRzyuPupTVEI5xQ==] 
FetchNode: 2020/08/13 06:50:38.465468  node: HEPKjhmWRzyuPupTVEI5xQ== subKey: A#G#:S
DB: 2020/08/13 06:50:38.471879 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 6.378279ms
DB: 2020/08/13 06:50:38.479201 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.982835ms
DB: 2020/08/13 06:50:38.485779 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.39585ms
DB: 2020/08/13 06:50:38.491407 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.243701ms
DB: 2020/08/13 06:50:38.499053 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.322325ms
DB: 2020/08/13 06:50:38.504173 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.813589ms
DB: 2020/08/13 06:50:38.510141 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.633172ms
DB: 2020/08/13 06:50:38.517175 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.709374ms
DB: 2020/08/13 06:50:38.523166 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.670006ms
DB: 2020/08/13 06:50:38.529255 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.617464ms
Unlock: 2020/08/13 06:50:38.529267 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:50:38.535256 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.313438ms
FetchForUpdate: 2020/08/13 06:50:38.535273 ** Cache FetchForUpdate Cache Key Value: [HEPKjhmWRzyuPupTVEI5xQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.535281 +++  Cache FetchItems for sortk A#G#:S UID: [HEPKjhmWRzyuPupTVEI5xQ==] 
FetchNode: 2020/08/13 06:50:38.535296  node: HEPKjhmWRzyuPupTVEI5xQ== subKey: A#G#:S
DB: 2020/08/13 06:50:38.539462 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.130538ms
AttachNode: gr1 2020/08/13 06:50:38.539555 Errored: SetUpredAvailable :for  HEPKjhmWRzyuPupTVEI5xQ==
Cache: 2020/08/13 06:50:38.539563 In SetUpredAvailable: pUid, tUID:  HEPKjhmWRzyuPupTVEI5xQ== HEPKjhmWRzyuPupTVEI5xQ== A#G#:S
Cache: 2020/08/13 06:50:38.539567 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:38.544819 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.206721ms
Unlock: 2020/08/13 06:50:38.544830 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:38.550081 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.166134ms
DB: 2020/08/13 06:50:38.554763 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.558910 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.562416 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.565774 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.572150 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.300137ms
DB: 2020/08/13 06:50:38.577110 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.749633ms
FetchForUpdate: 2020/08/13 06:50:38.577127 ** Cache FetchForUpdate Cache Key Value: [vGqhwuAoTQ6EfV8nxsAi0Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.577134 +++  Cache FetchItems for sortk A#G#:S UID: [vGqhwuAoTQ6EfV8nxsAi0Q==] 
FetchNode: 2020/08/13 06:50:38.577140  node: vGqhwuAoTQ6EfV8nxsAi0Q== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:38.577324 ** Cache FetchForUpdate Cache Key Value: [4O5Ydh5STp60edD/VwggSQ==]   sortk: A#
fetchItems: 2020/08/13 06:50:38.577333 +++  Cache FetchItems for sortk A# UID: [4O5Ydh5STp60edD/VwggSQ==] 
FetchNode: 2020/08/13 06:50:38.577345  node: 4O5Ydh5STp60edD/VwggSQ== subKey: A#
DB: 2020/08/13 06:50:38.580986 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.812585ms
DB: 2020/08/13 06:50:38.582069 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.643649ms
Unlock: 2020/08/13 06:50:38.583554 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:38.586835 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.42293ms
DB: 2020/08/13 06:50:38.592332 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.46248ms
DB: 2020/08/13 06:50:38.592353 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.46248ms
DB: 2020/08/13 06:50:38.597343 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.953718ms
DB: 2020/08/13 06:50:38.597364 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.953718ms
DB: 2020/08/13 06:50:38.603207 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.64898ms
DB: 2020/08/13 06:50:38.608792 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.42356ms
Unlock: 2020/08/13 06:50:38.608807 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:50:38.616236 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.79873ms
DB: 2020/08/13 06:50:38.621417 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.119323ms
DB: 2020/08/13 06:50:38.627346 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.787407ms
DB: 2020/08/13 06:50:38.643183 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 15.733504ms
DB: 2020/08/13 06:50:38.648478 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.222336ms
DB: 2020/08/13 06:50:38.654653 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.077598ms
DB: 2020/08/13 06:50:38.661731 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.805365ms
DB: 2020/08/13 06:50:38.667122 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.097095ms
DB: 2020/08/13 06:50:38.672813 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.383225ms
DB: 2020/08/13 06:50:38.678085 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.093956ms
FetchForUpdate: 2020/08/13 06:50:38.678099 ** Cache FetchForUpdate Cache Key Value: [vGqhwuAoTQ6EfV8nxsAi0Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.678106 +++  Cache FetchItems for sortk A#G#:S UID: [vGqhwuAoTQ6EfV8nxsAi0Q==] 
FetchNode: 2020/08/13 06:50:38.678111  node: vGqhwuAoTQ6EfV8nxsAi0Q== subKey: A#G#:S
DB: 2020/08/13 06:50:38.681556 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.41284ms
AttachNode: gr1 2020/08/13 06:50:38.681658 Errored: SetUpredAvailable :for  vGqhwuAoTQ6EfV8nxsAi0Q==
Cache: 2020/08/13 06:50:38.681667 In SetUpredAvailable: pUid, tUID:  vGqhwuAoTQ6EfV8nxsAi0Q== wKhIdz7kTh+eykL4wF6yNQ== A#G#:S
Cache: 2020/08/13 06:50:38.681671 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:38.687963 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.258713ms
Unlock: 2020/08/13 06:50:38.687975 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:38.693763 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.421407ms
DB: 2020/08/13 06:50:38.697939 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.701426 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.705600 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.708588 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.714096 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.430066ms
DB: 2020/08/13 06:50:38.719006 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.702824ms
FetchForUpdate: 2020/08/13 06:50:38.719022 ** Cache FetchForUpdate Cache Key Value: [HEPKjhmWRzyuPupTVEI5xQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.719029 +++  Cache FetchItems for sortk A#G#:S UID: [HEPKjhmWRzyuPupTVEI5xQ==] 
FetchNode: 2020/08/13 06:50:38.719034  node: HEPKjhmWRzyuPupTVEI5xQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:38.719227 ** Cache FetchForUpdate Cache Key Value: [vGqhwuAoTQ6EfV8nxsAi0Q==]   sortk: A#
fetchItems: 2020/08/13 06:50:38.719236 +++  Cache FetchItems for sortk A# UID: [vGqhwuAoTQ6EfV8nxsAi0Q==] 
FetchNode: 2020/08/13 06:50:38.719265  node: vGqhwuAoTQ6EfV8nxsAi0Q== subKey: A#
DB: 2020/08/13 06:50:38.722623 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.55074ms
DB: 2020/08/13 06:50:38.723871 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.543947ms
Unlock: 2020/08/13 06:50:38.725281 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:38.728768 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.488832ms
DB: 2020/08/13 06:50:38.734125 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.290906ms
DB: 2020/08/13 06:50:38.734147 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.290906ms
DB: 2020/08/13 06:50:38.743891 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 9.707877ms
DB: 2020/08/13 06:50:38.743926 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 9.707877ms
DB: 2020/08/13 06:50:38.751123 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.809208ms
DB: 2020/08/13 06:50:38.757659 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.471229ms
Unlock: 2020/08/13 06:50:38.757671 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:50:38.764979 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.20349ms
DB: 2020/08/13 06:50:38.770053 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.018488ms
DB: 2020/08/13 06:50:38.776080 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.926482ms
DB: 2020/08/13 06:50:38.782771 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.628759ms
DB: 2020/08/13 06:50:38.787697 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.857656ms
DB: 2020/08/13 06:50:38.793664 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.899799ms
DB: 2020/08/13 06:50:38.800487 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.759548ms
DB: 2020/08/13 06:50:38.807270 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.727689ms
DB: 2020/08/13 06:50:38.812731 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.381558ms
DB: 2020/08/13 06:50:38.818191 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.362045ms
FetchForUpdate: 2020/08/13 06:50:38.818204 ** Cache FetchForUpdate Cache Key Value: [HEPKjhmWRzyuPupTVEI5xQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.818211 +++  Cache FetchItems for sortk A#G#:S UID: [HEPKjhmWRzyuPupTVEI5xQ==] 
FetchNode: 2020/08/13 06:50:38.818216  node: HEPKjhmWRzyuPupTVEI5xQ== subKey: A#G#:S
DB: 2020/08/13 06:50:38.822005 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.756376ms
AttachNode: gr1 2020/08/13 06:50:38.822117 Errored: SetUpredAvailable :for  HEPKjhmWRzyuPupTVEI5xQ==
Cache: 2020/08/13 06:50:38.822126 In SetUpredAvailable: pUid, tUID:  HEPKjhmWRzyuPupTVEI5xQ== q6Ysr0FsQgCIVsGo58VAyg== A#G#:S
Cache: 2020/08/13 06:50:38.822130 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:38.828582 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.419057ms
Unlock: 2020/08/13 06:50:38.828596 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:38.834210 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.100766ms
DB: 2020/08/13 06:50:38.837737 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.841182 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.844776 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.849532 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:38.854936 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.348337ms
DB: 2020/08/13 06:50:38.860070 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.064701ms
FetchForUpdate: 2020/08/13 06:50:38.860089 ** Cache FetchForUpdate Cache Key Value: [4O5Ydh5STp60edD/VwggSQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.860095 +++  Cache FetchItems for sortk A#G#:S UID: [4O5Ydh5STp60edD/VwggSQ==] 
FetchNode: 2020/08/13 06:50:38.860101  node: 4O5Ydh5STp60edD/VwggSQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:38.860280 ** Cache FetchForUpdate Cache Key Value: [vGqhwuAoTQ6EfV8nxsAi0Q==]   sortk: A#
fetchItems: 2020/08/13 06:50:38.860290 +++  Cache FetchItems for sortk A# UID: [vGqhwuAoTQ6EfV8nxsAi0Q==] 
FetchNode: 2020/08/13 06:50:38.860301  node: vGqhwuAoTQ6EfV8nxsAi0Q== subKey: A#
DB: 2020/08/13 06:50:38.864078 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.941029ms
DB: 2020/08/13 06:50:38.865207 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.848161ms
Unlock: 2020/08/13 06:50:38.865947 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:38.870138 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.692672ms
DB: 2020/08/13 06:50:38.875718 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.544005ms
DB: 2020/08/13 06:50:38.875736 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.544005ms
DB: 2020/08/13 06:50:38.880823 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.044678ms
DB: 2020/08/13 06:50:38.880837 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.044678ms
DB: 2020/08/13 06:50:38.886777 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.759586ms
DB: 2020/08/13 06:50:38.892155 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.220133ms
Unlock: 2020/08/13 06:50:38.892167 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:50:38.899541 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.633416ms
DB: 2020/08/13 06:50:38.904763 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.048007ms
DB: 2020/08/13 06:50:38.910603 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.198009ms
DB: 2020/08/13 06:50:38.917734 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.590681ms
DB: 2020/08/13 06:50:38.923367 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.151289ms
DB: 2020/08/13 06:50:38.929408 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.388669ms
DB: 2020/08/13 06:50:38.936223 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.733876ms
DB: 2020/08/13 06:50:38.941346 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.040553ms
DB: 2020/08/13 06:50:38.946780 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.354709ms
DB: 2020/08/13 06:50:38.952252 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.235201ms
FetchForUpdate: 2020/08/13 06:50:38.952266 ** Cache FetchForUpdate Cache Key Value: [4O5Ydh5STp60edD/VwggSQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:38.952273 +++  Cache FetchItems for sortk A#G#:S UID: [4O5Ydh5STp60edD/VwggSQ==] 
FetchNode: 2020/08/13 06:50:38.952278  node: 4O5Ydh5STp60edD/VwggSQ== subKey: A#G#:S
DB: 2020/08/13 06:50:38.970355 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 18.039888ms
AttachNode: gr1 2020/08/13 06:50:38.970486 Errored: SetUpredAvailable :for  4O5Ydh5STp60edD/VwggSQ==
Cache: 2020/08/13 06:50:38.970497 In SetUpredAvailable: pUid, tUID:  4O5Ydh5STp60edD/VwggSQ== uhqQxulFTNa/62Y/dI/Unw== A#G#:S
Cache: 2020/08/13 06:50:38.970502 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:38.975819 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.280446ms
Unlock: 2020/08/13 06:50:38.975832 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:38.981632 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.32683ms
rdfLoader: 2020/08/13 06:50:38.981644 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:50:38.981653 Powering down...
rdfuuid: 2020/08/13 06:50:38.981659 Powering down...
DB:2020/08/13 06:50:55 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:50:55.049251 Powering on...
rdfLoader: 2020/08/13 06:50:55.049712 verify started....xx.
rdfLoader: 2020/08/13 06:50:55.049728 saveNode started......
rdfuuid: 2020/08/13 06:50:55.049742 Powering on...
rdfLoader: 2020/08/13 06:50:55.049749 *************** All started 
rdfLoader: 2020/08/13 06:50:55.057222 .  getType..
rdfLoader: 2020/08/13 06:50:55.057236 node.TyName : [Person]
DB: 2020/08/13 06:50:55.139411 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 82.076847ms
verify: 2020/08/13 06:50:55.139569 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:50:55.139577  Send Ask request to limiter.
verify: 2020/08/13 06:50:55.139582 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:50:55.139589 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:50:55.139595 ACK from gcmgr....received...
rdfLoader: 2020/08/13 06:50:55.139601 .  getType..
rdfLoader: 2020/08/13 06:50:55.139606 node.TyName : [Person]
verify: 2020/08/13 06:50:55.139625 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:50:55.139630  Send Ask request to limiter.
verify: 2020/08/13 06:50:55.139634 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:50:55.139639 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:50:55.139654 ACK from gcmgr....received...
verify: 2020/08/13 06:50:55.139661 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:50:55.139709 .  getType..
rdfLoader: 2020/08/13 06:50:55.139714 node.TyName : [Person]
verify: 2020/08/13 06:50:55.139744 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:50:55.139748  Send Ask request to limiter.
verify: 2020/08/13 06:50:55.139753 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:50:55.139759 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:50:55.139764 ACK from gcmgr....received...
rdfLoader: 2020/08/13 06:50:55.139770 .  getType..
rdfLoader: 2020/08/13 06:50:55.139775 node.TyName : [Person]
verify: 2020/08/13 06:50:55.139789 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:50:55.139793  Send Ask request to limiter.
verify: 2020/08/13 06:50:55.139798 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:50:55.139803 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:50:55.139808 ACK from gcmgr....received...
verify: 2020/08/13 06:50:55.139814 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:50:55.139818 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:50:55.139831 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:50:55.139848 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:50:55.139854 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:50:55.139859 Find Ty Address
rdfLoader: 2020/08/13 06:50:55.139865 Find Ty Age
rdfLoader: 2020/08/13 06:50:55.139870 Find Ty Cars
rdfLoader: 2020/08/13 06:50:55.139876 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:50:55.139881 Find Ty DOB
rdfLoader: 2020/08/13 06:50:55.139885 Find Ty Friends
rdfLoader: 2020/08/13 06:50:55.139902 Find Ty Jobs
rdfLoader: 2020/08/13 06:50:55.139906 Find Ty Name
rdfLoader: 2020/08/13 06:50:55.139911 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:50:55.139916 Find Ty Siblings
rdfLoader: 2020/08/13 06:50:55.139946 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:50:55.139968 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:50:55.139973 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:50:55.139979 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:50:55.139989 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:50:55.139994 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:50:55.139999 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:50:55.140003 Find Ty Address
rdfLoader: 2020/08/13 06:50:55.140011 Find Ty Age
rdfLoader: 2020/08/13 06:50:55.140016 Find Ty Cars
rdfLoader: 2020/08/13 06:50:55.140021 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:50:55.140026 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:50:55.140030 Find Ty DOB
rdfLoader: 2020/08/13 06:50:55.140034 Find Ty Friends
rdfLoader: 2020/08/13 06:50:55.140038 Find Ty Jobs
rdfLoader: 2020/08/13 06:50:55.140043 Find Ty Name
rdfLoader: 2020/08/13 06:50:55.140047 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:50:55.140051 Find Ty Siblings
rdfLoader: 2020/08/13 06:50:55.140063 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:50:55.140086 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:50:55.140091 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:50:55.140096 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:50:55.140106 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:50:55.140110 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:50:55.140115 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:50:55.140120 Find Ty Address
rdfLoader: 2020/08/13 06:50:55.140124 Find Ty Age
rdfLoader: 2020/08/13 06:50:55.140128 Find Ty Cars
rdfLoader: 2020/08/13 06:50:55.140133 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:50:55.140137 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:50:55.140141 Find Ty DOB
rdfLoader: 2020/08/13 06:50:55.140145 Find Ty Friends
rdfLoader: 2020/08/13 06:50:55.140149 Find Ty Jobs
rdfLoader: 2020/08/13 06:50:55.140153 Find Ty Name
rdfLoader: 2020/08/13 06:50:55.140158 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:50:55.140162 Find Ty Siblings
rdfLoader: 2020/08/13 06:50:55.140173 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:50:55.140201 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:50:55.140207 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:50:55.140212 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:50:55.140221 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:50:55.140226 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:50:55.140231 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:50:55.140235 Find Ty Address
rdfLoader: 2020/08/13 06:50:55.140239 Find Ty Age
rdfLoader: 2020/08/13 06:50:55.140244 Find Ty Cars
rdfLoader: 2020/08/13 06:50:55.140249 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:50:55.140254 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:50:55.140258 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:50:55.140263 Find Ty DOB
rdfLoader: 2020/08/13 06:50:55.140268 Find Ty Friends
rdfLoader: 2020/08/13 06:50:55.140272 Find Ty Jobs
rdfLoader: 2020/08/13 06:50:55.140276 Find Ty Name
rdfLoader: 2020/08/13 06:50:55.140280 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:50:55.140284 Find Ty Siblings
rdfLoader: 2020/08/13 06:50:55.140298 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:50:55.140321 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:50:55.140325 Exit  unmarshalRDF. 
verify: 2020/08/13 06:50:55.140331 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:50:55.140350 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.140356 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.140362 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.140368 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.140373 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.140379 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.140384 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:50:55.140388 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:50:55.140398 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000386660)}
SaveRDFNode: 2020/08/13 06:50:55.140402 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:50:55.140410 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.140414 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.140420 UID received  : hGtG7WtESO6mT+hs8qpYRQ==
grmgr: 2020/08/13 06:50:55.140589 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:50:55.150008 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 9.562092ms
DB: 2020/08/13 06:50:55.154792 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.747866ms
DB: 2020/08/13 06:50:55.159503 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.677908ms
DB: 2020/08/13 06:50:55.164671 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.917752ms
DB: 2020/08/13 06:50:55.169486 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.727629ms
SaveRDFNode: 2020/08/13 06:50:55.169550 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386660)}
rdfUIDdb: 2020/08/13 06:50:55.169565 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.169574 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.169586 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:55.169615 a: = db.Item{PKey:[]uint8{0x84, 0x6b, 0x46, 0xed, 0x6b, 0x44, 0x48, 0xee, 0xa6, 0x4f, 0xe8, 0x6c, 0xf2, 0xaa, 0x58, 0x45}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:55.174943 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.296229ms
SaveRDFNode: 2020/08/13 06:50:55.175094 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386660)}
rdfUIDdb: 2020/08/13 06:50:55.175106 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.175116 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.175122 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:55.175133 a: = db.Item{PKey:[]uint8{0x84, 0x6b, 0x46, 0xed, 0x6b, 0x44, 0x48, 0xee, 0xa6, 0x4f, 0xe8, 0x6c, 0xf2, 0xaa, 0x58, 0x45}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:55.180158 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.991202ms
SaveRDFNode: 2020/08/13 06:50:55.180169 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:50:55.180178 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.180187 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.180193 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.180200 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.180205 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.180211 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.180216 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:50:55.180220 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:50:55.180225 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000387620)}
SaveRDFNode: 2020/08/13 06:50:55.180229 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:50:55.180238 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.180241 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.180247 UID received  : 4E828TwXTaaPT4SOKlhECg==
DB: 2020/08/13 06:50:55.185203 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.912398ms
DB: 2020/08/13 06:50:55.189988 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.750073ms
DB: 2020/08/13 06:50:55.195027 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.000163ms
DB: 2020/08/13 06:50:55.200156 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.83926ms
DB: 2020/08/13 06:50:55.205236 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.040747ms
SaveRDFNode: 2020/08/13 06:50:55.205250 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387620)}
rdfUIDdb: 2020/08/13 06:50:55.205256 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.205260 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.205266 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:55.205280 a: = db.Item{PKey:[]uint8{0xe0, 0x4f, 0x36, 0xf1, 0x3c, 0x17, 0x4d, 0xa6, 0x8f, 0x4f, 0x84, 0x8e, 0x2a, 0x58, 0x44, 0xa}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:55.210081 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.771245ms
SaveRDFNode: 2020/08/13 06:50:55.210094 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387620)}
rdfUIDdb: 2020/08/13 06:50:55.210099 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.210103 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.210109 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:55.210119 a: = db.Item{PKey:[]uint8{0xe0, 0x4f, 0x36, 0xf1, 0x3c, 0x17, 0x4d, 0xa6, 0x8f, 0x4f, 0x84, 0x8e, 0x2a, 0x58, 0x44, 0xa}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:55.215099 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.941216ms
SaveRDFNode: 2020/08/13 06:50:55.215253 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:50:55.215268 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.215274 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.215294 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.215300 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.215305 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.215310 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.215316 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:50:55.215319 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:50:55.215325 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017bc0)}
SaveRDFNode: 2020/08/13 06:50:55.215329 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:50:55.215337 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.215341 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.215347 UID received  : u8YvfJjnT2qIOxpbAafkkA==
DB: 2020/08/13 06:50:55.220093 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.721373ms
DB: 2020/08/13 06:50:55.224761 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.620084ms
DB: 2020/08/13 06:50:55.229553 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.761042ms
DB: 2020/08/13 06:50:55.234343 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.758874ms
DB: 2020/08/13 06:50:55.239244 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.688276ms
SaveRDFNode: 2020/08/13 06:50:55.239258 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017bc0)}
rdfUIDdb: 2020/08/13 06:50:55.239264 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.239268 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.239273 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:55.239284 a: = db.Item{PKey:[]uint8{0xbb, 0xc6, 0x2f, 0x7c, 0x98, 0xe7, 0x4f, 0x6a, 0x88, 0x3b, 0x1a, 0x5b, 0x1, 0xa7, 0xe4, 0x90}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:55.243949 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.6375ms
SaveRDFNode: 2020/08/13 06:50:55.243961 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017bc0)}
rdfUIDdb: 2020/08/13 06:50:55.243967 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.243982 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.243988 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:55.243998 a: = db.Item{PKey:[]uint8{0xbb, 0xc6, 0x2f, 0x7c, 0x98, 0xe7, 0x4f, 0x6a, 0x88, 0x3b, 0x1a, 0x5b, 0x1, 0xa7, 0xe4, 0x90}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:55.248698 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.661083ms
SaveRDFNode: 2020/08/13 06:50:55.248708 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:50:55.248716 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.248722 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.248740 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.248746 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.248752 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.248758 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:50:55.248764 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:50:55.248768 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:50:55.248773 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc00023cb40)}
SaveRDFNode: 2020/08/13 06:50:55.248777 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:50:55.248808 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.248813 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.248819 UID received  : KxKxG7YGQ66FV972Oc9bKA==
DB: 2020/08/13 06:50:55.253733 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.873106ms
DB: 2020/08/13 06:50:55.258660 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.6233ms
DB: 2020/08/13 06:50:55.263424 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.725022ms
DB: 2020/08/13 06:50:55.268297 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.803527ms
DB: 2020/08/13 06:50:55.273362 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.021074ms
SaveRDFNode: 2020/08/13 06:50:55.273381 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00023cb40)}
rdfUIDdb: 2020/08/13 06:50:55.273388 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.273393 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.273399 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:55.273422 a: = db.Item{PKey:[]uint8{0x2b, 0x12, 0xb1, 0x1b, 0xb6, 0x6, 0x43, 0xae, 0x85, 0x57, 0xde, 0xf6, 0x39, 0xcf, 0x5b, 0x28}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:55.278077 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.6228ms
SaveRDFNode: 2020/08/13 06:50:55.278092 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00023cb40)}
rdfUIDdb: 2020/08/13 06:50:55.278097 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:50:55.278102 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:50:55.278107 Received UID: X18=
SaveRDFNode: 2020/08/13 06:50:55.278118 a: = db.Item{PKey:[]uint8{0x2b, 0x12, 0xb1, 0x1b, 0xb6, 0x6, 0x43, 0xae, 0x85, 0x57, 0xde, 0xf6, 0x39, 0xcf, 0x5b, 0x28}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:50:55.282820 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.659367ms
SaveRDFNode: 2020/08/13 06:50:55.282840 Returned.+++++++++++ No error
DB: 2020/08/13 06:50:55.286698 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.289551 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.293201 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.296372 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.301455 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.008257ms
DB: 2020/08/13 06:50:55.311480 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 9.509469ms
FetchForUpdate: 2020/08/13 06:50:55.311792 ** Cache FetchForUpdate Cache Key Value: [u8YvfJjnT2qIOxpbAafkkA==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:50:55.311804  node: u8YvfJjnT2qIOxpbAafkkA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:55.311999 ** Cache FetchForUpdate Cache Key Value: [4E828TwXTaaPT4SOKlhECg==]   sortk: A#
FetchNode: 2020/08/13 06:50:55.312026  node: 4E828TwXTaaPT4SOKlhECg== subKey: A#
DB: 2020/08/13 06:50:55.315819 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.982023ms
FetchForUpdate: 2020/08/13 06:50:55.315878 len(nb): 1
fetchItems: 2020/08/13 06:50:55.315886 +++  Cache FetchItems for sortk A#G#:S UID: [u8YvfJjnT2qIOxpbAafkkA==] 
FetchNode: 2020/08/13 06:50:55.315891  node: u8YvfJjnT2qIOxpbAafkkA== subKey: A#G#:S
DB: 2020/08/13 06:50:55.319592 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 7.480246ms
FetchForUpdate: 2020/08/13 06:50:55.319719 len(nb): 7
fetchItems: 2020/08/13 06:50:55.319730 +++  Cache FetchItems for sortk A# UID: [4E828TwXTaaPT4SOKlhECg==] 
FetchNode: 2020/08/13 06:50:55.319734  node: 4E828TwXTaaPT4SOKlhECg== subKey: A#
DB: 2020/08/13 06:50:55.323194 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 7.262862ms
DB: 2020/08/13 06:50:55.328882 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.078723ms
Unlock: 2020/08/13 06:50:55.329031 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:50:55.338018 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 18.255121ms
Unlock: 2020/08/13 06:50:55.338138 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:50:55.338177 ** Cache FetchForUpdate Cache Key Value: [u8YvfJjnT2qIOxpbAafkkA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.338182 +++  Cache FetchItems for sortk A#G#:S UID: [u8YvfJjnT2qIOxpbAafkkA==] 
FetchNode: 2020/08/13 06:50:55.338186  node: u8YvfJjnT2qIOxpbAafkkA== subKey: A#G#:S
DB: 2020/08/13 06:50:55.355580 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 17.368199ms
DB: 2020/08/13 06:50:55.361808 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.12938ms
DB: 2020/08/13 06:50:55.367334 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.481528ms
DB: 2020/08/13 06:50:55.373553 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.84003ms
DB: 2020/08/13 06:50:55.381283 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.214343ms
DB: 2020/08/13 06:50:55.386306 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.611001ms
DB: 2020/08/13 06:50:55.392592 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.910365ms
DB: 2020/08/13 06:50:55.399390 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.478543ms
DB: 2020/08/13 06:50:55.404643 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.952216ms
DB: 2020/08/13 06:50:55.410000 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.032636ms
Unlock: 2020/08/13 06:50:55.410030 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:50:55.415294 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.814231ms
FetchForUpdate: 2020/08/13 06:50:55.415318 ** Cache FetchForUpdate Cache Key Value: [u8YvfJjnT2qIOxpbAafkkA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.415324 +++  Cache FetchItems for sortk A#G#:S UID: [u8YvfJjnT2qIOxpbAafkkA==] 
FetchNode: 2020/08/13 06:50:55.415329  node: u8YvfJjnT2qIOxpbAafkkA== subKey: A#G#:S
DB: 2020/08/13 06:50:55.418742 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.379585ms
AttachNode: gr1 2020/08/13 06:50:55.418859 Errored: SetUpredAvailable :for  u8YvfJjnT2qIOxpbAafkkA==
Cache: 2020/08/13 06:50:55.418869 In SetUpredAvailable: pUid, tUID:  u8YvfJjnT2qIOxpbAafkkA== u8YvfJjnT2qIOxpbAafkkA== A#G#:S
Cache: 2020/08/13 06:50:55.418873 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:55.423483 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.580203ms
Unlock: 2020/08/13 06:50:55.423493 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:55.432623 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 8.470001ms
DB: 2020/08/13 06:50:55.435718 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.438990 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.442100 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.445222 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.450256 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.983155ms
DB: 2020/08/13 06:50:55.455090 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.62431ms
FetchForUpdate: 2020/08/13 06:50:55.455109 ** Cache FetchForUpdate Cache Key Value: [KxKxG7YGQ66FV972Oc9bKA==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:50:55.455115  node: KxKxG7YGQ66FV972Oc9bKA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:55.455300 ** Cache FetchForUpdate Cache Key Value: [4E828TwXTaaPT4SOKlhECg==]   sortk: A#
fetchItems: 2020/08/13 06:50:55.455309 +++  Cache FetchItems for sortk A# UID: [4E828TwXTaaPT4SOKlhECg==] 
FetchNode: 2020/08/13 06:50:55.455321  node: 4E828TwXTaaPT4SOKlhECg== subKey: A#
DB: 2020/08/13 06:50:55.458087 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.932034ms
FetchForUpdate: 2020/08/13 06:50:55.458124 len(nb): 1
fetchItems: 2020/08/13 06:50:55.458153 +++  Cache FetchItems for sortk A#G#:S UID: [KxKxG7YGQ66FV972Oc9bKA==] 
FetchNode: 2020/08/13 06:50:55.458158  node: KxKxG7YGQ66FV972Oc9bKA== subKey: A#G#:S
DB: 2020/08/13 06:50:55.461082 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.89508ms
DB: 2020/08/13 06:50:55.466083 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.781193ms
Unlock: 2020/08/13 06:50:55.466097 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:50:55.473823 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 18.41633ms
Unlock: 2020/08/13 06:50:55.474624 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:50:55.475086 ** Cache FetchForUpdate Cache Key Value: [KxKxG7YGQ66FV972Oc9bKA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.475115 +++  Cache FetchItems for sortk A#G#:S UID: [KxKxG7YGQ66FV972Oc9bKA==] 
FetchNode: 2020/08/13 06:50:55.475120  node: KxKxG7YGQ66FV972Oc9bKA== subKey: A#G#:S
DB: 2020/08/13 06:50:55.478478 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.322724ms
DB: 2020/08/13 06:50:55.485822 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.954531ms
DB: 2020/08/13 06:50:55.490979 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.883341ms
DB: 2020/08/13 06:50:55.497707 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.110691ms
DB: 2020/08/13 06:50:55.505198 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.917818ms
DB: 2020/08/13 06:50:55.510835 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.923309ms
DB: 2020/08/13 06:50:55.516195 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.240463ms
DB: 2020/08/13 06:50:55.522746 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.492382ms
DB: 2020/08/13 06:50:55.527712 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.906076ms
DB: 2020/08/13 06:50:55.533355 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.572174ms
Unlock: 2020/08/13 06:50:55.533368 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:50:55.538594 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.846219ms
FetchForUpdate: 2020/08/13 06:50:55.538609 ** Cache FetchForUpdate Cache Key Value: [KxKxG7YGQ66FV972Oc9bKA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.538617 +++  Cache FetchItems for sortk A#G#:S UID: [KxKxG7YGQ66FV972Oc9bKA==] 
FetchNode: 2020/08/13 06:50:55.538622  node: KxKxG7YGQ66FV972Oc9bKA== subKey: A#G#:S
DB: 2020/08/13 06:50:55.542192 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.538334ms
AttachNode: gr1 2020/08/13 06:50:55.542560 Errored: SetUpredAvailable :for  KxKxG7YGQ66FV972Oc9bKA==
Cache: 2020/08/13 06:50:55.542572 In SetUpredAvailable: pUid, tUID:  KxKxG7YGQ66FV972Oc9bKA== KxKxG7YGQ66FV972Oc9bKA== A#G#:S
Cache: 2020/08/13 06:50:55.542577 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:55.547887 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.248658ms
Unlock: 2020/08/13 06:50:55.547900 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:55.556708 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 8.401649ms
DB: 2020/08/13 06:50:55.559722 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.568740 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.572266 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.575819 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.580980 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.108057ms
DB: 2020/08/13 06:50:55.586317 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.905019ms
FetchForUpdate: 2020/08/13 06:50:55.586346 ** Cache FetchForUpdate Cache Key Value: [4E828TwXTaaPT4SOKlhECg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.586359 +++  Cache FetchItems for sortk A#G#:S UID: [4E828TwXTaaPT4SOKlhECg==] 
FetchNode: 2020/08/13 06:50:55.586368  node: 4E828TwXTaaPT4SOKlhECg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:55.586604 ** Cache FetchForUpdate Cache Key Value: [u8YvfJjnT2qIOxpbAafkkA==]   sortk: A#
fetchItems: 2020/08/13 06:50:55.586614 +++  Cache FetchItems for sortk A# UID: [u8YvfJjnT2qIOxpbAafkkA==] 
FetchNode: 2020/08/13 06:50:55.586635  node: u8YvfJjnT2qIOxpbAafkkA== subKey: A#
DB: 2020/08/13 06:50:55.590482 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.766413ms
Unlock: 2020/08/13 06:50:55.591160 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:55.591696 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.274011ms
DB: 2020/08/13 06:50:55.596874 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.957071ms
Unlock: 2020/08/13 06:50:55.596886 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:50:55.597223 ** Cache FetchForUpdate Cache Key Value: [4E828TwXTaaPT4SOKlhECg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.597232 +++  Cache FetchItems for sortk A#G#:S UID: [4E828TwXTaaPT4SOKlhECg==] 
FetchNode: 2020/08/13 06:50:55.597237  node: 4E828TwXTaaPT4SOKlhECg== subKey: A#G#:S
DB: 2020/08/13 06:50:55.600677 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.390747ms
DB: 2020/08/13 06:50:55.607426 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.402647ms
DB: 2020/08/13 06:50:55.612359 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.737992ms
DB: 2020/08/13 06:50:55.617871 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.1344ms
DB: 2020/08/13 06:50:55.624705 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.512706ms
DB: 2020/08/13 06:50:55.629911 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.765836ms
DB: 2020/08/13 06:50:55.635667 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.331036ms
DB: 2020/08/13 06:50:55.642356 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.364174ms
DB: 2020/08/13 06:50:55.647383 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.724512ms
DB: 2020/08/13 06:50:55.652747 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.057528ms
Unlock: 2020/08/13 06:50:55.652759 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:50:55.658336 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.009365ms
FetchForUpdate: 2020/08/13 06:50:55.658348 ** Cache FetchForUpdate Cache Key Value: [4E828TwXTaaPT4SOKlhECg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.658354 +++  Cache FetchItems for sortk A#G#:S UID: [4E828TwXTaaPT4SOKlhECg==] 
FetchNode: 2020/08/13 06:50:55.658359  node: 4E828TwXTaaPT4SOKlhECg== subKey: A#G#:S
DB: 2020/08/13 06:50:55.661904 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.513951ms
AttachNode: gr1 2020/08/13 06:50:55.662019 Errored: SetUpredAvailable :for  4E828TwXTaaPT4SOKlhECg==
Cache: 2020/08/13 06:50:55.662028 In SetUpredAvailable: pUid, tUID:  4E828TwXTaaPT4SOKlhECg== 4E828TwXTaaPT4SOKlhECg== A#G#:S
Cache: 2020/08/13 06:50:55.662033 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:55.667127 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.060752ms
Unlock: 2020/08/13 06:50:55.667144 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:55.672720 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.920397ms
DB: 2020/08/13 06:50:55.676013 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.679220 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.682787 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.686890 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.691975 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.010639ms
DB: 2020/08/13 06:50:55.696904 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.635868ms
FetchForUpdate: 2020/08/13 06:50:55.696918 ** Cache FetchForUpdate Cache Key Value: [KxKxG7YGQ66FV972Oc9bKA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.696924 +++  Cache FetchItems for sortk A#G#:S UID: [KxKxG7YGQ66FV972Oc9bKA==] 
FetchNode: 2020/08/13 06:50:55.696929  node: KxKxG7YGQ66FV972Oc9bKA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:55.697133 ** Cache FetchForUpdate Cache Key Value: [u8YvfJjnT2qIOxpbAafkkA==]   sortk: A#
fetchItems: 2020/08/13 06:50:55.697159 +++  Cache FetchItems for sortk A# UID: [u8YvfJjnT2qIOxpbAafkkA==] 
FetchNode: 2020/08/13 06:50:55.697172  node: u8YvfJjnT2qIOxpbAafkkA== subKey: A#
DB: 2020/08/13 06:50:55.700607 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.374649ms
Unlock: 2020/08/13 06:50:55.702052 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:55.702750 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.790287ms
DB: 2020/08/13 06:50:55.708469 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.219641ms
DB: 2020/08/13 06:50:55.713170 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.657224ms
DB: 2020/08/13 06:50:55.713185 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.657224ms
DB: 2020/08/13 06:50:55.717839 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.62106ms
DB: 2020/08/13 06:50:55.717858 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.62106ms
DB: 2020/08/13 06:50:55.723780 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.558332ms
DB: 2020/08/13 06:50:55.729017 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.173786ms
Unlock: 2020/08/13 06:50:55.729041 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:50:55.735432 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.305025ms
DB: 2020/08/13 06:50:55.740435 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.822364ms
DB: 2020/08/13 06:50:55.745848 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.032223ms
DB: 2020/08/13 06:50:55.752594 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.403656ms
DB: 2020/08/13 06:50:55.757820 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.857967ms
DB: 2020/08/13 06:50:55.763248 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.986948ms
DB: 2020/08/13 06:50:55.769895 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.347691ms
DB: 2020/08/13 06:50:55.778080 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.748685ms
DB: 2020/08/13 06:50:55.783437 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.830178ms
DB: 2020/08/13 06:50:55.788764 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.040232ms
FetchForUpdate: 2020/08/13 06:50:55.788779 ** Cache FetchForUpdate Cache Key Value: [KxKxG7YGQ66FV972Oc9bKA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.788787 +++  Cache FetchItems for sortk A#G#:S UID: [KxKxG7YGQ66FV972Oc9bKA==] 
FetchNode: 2020/08/13 06:50:55.788793  node: KxKxG7YGQ66FV972Oc9bKA== subKey: A#G#:S
DB: 2020/08/13 06:50:55.792305 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.462805ms
AttachNode: gr1 2020/08/13 06:50:55.792391 Errored: SetUpredAvailable :for  KxKxG7YGQ66FV972Oc9bKA==
Cache: 2020/08/13 06:50:55.792399 In SetUpredAvailable: pUid, tUID:  KxKxG7YGQ66FV972Oc9bKA== eWGIoDdKS1iTsP+iii5RFg== A#G#:S
Cache: 2020/08/13 06:50:55.792403 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:55.797491 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.054477ms
Unlock: 2020/08/13 06:50:55.797501 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:55.802901 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.964211ms
DB: 2020/08/13 06:50:55.807213 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.810308 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.813177 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.816029 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.821864 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.786143ms
DB: 2020/08/13 06:50:55.827130 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.9228ms
FetchForUpdate: 2020/08/13 06:50:55.827284 ** Cache FetchForUpdate Cache Key Value: [4E828TwXTaaPT4SOKlhECg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.827296 +++  Cache FetchItems for sortk A#G#:S UID: [4E828TwXTaaPT4SOKlhECg==] 
FetchNode: 2020/08/13 06:50:55.827300  node: 4E828TwXTaaPT4SOKlhECg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:55.827484 ** Cache FetchForUpdate Cache Key Value: [KxKxG7YGQ66FV972Oc9bKA==]   sortk: A#
fetchItems: 2020/08/13 06:50:55.827493 +++  Cache FetchItems for sortk A# UID: [KxKxG7YGQ66FV972Oc9bKA==] 
FetchNode: 2020/08/13 06:50:55.827506  node: KxKxG7YGQ66FV972Oc9bKA== subKey: A#
DB: 2020/08/13 06:50:55.830341 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.005799ms
DB: 2020/08/13 06:50:55.831917 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.344111ms
Unlock: 2020/08/13 06:50:55.833372 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:55.835726 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.902321ms
DB: 2020/08/13 06:50:55.840475 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.717376ms
DB: 2020/08/13 06:50:55.840490 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.717376ms
DB: 2020/08/13 06:50:55.845546 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.009391ms
DB: 2020/08/13 06:50:55.845818 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.009391ms
DB: 2020/08/13 06:50:55.852817 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.751162ms
DB: 2020/08/13 06:50:55.858993 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.113579ms
Unlock: 2020/08/13 06:50:55.859016 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:50:55.865091 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.97535ms
DB: 2020/08/13 06:50:55.869944 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.78981ms
DB: 2020/08/13 06:50:55.878135 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 8.095198ms
DB: 2020/08/13 06:50:55.884956 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.535273ms
DB: 2020/08/13 06:50:55.890559 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.534457ms
DB: 2020/08/13 06:50:55.896363 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.736879ms
DB: 2020/08/13 06:50:55.902760 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.337003ms
DB: 2020/08/13 06:50:55.907680 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.863814ms
DB: 2020/08/13 06:50:55.912947 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.203871ms
DB: 2020/08/13 06:50:55.918328 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.315137ms
FetchForUpdate: 2020/08/13 06:50:55.918358 ** Cache FetchForUpdate Cache Key Value: [4E828TwXTaaPT4SOKlhECg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.918365 +++  Cache FetchItems for sortk A#G#:S UID: [4E828TwXTaaPT4SOKlhECg==] 
FetchNode: 2020/08/13 06:50:55.918369  node: 4E828TwXTaaPT4SOKlhECg== subKey: A#G#:S
DB: 2020/08/13 06:50:55.922821 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.417613ms
AttachNode: gr1 2020/08/13 06:50:55.922917 Errored: SetUpredAvailable :for  4E828TwXTaaPT4SOKlhECg==
Cache: 2020/08/13 06:50:55.922926 In SetUpredAvailable: pUid, tUID:  4E828TwXTaaPT4SOKlhECg== 8XAbG2UzR0SqIk7Fi9iT0g== A#G#:S
Cache: 2020/08/13 06:50:55.922930 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:55.927971 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.008924ms
Unlock: 2020/08/13 06:50:55.927983 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:55.933525 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.052965ms
DB: 2020/08/13 06:50:55.936698 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.939586 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.942916 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.946715 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:50:55.951687 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.920647ms
DB: 2020/08/13 06:50:55.956518 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.664562ms
FetchForUpdate: 2020/08/13 06:50:55.956537 ** Cache FetchForUpdate Cache Key Value: [u8YvfJjnT2qIOxpbAafkkA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:55.956544 +++  Cache FetchItems for sortk A#G#:S UID: [u8YvfJjnT2qIOxpbAafkkA==] 
FetchNode: 2020/08/13 06:50:55.956549  node: u8YvfJjnT2qIOxpbAafkkA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:50:55.956725 ** Cache FetchForUpdate Cache Key Value: [KxKxG7YGQ66FV972Oc9bKA==]   sortk: A#
fetchItems: 2020/08/13 06:50:55.956737 +++  Cache FetchItems for sortk A# UID: [KxKxG7YGQ66FV972Oc9bKA==] 
FetchNode: 2020/08/13 06:50:55.956759  node: KxKxG7YGQ66FV972Oc9bKA== subKey: A#
DB: 2020/08/13 06:50:55.960001 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.420279ms
DB: 2020/08/13 06:50:55.961110 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.266505ms
Unlock: 2020/08/13 06:50:55.961817 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:50:55.965868 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.530965ms
DB: 2020/08/13 06:50:55.970575 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.639105ms
DB: 2020/08/13 06:50:55.970590 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.639105ms
DB: 2020/08/13 06:50:55.975400 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.780248ms
DB: 2020/08/13 06:50:55.975418 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.780248ms
DB: 2020/08/13 06:50:55.980720 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.103381ms
DB: 2020/08/13 06:50:55.985941 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.051093ms
Unlock: 2020/08/13 06:50:55.985952 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:50:55.999734 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 13.123281ms
DB: 2020/08/13 06:50:56.004696 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.778991ms
DB: 2020/08/13 06:50:56.010220 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.136114ms
DB: 2020/08/13 06:50:56.017077 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.555898ms
DB: 2020/08/13 06:50:56.022885 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.489955ms
DB: 2020/08/13 06:50:56.028232 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.035785ms
DB: 2020/08/13 06:50:56.034332 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.773496ms
DB: 2020/08/13 06:50:56.039542 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.908686ms
DB: 2020/08/13 06:50:56.045082 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.133708ms
DB: 2020/08/13 06:50:56.050297 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.892193ms
FetchForUpdate: 2020/08/13 06:50:56.050310 ** Cache FetchForUpdate Cache Key Value: [u8YvfJjnT2qIOxpbAafkkA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:50:56.050316 +++  Cache FetchItems for sortk A#G#:S UID: [u8YvfJjnT2qIOxpbAafkkA==] 
FetchNode: 2020/08/13 06:50:56.050321  node: u8YvfJjnT2qIOxpbAafkkA== subKey: A#G#:S
DB: 2020/08/13 06:50:56.054880 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.522693ms
AttachNode: gr1 2020/08/13 06:50:56.055583 Errored: SetUpredAvailable :for  u8YvfJjnT2qIOxpbAafkkA==
Cache: 2020/08/13 06:50:56.055597 In SetUpredAvailable: pUid, tUID:  u8YvfJjnT2qIOxpbAafkkA== o0BH/N3OTyus5aUC617zrA== A#G#:S
Cache: 2020/08/13 06:50:56.055602 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:50:56.061693 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.055552ms
Unlock: 2020/08/13 06:50:56.061713 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:50:56.067517 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.272088ms
rdfLoader: 2020/08/13 06:50:56.067528 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:50:56.067538 Powering down...
rdfuuid: 2020/08/13 06:50:56.067544 Powering down...
DB:2020/08/13 06:55:04 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:55:04.921203 Powering on...
rdfLoader: 2020/08/13 06:55:04.921502 verify started....xx.
rdfLoader: 2020/08/13 06:55:04.921518 saveNode started......
rdfuuid: 2020/08/13 06:55:04.921532 Powering on...
rdfLoader: 2020/08/13 06:55:04.921538 *************** All started 
rdfLoader: 2020/08/13 06:55:04.932322 .  getType..
rdfLoader: 2020/08/13 06:55:04.932333 node.TyName : [Person]
DB: 2020/08/13 06:55:05.003719 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.332637ms
verify: 2020/08/13 06:55:05.003878 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:55:05.003887  Send Ask request to limiter.
verify: 2020/08/13 06:55:05.003893 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:55:05.003900 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:55:05.003907 ACK from gcmgr....received...
rdfLoader: 2020/08/13 06:55:05.003914 .  getType..
rdfLoader: 2020/08/13 06:55:05.003920 node.TyName : [Person]
verify: 2020/08/13 06:55:05.003942 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:55:05.003947  Send Ask request to limiter.
verify: 2020/08/13 06:55:05.003952 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:55:05.003958 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:55:05.003964 ACK from gcmgr....received...
verify: 2020/08/13 06:55:05.003971 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:55:05.004024 .  getType..
rdfLoader: 2020/08/13 06:55:05.004029 node.TyName : [Person]
verify: 2020/08/13 06:55:05.004052 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:55:05.004060  Send Ask request to limiter.
verify: 2020/08/13 06:55:05.004065 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:55:05.004070 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:55:05.004087 ACK from gcmgr....received...
rdfLoader: 2020/08/13 06:55:05.004104 .  getType..
rdfLoader: 2020/08/13 06:55:05.004109 node.TyName : [Person]
verify: 2020/08/13 06:55:05.004125 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:55:05.004130  Send Ask request to limiter.
verify: 2020/08/13 06:55:05.004134 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:55:05.004140 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:55:05.004145 ACK from gcmgr....received...
verify: 2020/08/13 06:55:05.004151 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:55:05.004155 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:55:05.004169 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:55:05.004175 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:55:05.004181 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:55:05.004187 Find Ty Address
rdfLoader: 2020/08/13 06:55:05.004192 Find Ty Age
rdfLoader: 2020/08/13 06:55:05.004198 Find Ty Cars
rdfLoader: 2020/08/13 06:55:05.004204 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:55:05.004209 Find Ty DOB
rdfLoader: 2020/08/13 06:55:05.004214 Find Ty Friends
rdfLoader: 2020/08/13 06:55:05.004218 Find Ty Jobs
rdfLoader: 2020/08/13 06:55:05.004223 Find Ty Name
rdfLoader: 2020/08/13 06:55:05.004228 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:55:05.004232 Find Ty Siblings
rdfLoader: 2020/08/13 06:55:05.004252 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:55:05.004278 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:55:05.004283 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:55:05.004290 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:55:05.004300 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:55:05.004306 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:55:05.004311 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:55:05.004317 Find Ty Address
rdfLoader: 2020/08/13 06:55:05.004322 Find Ty Age
rdfLoader: 2020/08/13 06:55:05.004327 Find Ty Cars
rdfLoader: 2020/08/13 06:55:05.004332 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:55:05.004337 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:55:05.004342 Find Ty DOB
rdfLoader: 2020/08/13 06:55:05.004347 Find Ty Friends
rdfLoader: 2020/08/13 06:55:05.004352 Find Ty Jobs
rdfLoader: 2020/08/13 06:55:05.004356 Find Ty Name
rdfLoader: 2020/08/13 06:55:05.004361 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:55:05.004366 Find Ty Siblings
rdfLoader: 2020/08/13 06:55:05.004378 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:55:05.004405 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:55:05.004414 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:55:05.004420 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:55:05.004431 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:55:05.004436 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:55:05.004441 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:55:05.004446 Find Ty Address
rdfLoader: 2020/08/13 06:55:05.004451 Find Ty Age
rdfLoader: 2020/08/13 06:55:05.004456 Find Ty Cars
rdfLoader: 2020/08/13 06:55:05.004461 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:55:05.004465 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:55:05.004470 Find Ty DOB
rdfLoader: 2020/08/13 06:55:05.004475 Find Ty Friends
rdfLoader: 2020/08/13 06:55:05.004479 Find Ty Jobs
rdfLoader: 2020/08/13 06:55:05.004484 Find Ty Name
rdfLoader: 2020/08/13 06:55:05.004489 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:55:05.004493 Find Ty Siblings
rdfLoader: 2020/08/13 06:55:05.004505 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:55:05.004531 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:55:05.004536 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:55:05.004541 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:55:05.004551 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:55:05.004556 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:55:05.004562 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:55:05.004567 Find Ty Address
rdfLoader: 2020/08/13 06:55:05.004572 Find Ty Age
rdfLoader: 2020/08/13 06:55:05.004577 Find Ty Cars
rdfLoader: 2020/08/13 06:55:05.004583 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:55:05.004588 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:55:05.004592 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:55:05.004597 Find Ty DOB
rdfLoader: 2020/08/13 06:55:05.004602 Find Ty Friends
rdfLoader: 2020/08/13 06:55:05.004606 Find Ty Jobs
rdfLoader: 2020/08/13 06:55:05.004611 Find Ty Name
rdfLoader: 2020/08/13 06:55:05.004616 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:55:05.004621 Find Ty Siblings
rdfLoader: 2020/08/13 06:55:05.004632 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:55:05.004657 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:55:05.004662 Exit  unmarshalRDF. 
verify: 2020/08/13 06:55:05.004668 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:55:05.004689 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.004696 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.004706 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.004712 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.004719 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.004725 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.004731 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:55:05.004736 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:55:05.004746 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000017560)}
SaveRDFNode: 2020/08/13 06:55:05.004751 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:55:05.004761 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.004766 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.004772 UID received  : Dpf5jkWtRQq5NGcoz00L+Q==
grmgr: 2020/08/13 06:55:05.004980 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:55:05.011641 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.83675ms
DB: 2020/08/13 06:55:05.015594 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.911239ms
DB: 2020/08/13 06:55:05.020843 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.210882ms
DB: 2020/08/13 06:55:05.024574 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.532178ms
DB: 2020/08/13 06:55:05.027926 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.31246ms
SaveRDFNode: 2020/08/13 06:55:05.027943 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017560)}
rdfUIDdb: 2020/08/13 06:55:05.027950 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.027955 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.027961 Received UID: X18=
SaveRDFNode: 2020/08/13 06:55:05.027975 a: = db.Item{PKey:[]uint8{0xe, 0x97, 0xf9, 0x8e, 0x45, 0xad, 0x45, 0xa, 0xb9, 0x34, 0x67, 0x28, 0xcf, 0x4d, 0xb, 0xf9}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:55:05.031686 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.625668ms
SaveRDFNode: 2020/08/13 06:55:05.031700 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017560)}
rdfUIDdb: 2020/08/13 06:55:05.031705 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.031709 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.031715 Received UID: X18=
SaveRDFNode: 2020/08/13 06:55:05.031725 a: = db.Item{PKey:[]uint8{0xe, 0x97, 0xf9, 0x8e, 0x45, 0xad, 0x45, 0xa, 0xb9, 0x34, 0x67, 0x28, 0xcf, 0x4d, 0xb, 0xf9}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:55:05.035201 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.443186ms
SaveRDFNode: 2020/08/13 06:55:05.035211 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:55:05.035223 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.035230 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.035237 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.035243 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.035261 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.035266 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.035272 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:55:05.035276 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:55:05.035283 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000386c00)}
SaveRDFNode: 2020/08/13 06:55:05.035304 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:55:05.035315 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.035319 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.035324 UID received  : vfqdlXowR4O87qbK5UY38g==
DB: 2020/08/13 06:55:05.038812 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.459641ms
DB: 2020/08/13 06:55:05.042476 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.443809ms
DB: 2020/08/13 06:55:05.046127 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.61236ms
DB: 2020/08/13 06:55:05.049479 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.318311ms
DB: 2020/08/13 06:55:05.052738 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.22791ms
SaveRDFNode: 2020/08/13 06:55:05.052753 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386c00)}
rdfUIDdb: 2020/08/13 06:55:05.052760 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.052764 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.052770 Received UID: X18=
SaveRDFNode: 2020/08/13 06:55:05.052782 a: = db.Item{PKey:[]uint8{0xbd, 0xfa, 0x9d, 0x95, 0x7a, 0x30, 0x47, 0x83, 0xbc, 0xee, 0xa6, 0xca, 0xe5, 0x46, 0x37, 0xf2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:55:05.056298 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.485622ms
SaveRDFNode: 2020/08/13 06:55:05.056315 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386c00)}
rdfUIDdb: 2020/08/13 06:55:05.056322 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.056327 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.056333 Received UID: X18=
SaveRDFNode: 2020/08/13 06:55:05.056344 a: = db.Item{PKey:[]uint8{0xbd, 0xfa, 0x9d, 0x95, 0x7a, 0x30, 0x47, 0x83, 0xbc, 0xee, 0xa6, 0xca, 0xe5, 0x46, 0x37, 0xf2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:55:05.059718 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.343002ms
SaveRDFNode: 2020/08/13 06:55:05.059730 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:55:05.059739 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.059745 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.059753 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.059759 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.059764 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.059770 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.059776 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:55:05.059790 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:55:05.059796 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017860)}
SaveRDFNode: 2020/08/13 06:55:05.059800 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:55:05.059827 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.059832 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.059838 UID received  : HOjCC0zfSTOv/egSfBjEMw==
DB: 2020/08/13 06:55:05.063219 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.354325ms
DB: 2020/08/13 06:55:05.066627 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.376799ms
DB: 2020/08/13 06:55:05.069797 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.115514ms
DB: 2020/08/13 06:55:05.073164 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.336063ms
DB: 2020/08/13 06:55:05.076653 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.308039ms
SaveRDFNode: 2020/08/13 06:55:05.076686 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017860)}
rdfUIDdb: 2020/08/13 06:55:05.076694 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.076698 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.076704 Received UID: X18=
SaveRDFNode: 2020/08/13 06:55:05.076716 a: = db.Item{PKey:[]uint8{0x1c, 0xe8, 0xc2, 0xb, 0x4c, 0xdf, 0x49, 0x33, 0xaf, 0xfd, 0xe8, 0x12, 0x7c, 0x18, 0xc4, 0x33}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:55:05.080057 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.309323ms
SaveRDFNode: 2020/08/13 06:55:05.080070 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017860)}
rdfUIDdb: 2020/08/13 06:55:05.080128 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.080135 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.080142 Received UID: X18=
SaveRDFNode: 2020/08/13 06:55:05.080153 a: = db.Item{PKey:[]uint8{0x1c, 0xe8, 0xc2, 0xb, 0x4c, 0xdf, 0x49, 0x33, 0xaf, 0xfd, 0xe8, 0x12, 0x7c, 0x18, 0xc4, 0x33}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:55:05.083552 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.363666ms
SaveRDFNode: 2020/08/13 06:55:05.083562 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:55:05.083570 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.083576 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.083584 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.083591 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.083597 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.083606 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:55:05.083612 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:55:05.083616 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:55:05.083622 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000386f00)}
SaveRDFNode: 2020/08/13 06:55:05.083626 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:55:05.083664 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.083669 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.083675 UID received  : oStoRQisSYynX5HUtWkljA==
DB: 2020/08/13 06:55:05.086987 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.28495ms
DB: 2020/08/13 06:55:05.090542 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.501513ms
DB: 2020/08/13 06:55:05.094134 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.349902ms
DB: 2020/08/13 06:55:05.097419 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.250235ms
DB: 2020/08/13 06:55:05.100579 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.128458ms
SaveRDFNode: 2020/08/13 06:55:05.100592 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386f00)}
rdfUIDdb: 2020/08/13 06:55:05.100599 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.100603 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.100609 Received UID: X18=
SaveRDFNode: 2020/08/13 06:55:05.100621 a: = db.Item{PKey:[]uint8{0xa1, 0x2b, 0x68, 0x45, 0x8, 0xac, 0x49, 0x8c, 0xa7, 0x5f, 0x91, 0xd4, 0xb5, 0x69, 0x25, 0x8c}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:55:05.103863 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.21365ms
SaveRDFNode: 2020/08/13 06:55:05.103876 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386f00)}
rdfUIDdb: 2020/08/13 06:55:05.103881 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:55:05.103886 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:55:05.103891 Received UID: X18=
SaveRDFNode: 2020/08/13 06:55:05.103901 a: = db.Item{PKey:[]uint8{0xa1, 0x2b, 0x68, 0x45, 0x8, 0xac, 0x49, 0x8c, 0xa7, 0x5f, 0x91, 0xd4, 0xb5, 0x69, 0x25, 0x8c}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:55:05.107399 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.468847ms
SaveRDFNode: 2020/08/13 06:55:05.107548 Returned.+++++++++++ No error
DB: 2020/08/13 06:55:05.110858 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.116283 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.119122 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.121688 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.125699 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.957167ms
DB: 2020/08/13 06:55:05.132773 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.373965ms
FetchForUpdate: 2020/08/13 06:55:05.132790 ** Cache FetchForUpdate Cache Key Value: [HOjCC0zfSTOv/egSfBjEMw==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:55:05.132796  node: HOjCC0zfSTOv/egSfBjEMw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:55:05.132974 ** Cache FetchForUpdate Cache Key Value: [vfqdlXowR4O87qbK5UY38g==]   sortk: A#
FetchNode: 2020/08/13 06:55:05.133002  node: vfqdlXowR4O87qbK5UY38g== subKey: A#
DB: 2020/08/13 06:55:05.135525 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.696203ms
FetchForUpdate: 2020/08/13 06:55:05.135567 len(nb): 1
fetchItems: 2020/08/13 06:55:05.135575 +++  Cache FetchItems for sortk A#G#:S UID: [HOjCC0zfSTOv/egSfBjEMw==] 
FetchNode: 2020/08/13 06:55:05.135580  node: HOjCC0zfSTOv/egSfBjEMw== subKey: A#G#:S
DB: 2020/08/13 06:55:05.139014 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 5.933786ms
FetchForUpdate: 2020/08/13 06:55:05.139142 len(nb): 7
fetchItems: 2020/08/13 06:55:05.139151 +++  Cache FetchItems for sortk A# UID: [vfqdlXowR4O87qbK5UY38g==] 
FetchNode: 2020/08/13 06:55:05.139156  node: vfqdlXowR4O87qbK5UY38g== subKey: A#
DB: 2020/08/13 06:55:05.142912 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 7.304454ms
DB: 2020/08/13 06:55:05.147389 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.745767ms
Unlock: 2020/08/13 06:55:05.147400 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:55:05.154853 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 15.667641ms
Unlock: 2020/08/13 06:55:05.154985 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:55:05.155012 ** Cache FetchForUpdate Cache Key Value: [HOjCC0zfSTOv/egSfBjEMw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.155018 +++  Cache FetchItems for sortk A#G#:S UID: [HOjCC0zfSTOv/egSfBjEMw==] 
FetchNode: 2020/08/13 06:55:05.155023  node: HOjCC0zfSTOv/egSfBjEMw== subKey: A#G#:S
DB: 2020/08/13 06:55:05.168454 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 13.401164ms
DB: 2020/08/13 06:55:05.174443 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.877416ms
DB: 2020/08/13 06:55:05.178611 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.629378ms
DB: 2020/08/13 06:55:05.183747 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.959649ms
DB: 2020/08/13 06:55:05.189981 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.544266ms
DB: 2020/08/13 06:55:05.194658 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.099514ms
DB: 2020/08/13 06:55:05.199023 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.824245ms
DB: 2020/08/13 06:55:05.206030 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.358675ms
DB: 2020/08/13 06:55:05.210322 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.641394ms
DB: 2020/08/13 06:55:05.214828 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.960334ms
Unlock: 2020/08/13 06:55:05.214843 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:55:05.219377 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.870866ms
FetchForUpdate: 2020/08/13 06:55:05.219516 ** Cache FetchForUpdate Cache Key Value: [HOjCC0zfSTOv/egSfBjEMw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.219527 +++  Cache FetchItems for sortk A#G#:S UID: [HOjCC0zfSTOv/egSfBjEMw==] 
FetchNode: 2020/08/13 06:55:05.219533  node: HOjCC0zfSTOv/egSfBjEMw== subKey: A#G#:S
DB: 2020/08/13 06:55:05.222245 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.677752ms
AttachNode: gr1 2020/08/13 06:55:05.222455 Errored: SetUpredAvailable :for  HOjCC0zfSTOv/egSfBjEMw==
Cache: 2020/08/13 06:55:05.222466 In SetUpredAvailable: pUid, tUID:  HOjCC0zfSTOv/egSfBjEMw== HOjCC0zfSTOv/egSfBjEMw== A#G#:S
Cache: 2020/08/13 06:55:05.222471 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:55:05.226403 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.899881ms
Unlock: 2020/08/13 06:55:05.226425 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:55:05.234390 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.57308ms
DB: 2020/08/13 06:55:05.237444 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.240240 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.243211 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.246023 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.249808 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.718228ms
DB: 2020/08/13 06:55:05.254208 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.043324ms
FetchForUpdate: 2020/08/13 06:55:05.254225 ** Cache FetchForUpdate Cache Key Value: [oStoRQisSYynX5HUtWkljA==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:55:05.254232  node: oStoRQisSYynX5HUtWkljA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:55:05.254510 ** Cache FetchForUpdate Cache Key Value: [vfqdlXowR4O87qbK5UY38g==]   sortk: A#
fetchItems: 2020/08/13 06:55:05.254532 +++  Cache FetchItems for sortk A# UID: [vfqdlXowR4O87qbK5UY38g==] 
FetchNode: 2020/08/13 06:55:05.254544  node: vfqdlXowR4O87qbK5UY38g== subKey: A#
DB: 2020/08/13 06:55:05.257656 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.290201ms
FetchForUpdate: 2020/08/13 06:55:05.257811 len(nb): 1
fetchItems: 2020/08/13 06:55:05.257821 +++  Cache FetchItems for sortk A#G#:S UID: [oStoRQisSYynX5HUtWkljA==] 
FetchNode: 2020/08/13 06:55:05.257825  node: oStoRQisSYynX5HUtWkljA== subKey: A#G#:S
DB: 2020/08/13 06:55:05.261092 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.236212ms
DB: 2020/08/13 06:55:05.265213 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.774051ms
Unlock: 2020/08/13 06:55:05.265224 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:55:05.266574 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 11.952322ms
Unlock: 2020/08/13 06:55:05.267615 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:55:05.267987 ** Cache FetchForUpdate Cache Key Value: [oStoRQisSYynX5HUtWkljA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.267997 +++  Cache FetchItems for sortk A#G#:S UID: [oStoRQisSYynX5HUtWkljA==] 
FetchNode: 2020/08/13 06:55:05.268001  node: oStoRQisSYynX5HUtWkljA== subKey: A#G#:S
DB: 2020/08/13 06:55:05.271226 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.911001ms
DB: 2020/08/13 06:55:05.278129 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.162582ms
DB: 2020/08/13 06:55:05.281902 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.410254ms
DB: 2020/08/13 06:55:05.286189 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.655425ms
DB: 2020/08/13 06:55:05.292715 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.996591ms
DB: 2020/08/13 06:55:05.297329 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.585968ms
DB: 2020/08/13 06:55:05.301189 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.791996ms
DB: 2020/08/13 06:55:05.307574 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.321345ms
DB: 2020/08/13 06:55:05.310911 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.274333ms
DB: 2020/08/13 06:55:05.314641 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.65132ms
Unlock: 2020/08/13 06:55:05.314657 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:55:05.318539 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.29181ms
FetchForUpdate: 2020/08/13 06:55:05.318562 ** Cache FetchForUpdate Cache Key Value: [oStoRQisSYynX5HUtWkljA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.318569 +++  Cache FetchItems for sortk A#G#:S UID: [oStoRQisSYynX5HUtWkljA==] 
FetchNode: 2020/08/13 06:55:05.318573  node: oStoRQisSYynX5HUtWkljA== subKey: A#G#:S
DB: 2020/08/13 06:55:05.321958 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.323879ms
AttachNode: gr1 2020/08/13 06:55:05.322032 Errored: SetUpredAvailable :for  oStoRQisSYynX5HUtWkljA==
Cache: 2020/08/13 06:55:05.322103 In SetUpredAvailable: pUid, tUID:  oStoRQisSYynX5HUtWkljA== oStoRQisSYynX5HUtWkljA== A#G#:S
Cache: 2020/08/13 06:55:05.322110 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:55:05.325482 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.33671ms
Unlock: 2020/08/13 06:55:05.325491 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:55:05.332372 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.472791ms
DB: 2020/08/13 06:55:05.334823 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.336912 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.339250 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.341598 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.345930 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.280972ms
DB: 2020/08/13 06:55:05.349914 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.634426ms
FetchForUpdate: 2020/08/13 06:55:05.350082 ** Cache FetchForUpdate Cache Key Value: [vfqdlXowR4O87qbK5UY38g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.350095 +++  Cache FetchItems for sortk A#G#:S UID: [vfqdlXowR4O87qbK5UY38g==] 
FetchNode: 2020/08/13 06:55:05.350100  node: vfqdlXowR4O87qbK5UY38g== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:55:05.350348 ** Cache FetchForUpdate Cache Key Value: [HOjCC0zfSTOv/egSfBjEMw==]   sortk: A#
fetchItems: 2020/08/13 06:55:05.350358 +++  Cache FetchItems for sortk A# UID: [HOjCC0zfSTOv/egSfBjEMw==] 
FetchNode: 2020/08/13 06:55:05.350396  node: HOjCC0zfSTOv/egSfBjEMw== subKey: A#
DB: 2020/08/13 06:55:05.354147 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.700027ms
Unlock: 2020/08/13 06:55:05.355580 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:55:05.356163 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 6.026178ms
DB: 2020/08/13 06:55:05.360714 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.4522ms
Unlock: 2020/08/13 06:55:05.360725 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:55:05.360758 ** Cache FetchForUpdate Cache Key Value: [vfqdlXowR4O87qbK5UY38g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.360765 +++  Cache FetchItems for sortk A#G#:S UID: [vfqdlXowR4O87qbK5UY38g==] 
FetchNode: 2020/08/13 06:55:05.360770  node: vfqdlXowR4O87qbK5UY38g== subKey: A#G#:S
DB: 2020/08/13 06:55:05.363410 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.61064ms
DB: 2020/08/13 06:55:05.369193 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.178073ms
DB: 2020/08/13 06:55:05.373030 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.445429ms
DB: 2020/08/13 06:55:05.377313 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.674194ms
DB: 2020/08/13 06:55:05.383792 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.944305ms
DB: 2020/08/13 06:55:05.387762 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.298999ms
DB: 2020/08/13 06:55:05.391335 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.506607ms
DB: 2020/08/13 06:55:05.397424 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.007401ms
DB: 2020/08/13 06:55:05.401021 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.543728ms
DB: 2020/08/13 06:55:05.404624 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.53953ms
Unlock: 2020/08/13 06:55:05.404639 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:55:05.408059 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.332731ms
FetchForUpdate: 2020/08/13 06:55:05.408072 ** Cache FetchForUpdate Cache Key Value: [vfqdlXowR4O87qbK5UY38g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.408135 +++  Cache FetchItems for sortk A#G#:S UID: [vfqdlXowR4O87qbK5UY38g==] 
FetchNode: 2020/08/13 06:55:05.408143  node: vfqdlXowR4O87qbK5UY38g== subKey: A#G#:S
DB: 2020/08/13 06:55:05.411346 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.15364ms
AttachNode: gr1 2020/08/13 06:55:05.411445 Errored: SetUpredAvailable :for  vfqdlXowR4O87qbK5UY38g==
Cache: 2020/08/13 06:55:05.411454 In SetUpredAvailable: pUid, tUID:  vfqdlXowR4O87qbK5UY38g== vfqdlXowR4O87qbK5UY38g== A#G#:S
Cache: 2020/08/13 06:55:05.411459 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:55:05.414897 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.405195ms
Unlock: 2020/08/13 06:55:05.414907 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:55:05.418836 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.82334ms
DB: 2020/08/13 06:55:05.420984 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.423927 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.426457 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.428838 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.432580 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.670632ms
DB: 2020/08/13 06:55:05.437153 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.278559ms
FetchForUpdate: 2020/08/13 06:55:05.437172 ** Cache FetchForUpdate Cache Key Value: [oStoRQisSYynX5HUtWkljA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.437180 +++  Cache FetchItems for sortk A#G#:S UID: [oStoRQisSYynX5HUtWkljA==] 
FetchNode: 2020/08/13 06:55:05.437185  node: oStoRQisSYynX5HUtWkljA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:55:05.437516 ** Cache FetchForUpdate Cache Key Value: [HOjCC0zfSTOv/egSfBjEMw==]   sortk: A#
fetchItems: 2020/08/13 06:55:05.437528 +++  Cache FetchItems for sortk A# UID: [HOjCC0zfSTOv/egSfBjEMw==] 
FetchNode: 2020/08/13 06:55:05.437568  node: HOjCC0zfSTOv/egSfBjEMw== subKey: A#
DB: 2020/08/13 06:55:05.439904 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.685355ms
DB: 2020/08/13 06:55:05.441063 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.427998ms
Unlock: 2020/08/13 06:55:05.441974 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:55:05.444206 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.752582ms
DB: 2020/08/13 06:55:05.447613 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.352453ms
DB: 2020/08/13 06:55:05.447629 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.352453ms
DB: 2020/08/13 06:55:05.450903 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.243715ms
DB: 2020/08/13 06:55:05.450918 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.243715ms
DB: 2020/08/13 06:55:05.454889 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.736167ms
DB: 2020/08/13 06:55:05.458857 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.58153ms
Unlock: 2020/08/13 06:55:05.458874 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:55:05.464920 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.957436ms
DB: 2020/08/13 06:55:05.468393 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.394955ms
DB: 2020/08/13 06:55:05.472243 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.696559ms
DB: 2020/08/13 06:55:05.478374 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.021859ms
DB: 2020/08/13 06:55:05.482327 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.881809ms
DB: 2020/08/13 06:55:05.485994 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.589912ms
DB: 2020/08/13 06:55:05.492067 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.00445ms
DB: 2020/08/13 06:55:05.495660 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.315046ms
DB: 2020/08/13 06:55:05.499315 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.551711ms
DB: 2020/08/13 06:55:05.502747 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.366696ms
FetchForUpdate: 2020/08/13 06:55:05.502759 ** Cache FetchForUpdate Cache Key Value: [oStoRQisSYynX5HUtWkljA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.502766 +++  Cache FetchItems for sortk A#G#:S UID: [oStoRQisSYynX5HUtWkljA==] 
FetchNode: 2020/08/13 06:55:05.502770  node: oStoRQisSYynX5HUtWkljA== subKey: A#G#:S
DB: 2020/08/13 06:55:05.505923 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.117909ms
AttachNode: gr1 2020/08/13 06:55:05.506035 Errored: SetUpredAvailable :for  oStoRQisSYynX5HUtWkljA==
Cache: 2020/08/13 06:55:05.506045 In SetUpredAvailable: pUid, tUID:  oStoRQisSYynX5HUtWkljA== /F6HBAO7RHGYPg9TBJmm5g== A#G#:S
Cache: 2020/08/13 06:55:05.506050 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:55:05.509449 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.365173ms
Unlock: 2020/08/13 06:55:05.509637 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:55:05.514050 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.874809ms
DB: 2020/08/13 06:55:05.516748 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.519647 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.522312 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.524704 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.528670 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.909235ms
DB: 2020/08/13 06:55:05.533092 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.007093ms
FetchForUpdate: 2020/08/13 06:55:05.533109 ** Cache FetchForUpdate Cache Key Value: [vfqdlXowR4O87qbK5UY38g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.533130 +++  Cache FetchItems for sortk A#G#:S UID: [vfqdlXowR4O87qbK5UY38g==] 
FetchNode: 2020/08/13 06:55:05.533137  node: vfqdlXowR4O87qbK5UY38g== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:55:05.533793 ** Cache FetchForUpdate Cache Key Value: [oStoRQisSYynX5HUtWkljA==]   sortk: A#
fetchItems: 2020/08/13 06:55:05.533827 +++  Cache FetchItems for sortk A# UID: [oStoRQisSYynX5HUtWkljA==] 
FetchNode: 2020/08/13 06:55:05.533843  node: oStoRQisSYynX5HUtWkljA== subKey: A#
DB: 2020/08/13 06:55:05.536295 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.11224ms
DB: 2020/08/13 06:55:05.537668 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.770964ms
Unlock: 2020/08/13 06:55:05.538379 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:55:05.540277 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.632967ms
DB: 2020/08/13 06:55:05.543582 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.270661ms
DB: 2020/08/13 06:55:05.543603 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.270661ms
DB: 2020/08/13 06:55:05.546912 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.273755ms
DB: 2020/08/13 06:55:05.546929 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.273755ms
DB: 2020/08/13 06:55:05.550483 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.478752ms
DB: 2020/08/13 06:55:05.586066 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 35.507912ms
Unlock: 2020/08/13 06:55:05.586094 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:55:05.593485 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.203772ms
DB: 2020/08/13 06:55:05.596948 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.282268ms
DB: 2020/08/13 06:55:05.601886 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.551458ms
DB: 2020/08/13 06:55:05.614112 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 11.798027ms
DB: 2020/08/13 06:55:05.618279 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.833208ms
DB: 2020/08/13 06:55:05.622185 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.840484ms
DB: 2020/08/13 06:55:05.628203 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.95544ms
DB: 2020/08/13 06:55:05.631635 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.366429ms
DB: 2020/08/13 06:55:05.635322 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.620256ms
DB: 2020/08/13 06:55:05.638739 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.361765ms
FetchForUpdate: 2020/08/13 06:55:05.638751 ** Cache FetchForUpdate Cache Key Value: [vfqdlXowR4O87qbK5UY38g==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.638757 +++  Cache FetchItems for sortk A#G#:S UID: [vfqdlXowR4O87qbK5UY38g==] 
FetchNode: 2020/08/13 06:55:05.638762  node: vfqdlXowR4O87qbK5UY38g== subKey: A#G#:S
DB: 2020/08/13 06:55:05.641906 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.097638ms
AttachNode: gr1 2020/08/13 06:55:05.642007 Errored: SetUpredAvailable :for  vfqdlXowR4O87qbK5UY38g==
Cache: 2020/08/13 06:55:05.642015 In SetUpredAvailable: pUid, tUID:  vfqdlXowR4O87qbK5UY38g== cxxsfvKSQo6p6zm0GdXMdw== A#G#:S
Cache: 2020/08/13 06:55:05.642020 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:55:05.645403 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.351323ms
Unlock: 2020/08/13 06:55:05.645414 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:55:05.649793 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.943413ms
DB: 2020/08/13 06:55:05.651823 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.654607 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.657286 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.659981 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:55:05.664749 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.719177ms
DB: 2020/08/13 06:55:05.668843 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.01043ms
FetchForUpdate: 2020/08/13 06:55:05.668857 ** Cache FetchForUpdate Cache Key Value: [HOjCC0zfSTOv/egSfBjEMw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.668863 +++  Cache FetchItems for sortk A#G#:S UID: [HOjCC0zfSTOv/egSfBjEMw==] 
FetchNode: 2020/08/13 06:55:05.668868  node: HOjCC0zfSTOv/egSfBjEMw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:55:05.669050 ** Cache FetchForUpdate Cache Key Value: [oStoRQisSYynX5HUtWkljA==]   sortk: A#
fetchItems: 2020/08/13 06:55:05.669059 +++  Cache FetchItems for sortk A# UID: [oStoRQisSYynX5HUtWkljA==] 
FetchNode: 2020/08/13 06:55:05.669071  node: oStoRQisSYynX5HUtWkljA== subKey: A#
DB: 2020/08/13 06:55:05.672073 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.171492ms
DB: 2020/08/13 06:55:05.672984 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.836927ms
Unlock: 2020/08/13 06:55:05.673678 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:55:05.676084 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.634687ms
DB: 2020/08/13 06:55:05.679282 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.162022ms
DB: 2020/08/13 06:55:05.679299 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.162022ms
DB: 2020/08/13 06:55:05.682546 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.214158ms
DB: 2020/08/13 06:55:05.682569 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.214158ms
DB: 2020/08/13 06:55:05.686593 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.865956ms
DB: 2020/08/13 06:55:05.690283 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.543436ms
Unlock: 2020/08/13 06:55:05.690299 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:55:05.697006 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.040195ms
DB: 2020/08/13 06:55:05.700586 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.377078ms
DB: 2020/08/13 06:55:05.704636 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.661022ms
DB: 2020/08/13 06:55:05.710901 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.950395ms
DB: 2020/08/13 06:55:05.714697 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.432843ms
DB: 2020/08/13 06:55:05.718900 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.644307ms
DB: 2020/08/13 06:55:05.725545 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.070985ms
DB: 2020/08/13 06:55:05.729314 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.317553ms
DB: 2020/08/13 06:55:05.733571 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.758893ms
DB: 2020/08/13 06:55:05.737454 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.474289ms
FetchForUpdate: 2020/08/13 06:55:05.737467 ** Cache FetchForUpdate Cache Key Value: [HOjCC0zfSTOv/egSfBjEMw==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:55:05.737473 +++  Cache FetchItems for sortk A#G#:S UID: [HOjCC0zfSTOv/egSfBjEMw==] 
FetchNode: 2020/08/13 06:55:05.737478  node: HOjCC0zfSTOv/egSfBjEMw== subKey: A#G#:S
DB: 2020/08/13 06:55:05.740855 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.344885ms
AttachNode: gr1 2020/08/13 06:55:05.740938 Errored: SetUpredAvailable :for  HOjCC0zfSTOv/egSfBjEMw==
Cache: 2020/08/13 06:55:05.740945 In SetUpredAvailable: pUid, tUID:  HOjCC0zfSTOv/egSfBjEMw== 9TAw6MDfRtqB9LlHqDjaEA== A#G#:S
Cache: 2020/08/13 06:55:05.740950 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:55:05.746014 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.033463ms
Unlock: 2020/08/13 06:55:05.746024 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:55:05.749792 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.691615ms
rdfLoader: 2020/08/13 06:55:05.749807 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:55:05.749818 Powering down...
rdfuuid: 2020/08/13 06:55:05.749826 Powering down...
DB:2020/08/13 06:59:28 log.go:18: ===============================================================================
grmgr: 2020/08/13 06:59:28.212701 Powering on...
rdfLoader: 2020/08/13 06:59:28.212982 verify started....xx.
rdfLoader: 2020/08/13 06:59:28.212998 saveNode started......
rdfuuid: 2020/08/13 06:59:28.213012 Powering on...
rdfLoader: 2020/08/13 06:59:28.213018 *************** All started 
rdfLoader: 2020/08/13 06:59:28.220282 .  getType..
rdfLoader: 2020/08/13 06:59:28.220292 node.TyName : [Person]
DB: 2020/08/13 06:59:28.289122 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 68.766452ms
verify: 2020/08/13 06:59:28.289272 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 06:59:28.289291  Send Ask request to limiter.
verify: 2020/08/13 06:59:28.289296 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:59:28.289303 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:59:28.289309 ACK from gcmgr....received...
rdfLoader: 2020/08/13 06:59:28.289328 .  getType..
rdfLoader: 2020/08/13 06:59:28.289333 node.TyName : [Person]
verify: 2020/08/13 06:59:28.289352 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 06:59:28.289368  Send Ask request to limiter.
verify: 2020/08/13 06:59:28.289373 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:59:28.289378 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:59:28.289384 ACK from gcmgr....received...
verify: 2020/08/13 06:59:28.289391 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 06:59:28.289442 .  getType..
rdfLoader: 2020/08/13 06:59:28.289447 node.TyName : [Person]
verify: 2020/08/13 06:59:28.289466 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 06:59:28.289471  Send Ask request to limiter.
verify: 2020/08/13 06:59:28.289476 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:59:28.289481 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:59:28.289486 ACK from gcmgr....received...
rdfLoader: 2020/08/13 06:59:28.289492 .  getType..
rdfLoader: 2020/08/13 06:59:28.289496 node.TyName : [Person]
verify: 2020/08/13 06:59:28.289511 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 06:59:28.289515  Send Ask request to limiter.
verify: 2020/08/13 06:59:28.289519 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 06:59:28.289524 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 06:59:28.289530 ACK from gcmgr....received...
verify: 2020/08/13 06:59:28.289535 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 06:59:28.289539 verify at wg.Wait() .....
unmarshalRDF2020/08/13 06:59:28.289552 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:59:28.289559 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 06:59:28.289569 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 06:59:28.289574 Find Ty Address
rdfLoader: 2020/08/13 06:59:28.289578 Find Ty Age
rdfLoader: 2020/08/13 06:59:28.289584 Find Ty Cars
rdfLoader: 2020/08/13 06:59:28.289590 Add to SS . [Bentley]
rdfLoader: 2020/08/13 06:59:28.289595 Find Ty DOB
rdfLoader: 2020/08/13 06:59:28.289599 Find Ty Friends
rdfLoader: 2020/08/13 06:59:28.289604 Find Ty Jobs
rdfLoader: 2020/08/13 06:59:28.289608 Find Ty Name
rdfLoader: 2020/08/13 06:59:28.289613 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:59:28.289617 Find Ty Siblings
rdfLoader: 2020/08/13 06:59:28.289635 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:59:28.289679 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:59:28.289684 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:59:28.289691 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 06:59:28.289701 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:59:28.289719 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 06:59:28.289724 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 06:59:28.289729 Find Ty Address
rdfLoader: 2020/08/13 06:59:28.289733 Find Ty Age
rdfLoader: 2020/08/13 06:59:28.289737 Find Ty Cars
rdfLoader: 2020/08/13 06:59:28.289742 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:59:28.289747 Add to SS . [Alfa]
rdfLoader: 2020/08/13 06:59:28.289751 Find Ty DOB
rdfLoader: 2020/08/13 06:59:28.289755 Find Ty Friends
rdfLoader: 2020/08/13 06:59:28.289771 Find Ty Jobs
rdfLoader: 2020/08/13 06:59:28.289775 Find Ty Name
rdfLoader: 2020/08/13 06:59:28.289780 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:59:28.289785 Find Ty Siblings
rdfLoader: 2020/08/13 06:59:28.289798 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:59:28.289828 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:59:28.289834 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:59:28.289840 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 06:59:28.289849 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:59:28.289855 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 06:59:28.289860 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 06:59:28.289865 Find Ty Address
rdfLoader: 2020/08/13 06:59:28.289869 Find Ty Age
rdfLoader: 2020/08/13 06:59:28.289874 Find Ty Cars
rdfLoader: 2020/08/13 06:59:28.289879 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:59:28.289883 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 06:59:28.289888 Find Ty DOB
rdfLoader: 2020/08/13 06:59:28.289908 Find Ty Friends
rdfLoader: 2020/08/13 06:59:28.289913 Find Ty Jobs
rdfLoader: 2020/08/13 06:59:28.289918 Find Ty Name
rdfLoader: 2020/08/13 06:59:28.289923 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:59:28.289927 Find Ty Siblings
rdfLoader: 2020/08/13 06:59:28.289939 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:59:28.289972 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:59:28.289977 Exit  unmarshalRDF. 
grmgr: 2020/08/13 06:59:28.289983 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 06:59:28.290006 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 06:59:28.290012 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 06:59:28.290018 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 06:59:28.290022 Find Ty Address
rdfLoader: 2020/08/13 06:59:28.290027 Find Ty Age
rdfLoader: 2020/08/13 06:59:28.290033 Find Ty Cars
rdfLoader: 2020/08/13 06:59:28.290038 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 06:59:28.290043 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 06:59:28.290048 Add to SS . [Honda]
rdfLoader: 2020/08/13 06:59:28.290053 Find Ty DOB
rdfLoader: 2020/08/13 06:59:28.290070 Find Ty Friends
rdfLoader: 2020/08/13 06:59:28.290074 Find Ty Jobs
rdfLoader: 2020/08/13 06:59:28.290078 Find Ty Name
rdfLoader: 2020/08/13 06:59:28.290083 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 06:59:28.290088 Find Ty Siblings
rdfLoader: 2020/08/13 06:59:28.290099 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 06:59:28.290123 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 06:59:28.290128 Exit  unmarshalRDF. 
verify: 2020/08/13 06:59:28.290133 verify exited.....
SaveRDFNode: xxx 2020/08/13 06:59:28.290154 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.290160 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.290167 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.290173 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.290179 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.290185 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.290191 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:59:28.290195 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:59:28.290202 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000384660)}
SaveRDFNode: 2020/08/13 06:59:28.290207 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:59:28.290218 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.290223 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.290228 UID received  : N47BhaqXQY6lyzEGQZQgiA==
grmgr: 2020/08/13 06:59:28.290457 EndCh received for unmarshall. rCnt = 4 
DB: 2020/08/13 06:59:28.297318 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.057139ms
DB: 2020/08/13 06:59:28.300607 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.254921ms
DB: 2020/08/13 06:59:28.303801 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.161887ms
DB: 2020/08/13 06:59:28.307132 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.284018ms
DB: 2020/08/13 06:59:28.310567 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.274475ms
SaveRDFNode: 2020/08/13 06:59:28.310580 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384660)}
rdfUIDdb: 2020/08/13 06:59:28.310587 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.310591 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.310596 Received UID: X18=
SaveRDFNode: 2020/08/13 06:59:28.310609 a: = db.Item{PKey:[]uint8{0x37, 0x8e, 0xc1, 0x85, 0xaa, 0x97, 0x41, 0x8e, 0xa5, 0xcb, 0x31, 0x6, 0x41, 0x94, 0x20, 0x88}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:59:28.313933 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.294871ms
SaveRDFNode: 2020/08/13 06:59:28.313946 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384660)}
rdfUIDdb: 2020/08/13 06:59:28.313952 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.313956 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.313961 Received UID: X18=
SaveRDFNode: 2020/08/13 06:59:28.313971 a: = db.Item{PKey:[]uint8{0x37, 0x8e, 0xc1, 0x85, 0xaa, 0x97, 0x41, 0x8e, 0xa5, 0xcb, 0x31, 0x6, 0x41, 0x94, 0x20, 0x88}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:59:28.317742 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.741232ms
SaveRDFNode: 2020/08/13 06:59:28.317752 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:59:28.317760 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.317766 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.317773 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.317782 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.317787 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.317793 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.317799 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:59:28.317803 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:59:28.317808 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000385620)}
SaveRDFNode: 2020/08/13 06:59:28.317813 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:59:28.317820 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.317824 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.317830 UID received  : LXqPJ4q4TWuNvTvQi7JDPA==
DB: 2020/08/13 06:59:28.321197 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.323714ms
DB: 2020/08/13 06:59:28.324478 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.250148ms
DB: 2020/08/13 06:59:28.328058 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.397595ms
DB: 2020/08/13 06:59:28.331371 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.276873ms
DB: 2020/08/13 06:59:28.334747 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.344246ms
SaveRDFNode: 2020/08/13 06:59:28.334761 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385620)}
rdfUIDdb: 2020/08/13 06:59:28.334768 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.334773 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.334779 Received UID: X18=
SaveRDFNode: 2020/08/13 06:59:28.334794 a: = db.Item{PKey:[]uint8{0x2d, 0x7a, 0x8f, 0x27, 0x8a, 0xb8, 0x4d, 0x6b, 0x8d, 0xbd, 0x3b, 0xd0, 0x8b, 0xb2, 0x43, 0x3c}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:59:28.338229 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.401933ms
SaveRDFNode: 2020/08/13 06:59:28.338241 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385620)}
rdfUIDdb: 2020/08/13 06:59:28.338247 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.338251 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.338256 Received UID: X18=
SaveRDFNode: 2020/08/13 06:59:28.338267 a: = db.Item{PKey:[]uint8{0x2d, 0x7a, 0x8f, 0x27, 0x8a, 0xb8, 0x4d, 0x6b, 0x8d, 0xbd, 0x3b, 0xd0, 0x8b, 0xb2, 0x43, 0x3c}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:59:28.341796 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.500434ms
SaveRDFNode: 2020/08/13 06:59:28.341961 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:59:28.341977 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.341984 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.341990 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.341999 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.342005 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.342011 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.342017 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:59:28.342021 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:59:28.342027 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017da0)}
SaveRDFNode: 2020/08/13 06:59:28.342031 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:59:28.342041 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.342045 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.342051 UID received  : M9JoYq7uT8i9E8rKe69JIQ==
DB: 2020/08/13 06:59:28.345402 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.315771ms
DB: 2020/08/13 06:59:28.349294 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.859342ms
DB: 2020/08/13 06:59:28.352737 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.411798ms
DB: 2020/08/13 06:59:28.356101 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.33144ms
DB: 2020/08/13 06:59:28.359293 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.15801ms
SaveRDFNode: 2020/08/13 06:59:28.359449 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017da0)}
rdfUIDdb: 2020/08/13 06:59:28.359460 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.359465 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.359470 Received UID: X18=
SaveRDFNode: 2020/08/13 06:59:28.359481 a: = db.Item{PKey:[]uint8{0x33, 0xd2, 0x68, 0x62, 0xae, 0xee, 0x4f, 0xc8, 0xbd, 0x13, 0xca, 0xca, 0x7b, 0xaf, 0x49, 0x21}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:59:28.362778 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.266439ms
SaveRDFNode: 2020/08/13 06:59:28.362790 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017da0)}
rdfUIDdb: 2020/08/13 06:59:28.362795 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.362799 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.362804 Received UID: X18=
SaveRDFNode: 2020/08/13 06:59:28.362814 a: = db.Item{PKey:[]uint8{0x33, 0xd2, 0x68, 0x62, 0xae, 0xee, 0x4f, 0xc8, 0xbd, 0x13, 0xca, 0xca, 0x7b, 0xaf, 0x49, 0x21}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:59:28.366050 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.208256ms
SaveRDFNode: 2020/08/13 06:59:28.366060 Returned.+++++++++++ No error
SaveRDFNode: xxx 2020/08/13 06:59:28.366068 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.366074 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.366080 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.366091 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.366097 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.366103 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 06:59:28.366109 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 06:59:28.366113 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 06:59:28.366118 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000414cc0)}
SaveRDFNode: 2020/08/13 06:59:28.366122 Waiting for UID ......................
rdfUIDdb: 2020/08/13 06:59:28.366132 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.366135 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.366160 UID received  : 6mVbnkDiTEanWfEpJtjhJg==
DB: 2020/08/13 06:59:28.370756 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.569397ms
DB: 2020/08/13 06:59:28.374272 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.486651ms
DB: 2020/08/13 06:59:28.377667 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.364129ms
DB: 2020/08/13 06:59:28.381844 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.775913ms
DB: 2020/08/13 06:59:28.386481 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.580693ms
SaveRDFNode: 2020/08/13 06:59:28.386494 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000414cc0)}
rdfUIDdb: 2020/08/13 06:59:28.386500 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.386504 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.386518 Received UID: X18=
SaveRDFNode: 2020/08/13 06:59:28.386530 a: = db.Item{PKey:[]uint8{0xea, 0x65, 0x5b, 0x9e, 0x40, 0xe2, 0x4c, 0x46, 0xa7, 0x59, 0xf1, 0x29, 0x26, 0xd8, 0xe1, 0x26}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:59:28.389806 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.24749ms
SaveRDFNode: 2020/08/13 06:59:28.389830 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000414cc0)}
rdfUIDdb: 2020/08/13 06:59:28.389836 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 06:59:28.389840 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 06:59:28.389845 Received UID: X18=
SaveRDFNode: 2020/08/13 06:59:28.389855 a: = db.Item{PKey:[]uint8{0xea, 0x65, 0x5b, 0x9e, 0x40, 0xe2, 0x4c, 0x46, 0xa7, 0x59, 0xf1, 0x29, 0x26, 0xd8, 0xe1, 0x26}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 06:59:28.393903 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.018855ms
SaveRDFNode: 2020/08/13 06:59:28.393916 Returned.+++++++++++ No error
DB: 2020/08/13 06:59:28.397374 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.400109 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.402715 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.405338 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.408803 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.412585ms
DB: 2020/08/13 06:59:28.414582 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.714828ms
FetchForUpdate: 2020/08/13 06:59:28.414601 ** Cache FetchForUpdate Cache Key Value: [M9JoYq7uT8i9E8rKe69JIQ==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:59:28.414608  node: M9JoYq7uT8i9E8rKe69JIQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:59:28.414934 ** Cache FetchForUpdate Cache Key Value: [LXqPJ4q4TWuNvTvQi7JDPA==]   sortk: A#
FetchNode: 2020/08/13 06:59:28.414952  node: LXqPJ4q4TWuNvTvQi7JDPA== subKey: A#
DB: 2020/08/13 06:59:28.417112 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.471387ms
FetchForUpdate: 2020/08/13 06:59:28.417152 len(nb): 1
fetchItems: 2020/08/13 06:59:28.417159 +++  Cache FetchItems for sortk A#G#:S UID: [M9JoYq7uT8i9E8rKe69JIQ==] 
FetchNode: 2020/08/13 06:59:28.417163  node: M9JoYq7uT8i9E8rKe69JIQ== subKey: A#G#:S
DB: 2020/08/13 06:59:28.420125 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 5.089201ms
FetchForUpdate: 2020/08/13 06:59:28.420228 len(nb): 7
fetchItems: 2020/08/13 06:59:28.420236 +++  Cache FetchItems for sortk A# UID: [LXqPJ4q4TWuNvTvQi7JDPA==] 
FetchNode: 2020/08/13 06:59:28.420240  node: LXqPJ4q4TWuNvTvQi7JDPA== subKey: A#
DB: 2020/08/13 06:59:28.427305 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 10.084549ms
DB: 2020/08/13 06:59:28.432084 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.187689ms
Unlock: 2020/08/13 06:59:28.432231 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:59:28.435612 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 15.325864ms
Unlock: 2020/08/13 06:59:28.435734 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:59:28.435761 ** Cache FetchForUpdate Cache Key Value: [M9JoYq7uT8i9E8rKe69JIQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.435766 +++  Cache FetchItems for sortk A#G#:S UID: [M9JoYq7uT8i9E8rKe69JIQ==] 
FetchNode: 2020/08/13 06:59:28.435780  node: M9JoYq7uT8i9E8rKe69JIQ== subKey: A#G#:S
DB: 2020/08/13 06:59:28.451356 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 15.547941ms
DB: 2020/08/13 06:59:28.457476 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.006994ms
DB: 2020/08/13 06:59:28.461440 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.477263ms
DB: 2020/08/13 06:59:28.466455 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.613033ms
DB: 2020/08/13 06:59:28.472677 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.920197ms
DB: 2020/08/13 06:59:28.476197 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.241128ms
DB: 2020/08/13 06:59:28.480866 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.354615ms
DB: 2020/08/13 06:59:28.487206 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.041623ms
DB: 2020/08/13 06:59:28.491077 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.549601ms
DB: 2020/08/13 06:59:28.495054 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.657552ms
Unlock: 2020/08/13 06:59:28.495066 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:59:28.499504 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.563944ms
FetchForUpdate: 2020/08/13 06:59:28.499570 ** Cache FetchForUpdate Cache Key Value: [M9JoYq7uT8i9E8rKe69JIQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.499583 +++  Cache FetchItems for sortk A#G#:S UID: [M9JoYq7uT8i9E8rKe69JIQ==] 
FetchNode: 2020/08/13 06:59:28.499592  node: M9JoYq7uT8i9E8rKe69JIQ== subKey: A#G#:S
DB: 2020/08/13 06:59:28.502326 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.679807ms
AttachNode: gr1 2020/08/13 06:59:28.502417 Errored: SetUpredAvailable :for  M9JoYq7uT8i9E8rKe69JIQ==
Cache: 2020/08/13 06:59:28.502441 In SetUpredAvailable: pUid, tUID:  M9JoYq7uT8i9E8rKe69JIQ== M9JoYq7uT8i9E8rKe69JIQ== A#G#:S
Cache: 2020/08/13 06:59:28.502445 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:59:28.505925 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.442985ms
Unlock: 2020/08/13 06:59:28.505933 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:59:28.513972 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.693285ms
DB: 2020/08/13 06:59:28.516243 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.518593 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.521486 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.523571 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.527154 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.533432ms
DB: 2020/08/13 06:59:28.531385 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.979728ms
FetchForUpdate: 2020/08/13 06:59:28.531403 ** Cache FetchForUpdate Cache Key Value: [6mVbnkDiTEanWfEpJtjhJg==]   sortk: A#G#:S
FetchNode: 2020/08/13 06:59:28.531410  node: 6mVbnkDiTEanWfEpJtjhJg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:59:28.531748 ** Cache FetchForUpdate Cache Key Value: [LXqPJ4q4TWuNvTvQi7JDPA==]   sortk: A#
fetchItems: 2020/08/13 06:59:28.531769 +++  Cache FetchItems for sortk A# UID: [LXqPJ4q4TWuNvTvQi7JDPA==] 
FetchNode: 2020/08/13 06:59:28.531819  node: LXqPJ4q4TWuNvTvQi7JDPA== subKey: A#
DB: 2020/08/13 06:59:28.534036 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.595668ms
FetchForUpdate: 2020/08/13 06:59:28.534070 len(nb): 1
fetchItems: 2020/08/13 06:59:28.534076 +++  Cache FetchItems for sortk A#G#:S UID: [6mVbnkDiTEanWfEpJtjhJg==] 
FetchNode: 2020/08/13 06:59:28.534081  node: 6mVbnkDiTEanWfEpJtjhJg== subKey: A#G#:S
DB: 2020/08/13 06:59:28.536438 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.331414ms
DB: 2020/08/13 06:59:28.540027 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.500855ms
Unlock: 2020/08/13 06:59:28.540037 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:59:28.547869 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 16.000031ms
Unlock: 2020/08/13 06:59:28.548462 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 06:59:28.548782 ** Cache FetchForUpdate Cache Key Value: [6mVbnkDiTEanWfEpJtjhJg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.548791 +++  Cache FetchItems for sortk A#G#:S UID: [6mVbnkDiTEanWfEpJtjhJg==] 
FetchNode: 2020/08/13 06:59:28.548796  node: 6mVbnkDiTEanWfEpJtjhJg== subKey: A#G#:S
DB: 2020/08/13 06:59:28.551482 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.650132ms
DB: 2020/08/13 06:59:28.557325 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.493869ms
DB: 2020/08/13 06:59:28.561043 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.542117ms
DB: 2020/08/13 06:59:28.565004 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.534922ms
DB: 2020/08/13 06:59:28.571385 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.814288ms
DB: 2020/08/13 06:59:28.574907 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.111387ms
DB: 2020/08/13 06:59:28.578960 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.56794ms
DB: 2020/08/13 06:59:28.590232 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 10.749737ms
DB: 2020/08/13 06:59:28.594792 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.970228ms
DB: 2020/08/13 06:59:28.598670 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.793497ms
Unlock: 2020/08/13 06:59:28.598682 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:59:28.602406 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.643635ms
FetchForUpdate: 2020/08/13 06:59:28.602430 ** Cache FetchForUpdate Cache Key Value: [6mVbnkDiTEanWfEpJtjhJg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.602443 +++  Cache FetchItems for sortk A#G#:S UID: [6mVbnkDiTEanWfEpJtjhJg==] 
FetchNode: 2020/08/13 06:59:28.602452  node: 6mVbnkDiTEanWfEpJtjhJg== subKey: A#G#:S
DB: 2020/08/13 06:59:28.605561 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.056679ms
AttachNode: gr1 2020/08/13 06:59:28.605908 Errored: SetUpredAvailable :for  6mVbnkDiTEanWfEpJtjhJg==
Cache: 2020/08/13 06:59:28.605920 In SetUpredAvailable: pUid, tUID:  6mVbnkDiTEanWfEpJtjhJg== 6mVbnkDiTEanWfEpJtjhJg== A#G#:S
Cache: 2020/08/13 06:59:28.605924 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:59:28.609662 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.667409ms
Unlock: 2020/08/13 06:59:28.609677 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:59:28.617564 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.172414ms
DB: 2020/08/13 06:59:28.620376 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.622838 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.625564 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.627746 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.631417 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.622431ms
DB: 2020/08/13 06:59:28.635458 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.75537ms
FetchForUpdate: 2020/08/13 06:59:28.635472 ** Cache FetchForUpdate Cache Key Value: [LXqPJ4q4TWuNvTvQi7JDPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.635478 +++  Cache FetchItems for sortk A#G#:S UID: [LXqPJ4q4TWuNvTvQi7JDPA==] 
FetchNode: 2020/08/13 06:59:28.635483  node: LXqPJ4q4TWuNvTvQi7JDPA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:59:28.635678 ** Cache FetchForUpdate Cache Key Value: [M9JoYq7uT8i9E8rKe69JIQ==]   sortk: A#
fetchItems: 2020/08/13 06:59:28.635687 +++  Cache FetchItems for sortk A# UID: [M9JoYq7uT8i9E8rKe69JIQ==] 
FetchNode: 2020/08/13 06:59:28.635717  node: M9JoYq7uT8i9E8rKe69JIQ== subKey: A#
DB: 2020/08/13 06:59:28.637752 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.236259ms
DB: 2020/08/13 06:59:28.640296 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.515264ms
Unlock: 2020/08/13 06:59:28.641803 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:59:28.642293 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.219732ms
Unlock: 2020/08/13 06:59:28.642303 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 06:59:28.642688 ** Cache FetchForUpdate Cache Key Value: [LXqPJ4q4TWuNvTvQi7JDPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.642698 +++  Cache FetchItems for sortk A#G#:S UID: [LXqPJ4q4TWuNvTvQi7JDPA==] 
FetchNode: 2020/08/13 06:59:28.642703  node: LXqPJ4q4TWuNvTvQi7JDPA== subKey: A#G#:S
DB: 2020/08/13 06:59:28.645538 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.79999ms
DB: 2020/08/13 06:59:28.651907 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.778686ms
DB: 2020/08/13 06:59:28.655533 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.368242ms
DB: 2020/08/13 06:59:28.659591 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.350556ms
DB: 2020/08/13 06:59:28.665836 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.785947ms
DB: 2020/08/13 06:59:28.669452 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.138595ms
DB: 2020/08/13 06:59:28.673407 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.38595ms
DB: 2020/08/13 06:59:28.679835 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.812642ms
DB: 2020/08/13 06:59:28.683766 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.503439ms
DB: 2020/08/13 06:59:28.688077 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.811186ms
Unlock: 2020/08/13 06:59:28.688088 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 06:59:28.692061 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.294621ms
FetchForUpdate: 2020/08/13 06:59:28.692216 ** Cache FetchForUpdate Cache Key Value: [LXqPJ4q4TWuNvTvQi7JDPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.692227 +++  Cache FetchItems for sortk A#G#:S UID: [LXqPJ4q4TWuNvTvQi7JDPA==] 
FetchNode: 2020/08/13 06:59:28.692232  node: LXqPJ4q4TWuNvTvQi7JDPA== subKey: A#G#:S
DB: 2020/08/13 06:59:28.695075 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.810662ms
AttachNode: gr1 2020/08/13 06:59:28.695170 Errored: SetUpredAvailable :for  LXqPJ4q4TWuNvTvQi7JDPA==
Cache: 2020/08/13 06:59:28.695179 In SetUpredAvailable: pUid, tUID:  LXqPJ4q4TWuNvTvQi7JDPA== LXqPJ4q4TWuNvTvQi7JDPA== A#G#:S
Cache: 2020/08/13 06:59:28.695183 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:59:28.698554 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.338226ms
Unlock: 2020/08/13 06:59:28.698563 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:59:28.702794 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.741738ms
DB: 2020/08/13 06:59:28.705246 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.707681 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.710263 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.712943 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.716416 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.385441ms
DB: 2020/08/13 06:59:28.720442 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.636122ms
FetchForUpdate: 2020/08/13 06:59:28.720455 ** Cache FetchForUpdate Cache Key Value: [6mVbnkDiTEanWfEpJtjhJg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.720461 +++  Cache FetchItems for sortk A#G#:S UID: [6mVbnkDiTEanWfEpJtjhJg==] 
FetchNode: 2020/08/13 06:59:28.720465  node: 6mVbnkDiTEanWfEpJtjhJg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:59:28.720649 ** Cache FetchForUpdate Cache Key Value: [M9JoYq7uT8i9E8rKe69JIQ==]   sortk: A#
fetchItems: 2020/08/13 06:59:28.720658 +++  Cache FetchItems for sortk A# UID: [M9JoYq7uT8i9E8rKe69JIQ==] 
FetchNode: 2020/08/13 06:59:28.720670  node: M9JoYq7uT8i9E8rKe69JIQ== subKey: A#
DB: 2020/08/13 06:59:28.723212 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.71837ms
DB: 2020/08/13 06:59:28.726678 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.321824ms
DB: 2020/08/13 06:59:28.730151 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 9.440573ms
Unlock: 2020/08/13 06:59:28.731518 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:59:28.732006 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.29593ms
DB: 2020/08/13 06:59:28.732053 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.29593ms
DB: 2020/08/13 06:59:28.735416 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.315923ms
DB: 2020/08/13 06:59:28.735431 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.315923ms
DB: 2020/08/13 06:59:28.739532 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.882636ms
DB: 2020/08/13 06:59:28.743219 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.363965ms
Unlock: 2020/08/13 06:59:28.743230 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:59:28.749986 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.915231ms
DB: 2020/08/13 06:59:28.753400 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.160714ms
DB: 2020/08/13 06:59:28.757584 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.448794ms
DB: 2020/08/13 06:59:28.763936 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.766446ms
DB: 2020/08/13 06:59:28.767495 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.118182ms
DB: 2020/08/13 06:59:28.771972 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.981107ms
DB: 2020/08/13 06:59:28.778537 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.00411ms
DB: 2020/08/13 06:59:28.782430 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.343661ms
DB: 2020/08/13 06:59:28.787228 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.307148ms
DB: 2020/08/13 06:59:28.791992 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.516022ms
FetchForUpdate: 2020/08/13 06:59:28.792004 ** Cache FetchForUpdate Cache Key Value: [6mVbnkDiTEanWfEpJtjhJg==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.792010 +++  Cache FetchItems for sortk A#G#:S UID: [6mVbnkDiTEanWfEpJtjhJg==] 
FetchNode: 2020/08/13 06:59:28.792015  node: 6mVbnkDiTEanWfEpJtjhJg== subKey: A#G#:S
DB: 2020/08/13 06:59:28.794614 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.56397ms
AttachNode: gr1 2020/08/13 06:59:28.794838 Errored: SetUpredAvailable :for  6mVbnkDiTEanWfEpJtjhJg==
Cache: 2020/08/13 06:59:28.794850 In SetUpredAvailable: pUid, tUID:  6mVbnkDiTEanWfEpJtjhJg== RaQNEFsVQpmAsGUXMWTi2g== A#G#:S
Cache: 2020/08/13 06:59:28.794855 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:59:28.798213 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.324349ms
Unlock: 2020/08/13 06:59:28.798223 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:59:28.802498 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.884445ms
DB: 2020/08/13 06:59:28.804814 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.807223 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.809707 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.812429 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.815831 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.332966ms
DB: 2020/08/13 06:59:28.819673 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.579416ms
FetchForUpdate: 2020/08/13 06:59:28.819687 ** Cache FetchForUpdate Cache Key Value: [LXqPJ4q4TWuNvTvQi7JDPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.819693 +++  Cache FetchItems for sortk A#G#:S UID: [LXqPJ4q4TWuNvTvQi7JDPA==] 
FetchNode: 2020/08/13 06:59:28.819706  node: LXqPJ4q4TWuNvTvQi7JDPA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:59:28.819882 ** Cache FetchForUpdate Cache Key Value: [6mVbnkDiTEanWfEpJtjhJg==]   sortk: A#
fetchItems: 2020/08/13 06:59:28.819891 +++  Cache FetchItems for sortk A# UID: [6mVbnkDiTEanWfEpJtjhJg==] 
FetchNode: 2020/08/13 06:59:28.819935  node: 6mVbnkDiTEanWfEpJtjhJg== subKey: A#
DB: 2020/08/13 06:59:28.822111 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.373067ms
DB: 2020/08/13 06:59:28.823176 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.196205ms
Unlock: 2020/08/13 06:59:28.824619 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:59:28.826089 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.471726ms
DB: 2020/08/13 06:59:28.829257 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.136204ms
DB: 2020/08/13 06:59:28.829294 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.136204ms
DB: 2020/08/13 06:59:28.832968 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.640664ms
DB: 2020/08/13 06:59:28.832983 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.640664ms
DB: 2020/08/13 06:59:28.837240 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.050089ms
DB: 2020/08/13 06:59:28.840651 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.345786ms
Unlock: 2020/08/13 06:59:28.840665 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:59:28.846492 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.728683ms
DB: 2020/08/13 06:59:28.849756 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.216159ms
DB: 2020/08/13 06:59:28.853431 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.317353ms
DB: 2020/08/13 06:59:28.859607 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.899165ms
DB: 2020/08/13 06:59:28.863294 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.262294ms
DB: 2020/08/13 06:59:28.866960 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.348518ms
DB: 2020/08/13 06:59:28.873325 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.077265ms
DB: 2020/08/13 06:59:28.877346 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.730611ms
DB: 2020/08/13 06:59:28.881347 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.583868ms
DB: 2020/08/13 06:59:28.884907 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.357173ms
FetchForUpdate: 2020/08/13 06:59:28.884919 ** Cache FetchForUpdate Cache Key Value: [LXqPJ4q4TWuNvTvQi7JDPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.884925 +++  Cache FetchItems for sortk A#G#:S UID: [LXqPJ4q4TWuNvTvQi7JDPA==] 
FetchNode: 2020/08/13 06:59:28.884930  node: LXqPJ4q4TWuNvTvQi7JDPA== subKey: A#G#:S
DB: 2020/08/13 06:59:28.887301 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.334351ms
AttachNode: gr1 2020/08/13 06:59:28.887384 Errored: SetUpredAvailable :for  LXqPJ4q4TWuNvTvQi7JDPA==
Cache: 2020/08/13 06:59:28.887392 In SetUpredAvailable: pUid, tUID:  LXqPJ4q4TWuNvTvQi7JDPA== KP2va9rMSK2+Cgz/z4flZw== A#G#:S
Cache: 2020/08/13 06:59:28.887406 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:59:28.895791 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 8.352251ms
Unlock: 2020/08/13 06:59:28.895805 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:59:28.900029 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.141173ms
DB: 2020/08/13 06:59:28.902593 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.905061 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.907215 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.909897 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 06:59:28.913299 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.326548ms
DB: 2020/08/13 06:59:28.917087 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.44811ms
FetchForUpdate: 2020/08/13 06:59:28.917104 ** Cache FetchForUpdate Cache Key Value: [M9JoYq7uT8i9E8rKe69JIQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.917111 +++  Cache FetchItems for sortk A#G#:S UID: [M9JoYq7uT8i9E8rKe69JIQ==] 
FetchNode: 2020/08/13 06:59:28.917115  node: M9JoYq7uT8i9E8rKe69JIQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 06:59:28.917305 ** Cache FetchForUpdate Cache Key Value: [6mVbnkDiTEanWfEpJtjhJg==]   sortk: A#
fetchItems: 2020/08/13 06:59:28.917314 +++  Cache FetchItems for sortk A# UID: [6mVbnkDiTEanWfEpJtjhJg==] 
FetchNode: 2020/08/13 06:59:28.917325  node: 6mVbnkDiTEanWfEpJtjhJg== subKey: A#
DB: 2020/08/13 06:59:28.919944 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.796335ms
DB: 2020/08/13 06:59:28.920851 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.433634ms
Unlock: 2020/08/13 06:59:28.921668 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 06:59:28.923592 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.284694ms
DB: 2020/08/13 06:59:28.934194 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 10.569709ms
DB: 2020/08/13 06:59:28.934213 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 10.569709ms
DB: 2020/08/13 06:59:28.937428 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.161542ms
DB: 2020/08/13 06:59:28.937445 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.161542ms
DB: 2020/08/13 06:59:28.941298 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.767672ms
DB: 2020/08/13 06:59:28.944672 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.297714ms
Unlock: 2020/08/13 06:59:28.944685 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 06:59:28.950554 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.784838ms
DB: 2020/08/13 06:59:28.953630 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.006177ms
DB: 2020/08/13 06:59:28.957053 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.322191ms
DB: 2020/08/13 06:59:28.962694 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.582509ms
DB: 2020/08/13 06:59:28.965729 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 2.977196ms
DB: 2020/08/13 06:59:28.969186 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.382879ms
DB: 2020/08/13 06:59:28.975544 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.014917ms
DB: 2020/08/13 06:59:28.978615 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.003068ms
DB: 2020/08/13 06:59:28.995439 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 16.728884ms
DB: 2020/08/13 06:59:28.998756 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.261783ms
FetchForUpdate: 2020/08/13 06:59:28.998769 ** Cache FetchForUpdate Cache Key Value: [M9JoYq7uT8i9E8rKe69JIQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 06:59:28.998775 +++  Cache FetchItems for sortk A#G#:S UID: [M9JoYq7uT8i9E8rKe69JIQ==] 
FetchNode: 2020/08/13 06:59:28.998779  node: M9JoYq7uT8i9E8rKe69JIQ== subKey: A#G#:S
DB: 2020/08/13 06:59:29.002771 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.951786ms
AttachNode: gr1 2020/08/13 06:59:29.002863 Errored: SetUpredAvailable :for  M9JoYq7uT8i9E8rKe69JIQ==
Cache: 2020/08/13 06:59:29.002871 In SetUpredAvailable: pUid, tUID:  M9JoYq7uT8i9E8rKe69JIQ== j8WJeKWiTROmi+ngMwGAsA== A#G#:S
Cache: 2020/08/13 06:59:29.002875 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 06:59:29.006255 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.344927ms
Unlock: 2020/08/13 06:59:29.006265 ******* IN UNLOCK NC ********************
DB: 2020/08/13 06:59:29.012209 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.422865ms
rdfLoader: 2020/08/13 06:59:29.012225 saveNode finished waiting...exiting
grmgr: 2020/08/13 06:59:29.012236 Powering down...
rdfuuid: 2020/08/13 06:59:29.012244 Powering down...
DB:2020/08/13 07:05:43 log.go:18: ===============================================================================
grmgr: 2020/08/13 07:05:43.129674 Powering on...
rdfLoader: 2020/08/13 07:05:43.130020 verify started....xx.
rdfLoader: 2020/08/13 07:05:43.130044 saveNode started......
rdfLoader: 2020/08/13 07:05:43.130049 define saveNode limiter......
rdfuuid: 2020/08/13 07:05:43.130064 Powering on...
rdfLoader: 2020/08/13 07:05:43.130071 *************** All started 
rdfLoader: 2020/08/13 07:05:43.138833 .  getType..
rdfLoader: 2020/08/13 07:05:43.138872 node.TyName : [Person]
DB: 2020/08/13 07:05:43.210709 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.766551ms
verify: 2020/08/13 07:05:43.210870 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 07:05:43.210878  Send Ask request to limiter.
verify: 2020/08/13 07:05:43.210884 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:05:43.210892 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:05:43.210899 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:05:43.210907 .  getType..
rdfLoader: 2020/08/13 07:05:43.210912 node.TyName : [Person]
verify: 2020/08/13 07:05:43.210931 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 07:05:43.210946  Send Ask request to limiter.
verify: 2020/08/13 07:05:43.210951 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:05:43.210957 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:05:43.210963 ACK from gcmgr....received...
verify: 2020/08/13 07:05:43.210970 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 07:05:43.211020 .  getType..
rdfLoader: 2020/08/13 07:05:43.211025 node.TyName : [Person]
verify: 2020/08/13 07:05:43.211048 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 07:05:43.211055  Send Ask request to limiter.
verify: 2020/08/13 07:05:43.211060 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:05:43.211065 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:05:43.211071 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:05:43.211076 .  getType..
rdfLoader: 2020/08/13 07:05:43.211081 node.TyName : [Person]
verify: 2020/08/13 07:05:43.211095 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 07:05:43.211100  Send Ask request to limiter.
verify: 2020/08/13 07:05:43.211104 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:05:43.211110 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:05:43.211115 ACK from gcmgr....received...
verify: 2020/08/13 07:05:43.211121 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 07:05:43.211125 verify at wg.Wait() .....
unmarshalRDF2020/08/13 07:05:43.211138 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:05:43.211145 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 07:05:43.211151 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 07:05:43.211156 Find Ty Address
rdfLoader: 2020/08/13 07:05:43.211161 Find Ty Age
rdfLoader: 2020/08/13 07:05:43.211167 Find Ty Cars
rdfLoader: 2020/08/13 07:05:43.211173 Add to SS . [Bentley]
rdfLoader: 2020/08/13 07:05:43.211178 Find Ty DOB
rdfLoader: 2020/08/13 07:05:43.211183 Find Ty Friends
rdfLoader: 2020/08/13 07:05:43.211187 Find Ty Jobs
rdfLoader: 2020/08/13 07:05:43.211191 Find Ty Name
rdfLoader: 2020/08/13 07:05:43.211196 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:05:43.211201 Find Ty Siblings
rdfLoader: 2020/08/13 07:05:43.211220 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:05:43.211245 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:05:43.211254 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:05:43.211262 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 07:05:43.211273 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:05:43.211278 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 07:05:43.211283 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 07:05:43.211288 Find Ty Address
rdfLoader: 2020/08/13 07:05:43.211293 Find Ty Age
rdfLoader: 2020/08/13 07:05:43.211298 Find Ty Cars
rdfLoader: 2020/08/13 07:05:43.211303 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:05:43.211308 Add to SS . [Alfa]
rdfLoader: 2020/08/13 07:05:43.211313 Find Ty DOB
rdfLoader: 2020/08/13 07:05:43.211318 Find Ty Friends
rdfLoader: 2020/08/13 07:05:43.211322 Find Ty Jobs
rdfLoader: 2020/08/13 07:05:43.211327 Find Ty Name
rdfLoader: 2020/08/13 07:05:43.211332 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:05:43.211336 Find Ty Siblings
rdfLoader: 2020/08/13 07:05:43.211350 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:05:43.211376 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:05:43.211381 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:05:43.211387 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 07:05:43.211397 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:05:43.211402 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 07:05:43.211407 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 07:05:43.211412 Find Ty Address
rdfLoader: 2020/08/13 07:05:43.211417 Find Ty Age
rdfLoader: 2020/08/13 07:05:43.211422 Find Ty Cars
rdfLoader: 2020/08/13 07:05:43.211427 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:05:43.211432 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 07:05:43.211437 Find Ty DOB
rdfLoader: 2020/08/13 07:05:43.211442 Find Ty Friends
rdfLoader: 2020/08/13 07:05:43.211446 Find Ty Jobs
rdfLoader: 2020/08/13 07:05:43.211450 Find Ty Name
rdfLoader: 2020/08/13 07:05:43.211455 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:05:43.211461 Find Ty Siblings
rdfLoader: 2020/08/13 07:05:43.211472 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:05:43.211496 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:05:43.211501 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:05:43.211507 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 07:05:43.211516 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:05:43.211522 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:05:43.211527 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 07:05:43.211535 Find Ty Address
rdfLoader: 2020/08/13 07:05:43.211540 Find Ty Age
rdfLoader: 2020/08/13 07:05:43.211545 Find Ty Cars
rdfLoader: 2020/08/13 07:05:43.211550 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 07:05:43.211555 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 07:05:43.211560 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:05:43.211564 Find Ty DOB
rdfLoader: 2020/08/13 07:05:43.211569 Find Ty Friends
rdfLoader: 2020/08/13 07:05:43.211573 Find Ty Jobs
rdfLoader: 2020/08/13 07:05:43.211578 Find Ty Name
rdfLoader: 2020/08/13 07:05:43.211583 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:05:43.211587 Find Ty Siblings
rdfLoader: 2020/08/13 07:05:43.211599 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:05:43.211625 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:05:43.211630 Exit  unmarshalRDF. 
verify: 2020/08/13 07:05:43.211636 verify exited.....
grmgr: 2020/08/13 07:05:43.211642 EndCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:05:43.211648 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:05:43.211672 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.211679 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.211686 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.211692 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.211699 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.211717 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.211723 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:05:43.211728 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:05:43.211738 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0000175c0)}
SaveRDFNode: 2020/08/13 07:05:43.211743 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:05:43.211753 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.211758 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.211765 UID received  : I2XB+WL2TXGjfCPi3202eg==
grmgr: 2020/08/13 07:05:43.211987 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:05:43.212014 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.212022 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.212028 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.212034 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.212042 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.212053 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.212060 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:05:43.212065 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:05:43.212071 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000017c20)}
SaveRDFNode: 2020/08/13 07:05:43.212076 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:05:43.212084 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.212088 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.212094 UID received  : RJEyCzs6S5utOwuOu+ov9Q==
grmgr: 2020/08/13 07:05:43.213452 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:05:43.213490 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213516 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213525 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213530 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213536 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213542 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213547 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:05:43.213551 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:05:43.213557 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000384360)}
SaveRDFNode: 2020/08/13 07:05:43.213562 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:05:43.213569 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.213574 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.213579 UID received  : lMBmpCQVQ9W9v3gQlGAH9Q==
grmgr: 2020/08/13 07:05:43.213818 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:05:43.213863 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213870 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213878 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213884 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213889 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213895 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:05:43.213918 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:05:43.213923 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:05:43.213928 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000384a80)}
SaveRDFNode: 2020/08/13 07:05:43.213933 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:05:43.213940 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.213944 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.213950 UID received  : 1mm3yRxwQTyHtB6Js7148A==
DB: 2020/08/13 07:05:43.223533 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.725412ms
DB: 2020/08/13 07:05:43.231110 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.499202ms
DB: 2020/08/13 07:05:43.236137 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.798377ms
DB: 2020/08/13 07:05:43.240913 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 26.89634ms
DB: 2020/08/13 07:05:43.241182 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.938772ms
DB: 2020/08/13 07:05:43.241443 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 29.319472ms
DB: 2020/08/13 07:05:43.242816 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 19.220956ms
DB: 2020/08/13 07:05:43.244257 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.310438ms
DB: 2020/08/13 07:05:43.244718 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.241394ms
DB: 2020/08/13 07:05:43.245914 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.696676ms
DB: 2020/08/13 07:05:43.246672 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.820738ms
DB: 2020/08/13 07:05:43.247409 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.116246ms
DB: 2020/08/13 07:05:43.247978 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.22832ms
DB: 2020/08/13 07:05:43.250602 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.656299ms
SaveRDFNode: 2020/08/13 07:05:43.250617 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384360)}
rdfUIDdb: 2020/08/13 07:05:43.250625 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.250630 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.250636 Received UID: X18=
SaveRDFNode: 2020/08/13 07:05:43.250650 a: = db.Item{PKey:[]uint8{0x94, 0xc0, 0x66, 0xa4, 0x24, 0x15, 0x43, 0xd5, 0xbd, 0xbf, 0x78, 0x10, 0x94, 0x60, 0x7, 0xf5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:05:43.250933 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.947671ms
DB: 2020/08/13 07:05:43.251197 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.756318ms
DB: 2020/08/13 07:05:43.251428 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.415328ms
DB: 2020/08/13 07:05:43.254364 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.400916ms
SaveRDFNode: 2020/08/13 07:05:43.254389 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0000175c0)}
rdfUIDdb: 2020/08/13 07:05:43.254395 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.254399 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.254404 Received UID: X18=
SaveRDFNode: 2020/08/13 07:05:43.254415 a: = db.Item{PKey:[]uint8{0x23, 0x65, 0xc1, 0xf9, 0x62, 0xf6, 0x4d, 0x71, 0xa3, 0x7c, 0x23, 0xe2, 0xdf, 0x6d, 0x36, 0x7a}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:05:43.254775 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.304553ms
SaveRDFNode: 2020/08/13 07:05:43.254802 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017c20)}
rdfUIDdb: 2020/08/13 07:05:43.254809 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.254813 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.254832 Received UID: X18=
SaveRDFNode: 2020/08/13 07:05:43.254844 a: = db.Item{PKey:[]uint8{0x44, 0x91, 0x32, 0xb, 0x3b, 0x3a, 0x4b, 0x9b, 0xad, 0x3b, 0xb, 0x8e, 0xbb, 0xea, 0x2f, 0xf5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:05:43.255117 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.847307ms
SaveRDFNode: 2020/08/13 07:05:43.255128 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384a80)}
rdfUIDdb: 2020/08/13 07:05:43.255134 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.255138 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.255143 Received UID: X18=
SaveRDFNode: 2020/08/13 07:05:43.255153 a: = db.Item{PKey:[]uint8{0xd6, 0x69, 0xb7, 0xc9, 0x1c, 0x70, 0x41, 0x3c, 0x87, 0xb4, 0x1e, 0x89, 0xb3, 0xbd, 0x78, 0xf0}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:05:43.255468 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.760167ms
SaveRDFNode: 2020/08/13 07:05:43.255485 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384360)}
rdfUIDdb: 2020/08/13 07:05:43.255490 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.255494 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.255500 Received UID: X18=
SaveRDFNode: 2020/08/13 07:05:43.255509 a: = db.Item{PKey:[]uint8{0x94, 0xc0, 0x66, 0xa4, 0x24, 0x15, 0x43, 0xd5, 0xbd, 0xbf, 0x78, 0x10, 0x94, 0x60, 0x7, 0xf5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:05:43.257969 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.525794ms
SaveRDFNode: 2020/08/13 07:05:43.257988 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0000175c0)}
rdfUIDdb: 2020/08/13 07:05:43.257994 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.257998 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.258018 Received UID: X18=
SaveRDFNode: 2020/08/13 07:05:43.258029 a: = db.Item{PKey:[]uint8{0x23, 0x65, 0xc1, 0xf9, 0x62, 0xf6, 0x4d, 0x71, 0xa3, 0x7c, 0x23, 0xe2, 0xdf, 0x6d, 0x36, 0x7a}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:05:43.258294 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.422989ms
SaveRDFNode: 2020/08/13 07:05:43.258305 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017c20)}
rdfUIDdb: 2020/08/13 07:05:43.258311 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.258315 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.258325 Received UID: X18=
SaveRDFNode: 2020/08/13 07:05:43.258335 a: = db.Item{PKey:[]uint8{0x44, 0x91, 0x32, 0xb, 0x3b, 0x3a, 0x4b, 0x9b, 0xad, 0x3b, 0xb, 0x8e, 0xbb, 0xea, 0x2f, 0xf5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:05:43.258904 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.71729ms
SaveRDFNode: 2020/08/13 07:05:43.258915 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384a80)}
rdfUIDdb: 2020/08/13 07:05:43.258921 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:05:43.258925 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:05:43.258930 Received UID: X18=
SaveRDFNode: 2020/08/13 07:05:43.258939 a: = db.Item{PKey:[]uint8{0xd6, 0x69, 0xb7, 0xc9, 0x1c, 0x70, 0x41, 0x3c, 0x87, 0xb4, 0x1e, 0x89, 0xb3, 0xbd, 0x78, 0xf0}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:05:43.260132 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.59632ms
SaveRDFNode: 2020/08/13 07:05:43.260141 Returned.+++++++++++ No error
DB: 2020/08/13 07:05:43.261353 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.29635ms
SaveRDFNode: 2020/08/13 07:05:43.261486 Returned.+++++++++++ No error
DB: 2020/08/13 07:05:43.261588 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.222296ms
SaveRDFNode: 2020/08/13 07:05:43.261596 Returned.+++++++++++ No error
DB: 2020/08/13 07:05:43.262443 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.469371ms
SaveRDFNode: 2020/08/13 07:05:43.262707 Returned.+++++++++++ No error
DB: 2020/08/13 07:05:43.266371 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.269164 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.272819 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.276663 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.281401 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.682355ms
DB: 2020/08/13 07:05:43.289828 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.742081ms
FetchForUpdate: 2020/08/13 07:05:43.289845 ** Cache FetchForUpdate Cache Key Value: [lMBmpCQVQ9W9v3gQlGAH9Q==]   sortk: A#G#:S
FetchNode: 2020/08/13 07:05:43.289851  node: lMBmpCQVQ9W9v3gQlGAH9Q== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:05:43.290047 ** Cache FetchForUpdate Cache Key Value: [RJEyCzs6S5utOwuOu+ov9Q==]   sortk: A#
FetchNode: 2020/08/13 07:05:43.290082  node: RJEyCzs6S5utOwuOu+ov9Q== subKey: A#
DB: 2020/08/13 07:05:43.293238 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.355367ms
FetchForUpdate: 2020/08/13 07:05:43.293306 len(nb): 1
fetchItems: 2020/08/13 07:05:43.293314 +++  Cache FetchItems for sortk A#G#:S UID: [lMBmpCQVQ9W9v3gQlGAH9Q==] 
FetchNode: 2020/08/13 07:05:43.293319  node: lMBmpCQVQ9W9v3gQlGAH9Q== subKey: A#G#:S
DB: 2020/08/13 07:05:43.296667 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.317552ms
DB: 2020/08/13 07:05:43.302388 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.956159ms
Unlock: 2020/08/13 07:05:43.302400 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:05:43.308767 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 18.621501ms
FetchForUpdate: 2020/08/13 07:05:43.308882 len(nb): 7
fetchItems: 2020/08/13 07:05:43.308891 +++  Cache FetchItems for sortk A# UID: [RJEyCzs6S5utOwuOu+ov9Q==] 
FetchNode: 2020/08/13 07:05:43.308896  node: RJEyCzs6S5utOwuOu+ov9Q== subKey: A#
DB: 2020/08/13 07:05:43.311947 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.019122ms
Unlock: 2020/08/13 07:05:43.315396 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 07:05:43.315841 ** Cache FetchForUpdate Cache Key Value: [lMBmpCQVQ9W9v3gQlGAH9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.315852 +++  Cache FetchItems for sortk A#G#:S UID: [lMBmpCQVQ9W9v3gQlGAH9Q==] 
FetchNode: 2020/08/13 07:05:43.315857  node: lMBmpCQVQ9W9v3gQlGAH9Q== subKey: A#G#:S
DB: 2020/08/13 07:05:43.319100 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.207108ms
DB: 2020/08/13 07:05:43.324940 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.474947ms
DB: 2020/08/13 07:05:43.328591 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.461424ms
DB: 2020/08/13 07:05:43.332831 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.853645ms
DB: 2020/08/13 07:05:43.339326 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.151395ms
DB: 2020/08/13 07:05:43.343190 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.517069ms
DB: 2020/08/13 07:05:43.347175 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.661355ms
DB: 2020/08/13 07:05:43.353461 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.980406ms
DB: 2020/08/13 07:05:43.357092 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.319497ms
DB: 2020/08/13 07:05:43.361121 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.684382ms
Unlock: 2020/08/13 07:05:43.361132 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:05:43.365203 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.654873ms
FetchForUpdate: 2020/08/13 07:05:43.365219 ** Cache FetchForUpdate Cache Key Value: [lMBmpCQVQ9W9v3gQlGAH9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.365230 +++  Cache FetchItems for sortk A#G#:S UID: [lMBmpCQVQ9W9v3gQlGAH9Q==] 
FetchNode: 2020/08/13 07:05:43.365235  node: lMBmpCQVQ9W9v3gQlGAH9Q== subKey: A#G#:S
DB: 2020/08/13 07:05:43.367973 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.704064ms
AttachNode: gr1 2020/08/13 07:05:43.368071 Errored: SetUpredAvailable :for  lMBmpCQVQ9W9v3gQlGAH9Q==
Cache: 2020/08/13 07:05:43.368080 In SetUpredAvailable: pUid, tUID:  lMBmpCQVQ9W9v3gQlGAH9Q== lMBmpCQVQ9W9v3gQlGAH9Q== A#G#:S
Cache: 2020/08/13 07:05:43.368084 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:05:43.371875 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.753755ms
Unlock: 2020/08/13 07:05:43.371885 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:05:43.378985 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.708638ms
DB: 2020/08/13 07:05:43.381701 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.384566 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.387441 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.390575 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.394456 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.798468ms
DB: 2020/08/13 07:05:43.398641 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.88811ms
FetchForUpdate: 2020/08/13 07:05:43.398659 ** Cache FetchForUpdate Cache Key Value: [1mm3yRxwQTyHtB6Js7148A==]   sortk: A#G#:S
FetchNode: 2020/08/13 07:05:43.398666  node: 1mm3yRxwQTyHtB6Js7148A== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:05:43.399164 ** Cache FetchForUpdate Cache Key Value: [RJEyCzs6S5utOwuOu+ov9Q==]   sortk: A#
fetchItems: 2020/08/13 07:05:43.399177 +++  Cache FetchItems for sortk A# UID: [RJEyCzs6S5utOwuOu+ov9Q==] 
FetchNode: 2020/08/13 07:05:43.399195  node: RJEyCzs6S5utOwuOu+ov9Q== subKey: A#
DB: 2020/08/13 07:05:43.402046 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.348579ms
FetchForUpdate: 2020/08/13 07:05:43.402107 len(nb): 1
fetchItems: 2020/08/13 07:05:43.402115 +++  Cache FetchItems for sortk A#G#:S UID: [1mm3yRxwQTyHtB6Js7148A==] 
FetchNode: 2020/08/13 07:05:43.402120  node: 1mm3yRxwQTyHtB6Js7148A== subKey: A#G#:S
DB: 2020/08/13 07:05:43.402914 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.640182ms
Unlock: 2020/08/13 07:05:43.404052 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:05:43.404839 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.680635ms
DB: 2020/08/13 07:05:43.408997 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.91919ms
Unlock: 2020/08/13 07:05:43.409008 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:05:43.409293 ** Cache FetchForUpdate Cache Key Value: [1mm3yRxwQTyHtB6Js7148A==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.409303 +++  Cache FetchItems for sortk A#G#:S UID: [1mm3yRxwQTyHtB6Js7148A==] 
FetchNode: 2020/08/13 07:05:43.409308  node: 1mm3yRxwQTyHtB6Js7148A== subKey: A#G#:S
DB: 2020/08/13 07:05:43.411809 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.469877ms
DB: 2020/08/13 07:05:43.418575 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.16304ms
DB: 2020/08/13 07:05:43.422756 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.760131ms
DB: 2020/08/13 07:05:43.427007 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.153328ms
DB: 2020/08/13 07:05:43.432335 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.26824ms
DB: 2020/08/13 07:05:43.435746 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.353401ms
DB: 2020/08/13 07:05:43.439425 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.6045ms
DB: 2020/08/13 07:05:43.444923 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.402041ms
DB: 2020/08/13 07:05:43.448517 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.528464ms
DB: 2020/08/13 07:05:43.452380 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.784383ms
Unlock: 2020/08/13 07:05:43.452396 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:05:43.456399 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.565349ms
FetchForUpdate: 2020/08/13 07:05:43.456412 ** Cache FetchForUpdate Cache Key Value: [1mm3yRxwQTyHtB6Js7148A==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.456419 +++  Cache FetchItems for sortk A#G#:S UID: [1mm3yRxwQTyHtB6Js7148A==] 
FetchNode: 2020/08/13 07:05:43.456424  node: 1mm3yRxwQTyHtB6Js7148A== subKey: A#G#:S
DB: 2020/08/13 07:05:43.459319 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.862903ms
AttachNode: gr1 2020/08/13 07:05:43.459420 Errored: SetUpredAvailable :for  1mm3yRxwQTyHtB6Js7148A==
Cache: 2020/08/13 07:05:43.459429 In SetUpredAvailable: pUid, tUID:  1mm3yRxwQTyHtB6Js7148A== 1mm3yRxwQTyHtB6Js7148A== A#G#:S
Cache: 2020/08/13 07:05:43.459433 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:05:43.463269 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.802804ms
Unlock: 2020/08/13 07:05:43.463279 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:05:43.467752 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.042629ms
DB: 2020/08/13 07:05:43.470578 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.473137 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.475504 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.478908 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.482805 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.82935ms
DB: 2020/08/13 07:05:43.486854 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.740148ms
FetchForUpdate: 2020/08/13 07:05:43.486871 ** Cache FetchForUpdate Cache Key Value: [RJEyCzs6S5utOwuOu+ov9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.486879 +++  Cache FetchItems for sortk A#G#:S UID: [RJEyCzs6S5utOwuOu+ov9Q==] 
FetchNode: 2020/08/13 07:05:43.486886  node: RJEyCzs6S5utOwuOu+ov9Q== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:05:43.487234 ** Cache FetchForUpdate Cache Key Value: [lMBmpCQVQ9W9v3gQlGAH9Q==]   sortk: A#
fetchItems: 2020/08/13 07:05:43.487256 +++  Cache FetchItems for sortk A# UID: [lMBmpCQVQ9W9v3gQlGAH9Q==] 
FetchNode: 2020/08/13 07:05:43.487286  node: lMBmpCQVQ9W9v3gQlGAH9Q== subKey: A#
DB: 2020/08/13 07:05:43.489860 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.942485ms
DB: 2020/08/13 07:05:43.491907 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.555732ms
Unlock: 2020/08/13 07:05:43.493426 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:05:43.494110 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.919009ms
Unlock: 2020/08/13 07:05:43.494121 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:05:43.494559 ** Cache FetchForUpdate Cache Key Value: [RJEyCzs6S5utOwuOu+ov9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.494570 +++  Cache FetchItems for sortk A#G#:S UID: [RJEyCzs6S5utOwuOu+ov9Q==] 
FetchNode: 2020/08/13 07:05:43.494575  node: RJEyCzs6S5utOwuOu+ov9Q== subKey: A#G#:S
DB: 2020/08/13 07:05:43.497493 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.885756ms
DB: 2020/08/13 07:05:43.503252 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.344504ms
DB: 2020/08/13 07:05:43.506994 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.545413ms
DB: 2020/08/13 07:05:43.511058 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.689002ms
DB: 2020/08/13 07:05:43.517395 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.027874ms
DB: 2020/08/13 07:05:43.521239 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.418028ms
DB: 2020/08/13 07:05:43.525742 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.857334ms
DB: 2020/08/13 07:05:43.532370 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.132551ms
DB: 2020/08/13 07:05:43.536595 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.748474ms
DB: 2020/08/13 07:05:43.541543 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.252538ms
Unlock: 2020/08/13 07:05:43.541563 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:05:43.545159 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.514579ms
FetchForUpdate: 2020/08/13 07:05:43.545174 ** Cache FetchForUpdate Cache Key Value: [RJEyCzs6S5utOwuOu+ov9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.545183 +++  Cache FetchItems for sortk A#G#:S UID: [RJEyCzs6S5utOwuOu+ov9Q==] 
FetchNode: 2020/08/13 07:05:43.545201  node: RJEyCzs6S5utOwuOu+ov9Q== subKey: A#G#:S
DB: 2020/08/13 07:05:43.548156 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.921739ms
AttachNode: gr1 2020/08/13 07:05:43.548244 Errored: SetUpredAvailable :for  RJEyCzs6S5utOwuOu+ov9Q==
Cache: 2020/08/13 07:05:43.548252 In SetUpredAvailable: pUid, tUID:  RJEyCzs6S5utOwuOu+ov9Q== RJEyCzs6S5utOwuOu+ov9Q== A#G#:S
Cache: 2020/08/13 07:05:43.548256 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:05:43.551706 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.415405ms
Unlock: 2020/08/13 07:05:43.551715 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:05:43.555803 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.983637ms
DB: 2020/08/13 07:05:43.558692 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.561246 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.564124 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.566535 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.570449 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.857401ms
DB: 2020/08/13 07:05:43.574518 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.977568ms
FetchForUpdate: 2020/08/13 07:05:43.574537 ** Cache FetchForUpdate Cache Key Value: [1mm3yRxwQTyHtB6Js7148A==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.574544 +++  Cache FetchItems for sortk A#G#:S UID: [1mm3yRxwQTyHtB6Js7148A==] 
FetchNode: 2020/08/13 07:05:43.574549  node: 1mm3yRxwQTyHtB6Js7148A== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:05:43.574713 ** Cache FetchForUpdate Cache Key Value: [lMBmpCQVQ9W9v3gQlGAH9Q==]   sortk: A#
fetchItems: 2020/08/13 07:05:43.574722 +++  Cache FetchItems for sortk A# UID: [lMBmpCQVQ9W9v3gQlGAH9Q==] 
FetchNode: 2020/08/13 07:05:43.574734  node: lMBmpCQVQ9W9v3gQlGAH9Q== subKey: A#
DB: 2020/08/13 07:05:43.577974 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.38973ms
DB: 2020/08/13 07:05:43.579151 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.366774ms
Unlock: 2020/08/13 07:05:43.579855 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:05:43.584548 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.414149ms
DB: 2020/08/13 07:05:43.587953 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.371075ms
DB: 2020/08/13 07:05:43.587971 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.371075ms
DB: 2020/08/13 07:05:43.591461 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.457139ms
DB: 2020/08/13 07:05:43.591479 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.457139ms
DB: 2020/08/13 07:05:43.595469 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.909246ms
DB: 2020/08/13 07:05:43.599363 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.835755ms
Unlock: 2020/08/13 07:05:43.599374 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:05:43.605478 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.023341ms
DB: 2020/08/13 07:05:43.608845 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.307834ms
DB: 2020/08/13 07:05:43.612811 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.859511ms
DB: 2020/08/13 07:05:43.619096 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.22312ms
DB: 2020/08/13 07:05:43.622674 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.518755ms
DB: 2020/08/13 07:05:43.626415 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.66892ms
DB: 2020/08/13 07:05:43.632499 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.023889ms
DB: 2020/08/13 07:05:43.636008 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.453829ms
DB: 2020/08/13 07:05:43.640302 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.993301ms
DB: 2020/08/13 07:05:43.644563 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.060188ms
FetchForUpdate: 2020/08/13 07:05:43.644583 ** Cache FetchForUpdate Cache Key Value: [1mm3yRxwQTyHtB6Js7148A==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.644590 +++  Cache FetchItems for sortk A#G#:S UID: [1mm3yRxwQTyHtB6Js7148A==] 
FetchNode: 2020/08/13 07:05:43.644595  node: 1mm3yRxwQTyHtB6Js7148A== subKey: A#G#:S
DB: 2020/08/13 07:05:43.647925 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.292876ms
AttachNode: gr1 2020/08/13 07:05:43.648008 Errored: SetUpredAvailable :for  1mm3yRxwQTyHtB6Js7148A==
Cache: 2020/08/13 07:05:43.648015 In SetUpredAvailable: pUid, tUID:  1mm3yRxwQTyHtB6Js7148A== heNuZralSaeGKLkhfXXadw== A#G#:S
Cache: 2020/08/13 07:05:43.648020 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:05:43.651597 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.542989ms
Unlock: 2020/08/13 07:05:43.651608 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:05:43.655942 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.929527ms
DB: 2020/08/13 07:05:43.658361 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.660865 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.663365 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.666563 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.670318 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.705587ms
DB: 2020/08/13 07:05:43.674473 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.985651ms
FetchForUpdate: 2020/08/13 07:05:43.674495 ** Cache FetchForUpdate Cache Key Value: [RJEyCzs6S5utOwuOu+ov9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.674502 +++  Cache FetchItems for sortk A#G#:S UID: [RJEyCzs6S5utOwuOu+ov9Q==] 
FetchNode: 2020/08/13 07:05:43.674508  node: RJEyCzs6S5utOwuOu+ov9Q== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:05:43.674682 ** Cache FetchForUpdate Cache Key Value: [1mm3yRxwQTyHtB6Js7148A==]   sortk: A#
fetchItems: 2020/08/13 07:05:43.674692 +++  Cache FetchItems for sortk A# UID: [1mm3yRxwQTyHtB6Js7148A==] 
FetchNode: 2020/08/13 07:05:43.674704  node: 1mm3yRxwQTyHtB6Js7148A== subKey: A#
DB: 2020/08/13 07:05:43.677978 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.43746ms
DB: 2020/08/13 07:05:43.679087 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.30851ms
Unlock: 2020/08/13 07:05:43.679273 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:05:43.681989 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.872725ms
DB: 2020/08/13 07:05:43.685439 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.417966ms
DB: 2020/08/13 07:05:43.685454 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.417966ms
DB: 2020/08/13 07:05:43.688783 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.299457ms
DB: 2020/08/13 07:05:43.688798 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.299457ms
DB: 2020/08/13 07:05:43.692892 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.931069ms
DB: 2020/08/13 07:05:43.696657 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.613776ms
Unlock: 2020/08/13 07:05:43.696669 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:05:43.703436 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.143448ms
DB: 2020/08/13 07:05:43.707111 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.487228ms
DB: 2020/08/13 07:05:43.711262 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.767452ms
DB: 2020/08/13 07:05:43.716804 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.234251ms
DB: 2020/08/13 07:05:43.720690 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.569298ms
DB: 2020/08/13 07:05:43.725090 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.094908ms
DB: 2020/08/13 07:05:43.730673 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.289944ms
DB: 2020/08/13 07:05:43.734766 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.803003ms
DB: 2020/08/13 07:05:43.739018 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.796474ms
DB: 2020/08/13 07:05:43.742764 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.489253ms
FetchForUpdate: 2020/08/13 07:05:43.742776 ** Cache FetchForUpdate Cache Key Value: [RJEyCzs6S5utOwuOu+ov9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.742782 +++  Cache FetchItems for sortk A#G#:S UID: [RJEyCzs6S5utOwuOu+ov9Q==] 
FetchNode: 2020/08/13 07:05:43.742787  node: RJEyCzs6S5utOwuOu+ov9Q== subKey: A#G#:S
DB: 2020/08/13 07:05:43.745800 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.977784ms
AttachNode: gr1 2020/08/13 07:05:43.745905 Errored: SetUpredAvailable :for  RJEyCzs6S5utOwuOu+ov9Q==
Cache: 2020/08/13 07:05:43.745915 In SetUpredAvailable: pUid, tUID:  RJEyCzs6S5utOwuOu+ov9Q== 33YjqGX4T2WTrtXJqpUwaQ== A#G#:S
Cache: 2020/08/13 07:05:43.745919 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:05:43.749668 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.715765ms
Unlock: 2020/08/13 07:05:43.749858 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:05:43.754491 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.127705ms
DB: 2020/08/13 07:05:43.756834 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.759018 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.761877 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.764177 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:05:43.767806 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.576834ms
DB: 2020/08/13 07:05:43.772043 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.060638ms
FetchForUpdate: 2020/08/13 07:05:43.772058 ** Cache FetchForUpdate Cache Key Value: [lMBmpCQVQ9W9v3gQlGAH9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.772077 +++  Cache FetchItems for sortk A#G#:S UID: [lMBmpCQVQ9W9v3gQlGAH9Q==] 
FetchNode: 2020/08/13 07:05:43.772082  node: lMBmpCQVQ9W9v3gQlGAH9Q== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:05:43.772266 ** Cache FetchForUpdate Cache Key Value: [1mm3yRxwQTyHtB6Js7148A==]   sortk: A#
fetchItems: 2020/08/13 07:05:43.772275 +++  Cache FetchItems for sortk A# UID: [1mm3yRxwQTyHtB6Js7148A==] 
FetchNode: 2020/08/13 07:05:43.772287  node: 1mm3yRxwQTyHtB6Js7148A== subKey: A#
DB: 2020/08/13 07:05:43.775588 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.471361ms
DB: 2020/08/13 07:05:43.776600 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.222723ms
Unlock: 2020/08/13 07:05:43.778120 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:05:43.780007 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.93971ms
DB: 2020/08/13 07:05:43.783378 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.341604ms
DB: 2020/08/13 07:05:43.783394 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.341604ms
DB: 2020/08/13 07:05:43.786864 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.440889ms
DB: 2020/08/13 07:05:43.786883 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.440889ms
DB: 2020/08/13 07:05:43.790906 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.959401ms
DB: 2020/08/13 07:05:43.794951 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.981495ms
Unlock: 2020/08/13 07:05:43.794962 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:05:43.802266 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.348557ms
DB: 2020/08/13 07:05:43.806223 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.531927ms
DB: 2020/08/13 07:05:43.810168 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.835436ms
DB: 2020/08/13 07:05:43.815467 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.236625ms
DB: 2020/08/13 07:05:43.819043 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.443043ms
DB: 2020/08/13 07:05:43.823704 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.426389ms
DB: 2020/08/13 07:05:43.831519 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.488785ms
DB: 2020/08/13 07:05:43.835572 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.691577ms
DB: 2020/08/13 07:05:43.839562 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.674114ms
DB: 2020/08/13 07:05:43.843269 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.516574ms
FetchForUpdate: 2020/08/13 07:05:43.843281 ** Cache FetchForUpdate Cache Key Value: [lMBmpCQVQ9W9v3gQlGAH9Q==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:05:43.843288 +++  Cache FetchItems for sortk A#G#:S UID: [lMBmpCQVQ9W9v3gQlGAH9Q==] 
FetchNode: 2020/08/13 07:05:43.843292  node: lMBmpCQVQ9W9v3gQlGAH9Q== subKey: A#G#:S
DB: 2020/08/13 07:05:43.846296 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.969088ms
AttachNode: gr1 2020/08/13 07:05:43.846407 Errored: SetUpredAvailable :for  lMBmpCQVQ9W9v3gQlGAH9Q==
Cache: 2020/08/13 07:05:43.846415 In SetUpredAvailable: pUid, tUID:  lMBmpCQVQ9W9v3gQlGAH9Q== cxLUzS7iQzW6N+C4Be+StQ== A#G#:S
Cache: 2020/08/13 07:05:43.846420 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:05:43.850179 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.725686ms
Unlock: 2020/08/13 07:05:43.850188 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:05:43.854661 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.952791ms
rdfLoader: 2020/08/13 07:05:43.854676 saveNode finished waiting...exiting
grmgr: 2020/08/13 07:05:43.854687 Powering down...
rdfuuid: 2020/08/13 07:05:43.854693 Powering down...
DB:2020/08/13 07:07:21 log.go:18: ===============================================================================
grmgr: 2020/08/13 07:07:21.280180 Powering on...
rdfLoader: 2020/08/13 07:07:21.280471 verify started....xx.
rdfLoader: 2020/08/13 07:07:21.280491 saveNode started......
rdfLoader: 2020/08/13 07:07:21.280495 define saveNode limiter......
rdfuuid: 2020/08/13 07:07:21.280509 Powering on...
rdfLoader: 2020/08/13 07:07:21.280515 *************** All started 
rdfLoader: 2020/08/13 07:07:21.288326 .  getType..
rdfLoader: 2020/08/13 07:07:21.288335 node.TyName : [Person]
DB: 2020/08/13 07:07:21.359984 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.598205ms
verify: 2020/08/13 07:07:21.360131 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 07:07:21.360139  Send Ask request to limiter.
verify: 2020/08/13 07:07:21.360145 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:07:21.360153 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:07:21.360159 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:07:21.360166 .  getType..
rdfLoader: 2020/08/13 07:07:21.360170 node.TyName : [Person]
verify: 2020/08/13 07:07:21.360206 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 07:07:21.360211  Send Ask request to limiter.
verify: 2020/08/13 07:07:21.360215 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:07:21.360221 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:07:21.360235 ACK from gcmgr....received...
verify: 2020/08/13 07:07:21.360242 *** Verify back to waiting on veryifyCh
unmarshalRDF2020/08/13 07:07:21.360821 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:07:21.360836 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 07:07:21.360842 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 07:07:21.360853 Find Ty Address
rdfLoader: 2020/08/13 07:07:21.360858 Find Ty Age
rdfLoader: 2020/08/13 07:07:21.360864 Find Ty Cars
rdfLoader: 2020/08/13 07:07:21.360871 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:07:21.360875 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 07:07:21.360879 Find Ty DOB
rdfLoader: 2020/08/13 07:07:21.360883 Find Ty Friends
rdfLoader: 2020/08/13 07:07:21.360887 Find Ty Jobs
rdfLoader: 2020/08/13 07:07:21.360891 Find Ty Name
rdfLoader: 2020/08/13 07:07:21.360895 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:07:21.360899 Find Ty Siblings
rdfLoader: 2020/08/13 07:07:21.360920 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:07:21.360949 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:07:21.360955 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:07:21.360972 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 07:07:21.360982 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:07:21.360987 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 07:07:21.360991 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 07:07:21.360996 Find Ty Address
rdfLoader: 2020/08/13 07:07:21.360999 Find Ty Age
rdfLoader: 2020/08/13 07:07:21.361004 Find Ty Cars
rdfLoader: 2020/08/13 07:07:21.361009 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:07:21.361013 Add to SS . [Alfa]
rdfLoader: 2020/08/13 07:07:21.361017 Find Ty DOB
rdfLoader: 2020/08/13 07:07:21.361021 Find Ty Friends
rdfLoader: 2020/08/13 07:07:21.361025 Find Ty Jobs
rdfLoader: 2020/08/13 07:07:21.361029 Find Ty Name
rdfLoader: 2020/08/13 07:07:21.361033 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:07:21.361037 Find Ty Siblings
rdfLoader: 2020/08/13 07:07:21.361049 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:07:21.361076 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:07:21.361080 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:07:21.361085 EndCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 07:07:21.361092 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
grmgr: 2020/08/13 07:07:21.361098 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:07:21.361119 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361125 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361137 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361143 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361149 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361154 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361160 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:07:21.361164 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:07:21.361175 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0007cc1e0)}
SaveRDFNode: 2020/08/13 07:07:21.361179 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:07:21.361187 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.361191 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.361197 UID received  : TIvDPro/Qi+zmDvmhEQSbw==
SaveRDFNode: xxx 2020/08/13 07:07:21.361395 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361405 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361412 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361417 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361423 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361445 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.361451 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:07:21.361470 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:07:21.361476 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0007cc5a0)}
SaveRDFNode: 2020/08/13 07:07:21.361480 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:07:21.361487 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.361495 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.361500 UID received  : KZhxxoveTESe0EwQ6AwqPQ==
rdfLoader: 2020/08/13 07:07:21.363972 .  getType..
rdfLoader: 2020/08/13 07:07:21.363982 node.TyName : [Person]
verify: 2020/08/13 07:07:21.364011 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 07:07:21.364016  Send Ask request to limiter.
verify: 2020/08/13 07:07:21.364020 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:07:21.364026 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:07:21.364031 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:07:21.364036 .  getType..
rdfLoader: 2020/08/13 07:07:21.364040 node.TyName : [Person]
verify: 2020/08/13 07:07:21.364079 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 07:07:21.364089  Send Ask request to limiter.
verify: 2020/08/13 07:07:21.364093 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:07:21.364098 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:07:21.364103 ACK from gcmgr....received...
verify: 2020/08/13 07:07:21.364108 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 07:07:21.364112 verify at wg.Wait() .....
unmarshalRDF2020/08/13 07:07:21.364123 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:07:21.364128 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 07:07:21.364133 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 07:07:21.364138 Find Ty Address
rdfLoader: 2020/08/13 07:07:21.364142 Find Ty Age
rdfLoader: 2020/08/13 07:07:21.364147 Find Ty Cars
rdfLoader: 2020/08/13 07:07:21.364152 Add to SS . [Bentley]
rdfLoader: 2020/08/13 07:07:21.364157 Find Ty DOB
rdfLoader: 2020/08/13 07:07:21.364161 Find Ty Friends
rdfLoader: 2020/08/13 07:07:21.364165 Find Ty Jobs
rdfLoader: 2020/08/13 07:07:21.364168 Find Ty Name
rdfLoader: 2020/08/13 07:07:21.364173 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:07:21.364176 Find Ty Siblings
rdfLoader: 2020/08/13 07:07:21.364190 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:07:21.364233 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:07:21.364239 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:07:21.364246 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 07:07:21.364256 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:07:21.364261 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:07:21.364266 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 07:07:21.364271 Find Ty Address
rdfLoader: 2020/08/13 07:07:21.364274 Find Ty Age
rdfLoader: 2020/08/13 07:07:21.364279 Find Ty Cars
rdfLoader: 2020/08/13 07:07:21.364284 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 07:07:21.364288 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 07:07:21.364293 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:07:21.364296 Find Ty DOB
rdfLoader: 2020/08/13 07:07:21.364301 Find Ty Friends
rdfLoader: 2020/08/13 07:07:21.364304 Find Ty Jobs
rdfLoader: 2020/08/13 07:07:21.364308 Find Ty Name
rdfLoader: 2020/08/13 07:07:21.364312 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:07:21.364316 Find Ty Siblings
rdfLoader: 2020/08/13 07:07:21.364328 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:07:21.364386 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:07:21.364392 Exit  unmarshalRDF. 
verify: 2020/08/13 07:07:21.364402 verify exited.....
grmgr: 2020/08/13 07:07:21.364409 EndCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:07:21.364436 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:07:21.364470 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364476 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364482 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364487 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364493 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364498 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364504 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:07:21.364508 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:07:21.364513 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007cccc0)}
SaveRDFNode: 2020/08/13 07:07:21.364517 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:07:21.364524 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.364528 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.364550 UID received  : 6oGnUcLrRimN5qVDK4RfYg==
grmgr: 2020/08/13 07:07:21.364807 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:07:21.364881 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364890 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364895 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364901 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364908 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364913 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:21.364919 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:07:21.364923 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:07:21.364928 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0007cd1a0)}
SaveRDFNode: 2020/08/13 07:07:21.364932 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:07:21.364939 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.364943 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.364948 UID received  : abTHNS4ESTeQIckLIwBhnQ==
DB: 2020/08/13 07:07:21.368340 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.116749ms
DB: 2020/08/13 07:07:21.372118 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.588419ms
DB: 2020/08/13 07:07:21.375791 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.419381ms
DB: 2020/08/13 07:07:21.379311 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.306604ms
DB: 2020/08/13 07:07:21.382793 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.443402ms
DB: 2020/08/13 07:07:21.384945 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.3679ms
DB: 2020/08/13 07:07:21.386678 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 21.701809ms
DB: 2020/08/13 07:07:21.388560 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.583724ms
DB: 2020/08/13 07:07:21.389242 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.092687ms
DB: 2020/08/13 07:07:21.389975 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.266641ms
DB: 2020/08/13 07:07:21.392455 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.180319ms
DB: 2020/08/13 07:07:21.392841 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.249967ms
DB: 2020/08/13 07:07:21.394211 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.994301ms
DB: 2020/08/13 07:07:21.395650 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.022248ms
DB: 2020/08/13 07:07:21.396273 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.376464ms
DB: 2020/08/13 07:07:21.397478 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.234419ms
DB: 2020/08/13 07:07:21.399031 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.352368ms
SaveRDFNode: 2020/08/13 07:07:21.399060 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/13 07:07:21.399068 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.399072 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.399078 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:21.399091 a: = db.Item{PKey:[]uint8{0x29, 0x98, 0x71, 0xc6, 0x8b, 0xde, 0x4c, 0x44, 0x9e, 0xd0, 0x4c, 0x10, 0xe8, 0xc, 0x2a, 0x3d}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:21.399349 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.519338ms
SaveRDFNode: 2020/08/13 07:07:21.399364 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/13 07:07:21.399370 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.399373 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.399379 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:21.399389 a: = db.Item{PKey:[]uint8{0x4c, 0x8b, 0xc3, 0x3e, 0xba, 0x3f, 0x42, 0x2f, 0xb3, 0x98, 0x3b, 0xe6, 0x84, 0x44, 0x12, 0x6f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:21.399926 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.621819ms
SaveRDFNode: 2020/08/13 07:07:21.399938 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cccc0)}
rdfUIDdb: 2020/08/13 07:07:21.399944 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.399948 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.399953 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:21.399963 a: = db.Item{PKey:[]uint8{0xea, 0x81, 0xa7, 0x51, 0xc2, 0xeb, 0x46, 0x29, 0x8d, 0xe6, 0xa5, 0x43, 0x2b, 0x84, 0x5f, 0x62}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:21.400891 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.366895ms
SaveRDFNode: 2020/08/13 07:07:21.400902 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd1a0)}
rdfUIDdb: 2020/08/13 07:07:21.400908 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.400918 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.400923 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:21.400933 a: = db.Item{PKey:[]uint8{0x69, 0xb4, 0xc7, 0x35, 0x2e, 0x4, 0x49, 0x37, 0x90, 0x21, 0xc9, 0xb, 0x23, 0x0, 0x61, 0x9d}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:21.402282 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.144422ms
SaveRDFNode: 2020/08/13 07:07:21.402294 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/13 07:07:21.402300 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.402304 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.402309 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:21.402319 a: = db.Item{PKey:[]uint8{0x29, 0x98, 0x71, 0xc6, 0x8b, 0xde, 0x4c, 0x44, 0x9e, 0xd0, 0x4c, 0x10, 0xe8, 0xc, 0x2a, 0x3d}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:21.402608 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.186311ms
SaveRDFNode: 2020/08/13 07:07:21.402619 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/13 07:07:21.402624 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.402628 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.402633 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:21.402642 a: = db.Item{PKey:[]uint8{0x4c, 0x8b, 0xc3, 0x3e, 0xba, 0x3f, 0x42, 0x2f, 0xb3, 0x98, 0x3b, 0xe6, 0x84, 0x44, 0x12, 0x6f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:21.403424 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.433766ms
SaveRDFNode: 2020/08/13 07:07:21.403435 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cccc0)}
rdfUIDdb: 2020/08/13 07:07:21.403440 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.403444 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.403449 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:21.403458 a: = db.Item{PKey:[]uint8{0xea, 0x81, 0xa7, 0x51, 0xc2, 0xeb, 0x46, 0x29, 0x8d, 0xe6, 0xa5, 0x43, 0x2b, 0x84, 0x5f, 0x62}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:21.404363 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.401956ms
SaveRDFNode: 2020/08/13 07:07:21.404374 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd1a0)}
rdfUIDdb: 2020/08/13 07:07:21.404380 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:21.404383 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:21.404389 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:21.404398 a: = db.Item{PKey:[]uint8{0x69, 0xb4, 0xc7, 0x35, 0x2e, 0x4, 0x49, 0x37, 0x90, 0x21, 0xc9, 0xb, 0x23, 0x0, 0x61, 0x9d}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:21.405524 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.177026ms
SaveRDFNode: 2020/08/13 07:07:21.405533 Returned.+++++++++++ No error
DB: 2020/08/13 07:07:21.405732 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.059123ms
SaveRDFNode: 2020/08/13 07:07:21.405740 Returned.+++++++++++ No error
DB: 2020/08/13 07:07:21.407102 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.610196ms
SaveRDFNode: 2020/08/13 07:07:21.407111 Returned.+++++++++++ No error
DB: 2020/08/13 07:07:21.407660 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.210585ms
SaveRDFNode: 2020/08/13 07:07:21.407668 Returned.+++++++++++ No error
DB: 2020/08/13 07:07:21.412681 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.415154 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.418547 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.420771 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.424341 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.506323ms
DB: 2020/08/13 07:07:21.433996 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 9.101244ms
FetchForUpdate: 2020/08/13 07:07:21.434014 ** Cache FetchForUpdate Cache Key Value: [TIvDPro/Qi+zmDvmhEQSbw==]   sortk: A#G#:S
FetchNode: 2020/08/13 07:07:21.434021  node: TIvDPro/Qi+zmDvmhEQSbw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:21.434345 ** Cache FetchForUpdate Cache Key Value: [KZhxxoveTESe0EwQ6AwqPQ==]   sortk: A#
FetchNode: 2020/08/13 07:07:21.434363  node: KZhxxoveTESe0EwQ6AwqPQ== subKey: A#
DB: 2020/08/13 07:07:21.436880 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.825756ms
FetchForUpdate: 2020/08/13 07:07:21.436945 len(nb): 1
fetchItems: 2020/08/13 07:07:21.436954 +++  Cache FetchItems for sortk A#G#:S UID: [TIvDPro/Qi+zmDvmhEQSbw==] 
FetchNode: 2020/08/13 07:07:21.436958  node: TIvDPro/Qi+zmDvmhEQSbw== subKey: A#G#:S
DB: 2020/08/13 07:07:21.439583 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.58358ms
DB: 2020/08/13 07:07:21.443774 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.550468ms
Unlock: 2020/08/13 07:07:21.443785 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:07:21.449408 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 14.963429ms
FetchForUpdate: 2020/08/13 07:07:21.449667 len(nb): 7
fetchItems: 2020/08/13 07:07:21.449691 +++  Cache FetchItems for sortk A# UID: [KZhxxoveTESe0EwQ6AwqPQ==] 
FetchNode: 2020/08/13 07:07:21.449695  node: KZhxxoveTESe0EwQ6AwqPQ== subKey: A#
DB: 2020/08/13 07:07:21.452792 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.052409ms
Unlock: 2020/08/13 07:07:21.456375 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 07:07:21.457312 ** Cache FetchForUpdate Cache Key Value: [TIvDPro/Qi+zmDvmhEQSbw==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.457324 +++  Cache FetchItems for sortk A#G#:S UID: [TIvDPro/Qi+zmDvmhEQSbw==] 
FetchNode: 2020/08/13 07:07:21.457329  node: TIvDPro/Qi+zmDvmhEQSbw== subKey: A#G#:S
DB: 2020/08/13 07:07:21.460080 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.690074ms
DB: 2020/08/13 07:07:21.466674 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.11338ms
DB: 2020/08/13 07:07:21.470552 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.695828ms
DB: 2020/08/13 07:07:21.474895 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.724667ms
DB: 2020/08/13 07:07:21.482931 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.52807ms
DB: 2020/08/13 07:07:21.487251 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.735445ms
DB: 2020/08/13 07:07:21.491126 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.570136ms
DB: 2020/08/13 07:07:21.497693 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.22397ms
DB: 2020/08/13 07:07:21.501663 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.328755ms
DB: 2020/08/13 07:07:21.506089 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.049122ms
Unlock: 2020/08/13 07:07:21.506103 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:07:21.509997 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.523858ms
FetchForUpdate: 2020/08/13 07:07:21.510009 ** Cache FetchForUpdate Cache Key Value: [TIvDPro/Qi+zmDvmhEQSbw==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.510015 +++  Cache FetchItems for sortk A#G#:S UID: [TIvDPro/Qi+zmDvmhEQSbw==] 
FetchNode: 2020/08/13 07:07:21.510020  node: TIvDPro/Qi+zmDvmhEQSbw== subKey: A#G#:S
DB: 2020/08/13 07:07:21.513076 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.99656ms
AttachNode: gr1 2020/08/13 07:07:21.513157 Errored: SetUpredAvailable :for  TIvDPro/Qi+zmDvmhEQSbw==
Cache: 2020/08/13 07:07:21.513179 In SetUpredAvailable: pUid, tUID:  TIvDPro/Qi+zmDvmhEQSbw== TIvDPro/Qi+zmDvmhEQSbw== A#G#:S
Cache: 2020/08/13 07:07:21.513184 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:21.516588 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.373469ms
Unlock: 2020/08/13 07:07:21.516598 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:21.526140 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 9.017147ms
DB: 2020/08/13 07:07:21.528908 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.532158 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.534810 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.537311 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.540939 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.559828ms
DB: 2020/08/13 07:07:21.546636 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.650041ms
FetchForUpdate: 2020/08/13 07:07:21.546657 ** Cache FetchForUpdate Cache Key Value: [abTHNS4ESTeQIckLIwBhnQ==]   sortk: A#G#:S
FetchNode: 2020/08/13 07:07:21.546664  node: abTHNS4ESTeQIckLIwBhnQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:21.546899 ** Cache FetchForUpdate Cache Key Value: [KZhxxoveTESe0EwQ6AwqPQ==]   sortk: A#
fetchItems: 2020/08/13 07:07:21.546911 +++  Cache FetchItems for sortk A# UID: [KZhxxoveTESe0EwQ6AwqPQ==] 
FetchNode: 2020/08/13 07:07:21.546940  node: KZhxxoveTESe0EwQ6AwqPQ== subKey: A#
DB: 2020/08/13 07:07:21.549412 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.710605ms
FetchForUpdate: 2020/08/13 07:07:21.549475 len(nb): 1
fetchItems: 2020/08/13 07:07:21.549484 +++  Cache FetchItems for sortk A#G#:S UID: [abTHNS4ESTeQIckLIwBhnQ==] 
FetchNode: 2020/08/13 07:07:21.549489  node: abTHNS4ESTeQIckLIwBhnQ== subKey: A#G#:S
DB: 2020/08/13 07:07:21.550115 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.106905ms
Unlock: 2020/08/13 07:07:21.551194 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:21.552225 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.708049ms
DB: 2020/08/13 07:07:21.556084 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.630697ms
Unlock: 2020/08/13 07:07:21.556095 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:07:21.556343 ** Cache FetchForUpdate Cache Key Value: [abTHNS4ESTeQIckLIwBhnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.556352 +++  Cache FetchItems for sortk A#G#:S UID: [abTHNS4ESTeQIckLIwBhnQ==] 
FetchNode: 2020/08/13 07:07:21.556357  node: abTHNS4ESTeQIckLIwBhnQ== subKey: A#G#:S
DB: 2020/08/13 07:07:21.560041 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.63004ms
DB: 2020/08/13 07:07:21.566545 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.180765ms
DB: 2020/08/13 07:07:21.570162 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.418832ms
DB: 2020/08/13 07:07:21.574218 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.689704ms
DB: 2020/08/13 07:07:21.580662 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.109409ms
DB: 2020/08/13 07:07:21.584494 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.509469ms
DB: 2020/08/13 07:07:21.588501 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.689845ms
DB: 2020/08/13 07:07:21.594722 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.922321ms
DB: 2020/08/13 07:07:21.598563 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.493666ms
DB: 2020/08/13 07:07:21.602612 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.576927ms
Unlock: 2020/08/13 07:07:21.602627 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:07:21.606719 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.421624ms
FetchForUpdate: 2020/08/13 07:07:21.606731 ** Cache FetchForUpdate Cache Key Value: [abTHNS4ESTeQIckLIwBhnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.606738 +++  Cache FetchItems for sortk A#G#:S UID: [abTHNS4ESTeQIckLIwBhnQ==] 
FetchNode: 2020/08/13 07:07:21.606742  node: abTHNS4ESTeQIckLIwBhnQ== subKey: A#G#:S
DB: 2020/08/13 07:07:21.609444 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.671043ms
AttachNode: gr1 2020/08/13 07:07:21.609526 Errored: SetUpredAvailable :for  abTHNS4ESTeQIckLIwBhnQ==
Cache: 2020/08/13 07:07:21.609533 In SetUpredAvailable: pUid, tUID:  abTHNS4ESTeQIckLIwBhnQ== abTHNS4ESTeQIckLIwBhnQ== A#G#:S
Cache: 2020/08/13 07:07:21.609537 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:21.613012 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.444433ms
Unlock: 2020/08/13 07:07:21.613021 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:21.618110 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.709626ms
DB: 2020/08/13 07:07:21.620615 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.623099 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.626139 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.629771 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.633363 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.542879ms
DB: 2020/08/13 07:07:21.638095 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.44678ms
FetchForUpdate: 2020/08/13 07:07:21.638112 ** Cache FetchForUpdate Cache Key Value: [KZhxxoveTESe0EwQ6AwqPQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.638128 +++  Cache FetchItems for sortk A#G#:S UID: [KZhxxoveTESe0EwQ6AwqPQ==] 
FetchNode: 2020/08/13 07:07:21.638133  node: KZhxxoveTESe0EwQ6AwqPQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:21.638464 ** Cache FetchForUpdate Cache Key Value: [TIvDPro/Qi+zmDvmhEQSbw==]   sortk: A#
fetchItems: 2020/08/13 07:07:21.638475 +++  Cache FetchItems for sortk A# UID: [TIvDPro/Qi+zmDvmhEQSbw==] 
FetchNode: 2020/08/13 07:07:21.638487  node: TIvDPro/Qi+zmDvmhEQSbw== subKey: A#
DB: 2020/08/13 07:07:21.641154 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.951216ms
DB: 2020/08/13 07:07:21.642079 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.529374ms
Unlock: 2020/08/13 07:07:21.643414 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:21.645108 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.643777ms
Unlock: 2020/08/13 07:07:21.645118 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:07:21.645478 ** Cache FetchForUpdate Cache Key Value: [KZhxxoveTESe0EwQ6AwqPQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.645487 +++  Cache FetchItems for sortk A#G#:S UID: [KZhxxoveTESe0EwQ6AwqPQ==] 
FetchNode: 2020/08/13 07:07:21.645492  node: KZhxxoveTESe0EwQ6AwqPQ== subKey: A#G#:S
DB: 2020/08/13 07:07:21.652294 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 6.76931ms
DB: 2020/08/13 07:07:21.659491 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.354441ms
DB: 2020/08/13 07:07:21.663203 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.582799ms
DB: 2020/08/13 07:07:21.667126 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.550679ms
DB: 2020/08/13 07:07:21.673632 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.191241ms
DB: 2020/08/13 07:07:21.677794 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.807872ms
DB: 2020/08/13 07:07:21.682080 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.890361ms
DB: 2020/08/13 07:07:21.688406 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.023547ms
DB: 2020/08/13 07:07:21.692202 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.401657ms
DB: 2020/08/13 07:07:21.696506 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.806135ms
Unlock: 2020/08/13 07:07:21.696521 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:07:21.700716 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.405954ms
FetchForUpdate: 2020/08/13 07:07:21.700728 ** Cache FetchForUpdate Cache Key Value: [KZhxxoveTESe0EwQ6AwqPQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.700735 +++  Cache FetchItems for sortk A#G#:S UID: [KZhxxoveTESe0EwQ6AwqPQ==] 
FetchNode: 2020/08/13 07:07:21.700752  node: KZhxxoveTESe0EwQ6AwqPQ== subKey: A#G#:S
DB: 2020/08/13 07:07:21.703512 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.729948ms
AttachNode: gr1 2020/08/13 07:07:21.703602 Errored: SetUpredAvailable :for  KZhxxoveTESe0EwQ6AwqPQ==
Cache: 2020/08/13 07:07:21.703610 In SetUpredAvailable: pUid, tUID:  KZhxxoveTESe0EwQ6AwqPQ== KZhxxoveTESe0EwQ6AwqPQ== A#G#:S
Cache: 2020/08/13 07:07:21.703614 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:21.707154 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.49564ms
Unlock: 2020/08/13 07:07:21.707171 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:21.712556 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.879932ms
DB: 2020/08/13 07:07:21.715377 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.718155 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.720629 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.723900 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.727692 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.740563ms
DB: 2020/08/13 07:07:21.732455 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.524031ms
FetchForUpdate: 2020/08/13 07:07:21.732473 ** Cache FetchForUpdate Cache Key Value: [abTHNS4ESTeQIckLIwBhnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.732480 +++  Cache FetchItems for sortk A#G#:S UID: [abTHNS4ESTeQIckLIwBhnQ==] 
FetchNode: 2020/08/13 07:07:21.732485  node: abTHNS4ESTeQIckLIwBhnQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:21.732805 ** Cache FetchForUpdate Cache Key Value: [TIvDPro/Qi+zmDvmhEQSbw==]   sortk: A#
fetchItems: 2020/08/13 07:07:21.732817 +++  Cache FetchItems for sortk A# UID: [TIvDPro/Qi+zmDvmhEQSbw==] 
FetchNode: 2020/08/13 07:07:21.732828  node: TIvDPro/Qi+zmDvmhEQSbw== subKey: A#
DB: 2020/08/13 07:07:21.735754 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 2.843377ms
Unlock: 2020/08/13 07:07:21.737156 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:21.737651 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.134349ms
DB: 2020/08/13 07:07:21.741990 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.646342ms
DB: 2020/08/13 07:07:21.745357 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.333373ms
DB: 2020/08/13 07:07:21.745372 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.333373ms
DB: 2020/08/13 07:07:21.750339 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.934856ms
DB: 2020/08/13 07:07:21.750358 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.934856ms
DB: 2020/08/13 07:07:21.755293 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.775966ms
DB: 2020/08/13 07:07:21.759079 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.590701ms
Unlock: 2020/08/13 07:07:21.759090 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:07:21.765887 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.915828ms
DB: 2020/08/13 07:07:21.769805 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.519977ms
DB: 2020/08/13 07:07:21.774011 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.582635ms
DB: 2020/08/13 07:07:21.780603 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.122438ms
DB: 2020/08/13 07:07:21.784696 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.381696ms
DB: 2020/08/13 07:07:21.791756 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.977793ms
DB: 2020/08/13 07:07:21.797987 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.122412ms
DB: 2020/08/13 07:07:21.801457 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.381405ms
DB: 2020/08/13 07:07:21.805188 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.627197ms
DB: 2020/08/13 07:07:21.808494 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.251412ms
FetchForUpdate: 2020/08/13 07:07:21.808520 ** Cache FetchForUpdate Cache Key Value: [abTHNS4ESTeQIckLIwBhnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.808529 +++  Cache FetchItems for sortk A#G#:S UID: [abTHNS4ESTeQIckLIwBhnQ==] 
FetchNode: 2020/08/13 07:07:21.808534  node: abTHNS4ESTeQIckLIwBhnQ== subKey: A#G#:S
DB: 2020/08/13 07:07:21.812714 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.135434ms
AttachNode: gr1 2020/08/13 07:07:21.812799 Errored: SetUpredAvailable :for  abTHNS4ESTeQIckLIwBhnQ==
Cache: 2020/08/13 07:07:21.812808 In SetUpredAvailable: pUid, tUID:  abTHNS4ESTeQIckLIwBhnQ== K3AuWVarQ7myAsLgKysWYg== A#G#:S
Cache: 2020/08/13 07:07:21.812813 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:21.816375 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.531193ms
Unlock: 2020/08/13 07:07:21.816389 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:21.821142 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.670549ms
DB: 2020/08/13 07:07:21.823563 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.825805 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.829153 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.832583 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.836243 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.610966ms
DB: 2020/08/13 07:07:21.841154 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.748684ms
FetchForUpdate: 2020/08/13 07:07:21.841168 ** Cache FetchForUpdate Cache Key Value: [TIvDPro/Qi+zmDvmhEQSbw==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.841174 +++  Cache FetchItems for sortk A#G#:S UID: [TIvDPro/Qi+zmDvmhEQSbw==] 
FetchNode: 2020/08/13 07:07:21.841179  node: TIvDPro/Qi+zmDvmhEQSbw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:21.841386 ** Cache FetchForUpdate Cache Key Value: [abTHNS4ESTeQIckLIwBhnQ==]   sortk: A#
fetchItems: 2020/08/13 07:07:21.841395 +++  Cache FetchItems for sortk A# UID: [abTHNS4ESTeQIckLIwBhnQ==] 
FetchNode: 2020/08/13 07:07:21.841436  node: abTHNS4ESTeQIckLIwBhnQ== subKey: A#
DB: 2020/08/13 07:07:21.844949 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.738286ms
DB: 2020/08/13 07:07:21.845844 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.351287ms
Unlock: 2020/08/13 07:07:21.846588 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:21.849232 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.924152ms
DB: 2020/08/13 07:07:21.852563 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.294081ms
DB: 2020/08/13 07:07:21.852580 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.294081ms
DB: 2020/08/13 07:07:21.856113 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.503577ms
DB: 2020/08/13 07:07:21.856137 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.503577ms
DB: 2020/08/13 07:07:21.859969 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.768824ms
DB: 2020/08/13 07:07:21.863697 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.6629ms
Unlock: 2020/08/13 07:07:21.863707 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:07:21.869738 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.949506ms
DB: 2020/08/13 07:07:21.875448 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.535815ms
DB: 2020/08/13 07:07:21.879548 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.641403ms
DB: 2020/08/13 07:07:21.886337 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.419859ms
DB: 2020/08/13 07:07:21.890091 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.255607ms
DB: 2020/08/13 07:07:21.893574 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.420883ms
DB: 2020/08/13 07:07:21.899510 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.881523ms
DB: 2020/08/13 07:07:21.903140 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.578209ms
DB: 2020/08/13 07:07:21.906641 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.434065ms
DB: 2020/08/13 07:07:21.910037 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.34395ms
FetchForUpdate: 2020/08/13 07:07:21.910048 ** Cache FetchForUpdate Cache Key Value: [TIvDPro/Qi+zmDvmhEQSbw==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.910054 +++  Cache FetchItems for sortk A#G#:S UID: [TIvDPro/Qi+zmDvmhEQSbw==] 
FetchNode: 2020/08/13 07:07:21.910059  node: TIvDPro/Qi+zmDvmhEQSbw== subKey: A#G#:S
DB: 2020/08/13 07:07:21.913051 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.960776ms
AttachNode: gr1 2020/08/13 07:07:21.913165 Errored: SetUpredAvailable :for  TIvDPro/Qi+zmDvmhEQSbw==
Cache: 2020/08/13 07:07:21.913173 In SetUpredAvailable: pUid, tUID:  TIvDPro/Qi+zmDvmhEQSbw== 71bX4EQ5RG+iW48szLlzKw== A#G#:S
Cache: 2020/08/13 07:07:21.913177 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:21.916676 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.465164ms
Unlock: 2020/08/13 07:07:21.916685 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:21.921748 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.541005ms
DB: 2020/08/13 07:07:21.924373 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.926686 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.929070 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.932215 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:21.936073 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.8098ms
DB: 2020/08/13 07:07:21.941094 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.753895ms
FetchForUpdate: 2020/08/13 07:07:21.941258 ** Cache FetchForUpdate Cache Key Value: [KZhxxoveTESe0EwQ6AwqPQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:21.941278 +++  Cache FetchItems for sortk A#G#:S UID: [KZhxxoveTESe0EwQ6AwqPQ==] 
FetchNode: 2020/08/13 07:07:21.941283  node: KZhxxoveTESe0EwQ6AwqPQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:21.941467 ** Cache FetchForUpdate Cache Key Value: [abTHNS4ESTeQIckLIwBhnQ==]   sortk: A#
fetchItems: 2020/08/13 07:07:21.941476 +++  Cache FetchItems for sortk A# UID: [abTHNS4ESTeQIckLIwBhnQ==] 
FetchNode: 2020/08/13 07:07:21.941487  node: abTHNS4ESTeQIckLIwBhnQ== subKey: A#
DB: 2020/08/13 07:07:21.944092 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.773201ms
DB: 2020/08/13 07:07:21.945490 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.928004ms
Unlock: 2020/08/13 07:07:21.946797 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:21.948328 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.739536ms
DB: 2020/08/13 07:07:21.951620 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.262599ms
DB: 2020/08/13 07:07:21.951635 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.262599ms
DB: 2020/08/13 07:07:21.954925 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.261062ms
DB: 2020/08/13 07:07:21.954940 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.261062ms
DB: 2020/08/13 07:07:21.958982 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.836656ms
DB: 2020/08/13 07:07:21.962797 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.48176ms
Unlock: 2020/08/13 07:07:21.962809 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:07:21.969655 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.924262ms
DB: 2020/08/13 07:07:21.972900 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.197351ms
DB: 2020/08/13 07:07:21.976577 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.569277ms
DB: 2020/08/13 07:07:21.982757 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.114503ms
DB: 2020/08/13 07:07:21.985999 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.185953ms
DB: 2020/08/13 07:07:21.990352 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.877001ms
DB: 2020/08/13 07:07:21.996917 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.120947ms
DB: 2020/08/13 07:07:22.000794 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.31706ms
DB: 2020/08/13 07:07:22.008842 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.523931ms
DB: 2020/08/13 07:07:22.015202 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.036425ms
FetchForUpdate: 2020/08/13 07:07:22.015383 ** Cache FetchForUpdate Cache Key Value: [KZhxxoveTESe0EwQ6AwqPQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:22.015395 +++  Cache FetchItems for sortk A#G#:S UID: [KZhxxoveTESe0EwQ6AwqPQ==] 
FetchNode: 2020/08/13 07:07:22.015400  node: KZhxxoveTESe0EwQ6AwqPQ== subKey: A#G#:S
DB: 2020/08/13 07:07:22.018439 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.002881ms
AttachNode: gr1 2020/08/13 07:07:22.018539 Errored: SetUpredAvailable :for  KZhxxoveTESe0EwQ6AwqPQ==
Cache: 2020/08/13 07:07:22.018558 In SetUpredAvailable: pUid, tUID:  KZhxxoveTESe0EwQ6AwqPQ== BMQ+IZVPQ6OkhiBQLiqbuA== A#G#:S
Cache: 2020/08/13 07:07:22.018562 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:22.022127 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.532081ms
Unlock: 2020/08/13 07:07:22.022137 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:22.027292 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.660135ms
rdfLoader: 2020/08/13 07:07:22.027304 saveNode finished waiting...exiting
grmgr: 2020/08/13 07:07:22.027314 Powering down...
rdfuuid: 2020/08/13 07:07:22.027320 Powering down...
DB:2020/08/13 07:07:38 log.go:18: ===============================================================================
grmgr: 2020/08/13 07:07:38.843650 Powering on...
rdfLoader: 2020/08/13 07:07:38.844056 verify started....xx.
rdfLoader: 2020/08/13 07:07:38.844079 saveNode started......
rdfLoader: 2020/08/13 07:07:38.844083 define saveNode limiter......
rdfuuid: 2020/08/13 07:07:38.844098 Powering on...
rdfLoader: 2020/08/13 07:07:38.844104 *************** All started 
rdfLoader: 2020/08/13 07:07:38.850235 .  getType..
rdfLoader: 2020/08/13 07:07:38.850244 node.TyName : [Person]
DB: 2020/08/13 07:07:38.929430 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 79.126576ms
verify: 2020/08/13 07:07:38.929599 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 07:07:38.929609  Send Ask request to limiter.
verify: 2020/08/13 07:07:38.929614 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:07:38.929622 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:07:38.929628 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:07:38.929635 .  getType..
rdfLoader: 2020/08/13 07:07:38.929640 node.TyName : [Person]
verify: 2020/08/13 07:07:38.929661 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 07:07:38.929666  Send Ask request to limiter.
verify: 2020/08/13 07:07:38.929670 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:07:38.929676 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:07:38.929681 ACK from gcmgr....received...
verify: 2020/08/13 07:07:38.929688 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 07:07:38.929738 .  getType..
rdfLoader: 2020/08/13 07:07:38.929742 node.TyName : [Person]
verify: 2020/08/13 07:07:38.929762 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 07:07:38.929778  Send Ask request to limiter.
verify: 2020/08/13 07:07:38.929783 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:07:38.929789 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:07:38.929795 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:07:38.929801 .  getType..
rdfLoader: 2020/08/13 07:07:38.929805 node.TyName : [Person]
verify: 2020/08/13 07:07:38.929820 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 07:07:38.929824  Send Ask request to limiter.
verify: 2020/08/13 07:07:38.929829 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:07:38.929834 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:07:38.929839 ACK from gcmgr....received...
verify: 2020/08/13 07:07:38.929844 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 07:07:38.929849 verify at wg.Wait() .....
unmarshalRDF2020/08/13 07:07:38.929863 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:07:38.929870 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 07:07:38.929876 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 07:07:38.929882 Find Ty Address
rdfLoader: 2020/08/13 07:07:38.929887 Find Ty Age
rdfLoader: 2020/08/13 07:07:38.929907 Find Ty Cars
rdfLoader: 2020/08/13 07:07:38.929914 Add to SS . [Bentley]
rdfLoader: 2020/08/13 07:07:38.929919 Find Ty DOB
rdfLoader: 2020/08/13 07:07:38.929925 Find Ty Friends
rdfLoader: 2020/08/13 07:07:38.929929 Find Ty Jobs
rdfLoader: 2020/08/13 07:07:38.929934 Find Ty Name
rdfLoader: 2020/08/13 07:07:38.929939 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:07:38.929943 Find Ty Siblings
rdfLoader: 2020/08/13 07:07:38.929962 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:07:38.929987 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:07:38.929992 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:07:38.930000 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 07:07:38.930011 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:07:38.930016 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 07:07:38.930022 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 07:07:38.930027 Find Ty Address
rdfLoader: 2020/08/13 07:07:38.930031 Find Ty Age
rdfLoader: 2020/08/13 07:07:38.930036 Find Ty Cars
rdfLoader: 2020/08/13 07:07:38.930041 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:07:38.930046 Add to SS . [Alfa]
rdfLoader: 2020/08/13 07:07:38.930051 Find Ty DOB
rdfLoader: 2020/08/13 07:07:38.930056 Find Ty Friends
rdfLoader: 2020/08/13 07:07:38.930060 Find Ty Jobs
rdfLoader: 2020/08/13 07:07:38.930065 Find Ty Name
rdfLoader: 2020/08/13 07:07:38.930070 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:07:38.930075 Find Ty Siblings
rdfLoader: 2020/08/13 07:07:38.930088 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:07:38.930119 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:07:38.930124 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:07:38.930130 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 07:07:38.930140 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:07:38.930145 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 07:07:38.930151 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 07:07:38.930156 Find Ty Address
rdfLoader: 2020/08/13 07:07:38.930160 Find Ty Age
rdfLoader: 2020/08/13 07:07:38.930165 Find Ty Cars
rdfLoader: 2020/08/13 07:07:38.930170 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:07:38.930175 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 07:07:38.930179 Find Ty DOB
rdfLoader: 2020/08/13 07:07:38.930184 Find Ty Friends
rdfLoader: 2020/08/13 07:07:38.930189 Find Ty Jobs
rdfLoader: 2020/08/13 07:07:38.930193 Find Ty Name
rdfLoader: 2020/08/13 07:07:38.930199 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:07:38.930203 Find Ty Siblings
rdfLoader: 2020/08/13 07:07:38.930215 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:07:38.930242 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:07:38.930248 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:07:38.930253 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 07:07:38.930263 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:07:38.930269 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:07:38.930274 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 07:07:38.930279 Find Ty Address
rdfLoader: 2020/08/13 07:07:38.930283 Find Ty Age
rdfLoader: 2020/08/13 07:07:38.930288 Find Ty Cars
rdfLoader: 2020/08/13 07:07:38.930297 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 07:07:38.930302 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 07:07:38.930307 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:07:38.930311 Find Ty DOB
rdfLoader: 2020/08/13 07:07:38.930317 Find Ty Friends
rdfLoader: 2020/08/13 07:07:38.930321 Find Ty Jobs
rdfLoader: 2020/08/13 07:07:38.930325 Find Ty Name
rdfLoader: 2020/08/13 07:07:38.930330 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:07:38.930335 Find Ty Siblings
rdfLoader: 2020/08/13 07:07:38.930346 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:07:38.930372 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:07:38.930380 Exit  unmarshalRDF. 
verify: 2020/08/13 07:07:38.930387 verify exited.....
grmgr: 2020/08/13 07:07:38.930394 EndCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:07:38.930400 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:07:38.930423 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930430 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930437 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930444 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930451 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930457 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930464 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:07:38.930468 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:07:38.930478 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0003845a0)}
SaveRDFNode: 2020/08/13 07:07:38.930483 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:07:38.930493 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.930498 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.930505 UID received  : 1UVbL6GoQfWv9UsPclzzfA==
grmgr: 2020/08/13 07:07:38.930712 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:07:38.930742 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930749 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930774 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930785 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930792 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930798 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.930804 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:07:38.930809 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:07:38.930815 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000384a20)}
SaveRDFNode: 2020/08/13 07:07:38.930823 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:07:38.930831 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.930836 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.930842 UID received  : kyt23EcUTPSAc1VQXnL7aA==
grmgr: 2020/08/13 07:07:38.931129 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:07:38.931155 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931164 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931172 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931186 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931192 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931198 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931205 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:07:38.931209 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:07:38.931215 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000384f00)}
SaveRDFNode: 2020/08/13 07:07:38.931220 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:07:38.931228 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.931233 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.931238 UID received  : 1S7sQB5QQUCykVyfJKYYJQ==
grmgr: 2020/08/13 07:07:38.931453 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:07:38.931484 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931494 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931500 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931506 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931513 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931520 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:07:38.931526 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:07:38.931531 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:07:38.931537 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000385380)}
SaveRDFNode: 2020/08/13 07:07:38.931542 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:07:38.931550 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.931554 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.931560 UID received  : VDhXA80NTXSeP9KV7EhUDA==
DB: 2020/08/13 07:07:38.935754 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.219283ms
DB: 2020/08/13 07:07:38.941110 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.241432ms
DB: 2020/08/13 07:07:38.945984 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.190678ms
DB: 2020/08/13 07:07:38.950811 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.790592ms
DB: 2020/08/13 07:07:38.955090 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 23.824922ms
DB: 2020/08/13 07:07:38.956105 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 14.962139ms
DB: 2020/08/13 07:07:38.957694 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 26.107286ms
DB: 2020/08/13 07:07:38.958475 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.348764ms
DB: 2020/08/13 07:07:38.959570 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.433438ms
DB: 2020/08/13 07:07:38.961022 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.296133ms
DB: 2020/08/13 07:07:38.961720 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.213946ms
DB: 2020/08/13 07:07:38.962847 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.235383ms
DB: 2020/08/13 07:07:38.964290 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.236689ms
DB: 2020/08/13 07:07:38.965485 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.735134ms
DB: 2020/08/13 07:07:38.966382 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.482607ms
SaveRDFNode: 2020/08/13 07:07:38.966551 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384a20)}
rdfUIDdb: 2020/08/13 07:07:38.966564 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.966568 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.966574 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:38.966589 a: = db.Item{PKey:[]uint8{0x93, 0x2b, 0x76, 0xdc, 0x47, 0x14, 0x4c, 0xf4, 0x80, 0x73, 0x55, 0x50, 0x5e, 0x72, 0xfb, 0x68}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:38.967686 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.36487ms
DB: 2020/08/13 07:07:38.968737 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.220891ms
SaveRDFNode: 2020/08/13 07:07:38.968749 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384f00)}
rdfUIDdb: 2020/08/13 07:07:38.968755 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.968758 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.968764 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:38.968774 a: = db.Item{PKey:[]uint8{0xd5, 0x2e, 0xec, 0x40, 0x1e, 0x50, 0x41, 0x40, 0xb2, 0x91, 0x5c, 0x9f, 0x24, 0xa6, 0x18, 0x25}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:38.970229 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.608693ms
SaveRDFNode: 2020/08/13 07:07:38.970241 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384a20)}
rdfUIDdb: 2020/08/13 07:07:38.970246 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.970250 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.970256 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:38.970265 a: = db.Item{PKey:[]uint8{0x93, 0x2b, 0x76, 0xdc, 0x47, 0x14, 0x4c, 0xf4, 0x80, 0x73, 0x55, 0x50, 0x5e, 0x72, 0xfb, 0x68}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:38.971025 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.303874ms
SaveRDFNode: 2020/08/13 07:07:38.971037 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385380)}
rdfUIDdb: 2020/08/13 07:07:38.971042 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.971046 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.971052 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:38.971061 a: = db.Item{PKey:[]uint8{0x54, 0x38, 0x57, 0x3, 0xcd, 0xd, 0x4d, 0x74, 0x9e, 0x3f, 0xd2, 0x95, 0xec, 0x48, 0x54, 0xc}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:38.972055 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.250529ms
SaveRDFNode: 2020/08/13 07:07:38.972067 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384f00)}
rdfUIDdb: 2020/08/13 07:07:38.972073 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.972077 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.972083 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:38.972101 a: = db.Item{PKey:[]uint8{0xd5, 0x2e, 0xec, 0x40, 0x1e, 0x50, 0x41, 0x40, 0xb2, 0x91, 0x5c, 0x9f, 0x24, 0xa6, 0x18, 0x25}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:38.973772 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.477552ms
SaveRDFNode: 2020/08/13 07:07:38.973781 Returned.+++++++++++ No error
DB: 2020/08/13 07:07:38.974480 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.389613ms
SaveRDFNode: 2020/08/13 07:07:38.974492 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385380)}
rdfUIDdb: 2020/08/13 07:07:38.974498 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.974501 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.974507 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:38.974517 a: = db.Item{PKey:[]uint8{0x54, 0x38, 0x57, 0x3, 0xcd, 0xd, 0x4d, 0x74, 0x9e, 0x3f, 0xd2, 0x95, 0xec, 0x48, 0x54, 0xc}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:38.975446 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.316452ms
SaveRDFNode: 2020/08/13 07:07:38.975455 Returned.+++++++++++ No error
DB: 2020/08/13 07:07:38.978187 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.618288ms
SaveRDFNode: 2020/08/13 07:07:38.978197 Returned.+++++++++++ No error
DB: 2020/08/13 07:07:38.979108 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 28.096787ms
DB: 2020/08/13 07:07:38.982425 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.283668ms
SaveRDFNode: 2020/08/13 07:07:38.982582 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/13 07:07:38.982594 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.982598 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.982604 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:38.982614 a: = db.Item{PKey:[]uint8{0xd5, 0x45, 0x5b, 0x2f, 0xa1, 0xa8, 0x41, 0xf5, 0xaf, 0xf5, 0x4b, 0xf, 0x72, 0x5c, 0xf3, 0x7c}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:38.986242 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.594153ms
SaveRDFNode: 2020/08/13 07:07:38.986254 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/13 07:07:38.986260 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:07:38.986264 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:07:38.986269 Received UID: X18=
SaveRDFNode: 2020/08/13 07:07:38.986280 a: = db.Item{PKey:[]uint8{0xd5, 0x45, 0x5b, 0x2f, 0xa1, 0xa8, 0x41, 0xf5, 0xaf, 0xf5, 0x4b, 0xf, 0x72, 0x5c, 0xf3, 0x7c}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:07:38.989672 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.363906ms
SaveRDFNode: 2020/08/13 07:07:38.989680 Returned.+++++++++++ No error
DB: 2020/08/13 07:07:38.992461 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:38.995301 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:38.998039 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.000535 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.004096 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.504191ms
DB: 2020/08/13 07:07:39.011410 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.661632ms
FetchForUpdate: 2020/08/13 07:07:39.011436 ** Cache FetchForUpdate Cache Key Value: [1S7sQB5QQUCykVyfJKYYJQ==]   sortk: A#G#:S
FetchNode: 2020/08/13 07:07:39.011443  node: 1S7sQB5QQUCykVyfJKYYJQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:39.011632 ** Cache FetchForUpdate Cache Key Value: [kyt23EcUTPSAc1VQXnL7aA==]   sortk: A#
FetchNode: 2020/08/13 07:07:39.011648  node: kyt23EcUTPSAc1VQXnL7aA== subKey: A#
DB: 2020/08/13 07:07:39.014040 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.561202ms
FetchForUpdate: 2020/08/13 07:07:39.014246 len(nb): 1
fetchItems: 2020/08/13 07:07:39.014259 +++  Cache FetchItems for sortk A#G#:S UID: [1S7sQB5QQUCykVyfJKYYJQ==] 
FetchNode: 2020/08/13 07:07:39.014264  node: 1S7sQB5QQUCykVyfJKYYJQ== subKey: A#G#:S
DB: 2020/08/13 07:07:39.016825 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.530465ms
DB: 2020/08/13 07:07:39.020956 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.401899ms
Unlock: 2020/08/13 07:07:39.020968 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:07:39.028189 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 16.446282ms
FetchForUpdate: 2020/08/13 07:07:39.028300 len(nb): 7
fetchItems: 2020/08/13 07:07:39.028308 +++  Cache FetchItems for sortk A# UID: [kyt23EcUTPSAc1VQXnL7aA==] 
FetchNode: 2020/08/13 07:07:39.028313  node: kyt23EcUTPSAc1VQXnL7aA== subKey: A#
DB: 2020/08/13 07:07:39.030878 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.533152ms
Unlock: 2020/08/13 07:07:39.031013 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 07:07:39.031042 ** Cache FetchForUpdate Cache Key Value: [1S7sQB5QQUCykVyfJKYYJQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.031048 +++  Cache FetchItems for sortk A#G#:S UID: [1S7sQB5QQUCykVyfJKYYJQ==] 
FetchNode: 2020/08/13 07:07:39.031054  node: 1S7sQB5QQUCykVyfJKYYJQ== subKey: A#G#:S
DB: 2020/08/13 07:07:39.034059 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.977037ms
DB: 2020/08/13 07:07:39.040784 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.471609ms
DB: 2020/08/13 07:07:39.044476 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.150235ms
DB: 2020/08/13 07:07:39.049112 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.351851ms
DB: 2020/08/13 07:07:39.054820 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.637829ms
DB: 2020/08/13 07:07:39.057914 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.016684ms
DB: 2020/08/13 07:07:39.061413 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.430411ms
DB: 2020/08/13 07:07:39.067033 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.559784ms
DB: 2020/08/13 07:07:39.070520 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.133616ms
DB: 2020/08/13 07:07:39.074233 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.401355ms
Unlock: 2020/08/13 07:07:39.074245 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:07:39.078018 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.398043ms
FetchForUpdate: 2020/08/13 07:07:39.078031 ** Cache FetchForUpdate Cache Key Value: [1S7sQB5QQUCykVyfJKYYJQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.078048 +++  Cache FetchItems for sortk A#G#:S UID: [1S7sQB5QQUCykVyfJKYYJQ==] 
FetchNode: 2020/08/13 07:07:39.078053  node: 1S7sQB5QQUCykVyfJKYYJQ== subKey: A#G#:S
DB: 2020/08/13 07:07:39.080626 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.53894ms
AttachNode: gr1 2020/08/13 07:07:39.080754 Errored: SetUpredAvailable :for  1S7sQB5QQUCykVyfJKYYJQ==
Cache: 2020/08/13 07:07:39.080764 In SetUpredAvailable: pUid, tUID:  1S7sQB5QQUCykVyfJKYYJQ== 1S7sQB5QQUCykVyfJKYYJQ== A#G#:S
Cache: 2020/08/13 07:07:39.080768 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:39.084112 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.310562ms
Unlock: 2020/08/13 07:07:39.084128 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:39.091657 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.742528ms
DB: 2020/08/13 07:07:39.094026 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.096210 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.098640 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.100852 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.104471 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.416327ms
DB: 2020/08/13 07:07:39.109433 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.174978ms
FetchForUpdate: 2020/08/13 07:07:39.109448 ** Cache FetchForUpdate Cache Key Value: [VDhXA80NTXSeP9KV7EhUDA==]   sortk: A#G#:S
FetchNode: 2020/08/13 07:07:39.109455  node: VDhXA80NTXSeP9KV7EhUDA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:39.109645 ** Cache FetchForUpdate Cache Key Value: [kyt23EcUTPSAc1VQXnL7aA==]   sortk: A#
fetchItems: 2020/08/13 07:07:39.109655 +++  Cache FetchItems for sortk A# UID: [kyt23EcUTPSAc1VQXnL7aA==] 
FetchNode: 2020/08/13 07:07:39.109667  node: kyt23EcUTPSAc1VQXnL7aA== subKey: A#
DB: 2020/08/13 07:07:39.111719 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.230337ms
FetchForUpdate: 2020/08/13 07:07:39.111781 len(nb): 1
fetchItems: 2020/08/13 07:07:39.111789 +++  Cache FetchItems for sortk A#G#:S UID: [VDhXA80NTXSeP9KV7EhUDA==] 
FetchNode: 2020/08/13 07:07:39.111794  node: VDhXA80NTXSeP9KV7EhUDA== subKey: A#G#:S
DB: 2020/08/13 07:07:39.112312 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.569975ms
Unlock: 2020/08/13 07:07:39.113437 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:39.113983 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.160514ms
DB: 2020/08/13 07:07:39.117570 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.276719ms
Unlock: 2020/08/13 07:07:39.117756 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:07:39.118054 ** Cache FetchForUpdate Cache Key Value: [VDhXA80NTXSeP9KV7EhUDA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.118065 +++  Cache FetchItems for sortk A#G#:S UID: [VDhXA80NTXSeP9KV7EhUDA==] 
FetchNode: 2020/08/13 07:07:39.118071  node: VDhXA80NTXSeP9KV7EhUDA== subKey: A#G#:S
DB: 2020/08/13 07:07:39.120701 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.593736ms
DB: 2020/08/13 07:07:39.127060 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.753372ms
DB: 2020/08/13 07:07:39.130625 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.253155ms
DB: 2020/08/13 07:07:39.134665 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.451325ms
DB: 2020/08/13 07:07:39.141127 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.793945ms
DB: 2020/08/13 07:07:39.144742 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.130403ms
DB: 2020/08/13 07:07:39.149112 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.873406ms
DB: 2020/08/13 07:07:39.154850 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.678538ms
DB: 2020/08/13 07:07:39.157952 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.039388ms
DB: 2020/08/13 07:07:39.161380 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.33584ms
Unlock: 2020/08/13 07:07:39.161392 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:07:39.165243 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.311999ms
FetchForUpdate: 2020/08/13 07:07:39.165255 ** Cache FetchForUpdate Cache Key Value: [VDhXA80NTXSeP9KV7EhUDA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.165262 +++  Cache FetchItems for sortk A#G#:S UID: [VDhXA80NTXSeP9KV7EhUDA==] 
FetchNode: 2020/08/13 07:07:39.165267  node: VDhXA80NTXSeP9KV7EhUDA== subKey: A#G#:S
DB: 2020/08/13 07:07:39.169324 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.021855ms
AttachNode: gr1 2020/08/13 07:07:39.169437 Errored: SetUpredAvailable :for  VDhXA80NTXSeP9KV7EhUDA==
Cache: 2020/08/13 07:07:39.169446 In SetUpredAvailable: pUid, tUID:  VDhXA80NTXSeP9KV7EhUDA== VDhXA80NTXSeP9KV7EhUDA== A#G#:S
Cache: 2020/08/13 07:07:39.169450 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:39.172646 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.16112ms
Unlock: 2020/08/13 07:07:39.172802 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:39.177302 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.024997ms
DB: 2020/08/13 07:07:39.179585 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.181748 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.183977 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.186572 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.189932 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.286551ms
DB: 2020/08/13 07:07:39.194169 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.822002ms
FetchForUpdate: 2020/08/13 07:07:39.194187 ** Cache FetchForUpdate Cache Key Value: [kyt23EcUTPSAc1VQXnL7aA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.194194 +++  Cache FetchItems for sortk A#G#:S UID: [kyt23EcUTPSAc1VQXnL7aA==] 
FetchNode: 2020/08/13 07:07:39.194198  node: kyt23EcUTPSAc1VQXnL7aA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:39.194383 ** Cache FetchForUpdate Cache Key Value: [1S7sQB5QQUCykVyfJKYYJQ==]   sortk: A#
fetchItems: 2020/08/13 07:07:39.194392 +++  Cache FetchItems for sortk A# UID: [1S7sQB5QQUCykVyfJKYYJQ==] 
FetchNode: 2020/08/13 07:07:39.194403  node: 1S7sQB5QQUCykVyfJKYYJQ== subKey: A#
DB: 2020/08/13 07:07:39.197029 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.793405ms
DB: 2020/08/13 07:07:39.198029 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.547246ms
Unlock: 2020/08/13 07:07:39.199421 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:39.200921 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.48007ms
Unlock: 2020/08/13 07:07:39.200931 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:07:39.201337 ** Cache FetchForUpdate Cache Key Value: [kyt23EcUTPSAc1VQXnL7aA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.201348 +++  Cache FetchItems for sortk A#G#:S UID: [kyt23EcUTPSAc1VQXnL7aA==] 
FetchNode: 2020/08/13 07:07:39.201353  node: kyt23EcUTPSAc1VQXnL7aA== subKey: A#G#:S
DB: 2020/08/13 07:07:39.204194 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.807365ms
DB: 2020/08/13 07:07:39.210674 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.919603ms
DB: 2020/08/13 07:07:39.214258 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.141489ms
DB: 2020/08/13 07:07:39.218208 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.372897ms
DB: 2020/08/13 07:07:39.224268 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.58463ms
DB: 2020/08/13 07:07:39.227786 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.08505ms
DB: 2020/08/13 07:07:39.231351 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.488531ms
DB: 2020/08/13 07:07:39.237006 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.59619ms
DB: 2020/08/13 07:07:39.240048 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 2.980653ms
DB: 2020/08/13 07:07:39.243555 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.442115ms
Unlock: 2020/08/13 07:07:39.243566 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:07:39.247446 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.128935ms
FetchForUpdate: 2020/08/13 07:07:39.247463 ** Cache FetchForUpdate Cache Key Value: [kyt23EcUTPSAc1VQXnL7aA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.247470 +++  Cache FetchItems for sortk A#G#:S UID: [kyt23EcUTPSAc1VQXnL7aA==] 
FetchNode: 2020/08/13 07:07:39.247475  node: kyt23EcUTPSAc1VQXnL7aA== subKey: A#G#:S
DB: 2020/08/13 07:07:39.249791 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.281918ms
AttachNode: gr1 2020/08/13 07:07:39.249886 Errored: SetUpredAvailable :for  kyt23EcUTPSAc1VQXnL7aA==
Cache: 2020/08/13 07:07:39.249913 In SetUpredAvailable: pUid, tUID:  kyt23EcUTPSAc1VQXnL7aA== kyt23EcUTPSAc1VQXnL7aA== A#G#:S
Cache: 2020/08/13 07:07:39.249919 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:39.253153 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.199797ms
Unlock: 2020/08/13 07:07:39.253162 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:39.257217 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.969636ms
DB: 2020/08/13 07:07:39.259882 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.262210 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.265137 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.267406 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.270766 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.297009ms
DB: 2020/08/13 07:07:39.274779 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.736962ms
FetchForUpdate: 2020/08/13 07:07:39.274793 ** Cache FetchForUpdate Cache Key Value: [VDhXA80NTXSeP9KV7EhUDA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.274800 +++  Cache FetchItems for sortk A#G#:S UID: [VDhXA80NTXSeP9KV7EhUDA==] 
FetchNode: 2020/08/13 07:07:39.274805  node: VDhXA80NTXSeP9KV7EhUDA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:39.274980 ** Cache FetchForUpdate Cache Key Value: [1S7sQB5QQUCykVyfJKYYJQ==]   sortk: A#
fetchItems: 2020/08/13 07:07:39.274989 +++  Cache FetchItems for sortk A# UID: [1S7sQB5QQUCykVyfJKYYJQ==] 
FetchNode: 2020/08/13 07:07:39.275001  node: 1S7sQB5QQUCykVyfJKYYJQ== subKey: A#
DB: 2020/08/13 07:07:39.277298 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.461856ms
DB: 2020/08/13 07:07:39.279028 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.945484ms
Unlock: 2020/08/13 07:07:39.280535 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:39.281245 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.480116ms
DB: 2020/08/13 07:07:39.284344 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.067387ms
DB: 2020/08/13 07:07:39.284362 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.067387ms
DB: 2020/08/13 07:07:39.287670 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.276722ms
DB: 2020/08/13 07:07:39.287685 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.276722ms
DB: 2020/08/13 07:07:39.291436 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.545923ms
DB: 2020/08/13 07:07:39.294993 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.361993ms
Unlock: 2020/08/13 07:07:39.295004 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:07:39.301834 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.804566ms
DB: 2020/08/13 07:07:39.305425 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.134501ms
DB: 2020/08/13 07:07:39.309384 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.344892ms
DB: 2020/08/13 07:07:39.315565 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.692409ms
DB: 2020/08/13 07:07:39.319167 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.175532ms
DB: 2020/08/13 07:07:39.323196 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.379512ms
DB: 2020/08/13 07:07:39.329537 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.859845ms
DB: 2020/08/13 07:07:39.333072 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.071806ms
DB: 2020/08/13 07:07:39.336928 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.305508ms
DB: 2020/08/13 07:07:39.340684 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.249137ms
FetchForUpdate: 2020/08/13 07:07:39.340696 ** Cache FetchForUpdate Cache Key Value: [VDhXA80NTXSeP9KV7EhUDA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.340712 +++  Cache FetchItems for sortk A#G#:S UID: [VDhXA80NTXSeP9KV7EhUDA==] 
FetchNode: 2020/08/13 07:07:39.340717  node: VDhXA80NTXSeP9KV7EhUDA== subKey: A#G#:S
DB: 2020/08/13 07:07:39.343788 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.038966ms
AttachNode: gr1 2020/08/13 07:07:39.343891 Errored: SetUpredAvailable :for  VDhXA80NTXSeP9KV7EhUDA==
Cache: 2020/08/13 07:07:39.343900 In SetUpredAvailable: pUid, tUID:  VDhXA80NTXSeP9KV7EhUDA== PZFaGMjLRHOP89Zb1sFxCg== A#G#:S
Cache: 2020/08/13 07:07:39.343904 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:39.347111 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.172906ms
Unlock: 2020/08/13 07:07:39.347121 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:39.351445 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.808174ms
DB: 2020/08/13 07:07:39.353419 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.356224 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.358352 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.361386 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.364541 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.10393ms
DB: 2020/08/13 07:07:39.368458 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.846767ms
FetchForUpdate: 2020/08/13 07:07:39.368475 ** Cache FetchForUpdate Cache Key Value: [kyt23EcUTPSAc1VQXnL7aA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.368482 +++  Cache FetchItems for sortk A#G#:S UID: [kyt23EcUTPSAc1VQXnL7aA==] 
FetchNode: 2020/08/13 07:07:39.368489  node: kyt23EcUTPSAc1VQXnL7aA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:39.368840 ** Cache FetchForUpdate Cache Key Value: [VDhXA80NTXSeP9KV7EhUDA==]   sortk: A#
fetchItems: 2020/08/13 07:07:39.368851 +++  Cache FetchItems for sortk A# UID: [VDhXA80NTXSeP9KV7EhUDA==] 
FetchNode: 2020/08/13 07:07:39.368862  node: VDhXA80NTXSeP9KV7EhUDA== subKey: A#
DB: 2020/08/13 07:07:39.371152 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.630013ms
DB: 2020/08/13 07:07:39.373443 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.441615ms
Unlock: 2020/08/13 07:07:39.375046 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:39.376597 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.823313ms
DB: 2020/08/13 07:07:39.379696 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.066633ms
DB: 2020/08/13 07:07:39.379712 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.066633ms
DB: 2020/08/13 07:07:39.382776 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.024938ms
DB: 2020/08/13 07:07:39.382791 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.024938ms
DB: 2020/08/13 07:07:39.386580 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.435917ms
DB: 2020/08/13 07:07:39.390266 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.350371ms
Unlock: 2020/08/13 07:07:39.390278 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:07:39.396933 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.85972ms
DB: 2020/08/13 07:07:39.400082 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.07979ms
DB: 2020/08/13 07:07:39.403700 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.39539ms
DB: 2020/08/13 07:07:39.409856 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.647836ms
DB: 2020/08/13 07:07:39.413320 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.123627ms
DB: 2020/08/13 07:07:39.424201 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 10.561218ms
DB: 2020/08/13 07:07:39.430279 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.629219ms
DB: 2020/08/13 07:07:39.433804 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.195174ms
DB: 2020/08/13 07:07:39.437590 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.446897ms
DB: 2020/08/13 07:07:39.441101 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.306234ms
FetchForUpdate: 2020/08/13 07:07:39.441302 ** Cache FetchForUpdate Cache Key Value: [kyt23EcUTPSAc1VQXnL7aA==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.441314 +++  Cache FetchItems for sortk A#G#:S UID: [kyt23EcUTPSAc1VQXnL7aA==] 
FetchNode: 2020/08/13 07:07:39.441319  node: kyt23EcUTPSAc1VQXnL7aA== subKey: A#G#:S
DB: 2020/08/13 07:07:39.444392 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.036192ms
AttachNode: gr1 2020/08/13 07:07:39.444494 Errored: SetUpredAvailable :for  kyt23EcUTPSAc1VQXnL7aA==
Cache: 2020/08/13 07:07:39.444502 In SetUpredAvailable: pUid, tUID:  kyt23EcUTPSAc1VQXnL7aA== j1mgBT1cQdC/pia3N/rIWg== A#G#:S
Cache: 2020/08/13 07:07:39.444507 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:39.447672 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.132696ms
Unlock: 2020/08/13 07:07:39.447682 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:39.452258 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.079855ms
DB: 2020/08/13 07:07:39.454418 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.457089 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.459431 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.461627 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:07:39.465055 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.35831ms
DB: 2020/08/13 07:07:39.469321 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.037172ms
FetchForUpdate: 2020/08/13 07:07:39.469336 ** Cache FetchForUpdate Cache Key Value: [1S7sQB5QQUCykVyfJKYYJQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.469342 +++  Cache FetchItems for sortk A#G#:S UID: [1S7sQB5QQUCykVyfJKYYJQ==] 
FetchNode: 2020/08/13 07:07:39.469347  node: 1S7sQB5QQUCykVyfJKYYJQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:07:39.469537 ** Cache FetchForUpdate Cache Key Value: [VDhXA80NTXSeP9KV7EhUDA==]   sortk: A#
fetchItems: 2020/08/13 07:07:39.469564 +++  Cache FetchItems for sortk A# UID: [VDhXA80NTXSeP9KV7EhUDA==] 
FetchNode: 2020/08/13 07:07:39.469576  node: VDhXA80NTXSeP9KV7EhUDA== subKey: A#
DB: 2020/08/13 07:07:39.472002 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.620515ms
DB: 2020/08/13 07:07:39.473177 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.536457ms
Unlock: 2020/08/13 07:07:39.474072 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:07:39.475872 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.310176ms
DB: 2020/08/13 07:07:39.478945 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.042723ms
DB: 2020/08/13 07:07:39.478960 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.042723ms
DB: 2020/08/13 07:07:39.482502 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.507604ms
DB: 2020/08/13 07:07:39.482519 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.507604ms
DB: 2020/08/13 07:07:39.486170 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.472034ms
DB: 2020/08/13 07:07:39.489649 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.332496ms
Unlock: 2020/08/13 07:07:39.489802 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:07:39.496206 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.694257ms
DB: 2020/08/13 07:07:39.499445 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.065929ms
DB: 2020/08/13 07:07:39.503186 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.338272ms
DB: 2020/08/13 07:07:39.509263 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.73656ms
DB: 2020/08/13 07:07:39.512909 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.149362ms
DB: 2020/08/13 07:07:39.516838 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.551223ms
DB: 2020/08/13 07:07:39.523295 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.089826ms
DB: 2020/08/13 07:07:39.526826 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.184972ms
DB: 2020/08/13 07:07:39.530802 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.443096ms
DB: 2020/08/13 07:07:39.536221 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.22601ms
FetchForUpdate: 2020/08/13 07:07:39.536233 ** Cache FetchForUpdate Cache Key Value: [1S7sQB5QQUCykVyfJKYYJQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:07:39.536239 +++  Cache FetchItems for sortk A#G#:S UID: [1S7sQB5QQUCykVyfJKYYJQ==] 
FetchNode: 2020/08/13 07:07:39.536245  node: 1S7sQB5QQUCykVyfJKYYJQ== subKey: A#G#:S
DB: 2020/08/13 07:07:39.540617 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.929675ms
AttachNode: gr1 2020/08/13 07:07:39.540738 Errored: SetUpredAvailable :for  1S7sQB5QQUCykVyfJKYYJQ==
Cache: 2020/08/13 07:07:39.540747 In SetUpredAvailable: pUid, tUID:  1S7sQB5QQUCykVyfJKYYJQ== 1tT/JDRVQZGRHLrOXIkMPw== A#G#:S
Cache: 2020/08/13 07:07:39.540751 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:07:39.544024 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.233935ms
Unlock: 2020/08/13 07:07:39.544040 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:07:39.548148 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.991016ms
rdfLoader: 2020/08/13 07:07:39.548174 saveNode finished waiting...exiting
grmgr: 2020/08/13 07:07:39.548184 Powering down...
rdfuuid: 2020/08/13 07:07:39.548190 Powering down...
DB:2020/08/13 07:13:01 log.go:18: ===============================================================================
grmgr: 2020/08/13 07:13:01.689426 Powering on...
rdfLoader: 2020/08/13 07:13:01.689457 verify started....xx.
rdfLoader: 2020/08/13 07:13:01.689475 saveNode started......
rdfLoader: 2020/08/13 07:13:01.689479 define saveNode limiter......
rdfuuid: 2020/08/13 07:13:01.689501 Powering on...
rdfLoader: 2020/08/13 07:13:01.689509 *************** All started 
rdfLoader: 2020/08/13 07:13:01.697611 .  getType..
rdfLoader: 2020/08/13 07:13:01.697629 node.TyName : [Person]
DB: 2020/08/13 07:13:01.769294 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.601988ms
verify: 2020/08/13 07:13:01.769454 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 07:13:01.769462  Send Ask request to limiter.
verify: 2020/08/13 07:13:01.769468 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:13:01.769476 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:13:01.769483 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:13:01.769489 .  getType..
rdfLoader: 2020/08/13 07:13:01.769494 node.TyName : [Person]
verify: 2020/08/13 07:13:01.769515 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 07:13:01.769520  Send Ask request to limiter.
verify: 2020/08/13 07:13:01.769525 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:13:01.769531 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:13:01.769536 ACK from gcmgr....received...
verify: 2020/08/13 07:13:01.769544 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 07:13:01.769596 .  getType..
rdfLoader: 2020/08/13 07:13:01.769602 node.TyName : [Person]
verify: 2020/08/13 07:13:01.769622 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 07:13:01.769627  Send Ask request to limiter.
verify: 2020/08/13 07:13:01.769632 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:13:01.769638 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:13:01.769644 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:13:01.769649 .  getType..
rdfLoader: 2020/08/13 07:13:01.769654 node.TyName : [Person]
verify: 2020/08/13 07:13:01.769669 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 07:13:01.769683  Send Ask request to limiter.
verify: 2020/08/13 07:13:01.769688 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:13:01.769694 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:13:01.769699 ACK from gcmgr....received...
verify: 2020/08/13 07:13:01.769709 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 07:13:01.769713 verify at wg.Wait() .....
unmarshalRDF2020/08/13 07:13:01.769727 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:13:01.769734 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 07:13:01.769740 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 07:13:01.769745 Find Ty Address
rdfLoader: 2020/08/13 07:13:01.769750 Find Ty Age
rdfLoader: 2020/08/13 07:13:01.769757 Find Ty Cars
rdfLoader: 2020/08/13 07:13:01.769763 Add to SS . [Bentley]
rdfLoader: 2020/08/13 07:13:01.769768 Find Ty DOB
rdfLoader: 2020/08/13 07:13:01.769774 Find Ty Friends
rdfLoader: 2020/08/13 07:13:01.769779 Find Ty Jobs
rdfLoader: 2020/08/13 07:13:01.769783 Find Ty Name
rdfLoader: 2020/08/13 07:13:01.769788 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:13:01.769792 Find Ty Siblings
rdfLoader: 2020/08/13 07:13:01.769811 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:13:01.769837 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:13:01.769843 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:13:01.769850 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 07:13:01.769860 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:13:01.769866 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 07:13:01.769871 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 07:13:01.769876 Find Ty Address
rdfLoader: 2020/08/13 07:13:01.769881 Find Ty Age
rdfLoader: 2020/08/13 07:13:01.769886 Find Ty Cars
rdfLoader: 2020/08/13 07:13:01.770855 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:13:01.770869 Add to SS . [Alfa]
rdfLoader: 2020/08/13 07:13:01.770874 Find Ty DOB
rdfLoader: 2020/08/13 07:13:01.770878 Find Ty Friends
rdfLoader: 2020/08/13 07:13:01.770882 Find Ty Jobs
rdfLoader: 2020/08/13 07:13:01.770886 Find Ty Name
rdfLoader: 2020/08/13 07:13:01.770891 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:13:01.770894 Find Ty Siblings
rdfLoader: 2020/08/13 07:13:01.770913 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:13:01.770949 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:13:01.770960 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:13:01.770967 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 07:13:01.770978 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:13:01.770983 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 07:13:01.770988 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 07:13:01.770993 Find Ty Address
rdfLoader: 2020/08/13 07:13:01.771014 Find Ty Age
rdfLoader: 2020/08/13 07:13:01.771020 Find Ty Cars
rdfLoader: 2020/08/13 07:13:01.771025 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:13:01.771029 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 07:13:01.771034 Find Ty DOB
rdfLoader: 2020/08/13 07:13:01.771039 Find Ty Friends
rdfLoader: 2020/08/13 07:13:01.771042 Find Ty Jobs
rdfLoader: 2020/08/13 07:13:01.771046 Find Ty Name
rdfLoader: 2020/08/13 07:13:01.771051 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:13:01.771055 Find Ty Siblings
rdfLoader: 2020/08/13 07:13:01.771069 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:13:01.771097 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:13:01.771101 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:13:01.771107 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 07:13:01.771116 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:13:01.771121 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:13:01.771126 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 07:13:01.771130 Find Ty Address
rdfLoader: 2020/08/13 07:13:01.771134 Find Ty Age
rdfLoader: 2020/08/13 07:13:01.771138 Find Ty Cars
rdfLoader: 2020/08/13 07:13:01.771143 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 07:13:01.771147 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 07:13:01.771151 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:13:01.771155 Find Ty DOB
rdfLoader: 2020/08/13 07:13:01.771175 Find Ty Friends
rdfLoader: 2020/08/13 07:13:01.771179 Find Ty Jobs
rdfLoader: 2020/08/13 07:13:01.771183 Find Ty Name
rdfLoader: 2020/08/13 07:13:01.771188 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:13:01.771192 Find Ty Siblings
rdfLoader: 2020/08/13 07:13:01.771204 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:13:01.771229 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:13:01.771234 Exit  unmarshalRDF. 
verify: 2020/08/13 07:13:01.771239 verify exited.....
grmgr: 2020/08/13 07:13:01.771246 EndCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:13:01.771251 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
DB:2020/08/13 07:15:11 log.go:18: ===============================================================================
grmgr: 2020/08/13 07:15:11.959826 Powering on...
rdfLoader: 2020/08/13 07:15:11.959857 verify started....xx.
rdfLoader: 2020/08/13 07:15:11.959874 saveNode started......
rdfLoader: 2020/08/13 07:15:11.959887 define saveNode limiter......
rdfuuid: 2020/08/13 07:15:11.959899 Powering on...
rdfLoader: 2020/08/13 07:15:11.959905 *************** All started 
rdfLoader: 2020/08/13 07:15:11.967335 .  getType..
rdfLoader: 2020/08/13 07:15:11.967350 node.TyName : [Person]
DB: 2020/08/13 07:15:12.043723 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 76.316721ms
verify: 2020/08/13 07:15:12.043879 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 07:15:12.043887  Send Ask request to limiter.
verify: 2020/08/13 07:15:12.043893 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:15:12.043901 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:15:12.043908 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:15:12.043915 .  getType..
rdfLoader: 2020/08/13 07:15:12.043920 node.TyName : [Person]
verify: 2020/08/13 07:15:12.043941 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 07:15:12.043945  Send Ask request to limiter.
verify: 2020/08/13 07:15:12.043950 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:15:12.043955 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:15:12.043961 ACK from gcmgr....received...
verify: 2020/08/13 07:15:12.043968 *** Verify back to waiting on veryifyCh
rdfLoader: 2020/08/13 07:15:12.044018 .  getType..
rdfLoader: 2020/08/13 07:15:12.044023 node.TyName : [Person]
verify: 2020/08/13 07:15:12.044043 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 07:15:12.044048  Send Ask request to limiter.
verify: 2020/08/13 07:15:12.044053 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:15:12.044059 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:15:12.044064 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:15:12.044070 .  getType..
rdfLoader: 2020/08/13 07:15:12.044078 node.TyName : [Person]
verify: 2020/08/13 07:15:12.044093 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 07:15:12.044097  Send Ask request to limiter.
verify: 2020/08/13 07:15:12.044101 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:15:12.044116 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:15:12.044122 ACK from gcmgr....received...
verify: 2020/08/13 07:15:12.044127 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 07:15:12.044132 verify at wg.Wait() .....
unmarshalRDF2020/08/13 07:15:12.044146 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:15:12.044153 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 07:15:12.044159 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 07:15:12.044165 Find Ty Address
rdfLoader: 2020/08/13 07:15:12.044170 Find Ty Age
rdfLoader: 2020/08/13 07:15:12.044176 Find Ty Cars
rdfLoader: 2020/08/13 07:15:12.044182 Add to SS . [Bentley]
rdfLoader: 2020/08/13 07:15:12.044188 Find Ty DOB
rdfLoader: 2020/08/13 07:15:12.044193 Find Ty Friends
rdfLoader: 2020/08/13 07:15:12.044197 Find Ty Jobs
rdfLoader: 2020/08/13 07:15:12.044202 Find Ty Name
rdfLoader: 2020/08/13 07:15:12.044206 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:15:12.044222 Find Ty Siblings
rdfLoader: 2020/08/13 07:15:12.044243 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:15:12.044268 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:15:12.044274 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:15:12.044281 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 07:15:12.044292 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:15:12.044298 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 07:15:12.044303 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 07:15:12.044308 Find Ty Address
rdfLoader: 2020/08/13 07:15:12.044313 Find Ty Age
rdfLoader: 2020/08/13 07:15:12.044318 Find Ty Cars
rdfLoader: 2020/08/13 07:15:12.044323 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:15:12.044328 Add to SS . [Alfa]
rdfLoader: 2020/08/13 07:15:12.044333 Find Ty DOB
rdfLoader: 2020/08/13 07:15:12.044338 Find Ty Friends
rdfLoader: 2020/08/13 07:15:12.044342 Find Ty Jobs
rdfLoader: 2020/08/13 07:15:12.044347 Find Ty Name
rdfLoader: 2020/08/13 07:15:12.044351 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:15:12.044356 Find Ty Siblings
rdfLoader: 2020/08/13 07:15:12.044369 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:15:12.044396 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:15:12.044401 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:15:12.044407 EndCh received for unmarshall. rCnt = 2 
unmarshalRDF2020/08/13 07:15:12.044417 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:15:12.044422 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 07:15:12.044428 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 07:15:12.044433 Find Ty Address
rdfLoader: 2020/08/13 07:15:12.044437 Find Ty Age
rdfLoader: 2020/08/13 07:15:12.044447 Find Ty Cars
rdfLoader: 2020/08/13 07:15:12.044453 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:15:12.044457 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 07:15:12.044462 Find Ty DOB
rdfLoader: 2020/08/13 07:15:12.044467 Find Ty Friends
rdfLoader: 2020/08/13 07:15:12.044471 Find Ty Jobs
rdfLoader: 2020/08/13 07:15:12.044476 Find Ty Name
rdfLoader: 2020/08/13 07:15:12.044481 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:15:12.044485 Find Ty Siblings
rdfLoader: 2020/08/13 07:15:12.044497 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:15:12.044531 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:15:12.044537 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:15:12.044542 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 07:15:12.044552 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:15:12.044558 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:15:12.044563 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 07:15:12.044568 Find Ty Address
rdfLoader: 2020/08/13 07:15:12.044573 Find Ty Age
rdfLoader: 2020/08/13 07:15:12.044578 Find Ty Cars
rdfLoader: 2020/08/13 07:15:12.044584 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 07:15:12.044589 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 07:15:12.044593 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:15:12.044598 Find Ty DOB
rdfLoader: 2020/08/13 07:15:12.044603 Find Ty Friends
rdfLoader: 2020/08/13 07:15:12.044607 Find Ty Jobs
rdfLoader: 2020/08/13 07:15:12.044612 Find Ty Name
rdfLoader: 2020/08/13 07:15:12.044617 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:15:12.044622 Find Ty Siblings
rdfLoader: 2020/08/13 07:15:12.044633 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:15:12.044659 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:15:12.044663 Exit  unmarshalRDF. 
verify: 2020/08/13 07:15:12.044670 verify exited.....
grmgr: 2020/08/13 07:15:12.044676 EndCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:15:12.044682 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
DB:2020/08/13 07:20:37 log.go:18: ===============================================================================
grmgr: 2020/08/13 07:20:37.407496 Powering on...
rdfLoader: 2020/08/13 07:20:37.407565 verify started....xx.
rdfLoader: 2020/08/13 07:20:37.407581 saveNode started......
rdfLoader: 2020/08/13 07:20:37.407585 define saveNode limiter......
rdfuuid: 2020/08/13 07:20:37.407600 Powering on...
rdfLoader: 2020/08/13 07:20:37.407606 *************** All started 
rdfLoader: 2020/08/13 07:20:37.416105 .  getType..
rdfLoader: 2020/08/13 07:20:37.416121 node.TyName : [Person]
DB: 2020/08/13 07:20:37.485098 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 68.926099ms
verify: 2020/08/13 07:20:37.485262 Pass to unmarshal... 0 &ds.Node{ID:"abc", TyName:"Person", Lines:[]ds.Line{ds.Line{N:2, Subj:"abc", Pred:"Name", Obj:"Ross Payne"}, ds.Line{N:3, Subj:"abc", Pred:"DOB", Obj:"13 March 1958"}, ds.Line{N:4, Subj:"abc", Pred:"Age", Obj:"62"}, ds.Line{N:5, Subj:"abc", Pred:"Siblings", Obj:"b"}, ds.Line{N:8, Subj:"abc", Pred:"Siblings", Obj:"c"}, ds.Line{N:9, Subj:"abc", Pred:"Cars", Obj:"Fiat"}, ds.Line{N:10, Subj:"abc", Pred:"Cars", Obj:"Honda"}, ds.Line{N:11, Subj:"abc", Pred:"Cars", Obj:"Alfa"}}, Err:[]error(nil)}
verify: 2020/08/13 07:20:37.485269  Send Ask request to limiter.
verify: 2020/08/13 07:20:37.485274 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:20:37.485281 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:20:37.485287 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:20:37.485293 .  getType..
rdfLoader: 2020/08/13 07:20:37.485298 node.TyName : [Person]
verify: 2020/08/13 07:20:37.485317 Pass to unmarshal... 1 &ds.Node{ID:"b", TyName:"Person", Lines:[]ds.Line{ds.Line{N:14, Subj:"b", Pred:"Name", Obj:"Paul Payne"}, ds.Line{N:15, Subj:"b", Pred:"DOB", Obj:"2 June 1960"}, ds.Line{N:16, Subj:"b", Pred:"Age", Obj:"58"}, ds.Line{N:17, Subj:"b", Pred:"Siblings", Obj:"abc"}, ds.Line{N:18, Subj:"b", Pred:"Siblings", Obj:"c"}, ds.Line{N:19, Subj:"b", Pred:"Cars", Obj:"Holden Commodore"}, ds.Line{N:20, Subj:"b", Pred:"Cars", Obj:"Honda"}, ds.Line{N:21, Subj:"b", Pred:"Cars", Obj:"VW Golf"}}, Err:[]error(nil)}
verify: 2020/08/13 07:20:37.485322  Send Ask request to limiter.
verify: 2020/08/13 07:20:37.485327 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:20:37.485333 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:20:37.485338 ACK from gcmgr....received...
verify: 2020/08/13 07:20:37.485345 *** Verify back to waiting on veryifyCh
unmarshalRDF2020/08/13 07:20:37.485980 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:20:37.485997 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 07:20:37.486009 StartCh received for unmarshall. rCnt = 2 
rdfLoader: 2020/08/13 07:20:37.486014 Find Ty Address
rdfLoader: 2020/08/13 07:20:37.486019 Find Ty Age
rdfLoader: 2020/08/13 07:20:37.486024 Find Ty Cars
rdfLoader: 2020/08/13 07:20:37.486030 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:20:37.486034 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 07:20:37.486039 Find Ty DOB
rdfLoader: 2020/08/13 07:20:37.486043 Find Ty Friends
rdfLoader: 2020/08/13 07:20:37.486047 Find Ty Jobs
rdfLoader: 2020/08/13 07:20:37.486051 Find Ty Name
rdfLoader: 2020/08/13 07:20:37.486055 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:20:37.486059 Find Ty Siblings
rdfLoader: 2020/08/13 07:20:37.486080 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:20:37.486119 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:20:37.486125 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:20:37.486131 EndCh received for unmarshall. rCnt = 1 
unmarshalRDF2020/08/13 07:20:37.486142 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:20:37.486147 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 07:20:37.486151 StartCh received for unmarshall. rCnt = 3 
rdfLoader: 2020/08/13 07:20:37.486155 Find Ty Address
rdfLoader: 2020/08/13 07:20:37.486159 Find Ty Age
rdfLoader: 2020/08/13 07:20:37.486164 Find Ty Cars
rdfLoader: 2020/08/13 07:20:37.486174 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:20:37.486179 Add to SS . [Alfa]
rdfLoader: 2020/08/13 07:20:37.486183 Find Ty DOB
rdfLoader: 2020/08/13 07:20:37.486187 Find Ty Friends
rdfLoader: 2020/08/13 07:20:37.486191 Find Ty Jobs
rdfLoader: 2020/08/13 07:20:37.486194 Find Ty Name
rdfLoader: 2020/08/13 07:20:37.486199 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:20:37.486202 Find Ty Siblings
rdfLoader: 2020/08/13 07:20:37.486215 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:20:37.486241 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:20:37.486246 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:20:37.486251 EndCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 07:20:37.486257 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
grmgr: 2020/08/13 07:20:37.486264 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:20:37.486302 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486309 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486315 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486320 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486325 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486331 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486336 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:20:37.486340 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:20:37.486350 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0007cc1e0)}
SaveRDFNode: 2020/08/13 07:20:37.486354 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:20:37.486362 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.486366 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.486371 UID received  : xDy0d5GLQHGf7YZLlK2abw==
grmgr: 2020/08/13 07:20:37.486566 StartCh received for saveNode. rCnt = 1 
grmgr: 2020/08/13 07:20:37.486591 StartCh received for saveNode. rCnt = 2 
SaveRDFNode: xxx 2020/08/13 07:20:37.486599 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486605 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486612 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486617 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486635 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486655 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.486672 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:20:37.486676 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:20:37.486681 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0007cc5a0)}
SaveRDFNode: 2020/08/13 07:20:37.486686 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:20:37.486693 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.486697 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.486706 UID received  : Ba5xK4FLTeiDYZItZaLOXg==
rdfLoader: 2020/08/13 07:20:37.489209 .  getType..
rdfLoader: 2020/08/13 07:20:37.489224 node.TyName : [Person]
verify: 2020/08/13 07:20:37.489254 Pass to unmarshal... 0 &ds.Node{ID:"c", TyName:"Person", Lines:[]ds.Line{ds.Line{N:1, Subj:"c", Pred:"Name", Obj:"Ian Payne"}, ds.Line{N:2, Subj:"c", Pred:"DOB", Obj:"29 Jan 1953"}, ds.Line{N:3, Subj:"c", Pred:"Age", Obj:"67"}, ds.Line{N:4, Subj:"c", Pred:"Siblings", Obj:"abc"}, ds.Line{N:5, Subj:"c", Pred:"Siblings", Obj:"b"}, ds.Line{N:6, Subj:"c", Pred:"Cars", Obj:"VW Passat"}, ds.Line{N:7, Subj:"c", Pred:"Cars", Obj:"Mitsubishi"}, ds.Line{N:8, Subj:"c", Pred:"Cars", Obj:"Ford Laser"}, ds.Line{N:9, Subj:"c", Pred:"Cars", Obj:"Honda"}}, Err:[]error(nil)}
verify: 2020/08/13 07:20:37.489264  Send Ask request to limiter.
verify: 2020/08/13 07:20:37.489268 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:20:37.489274 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:20:37.489279 ACK from gcmgr....received...
rdfLoader: 2020/08/13 07:20:37.489284 .  getType..
rdfLoader: 2020/08/13 07:20:37.489287 node.TyName : [Person]
verify: 2020/08/13 07:20:37.489302 Pass to unmarshal... 1 &ds.Node{ID:"d", TyName:"Person", Lines:[]ds.Line{ds.Line{N:12, Subj:"d", Pred:"Name", Obj:"Phil Smith"}, ds.Line{N:13, Subj:"d", Pred:"DOB", Obj:"17 June 1976"}, ds.Line{N:14, Subj:"d", Pred:"Age", Obj:"36"}, ds.Line{N:15, Subj:"d", Pred:"Cars", Obj:"Roll Roycet"}, ds.Line{N:16, Subj:"d", Pred:"Cars", Obj:"Bentley"}}, Err:[]error(nil)}
verify: 2020/08/13 07:20:37.489305  Send Ask request to limiter.
verify: 2020/08/13 07:20:37.489309 Verify is waiting from ACK from gcmgr....to proceed to run go routine
grmgr: 2020/08/13 07:20:37.489314 verify has ASKed. Under cnt limit. Send ACK on routine channel..unmarshall
verify: 2020/08/13 07:20:37.489335 ACK from gcmgr....received...
verify: 2020/08/13 07:20:37.489340 *** Verify back to waiting on veryifyCh
verify: 2020/08/13 07:20:37.489344 verify at wg.Wait() .....
unmarshalRDF2020/08/13 07:20:37.489355 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:20:37.489373 StartCh received for unmarshall. rCnt = 3 
grmgr: 2020/08/13 07:20:37.489379 StartCh received for unmarshall. rCnt = 4 
rdfLoader: 2020/08/13 07:20:37.489384 Find Ty Address
rdfLoader: 2020/08/13 07:20:37.489388 Find Ty Age
rdfLoader: 2020/08/13 07:20:37.489394 Find Ty Cars
rdfLoader: 2020/08/13 07:20:37.489399 Add to SS . [Bentley]
rdfLoader: 2020/08/13 07:20:37.489403 Find Ty DOB
rdfLoader: 2020/08/13 07:20:37.489407 Find Ty Friends
rdfLoader: 2020/08/13 07:20:37.489411 Find Ty Jobs
rdfLoader: 2020/08/13 07:20:37.489415 Find Ty Name
rdfLoader: 2020/08/13 07:20:37.489419 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:20:37.489423 Find Ty Siblings
rdfLoader: 2020/08/13 07:20:37.489437 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:20:37.489460 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:20:37.489470 Exit  unmarshalRDF. 
grmgr: 2020/08/13 07:20:37.489476 EndCh received for unmarshall. rCnt = 3 
unmarshalRDF2020/08/13 07:20:37.489503 Entered unmarshalRDF. About to lmtr.StartR()
grmgr: 2020/08/13 07:20:37.489528 StartCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:20:37.489536 StartCh received for unmarshall. rCnt = 5 
rdfLoader: 2020/08/13 07:20:37.489541 Find Ty Address
rdfLoader: 2020/08/13 07:20:37.489545 Find Ty Age
rdfLoader: 2020/08/13 07:20:37.489550 Find Ty Cars
rdfLoader: 2020/08/13 07:20:37.489555 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 07:20:37.489559 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 07:20:37.489563 Add to SS . [Honda]
rdfLoader: 2020/08/13 07:20:37.489567 Find Ty DOB
rdfLoader: 2020/08/13 07:20:37.489572 Find Ty Friends
rdfLoader: 2020/08/13 07:20:37.489575 Find Ty Jobs
rdfLoader: 2020/08/13 07:20:37.489579 Find Ty Name
rdfLoader: 2020/08/13 07:20:37.489584 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 07:20:37.489588 Find Ty Siblings
rdfLoader: 2020/08/13 07:20:37.489603 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 07:20:37.489628 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshalRDF2020/08/13 07:20:37.489632 Exit  unmarshalRDF. 
verify: 2020/08/13 07:20:37.489637 verify exited.....
grmgr: 2020/08/13 07:20:37.489661 EndCh received for unmarshall. rCnt = 4 
grmgr: 2020/08/13 07:20:37.489667 verify has ASKed. Cnt is above limit. Mark saveNode as waiting
DB: 2020/08/13 07:20:37.490260 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.861285ms
DB: 2020/08/13 07:20:37.494013 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.276633ms
DB: 2020/08/13 07:20:37.498063 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.768677ms
DB: 2020/08/13 07:20:37.502183 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.083607ms
DB: 2020/08/13 07:20:37.506970 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.606367ms
DB: 2020/08/13 07:20:37.510952 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.903302ms
DB: 2020/08/13 07:20:37.514080 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.093644ms
DB: 2020/08/13 07:20:37.517290 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.178697ms
DB: 2020/08/13 07:20:37.521867 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.527431ms
SaveRDFNode: 2020/08/13 07:20:37.521885 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/13 07:20:37.521893 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.521899 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.521905 Received UID: X18=
SaveRDFNode: 2020/08/13 07:20:37.521931 a: = db.Item{PKey:[]uint8{0x5, 0xae, 0x71, 0x2b, 0x81, 0x4b, 0x4d, 0xe8, 0x83, 0x61, 0x92, 0x2d, 0x65, 0xa2, 0xce, 0x5e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:20:37.522206 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.202304ms
SaveRDFNode: 2020/08/13 07:20:37.522220 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/13 07:20:37.522227 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.522237 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.522243 Received UID: X18=
SaveRDFNode: 2020/08/13 07:20:37.522254 a: = db.Item{PKey:[]uint8{0xc4, 0x3c, 0xb4, 0x77, 0x91, 0x8b, 0x40, 0x71, 0x9f, 0xed, 0x86, 0x4b, 0x94, 0xad, 0x9a, 0x6f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:20:37.525210 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.24001ms
SaveRDFNode: 2020/08/13 07:20:37.525224 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/13 07:20:37.525230 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.525234 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.525239 Received UID: X18=
SaveRDFNode: 2020/08/13 07:20:37.525253 a: = db.Item{PKey:[]uint8{0x5, 0xae, 0x71, 0x2b, 0x81, 0x4b, 0x4d, 0xe8, 0x83, 0x61, 0x92, 0x2d, 0x65, 0xa2, 0xce, 0x5e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:20:37.525507 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.225085ms
SaveRDFNode: 2020/08/13 07:20:37.525519 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/13 07:20:37.525524 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.525528 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.525538 Received UID: X18=
SaveRDFNode: 2020/08/13 07:20:37.525548 a: = db.Item{PKey:[]uint8{0xc4, 0x3c, 0xb4, 0x77, 0x91, 0x8b, 0x40, 0x71, 0x9f, 0xed, 0x86, 0x4b, 0x94, 0xad, 0x9a, 0x6f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:20:37.528506 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.221809ms
SaveRDFNode: 2020/08/13 07:20:37.528517 Returned.+++++++++++ No error
grmgr: 2020/08/13 07:20:37.528526 EndCh received for saveNode. rCnt = 1 
grmgr: 2020/08/13 07:20:37.528531 Send ack to waiting saveNode...
grmgr: 2020/08/13 07:20:37.528539 verify has ASKed. Under cnt limit. Send ACK on routine channel..saveNode
SaveRDFNode: xxx 2020/08/13 07:20:37.528564 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528571 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528582 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528589 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528614 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528620 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528626 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:20:37.528630 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:20:37.528636 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0003844e0)}
SaveRDFNode: 2020/08/13 07:20:37.528640 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:20:37.528648 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.528652 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.528657 UID received  : IPf5ICCnSVa9SpO3kPY/og==
grmgr: 2020/08/13 07:20:37.528849 StartCh received for saveNode. rCnt = 2 
grmgr: 2020/08/13 07:20:37.528858 StartCh received for saveNode. rCnt = 3 
SaveRDFNode: xxx 2020/08/13 07:20:37.528866 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528873 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528879 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528902 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528912 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528918 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 07:20:37.528939 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 07:20:37.528947 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 07:20:37.528953 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000384a80)}
SaveRDFNode: 2020/08/13 07:20:37.528958 Waiting for UID ......................
rdfUIDdb: 2020/08/13 07:20:37.528965 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.528969 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.528974 UID received  : ikkAfyCnRYeX+7D5AmnFdA==
DB: 2020/08/13 07:20:37.529368 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.78909ms
SaveRDFNode: 2020/08/13 07:20:37.529377 Returned.+++++++++++ No error
grmgr: 2020/08/13 07:20:37.529398 EndCh received for saveNode. rCnt = 2 
DB: 2020/08/13 07:20:37.531961 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.271739ms
DB: 2020/08/13 07:20:37.535083 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.090685ms
DB: 2020/08/13 07:20:37.538146 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.02606ms
DB: 2020/08/13 07:20:37.541618 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.433052ms
DB: 2020/08/13 07:20:37.542246 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 13.247273ms
DB: 2020/08/13 07:20:37.544780 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.124634ms
SaveRDFNode: 2020/08/13 07:20:37.544794 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003844e0)}
rdfUIDdb: 2020/08/13 07:20:37.544801 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.544805 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.544810 Received UID: X18=
SaveRDFNode: 2020/08/13 07:20:37.544822 a: = db.Item{PKey:[]uint8{0x20, 0xf7, 0xf9, 0x20, 0x20, 0xa7, 0x49, 0x56, 0xbd, 0x4a, 0x93, 0xb7, 0x90, 0xf6, 0x3f, 0xa2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:20:37.545586 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.303522ms
DB: 2020/08/13 07:20:37.547983 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.132291ms
SaveRDFNode: 2020/08/13 07:20:37.547996 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003844e0)}
rdfUIDdb: 2020/08/13 07:20:37.548002 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.548006 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.548012 Received UID: X18=
SaveRDFNode: 2020/08/13 07:20:37.548049 a: = db.Item{PKey:[]uint8{0x20, 0xf7, 0xf9, 0x20, 0x20, 0xa7, 0x49, 0x56, 0xbd, 0x4a, 0x93, 0xb7, 0x90, 0xf6, 0x3f, 0xa2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:20:37.549079 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.462872ms
DB: 2020/08/13 07:20:37.551181 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.08859ms
SaveRDFNode: 2020/08/13 07:20:37.551192 Returned.+++++++++++ No error
grmgr: 2020/08/13 07:20:37.551200 EndCh received for saveNode. rCnt = 1 
DB: 2020/08/13 07:20:37.552369 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.254497ms
DB: 2020/08/13 07:20:37.555830 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.430338ms
SaveRDFNode: 2020/08/13 07:20:37.556022 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384a80)}
rdfUIDdb: 2020/08/13 07:20:37.556035 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.556039 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.556045 Received UID: X18=
SaveRDFNode: 2020/08/13 07:20:37.556056 a: = db.Item{PKey:[]uint8{0x8a, 0x49, 0x0, 0x7f, 0x20, 0xa7, 0x45, 0x87, 0x97, 0xfb, 0xb0, 0xf9, 0x2, 0x69, 0xc5, 0x74}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:20:37.559236 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.15025ms
SaveRDFNode: 2020/08/13 07:20:37.559249 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384a80)}
rdfUIDdb: 2020/08/13 07:20:37.559254 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 07:20:37.559258 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 07:20:37.559264 Received UID: X18=
SaveRDFNode: 2020/08/13 07:20:37.559276 a: = db.Item{PKey:[]uint8{0x8a, 0x49, 0x0, 0x7f, 0x20, 0xa7, 0x45, 0x87, 0x97, 0xfb, 0xb0, 0xf9, 0x2, 0x69, 0xc5, 0x74}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 07:20:37.562541 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.23578ms
SaveRDFNode: 2020/08/13 07:20:37.562551 Returned.+++++++++++ No error
grmgr: 2020/08/13 07:20:37.562930 EndCh received for saveNode. rCnt = 0 
DB: 2020/08/13 07:20:37.565500 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.567770 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.569936 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.573245 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.576574 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.274605ms
DB: 2020/08/13 07:20:37.582849 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.769316ms
FetchForUpdate: 2020/08/13 07:20:37.582866 ** Cache FetchForUpdate Cache Key Value: [xDy0d5GLQHGf7YZLlK2abw==]   sortk: A#G#:S
FetchNode: 2020/08/13 07:20:37.582872  node: xDy0d5GLQHGf7YZLlK2abw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:20:37.583047 ** Cache FetchForUpdate Cache Key Value: [Ba5xK4FLTeiDYZItZaLOXg==]   sortk: A#
FetchNode: 2020/08/13 07:20:37.583065  node: Ba5xK4FLTeiDYZItZaLOXg== subKey: A#
DB: 2020/08/13 07:20:37.585900 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.762059ms
FetchForUpdate: 2020/08/13 07:20:37.586306 len(nb): 7
fetchItems: 2020/08/13 07:20:37.586319 +++  Cache FetchItems for sortk A# UID: [Ba5xK4FLTeiDYZItZaLOXg==] 
FetchNode: 2020/08/13 07:20:37.586331  node: Ba5xK4FLTeiDYZItZaLOXg== subKey: A#
DB: 2020/08/13 07:20:37.587284 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.360014ms
FetchForUpdate: 2020/08/13 07:20:37.587347 len(nb): 1
fetchItems: 2020/08/13 07:20:37.587355 +++  Cache FetchItems for sortk A#G#:S UID: [xDy0d5GLQHGf7YZLlK2abw==] 
FetchNode: 2020/08/13 07:20:37.587365  node: xDy0d5GLQHGf7YZLlK2abw== subKey: A#G#:S
DB: 2020/08/13 07:20:37.590306 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.890257ms
Unlock: 2020/08/13 07:20:37.593215 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:20:37.593880 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 6.445259ms
DB: 2020/08/13 07:20:37.597966 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.384112ms
Unlock: 2020/08/13 07:20:37.597977 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:20:37.598004 ** Cache FetchForUpdate Cache Key Value: [xDy0d5GLQHGf7YZLlK2abw==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.598011 +++  Cache FetchItems for sortk A#G#:S UID: [xDy0d5GLQHGf7YZLlK2abw==] 
FetchNode: 2020/08/13 07:20:37.598015  node: xDy0d5GLQHGf7YZLlK2abw== subKey: A#G#:S
DB: 2020/08/13 07:20:37.601651 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.606431ms
DB: 2020/08/13 07:20:37.608312 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.576446ms
DB: 2020/08/13 07:20:37.611728 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.363163ms
DB: 2020/08/13 07:20:37.615214 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.385447ms
DB: 2020/08/13 07:20:37.621261 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.764649ms
DB: 2020/08/13 07:20:37.624627 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.089375ms
DB: 2020/08/13 07:20:37.628236 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.307424ms
DB: 2020/08/13 07:20:37.634610 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.029233ms
DB: 2020/08/13 07:20:37.638208 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.140898ms
DB: 2020/08/13 07:20:37.642148 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.466172ms
Unlock: 2020/08/13 07:20:37.642163 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:20:37.645957 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.161662ms
FetchForUpdate: 2020/08/13 07:20:37.645970 ** Cache FetchForUpdate Cache Key Value: [xDy0d5GLQHGf7YZLlK2abw==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.645977 +++  Cache FetchItems for sortk A#G#:S UID: [xDy0d5GLQHGf7YZLlK2abw==] 
FetchNode: 2020/08/13 07:20:37.645981  node: xDy0d5GLQHGf7YZLlK2abw== subKey: A#G#:S
DB: 2020/08/13 07:20:37.648889 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.875122ms
AttachNode: gr1 2020/08/13 07:20:37.648970 Errored: SetUpredAvailable :for  xDy0d5GLQHGf7YZLlK2abw==
Cache: 2020/08/13 07:20:37.648995 In SetUpredAvailable: pUid, tUID:  xDy0d5GLQHGf7YZLlK2abw== xDy0d5GLQHGf7YZLlK2abw== A#G#:S
Cache: 2020/08/13 07:20:37.648999 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:20:37.652239 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.207369ms
Unlock: 2020/08/13 07:20:37.652249 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:20:37.657093 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.458761ms
DB: 2020/08/13 07:20:37.662086 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.665748 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.668407 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.671834 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.675283 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.378272ms
DB: 2020/08/13 07:20:37.679718 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.154108ms
FetchForUpdate: 2020/08/13 07:20:37.679907 ** Cache FetchForUpdate Cache Key Value: [IPf5ICCnSVa9SpO3kPY/og==]   sortk: A#G#:S
FetchNode: 2020/08/13 07:20:37.679919  node: IPf5ICCnSVa9SpO3kPY/og== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:20:37.680101 ** Cache FetchForUpdate Cache Key Value: [Ba5xK4FLTeiDYZItZaLOXg==]   sortk: A#
fetchItems: 2020/08/13 07:20:37.680110 +++  Cache FetchItems for sortk A# UID: [Ba5xK4FLTeiDYZItZaLOXg==] 
FetchNode: 2020/08/13 07:20:37.680122  node: Ba5xK4FLTeiDYZItZaLOXg== subKey: A#
DB: 2020/08/13 07:20:37.683209 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.011554ms
Unlock: 2020/08/13 07:20:37.684292 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:20:37.693438 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 13.483213ms
FetchForUpdate: 2020/08/13 07:20:37.693473 len(nb): 1
fetchItems: 2020/08/13 07:20:37.693500 +++  Cache FetchItems for sortk A#G#:S UID: [IPf5ICCnSVa9SpO3kPY/og==] 
FetchNode: 2020/08/13 07:20:37.693504  node: IPf5ICCnSVa9SpO3kPY/og== subKey: A#G#:S
DB: 2020/08/13 07:20:37.696348 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.811483ms
DB: 2020/08/13 07:20:37.700172 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.386511ms
Unlock: 2020/08/13 07:20:37.700184 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:20:37.700472 ** Cache FetchForUpdate Cache Key Value: [IPf5ICCnSVa9SpO3kPY/og==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.700482 +++  Cache FetchItems for sortk A#G#:S UID: [IPf5ICCnSVa9SpO3kPY/og==] 
FetchNode: 2020/08/13 07:20:37.700487  node: IPf5ICCnSVa9SpO3kPY/og== subKey: A#G#:S
DB: 2020/08/13 07:20:37.704291 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.773283ms
DB: 2020/08/13 07:20:37.713206 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 8.357348ms
DB: 2020/08/13 07:20:37.724559 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 10.853521ms
DB: 2020/08/13 07:20:37.729078 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.393033ms
DB: 2020/08/13 07:20:37.735343 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.971476ms
DB: 2020/08/13 07:20:37.738960 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.305593ms
DB: 2020/08/13 07:20:37.743148 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.678226ms
DB: 2020/08/13 07:20:37.749480 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.844786ms
DB: 2020/08/13 07:20:37.753356 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.235813ms
DB: 2020/08/13 07:20:37.757150 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.475221ms
Unlock: 2020/08/13 07:20:37.757162 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:20:37.760898 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.265638ms
FetchForUpdate: 2020/08/13 07:20:37.760910 ** Cache FetchForUpdate Cache Key Value: [IPf5ICCnSVa9SpO3kPY/og==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.760916 +++  Cache FetchItems for sortk A#G#:S UID: [IPf5ICCnSVa9SpO3kPY/og==] 
FetchNode: 2020/08/13 07:20:37.760921  node: IPf5ICCnSVa9SpO3kPY/og== subKey: A#G#:S
DB: 2020/08/13 07:20:37.763725 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.771952ms
AttachNode: gr1 2020/08/13 07:20:37.763824 Errored: SetUpredAvailable :for  IPf5ICCnSVa9SpO3kPY/og==
Cache: 2020/08/13 07:20:37.763832 In SetUpredAvailable: pUid, tUID:  IPf5ICCnSVa9SpO3kPY/og== IPf5ICCnSVa9SpO3kPY/og== A#G#:S
Cache: 2020/08/13 07:20:37.763836 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:20:37.767148 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.276893ms
Unlock: 2020/08/13 07:20:37.767165 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:20:37.771683 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.926925ms
DB: 2020/08/13 07:20:37.774233 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.777662 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.780062 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.783576 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.787296 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.447127ms
DB: 2020/08/13 07:20:37.791360 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.779173ms
FetchForUpdate: 2020/08/13 07:20:37.791375 ** Cache FetchForUpdate Cache Key Value: [Ba5xK4FLTeiDYZItZaLOXg==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.791381 +++  Cache FetchItems for sortk A#G#:S UID: [Ba5xK4FLTeiDYZItZaLOXg==] 
FetchNode: 2020/08/13 07:20:37.791386  node: Ba5xK4FLTeiDYZItZaLOXg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:20:37.791591 ** Cache FetchForUpdate Cache Key Value: [xDy0d5GLQHGf7YZLlK2abw==]   sortk: A#
fetchItems: 2020/08/13 07:20:37.791615 +++  Cache FetchItems for sortk A# UID: [xDy0d5GLQHGf7YZLlK2abw==] 
FetchNode: 2020/08/13 07:20:37.791632  node: xDy0d5GLQHGf7YZLlK2abw== subKey: A#
DB: 2020/08/13 07:20:37.794104 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.682414ms
DB: 2020/08/13 07:20:37.795497 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.806589ms
Unlock: 2020/08/13 07:20:37.796844 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:20:37.797905 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.458531ms
Unlock: 2020/08/13 07:20:37.797918 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 07:20:37.797956 ** Cache FetchForUpdate Cache Key Value: [Ba5xK4FLTeiDYZItZaLOXg==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.797963 +++  Cache FetchItems for sortk A#G#:S UID: [Ba5xK4FLTeiDYZItZaLOXg==] 
FetchNode: 2020/08/13 07:20:37.797969  node: Ba5xK4FLTeiDYZItZaLOXg== subKey: A#G#:S
DB: 2020/08/13 07:20:37.801544 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.543696ms
DB: 2020/08/13 07:20:37.808164 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.916768ms
DB: 2020/08/13 07:20:37.811478 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.262936ms
DB: 2020/08/13 07:20:37.824573 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 12.829092ms
DB: 2020/08/13 07:20:37.831603 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.510246ms
DB: 2020/08/13 07:20:37.835673 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.586165ms
DB: 2020/08/13 07:20:37.839432 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.655085ms
DB: 2020/08/13 07:20:37.845987 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.929426ms
DB: 2020/08/13 07:20:37.849957 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.422891ms
DB: 2020/08/13 07:20:37.854265 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.189086ms
Unlock: 2020/08/13 07:20:37.854278 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 07:20:37.858015 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.362168ms
FetchForUpdate: 2020/08/13 07:20:37.858029 ** Cache FetchForUpdate Cache Key Value: [Ba5xK4FLTeiDYZItZaLOXg==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.858138 +++  Cache FetchItems for sortk A#G#:S UID: [Ba5xK4FLTeiDYZItZaLOXg==] 
FetchNode: 2020/08/13 07:20:37.858146  node: Ba5xK4FLTeiDYZItZaLOXg== subKey: A#G#:S
DB: 2020/08/13 07:20:37.862123 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.944962ms
AttachNode: gr1 2020/08/13 07:20:37.862201 Errored: SetUpredAvailable :for  Ba5xK4FLTeiDYZItZaLOXg==
Cache: 2020/08/13 07:20:37.862217 In SetUpredAvailable: pUid, tUID:  Ba5xK4FLTeiDYZItZaLOXg== Ba5xK4FLTeiDYZItZaLOXg== A#G#:S
Cache: 2020/08/13 07:20:37.862306 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:20:37.865924 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.56997ms
Unlock: 2020/08/13 07:20:37.865934 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:20:37.871836 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.411331ms
DB: 2020/08/13 07:20:37.874396 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.878065 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.881648 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.885123 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.889994 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.800061ms
DB: 2020/08/13 07:20:37.894362 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.978787ms
FetchForUpdate: 2020/08/13 07:20:37.894474 ** Cache FetchForUpdate Cache Key Value: [IPf5ICCnSVa9SpO3kPY/og==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.894484 +++  Cache FetchItems for sortk A#G#:S UID: [IPf5ICCnSVa9SpO3kPY/og==] 
FetchNode: 2020/08/13 07:20:37.894489  node: IPf5ICCnSVa9SpO3kPY/og== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:20:37.894698 ** Cache FetchForUpdate Cache Key Value: [xDy0d5GLQHGf7YZLlK2abw==]   sortk: A#
fetchItems: 2020/08/13 07:20:37.894707 +++  Cache FetchItems for sortk A# UID: [xDy0d5GLQHGf7YZLlK2abw==] 
FetchNode: 2020/08/13 07:20:37.894728  node: xDy0d5GLQHGf7YZLlK2abw== subKey: A#
DB: 2020/08/13 07:20:37.897648 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.114892ms
DB: 2020/08/13 07:20:37.898856 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.086111ms
Unlock: 2020/08/13 07:20:37.900220 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:20:37.901702 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.42645ms
DB: 2020/08/13 07:20:37.905091 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.357437ms
DB: 2020/08/13 07:20:37.905124 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.357437ms
DB: 2020/08/13 07:20:37.908465 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.28471ms
DB: 2020/08/13 07:20:37.908571 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.28471ms
DB: 2020/08/13 07:20:37.912551 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.681362ms
DB: 2020/08/13 07:20:37.918999 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.1189ms
Unlock: 2020/08/13 07:20:37.919010 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:20:37.925694 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.817643ms
DB: 2020/08/13 07:20:37.929221 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.141914ms
DB: 2020/08/13 07:20:37.933506 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.443634ms
DB: 2020/08/13 07:20:37.940243 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.231154ms
DB: 2020/08/13 07:20:37.944058 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.282877ms
DB: 2020/08/13 07:20:37.948155 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.567551ms
DB: 2020/08/13 07:20:37.954633 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.877037ms
DB: 2020/08/13 07:20:37.958516 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.359974ms
DB: 2020/08/13 07:20:37.963939 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.090244ms
DB: 2020/08/13 07:20:37.967800 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.562248ms
FetchForUpdate: 2020/08/13 07:20:37.967812 ** Cache FetchForUpdate Cache Key Value: [IPf5ICCnSVa9SpO3kPY/og==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.967819 +++  Cache FetchItems for sortk A#G#:S UID: [IPf5ICCnSVa9SpO3kPY/og==] 
FetchNode: 2020/08/13 07:20:37.967824  node: IPf5ICCnSVa9SpO3kPY/og== subKey: A#G#:S
DB: 2020/08/13 07:20:37.970539 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.682492ms
AttachNode: gr1 2020/08/13 07:20:37.970641 Errored: SetUpredAvailable :for  IPf5ICCnSVa9SpO3kPY/og==
Cache: 2020/08/13 07:20:37.970650 In SetUpredAvailable: pUid, tUID:  IPf5ICCnSVa9SpO3kPY/og== 90MD6nE+Tb2tYj7ikSiFhg== A#G#:S
Cache: 2020/08/13 07:20:37.970654 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:20:37.973977 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.291365ms
Unlock: 2020/08/13 07:20:37.974080 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:20:37.978522 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.102716ms
DB: 2020/08/13 07:20:37.980818 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.983463 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.985821 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.988192 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:37.991612 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.323244ms
DB: 2020/08/13 07:20:37.996014 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.07216ms
FetchForUpdate: 2020/08/13 07:20:37.996054 ** Cache FetchForUpdate Cache Key Value: [xDy0d5GLQHGf7YZLlK2abw==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:37.996061 +++  Cache FetchItems for sortk A#G#:S UID: [xDy0d5GLQHGf7YZLlK2abw==] 
FetchNode: 2020/08/13 07:20:37.996066  node: xDy0d5GLQHGf7YZLlK2abw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:20:37.996249 ** Cache FetchForUpdate Cache Key Value: [IPf5ICCnSVa9SpO3kPY/og==]   sortk: A#
fetchItems: 2020/08/13 07:20:37.996259 +++  Cache FetchItems for sortk A# UID: [IPf5ICCnSVa9SpO3kPY/og==] 
FetchNode: 2020/08/13 07:20:37.996270  node: IPf5ICCnSVa9SpO3kPY/og== subKey: A#
DB: 2020/08/13 07:20:37.999269 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 2.925381ms
Unlock: 2020/08/13 07:20:38.000135 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:20:38.000743 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.64206ms
DB: 2020/08/13 07:20:38.004549 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.493481ms
DB: 2020/08/13 07:20:38.008460 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.853107ms
DB: 2020/08/13 07:20:38.008555 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.853107ms
DB: 2020/08/13 07:20:38.011829 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.234832ms
DB: 2020/08/13 07:20:38.011908 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.234832ms
DB: 2020/08/13 07:20:38.015930 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.828873ms
DB: 2020/08/13 07:20:38.019778 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.582385ms
Unlock: 2020/08/13 07:20:38.019909 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:20:38.026592 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.981805ms
DB: 2020/08/13 07:20:38.030205 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.40594ms
DB: 2020/08/13 07:20:38.034217 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.600205ms
DB: 2020/08/13 07:20:38.040861 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.562762ms
DB: 2020/08/13 07:20:38.044177 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.260396ms
DB: 2020/08/13 07:20:38.047757 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.493603ms
DB: 2020/08/13 07:20:38.053513 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.693214ms
DB: 2020/08/13 07:20:38.056721 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.129595ms
DB: 2020/08/13 07:20:38.060215 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.418492ms
DB: 2020/08/13 07:20:38.063557 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.285546ms
FetchForUpdate: 2020/08/13 07:20:38.063569 ** Cache FetchForUpdate Cache Key Value: [xDy0d5GLQHGf7YZLlK2abw==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:38.063576 +++  Cache FetchItems for sortk A#G#:S UID: [xDy0d5GLQHGf7YZLlK2abw==] 
FetchNode: 2020/08/13 07:20:38.063580  node: xDy0d5GLQHGf7YZLlK2abw== subKey: A#G#:S
DB: 2020/08/13 07:20:38.066526 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.912987ms
AttachNode: gr1 2020/08/13 07:20:38.066630 Errored: SetUpredAvailable :for  xDy0d5GLQHGf7YZLlK2abw==
Cache: 2020/08/13 07:20:38.066640 In SetUpredAvailable: pUid, tUID:  xDy0d5GLQHGf7YZLlK2abw== F1v0L6LQSMW6N71Xg6tPyw== A#G#:S
Cache: 2020/08/13 07:20:38.066645 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:20:38.070136 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.444871ms
Unlock: 2020/08/13 07:20:38.070148 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:20:38.074143 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.91295ms
DB: 2020/08/13 07:20:38.076586 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:38.078967 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:38.082449 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:38.084693 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 07:20:38.088102 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.355081ms
DB: 2020/08/13 07:20:38.092191 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.905262ms
FetchForUpdate: 2020/08/13 07:20:38.092222 ** Cache FetchForUpdate Cache Key Value: [Ba5xK4FLTeiDYZItZaLOXg==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:38.092229 +++  Cache FetchItems for sortk A#G#:S UID: [Ba5xK4FLTeiDYZItZaLOXg==] 
FetchNode: 2020/08/13 07:20:38.092233  node: Ba5xK4FLTeiDYZItZaLOXg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 07:20:38.092437 ** Cache FetchForUpdate Cache Key Value: [IPf5ICCnSVa9SpO3kPY/og==]   sortk: A#
fetchItems: 2020/08/13 07:20:38.092447 +++  Cache FetchItems for sortk A# UID: [IPf5ICCnSVa9SpO3kPY/og==] 
FetchNode: 2020/08/13 07:20:38.092458  node: IPf5ICCnSVa9SpO3kPY/og== subKey: A#
DB: 2020/08/13 07:20:38.094989 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.70213ms
DB: 2020/08/13 07:20:38.095891 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.372059ms
Unlock: 2020/08/13 07:20:38.096597 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 07:20:38.098901 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.572274ms
DB: 2020/08/13 07:20:38.102224 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.280569ms
DB: 2020/08/13 07:20:38.102301 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.280569ms
DB: 2020/08/13 07:20:38.105500 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.143637ms
DB: 2020/08/13 07:20:38.105526 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.143637ms
DB: 2020/08/13 07:20:38.109949 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.963033ms
DB: 2020/08/13 07:20:38.113474 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.388289ms
Unlock: 2020/08/13 07:20:38.113529 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 07:20:38.120032 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.649239ms
DB: 2020/08/13 07:20:38.123650 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.34037ms
DB: 2020/08/13 07:20:38.127795 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.500873ms
DB: 2020/08/13 07:20:38.134077 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.817653ms
DB: 2020/08/13 07:20:38.137704 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.198625ms
DB: 2020/08/13 07:20:38.141884 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.518582ms
DB: 2020/08/13 07:20:38.147609 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.666493ms
DB: 2020/08/13 07:20:38.151054 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.389372ms
DB: 2020/08/13 07:20:38.154590 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.46502ms
DB: 2020/08/13 07:20:38.157995 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.34989ms
FetchForUpdate: 2020/08/13 07:20:38.158009 ** Cache FetchForUpdate Cache Key Value: [Ba5xK4FLTeiDYZItZaLOXg==]   sortk: A#G#:S
fetchItems: 2020/08/13 07:20:38.158016 +++  Cache FetchItems for sortk A#G#:S UID: [Ba5xK4FLTeiDYZItZaLOXg==] 
FetchNode: 2020/08/13 07:20:38.158020  node: Ba5xK4FLTeiDYZItZaLOXg== subKey: A#G#:S
DB: 2020/08/13 07:20:38.161071 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.001168ms
AttachNode: gr1 2020/08/13 07:20:38.161171 Errored: SetUpredAvailable :for  Ba5xK4FLTeiDYZItZaLOXg==
Cache: 2020/08/13 07:20:38.161179 In SetUpredAvailable: pUid, tUID:  Ba5xK4FLTeiDYZItZaLOXg== bEIEwZ2KS5mB6lBsPaXdlQ== A#G#:S
Cache: 2020/08/13 07:20:38.161183 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 07:20:38.164605 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.386732ms
Unlock: 2020/08/13 07:20:38.164617 ******* IN UNLOCK NC ********************
DB: 2020/08/13 07:20:38.169071 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.008098ms
