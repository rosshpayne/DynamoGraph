DB:2020/08/12 06:54:22 log.go:18: ===============================================================================
grmgr: 2020/08/12 06:54:22.482317 Powering on...
rdfLoader: 2020/08/12 06:54:22.482394 verify started....xx.
rdfLoader: 2020/08/12 06:54:22.482411 saveNode started......
rdfuuid: 2020/08/12 06:54:22.482425 Powering on...
rdfLoader: 2020/08/12 06:54:22.482432 *************** All started 
rdfLoader: 2020/08/12 06:54:22.488901 .  getType..
rdfLoader: 2020/08/12 06:54:22.488920 node.TyName : [Person]
DB: 2020/08/12 06:54:22.566521 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 77.5502ms
verify: 2020/08/12 06:54:22.566684 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 06:54:22.566741 Find Ty Address
rdfLoader: 2020/08/12 06:54:22.566747 Find Ty Age
rdfLoader: 2020/08/12 06:54:22.566753 Find Ty Cars
rdfLoader: 2020/08/12 06:54:22.566759 Add to SS . [Honda]
rdfLoader: 2020/08/12 06:54:22.566764 Add to SS . [Alfa]
rdfLoader: 2020/08/12 06:54:22.566768 Find Ty DOB
rdfLoader: 2020/08/12 06:54:22.566773 Find Ty Friends
rdfLoader: 2020/08/12 06:54:22.566777 Find Ty Jobs
rdfLoader: 2020/08/12 06:54:22.566781 Find Ty Name
rdfLoader: 2020/08/12 06:54:22.566786 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 06:54:22.566790 Find Ty Siblings
rdfLoader: 2020/08/12 06:54:22.566800 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 06:54:22.566807 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 06:54:22.566812 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 06:54:22.566840 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 06:54:22.566846 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 06:54:22.566871 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.566877 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.566884 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.566891 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.566897 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.566903 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.566909 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 06:54:22.566913 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 06:54:22.566920 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000016d20)}
SaveRDFNode: 2020/08/12 06:54:22.566925 Waiting for UID ......................
rdfUIDdb: 2020/08/12 06:54:22.566934 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.566939 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.566945 UID received  : mUxRTrujQ0SqzuCmgkoVHw==
verify: 2020/08/12 06:54:22.567159 *** Verify running...... 1
rdfLoader: 2020/08/12 06:54:22.567168 .  getType..
rdfLoader: 2020/08/12 06:54:22.567172 node.TyName : [Person]
verify: 2020/08/12 06:54:22.567230 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 06:54:22.567267 Find Ty Address
rdfLoader: 2020/08/12 06:54:22.567272 Find Ty Age
rdfLoader: 2020/08/12 06:54:22.567278 Find Ty Cars
rdfLoader: 2020/08/12 06:54:22.567283 Add to SS . [Honda]
rdfLoader: 2020/08/12 06:54:22.567287 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 06:54:22.567292 Find Ty DOB
rdfLoader: 2020/08/12 06:54:22.567296 Find Ty Friends
rdfLoader: 2020/08/12 06:54:22.567301 Find Ty Jobs
rdfLoader: 2020/08/12 06:54:22.567305 Find Ty Name
rdfLoader: 2020/08/12 06:54:22.567310 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 06:54:22.567314 Find Ty Siblings
rdfLoader: 2020/08/12 06:54:22.567322 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 06:54:22.567328 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 06:54:22.567333 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 06:54:22.567359 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 06:54:22.567364 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 06:54:22.567383 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.567391 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.567397 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.567403 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.567408 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.567414 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.567420 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 06:54:22.567424 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 06:54:22.567430 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0000176e0)}
SaveRDFNode: 2020/08/12 06:54:22.567434 Waiting for UID ......................
rdfUIDdb: 2020/08/12 06:54:22.567441 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.567449 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.567455 UID received  : skG7lLsMTEuzbh+Tqjcthg==
verify: 2020/08/12 06:54:22.567826 *** Verify running...... 1
rdfLoader: 2020/08/12 06:54:22.567882 .  getType..
rdfLoader: 2020/08/12 06:54:22.567888 node.TyName : [Person]
verify: 2020/08/12 06:54:22.567907 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 06:54:22.567943 Find Ty Address
rdfLoader: 2020/08/12 06:54:22.567949 Find Ty Age
rdfLoader: 2020/08/12 06:54:22.567954 Find Ty Cars
rdfLoader: 2020/08/12 06:54:22.567959 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 06:54:22.567964 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 06:54:22.567968 Add to SS . [Honda]
rdfLoader: 2020/08/12 06:54:22.567972 Find Ty DOB
rdfLoader: 2020/08/12 06:54:22.567977 Find Ty Friends
rdfLoader: 2020/08/12 06:54:22.567981 Find Ty Jobs
rdfLoader: 2020/08/12 06:54:22.567990 Find Ty Name
rdfLoader: 2020/08/12 06:54:22.567995 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 06:54:22.567999 Find Ty Siblings
rdfLoader: 2020/08/12 06:54:22.568008 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 06:54:22.568014 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 06:54:22.568019 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 06:54:22.568043 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 06:54:22.568048 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 06:54:22.568067 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568074 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568081 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568087 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568092 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568098 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568104 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 06:54:22.568108 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 06:54:22.568114 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000017f20)}
SaveRDFNode: 2020/08/12 06:54:22.568118 Waiting for UID ......................
rdfUIDdb: 2020/08/12 06:54:22.568126 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.568130 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.568135 UID received  : j0rKNehZTpqdVzrcssvkJQ==
verify: 2020/08/12 06:54:22.568308 *** Verify running...... 2
rdfLoader: 2020/08/12 06:54:22.568317 .  getType..
rdfLoader: 2020/08/12 06:54:22.568321 node.TyName : [Person]
verify: 2020/08/12 06:54:22.568338 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 06:54:22.568368 Find Ty Address
rdfLoader: 2020/08/12 06:54:22.568373 Find Ty Age
rdfLoader: 2020/08/12 06:54:22.568378 Find Ty Cars
rdfLoader: 2020/08/12 06:54:22.568383 Add to SS . [Bentley]
rdfLoader: 2020/08/12 06:54:22.568388 Find Ty DOB
rdfLoader: 2020/08/12 06:54:22.568392 Find Ty Friends
rdfLoader: 2020/08/12 06:54:22.568397 Find Ty Jobs
rdfLoader: 2020/08/12 06:54:22.568401 Find Ty Name
rdfLoader: 2020/08/12 06:54:22.568405 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 06:54:22.568409 Find Ty Siblings
rdfLoader: 2020/08/12 06:54:22.568416 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 06:54:22.568423 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 06:54:22.568428 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 06:54:22.568448 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 06:54:22.568459 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 06:54:22.568479 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568487 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568492 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568498 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568504 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568510 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 06:54:22.568516 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 06:54:22.568520 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 06:54:22.568526 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000382660)}
SaveRDFNode: 2020/08/12 06:54:22.568530 Waiting for UID ......................
rdfUIDdb: 2020/08/12 06:54:22.568537 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.568541 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.568547 UID received  : jGi8v8dsQE+kbOdadYYoKQ==
verify: 2020/08/12 06:54:22.568690 *** Verify running...... 2
verify: 2020/08/12 06:54:22.568698 verify exited.....
DB: 2020/08/12 06:54:22.585588 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.60762ms
DB: 2020/08/12 06:54:22.590630 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.855988ms
DB: 2020/08/12 06:54:22.595715 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.04837ms
DB: 2020/08/12 06:54:22.597818 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 29.246345ms
DB: 2020/08/12 06:54:22.598147 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 29.985454ms
DB: 2020/08/12 06:54:22.598420 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 30.922189ms
DB: 2020/08/12 06:54:22.600455 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.70414ms
DB: 2020/08/12 06:54:22.602996 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.144191ms
DB: 2020/08/12 06:54:22.603486 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.032265ms
DB: 2020/08/12 06:54:22.603757 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.577515ms
DB: 2020/08/12 06:54:22.605080 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.591599ms
SaveRDFNode: 2020/08/12 06:54:22.605095 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016d20)}
rdfUIDdb: 2020/08/12 06:54:22.605102 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.605106 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.605112 Received UID: X18=
SaveRDFNode: 2020/08/12 06:54:22.605126 a: = db.Item{PKey:[]uint8{0x99, 0x4c, 0x51, 0x4e, 0xbb, 0xa3, 0x43, 0x44, 0xaa, 0xce, 0xe0, 0xa6, 0x82, 0x4a, 0x15, 0x1f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 06:54:22.608365 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.154174ms
DB: 2020/08/12 06:54:22.608627 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.10363ms
DB: 2020/08/12 06:54:22.608873 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.065772ms
DB: 2020/08/12 06:54:22.609819 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.635121ms
SaveRDFNode: 2020/08/12 06:54:22.609832 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016d20)}
rdfUIDdb: 2020/08/12 06:54:22.609838 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.609842 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.609847 Received UID: X18=
SaveRDFNode: 2020/08/12 06:54:22.609858 a: = db.Item{PKey:[]uint8{0x99, 0x4c, 0x51, 0x4e, 0xbb, 0xa3, 0x43, 0x44, 0xaa, 0xce, 0xe0, 0xa6, 0x82, 0x4a, 0x15, 0x1f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 06:54:22.613921 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.016132ms
DB: 2020/08/12 06:54:22.615313 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.424353ms
SaveRDFNode: 2020/08/12 06:54:22.615323 Returned.+++++++++++ No error
DB: 2020/08/12 06:54:22.616178 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.779537ms
DB: 2020/08/12 06:54:22.616410 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.754008ms
DB: 2020/08/12 06:54:22.619584 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.627936ms
SaveRDFNode: 2020/08/12 06:54:22.619603 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017f20)}
rdfUIDdb: 2020/08/12 06:54:22.619610 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.619614 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.619620 Received UID: X18=
SaveRDFNode: 2020/08/12 06:54:22.619633 a: = db.Item{PKey:[]uint8{0x8f, 0x4a, 0xca, 0x35, 0xe8, 0x59, 0x4e, 0x9a, 0x9d, 0x57, 0x3a, 0xdc, 0xb2, 0xcb, 0xe4, 0x25}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 06:54:22.620944 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.733264ms
SaveRDFNode: 2020/08/12 06:54:22.620958 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000382660)}
rdfUIDdb: 2020/08/12 06:54:22.620964 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.620968 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.620973 Received UID: X18=
SaveRDFNode: 2020/08/12 06:54:22.620984 a: = db.Item{PKey:[]uint8{0x8c, 0x68, 0xbc, 0xbf, 0xc7, 0x6c, 0x40, 0x4f, 0xa4, 0x6c, 0xe7, 0x5a, 0x75, 0x86, 0x28, 0x29}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 06:54:22.621390 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.949119ms
SaveRDFNode: 2020/08/12 06:54:22.621402 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0000176e0)}
rdfUIDdb: 2020/08/12 06:54:22.621407 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.621411 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.621417 Received UID: X18=
SaveRDFNode: 2020/08/12 06:54:22.621430 a: = db.Item{PKey:[]uint8{0xb2, 0x41, 0xbb, 0x94, 0xbb, 0xc, 0x4c, 0x4b, 0xb3, 0x6e, 0x1f, 0x93, 0xaa, 0x37, 0x2d, 0x86}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 06:54:22.625460 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.795645ms
SaveRDFNode: 2020/08/12 06:54:22.625485 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017f20)}
rdfUIDdb: 2020/08/12 06:54:22.625491 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.625495 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.625500 Received UID: X18=
SaveRDFNode: 2020/08/12 06:54:22.625510 a: = db.Item{PKey:[]uint8{0x8f, 0x4a, 0xca, 0x35, 0xe8, 0x59, 0x4e, 0x9a, 0x9d, 0x57, 0x3a, 0xdc, 0xb2, 0xcb, 0xe4, 0x25}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 06:54:22.626019 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.006343ms
SaveRDFNode: 2020/08/12 06:54:22.626030 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000382660)}
rdfUIDdb: 2020/08/12 06:54:22.626036 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.626039 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.626045 Received UID: X18=
SaveRDFNode: 2020/08/12 06:54:22.626054 a: = db.Item{PKey:[]uint8{0x8c, 0x68, 0xbc, 0xbf, 0xc7, 0x6c, 0x40, 0x4f, 0xa4, 0x6c, 0xe7, 0x5a, 0x75, 0x86, 0x28, 0x29}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 06:54:22.626394 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.932076ms
SaveRDFNode: 2020/08/12 06:54:22.626405 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0000176e0)}
rdfUIDdb: 2020/08/12 06:54:22.626411 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 06:54:22.626414 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 06:54:22.626419 Received UID: X18=
SaveRDFNode: 2020/08/12 06:54:22.626448 a: = db.Item{PKey:[]uint8{0xb2, 0x41, 0xbb, 0x94, 0xbb, 0xc, 0x4c, 0x4b, 0xb3, 0x6e, 0x1f, 0x93, 0xaa, 0x37, 0x2d, 0x86}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 06:54:22.630377 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.838595ms
SaveRDFNode: 2020/08/12 06:54:22.630387 Returned.+++++++++++ No error
DB: 2020/08/12 06:54:22.631018 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.934666ms
SaveRDFNode: 2020/08/12 06:54:22.631039 Returned.+++++++++++ No error
DB: 2020/08/12 06:54:22.631367 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.887618ms
SaveRDFNode: 2020/08/12 06:54:22.631379 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 06:54:22.631388 send on	uuid.AttachCh
rdfLoader: 2020/08/12 06:54:22.631392 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 06:54:22.631400 attachnaode: mUxRTrujQ0SqzuCmgkoVHw==, skG7lLsMTEuzbh+Tqjcthg==, A#G#:S
rdfLoader: 2020/08/12 06:54:22.631797 attachnaode: mUxRTrujQ0SqzuCmgkoVHw==, j0rKNehZTpqdVzrcssvkJQ==, A#G#:S
rdfLoader: 2020/08/12 06:54:22.632038 attachnaode: skG7lLsMTEuzbh+Tqjcthg==, mUxRTrujQ0SqzuCmgkoVHw==, A#G#:S
rdfLoader: 2020/08/12 06:54:22.632347 attachnaode: skG7lLsMTEuzbh+Tqjcthg==, j0rKNehZTpqdVzrcssvkJQ==, A#G#:S
rdfLoader: 2020/08/12 06:54:22.632637 attachnaode: j0rKNehZTpqdVzrcssvkJQ==, mUxRTrujQ0SqzuCmgkoVHw==, A#G#:S
rdfLoader: 2020/08/12 06:54:22.632881 attachnaode: j0rKNehZTpqdVzrcssvkJQ==, skG7lLsMTEuzbh+Tqjcthg==, A#G#:S
rdfLoader: 2020/08/12 06:54:22.633140 saveNode exited loop channel closed.....Waiting on SaveRDFNodes to finish.
rdfLoader: 2020/08/12 06:54:22.633148 saveNode finished waiting...exiting
grmgr: 2020/08/12 06:54:22.633158 Powering down...
rdfuuid: 2020/08/12 06:54:22.633163 Powering down...
DB:2020/08/12 07:02:35 log.go:18: ===============================================================================
grmgr: 2020/08/12 07:02:35.057578 Powering on...
rdfLoader: 2020/08/12 07:02:35.057621 verify started....xx.
rdfLoader: 2020/08/12 07:02:35.057635 saveNode started......
rdfuuid: 2020/08/12 07:02:35.057647 Powering on...
rdfLoader: 2020/08/12 07:02:35.057659 *************** All started 
rdfLoader: 2020/08/12 07:02:35.064491 .  getType..
rdfLoader: 2020/08/12 07:02:35.064501 node.TyName : [Person]
DB: 2020/08/12 07:02:35.133898 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 69.339579ms
verify: 2020/08/12 07:02:35.134083 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 07:02:35.134132 Find Ty Address
rdfLoader: 2020/08/12 07:02:35.134139 Find Ty Age
rdfLoader: 2020/08/12 07:02:35.134146 Find Ty Cars
rdfLoader: 2020/08/12 07:02:35.134152 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:02:35.134158 Add to SS . [Alfa]
rdfLoader: 2020/08/12 07:02:35.134163 Find Ty DOB
rdfLoader: 2020/08/12 07:02:35.134168 Find Ty Friends
rdfLoader: 2020/08/12 07:02:35.134173 Find Ty Jobs
rdfLoader: 2020/08/12 07:02:35.134177 Find Ty Name
rdfLoader: 2020/08/12 07:02:35.134182 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:02:35.134187 Find Ty Siblings
rdfLoader: 2020/08/12 07:02:35.134197 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:02:35.134206 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:02:35.134211 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:02:35.134236 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:02:35.134243 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:02:35.134268 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134275 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134284 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134291 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134298 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134305 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134311 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:02:35.134316 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:02:35.134324 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003865a0)}
SaveRDFNode: 2020/08/12 07:02:35.134329 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:02:35.134338 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.134343 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.134349 UID received  : J2pfGkppRTOHrP2i5Dps2A==
verify: 2020/08/12 07:02:35.134543 *** Verify running...... 1
rdfLoader: 2020/08/12 07:02:35.134560 .  getType..
rdfLoader: 2020/08/12 07:02:35.134564 node.TyName : [Person]
verify: 2020/08/12 07:02:35.134585 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 07:02:35.134622 Find Ty Address
rdfLoader: 2020/08/12 07:02:35.134627 Find Ty Age
rdfLoader: 2020/08/12 07:02:35.134633 Find Ty Cars
rdfLoader: 2020/08/12 07:02:35.134647 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:02:35.134653 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 07:02:35.134657 Find Ty DOB
rdfLoader: 2020/08/12 07:02:35.134662 Find Ty Friends
rdfLoader: 2020/08/12 07:02:35.134667 Find Ty Jobs
rdfLoader: 2020/08/12 07:02:35.134671 Find Ty Name
rdfLoader: 2020/08/12 07:02:35.134676 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:02:35.134681 Find Ty Siblings
rdfLoader: 2020/08/12 07:02:35.134690 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:02:35.134696 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:02:35.134701 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:02:35.134728 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:02:35.134733 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:02:35.134753 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134761 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134768 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134774 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134780 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134786 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.134792 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:02:35.134797 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:02:35.134803 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000386ae0)}
SaveRDFNode: 2020/08/12 07:02:35.134807 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:02:35.134815 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.134819 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.134825 UID received  : xzrYHq0WQou7/RyrlbGfXg==
verify: 2020/08/12 07:02:35.135178 *** Verify running...... 1
rdfLoader: 2020/08/12 07:02:35.135234 .  getType..
rdfLoader: 2020/08/12 07:02:35.135239 node.TyName : [Person]
verify: 2020/08/12 07:02:35.135259 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 07:02:35.135295 Find Ty Address
rdfLoader: 2020/08/12 07:02:35.135301 Find Ty Age
rdfLoader: 2020/08/12 07:02:35.135307 Find Ty Cars
rdfLoader: 2020/08/12 07:02:35.135312 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 07:02:35.135317 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 07:02:35.135322 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:02:35.135326 Find Ty DOB
rdfLoader: 2020/08/12 07:02:35.135331 Find Ty Friends
rdfLoader: 2020/08/12 07:02:35.135336 Find Ty Jobs
rdfLoader: 2020/08/12 07:02:35.135340 Find Ty Name
rdfLoader: 2020/08/12 07:02:35.135346 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:02:35.135351 Find Ty Siblings
rdfLoader: 2020/08/12 07:02:35.135359 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:02:35.135372 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:02:35.135378 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:02:35.135402 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:02:35.135407 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:02:35.135431 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135440 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135447 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135453 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135459 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135465 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135472 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:02:35.135476 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:02:35.135482 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000387020)}
SaveRDFNode: 2020/08/12 07:02:35.135487 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:02:35.135497 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.135502 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.135508 UID received  : hzWC3a+fTnyDK+zaLcYviA==
verify: 2020/08/12 07:02:35.135659 *** Verify running...... 2
rdfLoader: 2020/08/12 07:02:35.135669 .  getType..
rdfLoader: 2020/08/12 07:02:35.135674 node.TyName : [Person]
verify: 2020/08/12 07:02:35.135690 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 07:02:35.135719 Find Ty Address
rdfLoader: 2020/08/12 07:02:35.135725 Find Ty Age
rdfLoader: 2020/08/12 07:02:35.135730 Find Ty Cars
rdfLoader: 2020/08/12 07:02:35.135736 Add to SS . [Bentley]
rdfLoader: 2020/08/12 07:02:35.135740 Find Ty DOB
rdfLoader: 2020/08/12 07:02:35.135745 Find Ty Friends
rdfLoader: 2020/08/12 07:02:35.135750 Find Ty Jobs
rdfLoader: 2020/08/12 07:02:35.135754 Find Ty Name
rdfLoader: 2020/08/12 07:02:35.135759 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:02:35.135764 Find Ty Siblings
rdfLoader: 2020/08/12 07:02:35.135771 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:02:35.135777 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:02:35.135783 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:02:35.135803 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:02:35.135813 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:02:35.135833 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135841 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135847 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135854 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135859 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135866 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:02:35.135872 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:02:35.135876 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:02:35.135882 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000387440)}
SaveRDFNode: 2020/08/12 07:02:35.135887 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:02:35.135896 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.135901 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.135907 UID received  : ZfM/ZH/lQZmcm+m3CoQE1Q==
verify: 2020/08/12 07:02:35.136053 *** Verify running...... 2
verify: 2020/08/12 07:02:35.136063 verify exited.....
DB: 2020/08/12 07:02:35.145374 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.992941ms
DB: 2020/08/12 07:02:35.148747 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 13.882551ms
DB: 2020/08/12 07:02:35.152228 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.439803ms
DB: 2020/08/12 07:02:35.155372 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.111524ms
DB: 2020/08/12 07:02:35.158906 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.331273ms
DB: 2020/08/12 07:02:35.159424 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 23.890119ms
DB: 2020/08/12 07:02:35.162029 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.584218ms
DB: 2020/08/12 07:02:35.162306 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.352021ms
SaveRDFNode: 2020/08/12 07:02:35.162320 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/12 07:02:35.162327 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.162332 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.162338 Received UID: X18=
SaveRDFNode: 2020/08/12 07:02:35.162352 a: = db.Item{PKey:[]uint8{0xc7, 0x3a, 0xd8, 0x1e, 0xad, 0x16, 0x42, 0x8b, 0xbb, 0xfd, 0x1c, 0xab, 0x95, 0xb1, 0x9f, 0x5e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:02:35.163243 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 27.311103ms
DB: 2020/08/12 07:02:35.164615 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.130879ms
DB: 2020/08/12 07:02:35.165738 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.338719ms
SaveRDFNode: 2020/08/12 07:02:35.165750 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/12 07:02:35.165764 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.165767 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.165772 Received UID: X18=
SaveRDFNode: 2020/08/12 07:02:35.165792 a: = db.Item{PKey:[]uint8{0xc7, 0x3a, 0xd8, 0x1e, 0xad, 0x16, 0x42, 0x8b, 0xbb, 0xfd, 0x1c, 0xab, 0x95, 0xb1, 0x9f, 0x5e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:02:35.166105 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.044949ms
DB: 2020/08/12 07:02:35.167471 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.186169ms
DB: 2020/08/12 07:02:35.168285 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.619804ms
DB: 2020/08/12 07:02:35.169059 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.202938ms
SaveRDFNode: 2020/08/12 07:02:35.169068 Returned.+++++++++++ No error
DB: 2020/08/12 07:02:35.170145 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.992017ms
DB: 2020/08/12 07:02:35.170968 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.467616ms
DB: 2020/08/12 07:02:35.172380 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.066448ms
DB: 2020/08/12 07:02:35.173390 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.214098ms
SaveRDFNode: 2020/08/12 07:02:35.173403 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003865a0)}
rdfUIDdb: 2020/08/12 07:02:35.173409 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.173413 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.173419 Received UID: X18=
SaveRDFNode: 2020/08/12 07:02:35.173433 a: = db.Item{PKey:[]uint8{0x27, 0x6a, 0x5f, 0x1a, 0x4a, 0x69, 0x45, 0x33, 0x87, 0xac, 0xfd, 0xa2, 0xe4, 0x3a, 0x6c, 0xd8}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:02:35.174748 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.557259ms
DB: 2020/08/12 07:02:35.176395 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.981272ms
SaveRDFNode: 2020/08/12 07:02:35.176408 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387020)}
rdfUIDdb: 2020/08/12 07:02:35.176413 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.176417 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.176422 Received UID: X18=
SaveRDFNode: 2020/08/12 07:02:35.176433 a: = db.Item{PKey:[]uint8{0x87, 0x35, 0x82, 0xdd, 0xaf, 0x9f, 0x4e, 0x7c, 0x83, 0x2b, 0xec, 0xda, 0x2d, 0xc6, 0x2f, 0x88}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:02:35.176706 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.244361ms
SaveRDFNode: 2020/08/12 07:02:35.176717 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003865a0)}
rdfUIDdb: 2020/08/12 07:02:35.176722 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.176726 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.176732 Received UID: X18=
SaveRDFNode: 2020/08/12 07:02:35.176742 a: = db.Item{PKey:[]uint8{0x27, 0x6a, 0x5f, 0x1a, 0x4a, 0x69, 0x45, 0x33, 0x87, 0xac, 0xfd, 0xa2, 0xe4, 0x3a, 0x6c, 0xd8}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:02:35.178321 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.543547ms
SaveRDFNode: 2020/08/12 07:02:35.178333 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387440)}
rdfUIDdb: 2020/08/12 07:02:35.178339 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.178348 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.178354 Received UID: X18=
SaveRDFNode: 2020/08/12 07:02:35.178364 a: = db.Item{PKey:[]uint8{0x65, 0xf3, 0x3f, 0x64, 0x7f, 0xe5, 0x41, 0x99, 0x9c, 0x9b, 0xe9, 0xb7, 0xa, 0x84, 0x4, 0xd5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:02:35.180003 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.234252ms
SaveRDFNode: 2020/08/12 07:02:35.180013 Returned.+++++++++++ No error
DB: 2020/08/12 07:02:35.180302 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.837676ms
SaveRDFNode: 2020/08/12 07:02:35.180314 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387020)}
rdfUIDdb: 2020/08/12 07:02:35.180319 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.180323 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.180329 Received UID: X18=
SaveRDFNode: 2020/08/12 07:02:35.180339 a: = db.Item{PKey:[]uint8{0x87, 0x35, 0x82, 0xdd, 0xaf, 0x9f, 0x4e, 0x7c, 0x83, 0x2b, 0xec, 0xda, 0x2d, 0xc6, 0x2f, 0x88}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:02:35.181881 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.48791ms
SaveRDFNode: 2020/08/12 07:02:35.181893 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387440)}
rdfUIDdb: 2020/08/12 07:02:35.181899 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:02:35.181903 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:02:35.181908 Received UID: X18=
SaveRDFNode: 2020/08/12 07:02:35.181920 a: = db.Item{PKey:[]uint8{0x65, 0xf3, 0x3f, 0x64, 0x7f, 0xe5, 0x41, 0x99, 0x9c, 0x9b, 0xe9, 0xb7, 0xa, 0x84, 0x4, 0xd5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:02:35.183550 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.17293ms
SaveRDFNode: 2020/08/12 07:02:35.183558 Returned.+++++++++++ No error
DB: 2020/08/12 07:02:35.185540 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.583798ms
SaveRDFNode: 2020/08/12 07:02:35.185550 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 07:02:35.185557 send on	uuid.AttachCh
rdfLoader: 2020/08/12 07:02:35.185561 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 07:02:35.185570 attachnaode: J2pfGkppRTOHrP2i5Dps2A==, xzrYHq0WQou7/RyrlbGfXg==, A#G#:S
DB: 2020/08/12 07:02:35.190190 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.517916ms
DB: 2020/08/12 07:02:35.195361 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.028015ms
AttachNode: main 2020/08/12 07:02:35.195376 FetchForUpdate: xzrYHq0WQou7/RyrlbGfXg== sortK A#G#:S 
AttachNode: gr1 2020/08/12 07:02:35.195583 Enter...gr1 FetchForUpdate J2pfGkppRTOHrP2i5Dps2A==
DB: 2020/08/12 07:02:35.198044 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.600889ms
AttachNode: main 2020/08/12 07:02:35.198801 FetchForUpdate:  completed..
DB: 2020/08/12 07:02:35.202746 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.397546ms
DB: 2020/08/12 07:02:35.210564 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 14.894335ms
AttachNode: gr1 2020/08/12 07:02:35.210684 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 07:02:35.210694 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 07:02:35.210700 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 07:02:35.210706 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 07:02:35.210759 Left UnmarshalCache(cnv); 
DB: 2020/08/12 07:02:35.217077 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.245467ms
DB: 2020/08/12 07:02:35.220661 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.526055ms
DB: 2020/08/12 07:02:35.224731 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.939233ms
DB: 2020/08/12 07:02:35.232099 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.290585ms
DB: 2020/08/12 07:02:35.237038 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.653975ms
DB: 2020/08/12 07:02:35.240859 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.710589ms
DB: 2020/08/12 07:02:35.247135 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.167551ms
DB: 2020/08/12 07:02:35.250933 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.499447ms
DB: 2020/08/12 07:02:35.255006 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.718836ms
DB: 2020/08/12 07:02:35.259301 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.727397ms
Cache: 2020/08/12 07:02:35.259627 In SetUpredAvailable: pUid, tUID:  xzrYHq0WQou7/RyrlbGfXg== xzrYHq0WQou7/RyrlbGfXg== A#G#:S
Cache: 2020/08/12 07:02:35.259634 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 07:02:35.263278 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.608683ms
DB: 2020/08/12 07:02:35.272044 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 8.2934ms
rdfLoader: 2020/08/12 07:02:37.272361 attachnaode: J2pfGkppRTOHrP2i5Dps2A==, hzWC3a+fTnyDK+zaLcYviA==, A#G#:S
DB: 2020/08/12 07:02:37.276721 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.221079ms
DB: 2020/08/12 07:02:37.281621 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.769868ms
AttachNode: main 2020/08/12 07:02:37.281637 FetchForUpdate: hzWC3a+fTnyDK+zaLcYviA== sortK A#G#:S 
AttachNode: gr1 2020/08/12 07:02:37.281843 Enter...gr1 FetchForUpdate J2pfGkppRTOHrP2i5Dps2A==
AttachNode: gr1 2020/08/12 07:02:37.281870 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 07:02:37.281883 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 07:02:37.281890 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 07:02:37.281895 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 07:02:37.281963 Left UnmarshalCache(cnv); 
DB: 2020/08/12 07:02:37.284632 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.940075ms
AttachNode: main 2020/08/12 07:02:37.284814 FetchForUpdate:  completed..
DB: 2020/08/12 07:02:37.289477 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.498457ms
DB: 2020/08/12 07:02:37.295792 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.547167ms
DB: 2020/08/12 07:02:37.299712 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.716693ms
DB: 2020/08/12 07:02:37.303990 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.889894ms
DB: 2020/08/12 07:02:37.310632 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.314227ms
DB: 2020/08/12 07:02:37.314506 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.546842ms
DB: 2020/08/12 07:02:37.318605 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.774426ms
DB: 2020/08/12 07:02:37.324215 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.284392ms
DB: 2020/08/12 07:02:37.328178 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.634322ms
DB: 2020/08/12 07:02:37.332711 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.214443ms
DB: 2020/08/12 07:02:37.336851 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.613094ms
Cache: 2020/08/12 07:02:37.337188 In SetUpredAvailable: pUid, tUID:  hzWC3a+fTnyDK+zaLcYviA== hzWC3a+fTnyDK+zaLcYviA== A#G#:S
Cache: 2020/08/12 07:02:37.337196 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 07:02:37.340858 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.610132ms
DB: 2020/08/12 07:02:37.346958 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.63911ms
rdfLoader: 2020/08/12 07:02:39.347317 attachnaode: xzrYHq0WQou7/RyrlbGfXg==, J2pfGkppRTOHrP2i5Dps2A==, A#G#:S
DB: 2020/08/12 07:02:39.351460 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.01631ms
DB: 2020/08/12 07:02:39.357272 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.743029ms
AttachNode: main 2020/08/12 07:02:39.357287 FetchForUpdate: J2pfGkppRTOHrP2i5Dps2A== sortK A#G#:S 
AttachNode: main 2020/08/12 07:02:39.357311 FetchForUpdate:  completed..
AttachNode: gr1 2020/08/12 07:02:39.357552 Enter...gr1 FetchForUpdate xzrYHq0WQou7/RyrlbGfXg==
DB: 2020/08/12 07:02:39.361017 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.628269ms
DB:2020/08/12 07:16:24 log.go:18: ===============================================================================
grmgr: 2020/08/12 07:16:24.135352 Powering on...
rdfLoader: 2020/08/12 07:16:24.135397 verify started....xx.
rdfLoader: 2020/08/12 07:16:24.135410 saveNode started......
rdfuuid: 2020/08/12 07:16:24.135423 Powering on...
rdfLoader: 2020/08/12 07:16:24.135429 *************** All started 
rdfLoader: 2020/08/12 07:16:24.143308 .  getType..
rdfLoader: 2020/08/12 07:16:24.143322 node.TyName : [Person]
DB: 2020/08/12 07:16:24.217770 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 74.398726ms
verify: 2020/08/12 07:16:24.217932 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 07:16:24.217985 Find Ty Address
rdfLoader: 2020/08/12 07:16:24.217992 Find Ty Age
rdfLoader: 2020/08/12 07:16:24.217999 Find Ty Cars
rdfLoader: 2020/08/12 07:16:24.218005 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:16:24.218010 Add to SS . [Alfa]
rdfLoader: 2020/08/12 07:16:24.218015 Find Ty DOB
rdfLoader: 2020/08/12 07:16:24.218021 Find Ty Friends
rdfLoader: 2020/08/12 07:16:24.218026 Find Ty Jobs
rdfLoader: 2020/08/12 07:16:24.218030 Find Ty Name
rdfLoader: 2020/08/12 07:16:24.218035 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:16:24.218041 Find Ty Siblings
rdfLoader: 2020/08/12 07:16:24.218053 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:16:24.218061 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:16:24.218068 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:16:24.218095 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:16:24.218111 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:16:24.218137 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218145 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218152 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218158 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218164 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218170 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218177 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:16:24.218181 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:16:24.218189 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003885a0)}
SaveRDFNode: 2020/08/12 07:16:24.218194 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:16:24.218203 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.218208 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.218215 UID received  : fJDOM+3JSHesPscM+ZrYGA==
verify: 2020/08/12 07:16:24.218432 *** Verify running...... 1
rdfLoader: 2020/08/12 07:16:24.218455 .  getType..
rdfLoader: 2020/08/12 07:16:24.218461 node.TyName : [Person]
verify: 2020/08/12 07:16:24.218482 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 07:16:24.218525 Find Ty Address
rdfLoader: 2020/08/12 07:16:24.218531 Find Ty Age
rdfLoader: 2020/08/12 07:16:24.218537 Find Ty Cars
rdfLoader: 2020/08/12 07:16:24.218542 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:16:24.218548 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 07:16:24.218553 Find Ty DOB
rdfLoader: 2020/08/12 07:16:24.218558 Find Ty Friends
rdfLoader: 2020/08/12 07:16:24.218562 Find Ty Jobs
rdfLoader: 2020/08/12 07:16:24.218567 Find Ty Name
rdfLoader: 2020/08/12 07:16:24.218572 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:16:24.218576 Find Ty Siblings
rdfLoader: 2020/08/12 07:16:24.218585 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:16:24.218592 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:16:24.218598 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:16:24.218624 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:16:24.218629 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:16:24.218649 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218657 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218664 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218676 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218682 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218689 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.218695 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:16:24.218700 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:16:24.218707 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000388ae0)}
SaveRDFNode: 2020/08/12 07:16:24.218711 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:16:24.218719 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.218723 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.218730 UID received  : e+9OsmoWRQOXU31ai8d6bg==
verify: 2020/08/12 07:16:24.219067 *** Verify running...... 1
rdfLoader: 2020/08/12 07:16:24.219123 .  getType..
rdfLoader: 2020/08/12 07:16:24.219129 node.TyName : [Person]
verify: 2020/08/12 07:16:24.219148 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 07:16:24.219184 Find Ty Address
rdfLoader: 2020/08/12 07:16:24.219189 Find Ty Age
rdfLoader: 2020/08/12 07:16:24.219196 Find Ty Cars
rdfLoader: 2020/08/12 07:16:24.219201 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 07:16:24.219206 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 07:16:24.219211 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:16:24.219215 Find Ty DOB
rdfLoader: 2020/08/12 07:16:24.219220 Find Ty Friends
rdfLoader: 2020/08/12 07:16:24.219224 Find Ty Jobs
rdfLoader: 2020/08/12 07:16:24.219229 Find Ty Name
rdfLoader: 2020/08/12 07:16:24.219233 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:16:24.219238 Find Ty Siblings
rdfLoader: 2020/08/12 07:16:24.219246 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:16:24.219253 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:16:24.219258 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:16:24.219282 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:16:24.219286 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:16:24.219306 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219313 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219320 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219326 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219332 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219342 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219348 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:16:24.219358 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:16:24.219365 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000389020)}
SaveRDFNode: 2020/08/12 07:16:24.219370 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:16:24.219377 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.219382 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.219387 UID received  : M/yZ69ZTTjq1okPVVB85ng==
verify: 2020/08/12 07:16:24.219549 *** Verify running...... 2
rdfLoader: 2020/08/12 07:16:24.219559 .  getType..
rdfLoader: 2020/08/12 07:16:24.219563 node.TyName : [Person]
verify: 2020/08/12 07:16:24.219579 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 07:16:24.219608 Find Ty Address
rdfLoader: 2020/08/12 07:16:24.219614 Find Ty Age
rdfLoader: 2020/08/12 07:16:24.219619 Find Ty Cars
rdfLoader: 2020/08/12 07:16:24.219625 Add to SS . [Bentley]
rdfLoader: 2020/08/12 07:16:24.219630 Find Ty DOB
rdfLoader: 2020/08/12 07:16:24.219635 Find Ty Friends
rdfLoader: 2020/08/12 07:16:24.219639 Find Ty Jobs
rdfLoader: 2020/08/12 07:16:24.219643 Find Ty Name
rdfLoader: 2020/08/12 07:16:24.219648 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:16:24.219652 Find Ty Siblings
rdfLoader: 2020/08/12 07:16:24.219659 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:16:24.219665 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:16:24.219670 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:16:24.219704 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:16:24.219711 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:16:24.219732 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219740 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219747 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219753 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219759 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219765 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:16:24.219771 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:16:24.219775 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:16:24.219781 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000389440)}
SaveRDFNode: 2020/08/12 07:16:24.219786 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:16:24.219793 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.219798 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.219804 UID received  : afU8Vf5CQ96QE3O/wwZr8A==
verify: 2020/08/12 07:16:24.219947 *** Verify running...... 2
verify: 2020/08/12 07:16:24.219956 verify exited.....
DB: 2020/08/12 07:16:24.231071 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.823641ms
DB: 2020/08/12 07:16:24.236293 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.522564ms
DB: 2020/08/12 07:16:24.241150 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.819258ms
DB: 2020/08/12 07:16:24.245875 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.689648ms
DB: 2020/08/12 07:16:24.248712 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 29.299194ms
DB: 2020/08/12 07:16:24.250031 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 30.202962ms
DB: 2020/08/12 07:16:24.250770 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.863637ms
DB: 2020/08/12 07:16:24.253136 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 22.020119ms
DB: 2020/08/12 07:16:24.253536 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.792718ms
DB: 2020/08/12 07:16:24.254798 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.735903ms
DB: 2020/08/12 07:16:24.255673 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.873203ms
SaveRDFNode: 2020/08/12 07:16:24.255687 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000388ae0)}
rdfUIDdb: 2020/08/12 07:16:24.255694 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.255698 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.255704 Received UID: X18=
SaveRDFNode: 2020/08/12 07:16:24.255719 a: = db.Item{PKey:[]uint8{0x7b, 0xef, 0x4e, 0xb2, 0x6a, 0x16, 0x45, 0x3, 0x97, 0x53, 0x7d, 0x5a, 0x8b, 0xc7, 0x7a, 0x6e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:16:24.257978 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.658841ms
DB: 2020/08/12 07:16:24.258270 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.682084ms
DB: 2020/08/12 07:16:24.259580 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.751452ms
DB: 2020/08/12 07:16:24.260498 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.749815ms
SaveRDFNode: 2020/08/12 07:16:24.260510 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000388ae0)}
rdfUIDdb: 2020/08/12 07:16:24.260516 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.260520 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.260526 Received UID: X18=
SaveRDFNode: 2020/08/12 07:16:24.260536 a: = db.Item{PKey:[]uint8{0x7b, 0xef, 0x4e, 0xb2, 0x6a, 0x16, 0x45, 0x3, 0x97, 0x53, 0x7d, 0x5a, 0x8b, 0xc7, 0x7a, 0x6e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:16:24.262689 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.678424ms
DB: 2020/08/12 07:16:24.262935 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.635754ms
DB: 2020/08/12 07:16:24.264484 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.871216ms
DB: 2020/08/12 07:16:24.266424 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.858992ms
SaveRDFNode: 2020/08/12 07:16:24.266434 Returned.+++++++++++ No error
DB: 2020/08/12 07:16:24.267742 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.759764ms
SaveRDFNode: 2020/08/12 07:16:24.267926 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000389020)}
rdfUIDdb: 2020/08/12 07:16:24.267949 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.267954 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.267960 Received UID: X18=
SaveRDFNode: 2020/08/12 07:16:24.267972 a: = db.Item{PKey:[]uint8{0x33, 0xfc, 0x99, 0xeb, 0xd6, 0x53, 0x4e, 0x3a, 0xb5, 0xa2, 0x43, 0xd5, 0x54, 0x1f, 0x39, 0x9e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:16:24.268259 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.525281ms
SaveRDFNode: 2020/08/12 07:16:24.268271 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003885a0)}
rdfUIDdb: 2020/08/12 07:16:24.268277 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.268281 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.268287 Received UID: X18=
SaveRDFNode: 2020/08/12 07:16:24.268297 a: = db.Item{PKey:[]uint8{0x7c, 0x90, 0xce, 0x33, 0xed, 0xc9, 0x48, 0x77, 0xac, 0x3e, 0xc7, 0xc, 0xf9, 0x9a, 0xd8, 0x18}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:16:24.269218 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.702804ms
SaveRDFNode: 2020/08/12 07:16:24.269229 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000389440)}
rdfUIDdb: 2020/08/12 07:16:24.269235 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.269239 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.269245 Received UID: X18=
SaveRDFNode: 2020/08/12 07:16:24.269255 a: = db.Item{PKey:[]uint8{0x69, 0xf5, 0x3c, 0x55, 0xfe, 0x42, 0x43, 0xde, 0x90, 0x13, 0x73, 0xbf, 0xc3, 0x6, 0x6b, 0xf0}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:16:24.272749 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.747277ms
SaveRDFNode: 2020/08/12 07:16:24.272762 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000389020)}
rdfUIDdb: 2020/08/12 07:16:24.272768 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.272772 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.272777 Received UID: X18=
SaveRDFNode: 2020/08/12 07:16:24.272787 a: = db.Item{PKey:[]uint8{0x33, 0xfc, 0x99, 0xeb, 0xd6, 0x53, 0x4e, 0x3a, 0xb5, 0xa2, 0x43, 0xd5, 0x54, 0x1f, 0x39, 0x9e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:16:24.273948 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.665041ms
SaveRDFNode: 2020/08/12 07:16:24.273961 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000389440)}
rdfUIDdb: 2020/08/12 07:16:24.273966 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.273970 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.273975 Received UID: X18=
SaveRDFNode: 2020/08/12 07:16:24.273985 a: = db.Item{PKey:[]uint8{0x69, 0xf5, 0x3c, 0x55, 0xfe, 0x42, 0x43, 0xde, 0x90, 0x13, 0x73, 0xbf, 0xc3, 0x6, 0x6b, 0xf0}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:16:24.274238 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.913278ms
SaveRDFNode: 2020/08/12 07:16:24.274248 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003885a0)}
rdfUIDdb: 2020/08/12 07:16:24.274254 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:16:24.274257 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:16:24.274262 Received UID: X18=
SaveRDFNode: 2020/08/12 07:16:24.274271 a: = db.Item{PKey:[]uint8{0x7c, 0x90, 0xce, 0x33, 0xed, 0xc9, 0x48, 0x77, 0xac, 0x3e, 0xc7, 0xc, 0xf9, 0x9a, 0xd8, 0x18}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:16:24.278811 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.798335ms
SaveRDFNode: 2020/08/12 07:16:24.278822 Returned.+++++++++++ No error
DB: 2020/08/12 07:16:24.279205 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.907213ms
SaveRDFNode: 2020/08/12 07:16:24.279218 Returned.+++++++++++ No error
DB: 2020/08/12 07:16:24.279417 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.599494ms
SaveRDFNode: 2020/08/12 07:16:24.279430 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 07:16:24.279437 send on	uuid.AttachCh
rdfLoader: 2020/08/12 07:16:24.279441 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 07:16:24.279449 attachnaode: fJDOM+3JSHesPscM+ZrYGA==, e+9OsmoWRQOXU31ai8d6bg==, A#G#:S
DB: 2020/08/12 07:16:24.286781 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.132254ms
DB: 2020/08/12 07:16:24.295816 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 8.9642ms
AttachNode: main 2020/08/12 07:16:24.295833 FetchForUpdate: e+9OsmoWRQOXU31ai8d6bg== sortK A#G#:S 
AttachNode: gr1 2020/08/12 07:16:24.296023 Enter...gr1 FetchForUpdate fJDOM+3JSHesPscM+ZrYGA==
DB: 2020/08/12 07:16:24.300008 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.120371ms
AttachNode: main 2020/08/12 07:16:24.300068 FetchForUpdate:  completed..
DB: 2020/08/12 07:16:24.304967 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.843089ms
DB: 2020/08/12 07:16:24.313670 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 17.551483ms
AttachNode: gr1 2020/08/12 07:16:24.314016 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 07:16:24.314067 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 07:16:24.314112 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 07:16:24.314134 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 07:16:24.315022 Left UnmarshalCache(cnv); 
DB: 2020/08/12 07:16:24.322016 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.554501ms
DB: 2020/08/12 07:16:24.326849 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.645037ms
DB: 2020/08/12 07:16:24.332213 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.968477ms
DB: 2020/08/12 07:16:24.338808 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.270399ms
DB: 2020/08/12 07:16:24.343838 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.700709ms
DB: 2020/08/12 07:16:24.349133 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.961555ms
DB: 2020/08/12 07:16:24.355784 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.318495ms
DB: 2020/08/12 07:16:24.360640 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.546162ms
DB: 2020/08/12 07:16:24.365933 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.986408ms
DB: 2020/08/12 07:16:24.372087 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.613488ms
Cache: 2020/08/12 07:16:24.372131 In SetUpredAvailable: pUid, tUID:  e+9OsmoWRQOXU31ai8d6bg== e+9OsmoWRQOXU31ai8d6bg== A#G#:S
Cache: 2020/08/12 07:16:24.372137 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 07:16:24.376911 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.740676ms
DB: 2020/08/12 07:16:24.385014 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.769464ms
rdfLoader: 2020/08/12 07:16:32.385283 attachnaode: fJDOM+3JSHesPscM+ZrYGA==, M/yZ69ZTTjq1okPVVB85ng==, A#G#:S
DB: 2020/08/12 07:16:32.390811 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.36515ms
DB: 2020/08/12 07:16:32.395510 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.633176ms
AttachNode: main 2020/08/12 07:16:32.395524 FetchForUpdate: M/yZ69ZTTjq1okPVVB85ng== sortK A#G#:S 
AttachNode: gr1 2020/08/12 07:16:32.395715 Enter...gr1 FetchForUpdate fJDOM+3JSHesPscM+ZrYGA==
AttachNode: gr1 2020/08/12 07:16:32.395756 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 07:16:32.395768 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 07:16:32.395774 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 07:16:32.395779 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 07:16:32.395848 Left UnmarshalCache(cnv); 
DB: 2020/08/12 07:16:32.399467 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.885313ms
AttachNode: main 2020/08/12 07:16:32.399525 FetchForUpdate:  completed..
DB: 2020/08/12 07:16:32.404333 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.74864ms
DB: 2020/08/12 07:16:32.410831 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.363815ms
DB: 2020/08/12 07:16:32.415709 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.820698ms
DB: 2020/08/12 07:16:32.423439 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.313048ms
DB: 2020/08/12 07:16:32.430170 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.383766ms
DB: 2020/08/12 07:16:32.435125 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.635925ms
DB: 2020/08/12 07:16:32.440316 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.880173ms
DB: 2020/08/12 07:16:32.447111 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.474601ms
DB: 2020/08/12 07:16:32.452280 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.822617ms
DB: 2020/08/12 07:16:32.457468 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.870812ms
DB: 2020/08/12 07:16:32.462907 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.85692ms
Cache: 2020/08/12 07:16:32.463237 In SetUpredAvailable: pUid, tUID:  M/yZ69ZTTjq1okPVVB85ng== M/yZ69ZTTjq1okPVVB85ng== A#G#:S
Cache: 2020/08/12 07:16:32.463246 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 07:16:32.468117 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.837377ms
DB: 2020/08/12 07:16:32.473247 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.716282ms
rdfLoader: 2020/08/12 07:16:40.473457 attachnaode: e+9OsmoWRQOXU31ai8d6bg==, fJDOM+3JSHesPscM+ZrYGA==, A#G#:S
DB: 2020/08/12 07:16:40.478977 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.380506ms
DB: 2020/08/12 07:16:40.483743 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.699559ms
AttachNode: main 2020/08/12 07:16:40.483758 FetchForUpdate: fJDOM+3JSHesPscM+ZrYGA== sortK A#G#:S 
AttachNode: main 2020/08/12 07:16:40.483779 FetchForUpdate:  completed..
AttachNode: gr1 2020/08/12 07:16:40.483989 Enter...gr1 FetchForUpdate e+9OsmoWRQOXU31ai8d6bg==
DB: 2020/08/12 07:16:40.488735 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.898644ms
DB:2020/08/12 07:52:54 log.go:18: ===============================================================================
grmgr: 2020/08/12 07:52:54.681433 Powering on...
rdfLoader: 2020/08/12 07:52:54.681487 verify started....xx.
rdfLoader: 2020/08/12 07:52:54.681501 saveNode started......
rdfuuid: 2020/08/12 07:52:54.681513 Powering on...
rdfLoader: 2020/08/12 07:52:54.681520 *************** All started 
rdfLoader: 2020/08/12 07:52:54.685618 .  getType..
rdfLoader: 2020/08/12 07:52:54.685629 node.TyName : [Person]
DB: 2020/08/12 07:52:54.760284 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 74.60908ms
verify: 2020/08/12 07:52:54.760450 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 07:52:54.760498 Find Ty Address
rdfLoader: 2020/08/12 07:52:54.760505 Find Ty Age
rdfLoader: 2020/08/12 07:52:54.760512 Find Ty Cars
rdfLoader: 2020/08/12 07:52:54.760518 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:52:54.760523 Add to SS . [Alfa]
rdfLoader: 2020/08/12 07:52:54.760528 Find Ty DOB
rdfLoader: 2020/08/12 07:52:54.760534 Find Ty Friends
rdfLoader: 2020/08/12 07:52:54.760538 Find Ty Jobs
rdfLoader: 2020/08/12 07:52:54.760543 Find Ty Name
rdfLoader: 2020/08/12 07:52:54.760548 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:52:54.760552 Find Ty Siblings
rdfLoader: 2020/08/12 07:52:54.760562 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:52:54.760570 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:52:54.760576 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:52:54.760603 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:52:54.760609 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:52:54.760633 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.760641 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.760648 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.760655 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.760662 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.760669 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.760675 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:52:54.760680 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:52:54.760688 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000016c60)}
SaveRDFNode: 2020/08/12 07:52:54.760693 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:52:54.760702 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.760707 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.760713 UID received  : NKdF9qEkRFiT9puc5/duwA==
verify: 2020/08/12 07:52:54.760916 *** Verify running...... 1
rdfLoader: 2020/08/12 07:52:54.760925 .  getType..
rdfLoader: 2020/08/12 07:52:54.760945 node.TyName : [Person]
verify: 2020/08/12 07:52:54.760975 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 07:52:54.761021 Find Ty Address
rdfLoader: 2020/08/12 07:52:54.761027 Find Ty Age
rdfLoader: 2020/08/12 07:52:54.761033 Find Ty Cars
rdfLoader: 2020/08/12 07:52:54.761039 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:52:54.761044 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 07:52:54.761048 Find Ty DOB
rdfLoader: 2020/08/12 07:52:54.761053 Find Ty Friends
rdfLoader: 2020/08/12 07:52:54.761059 Find Ty Jobs
rdfLoader: 2020/08/12 07:52:54.761064 Find Ty Name
rdfLoader: 2020/08/12 07:52:54.761068 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:52:54.761073 Find Ty Siblings
rdfLoader: 2020/08/12 07:52:54.761081 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:52:54.761088 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:52:54.761093 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:52:54.761120 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:52:54.761125 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:52:54.761145 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.761152 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.761158 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.761164 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.761172 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.761179 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.761185 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:52:54.761189 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:52:54.761195 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017560)}
SaveRDFNode: 2020/08/12 07:52:54.761200 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:52:54.761207 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.761215 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.761222 UID received  : rS9GYoWvSty0cLmtye7u7A==
verify: 2020/08/12 07:52:54.762849 *** Verify running...... 1
rdfLoader: 2020/08/12 07:52:54.765264 .  getType..
rdfLoader: 2020/08/12 07:52:54.765274 node.TyName : [Person]
verify: 2020/08/12 07:52:54.765671 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 07:52:54.766235 Find Ty Address
rdfLoader: 2020/08/12 07:52:54.766245 Find Ty Age
rdfLoader: 2020/08/12 07:52:54.766251 Find Ty Cars
rdfLoader: 2020/08/12 07:52:54.766256 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 07:52:54.766261 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 07:52:54.766265 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:52:54.766270 Find Ty DOB
rdfLoader: 2020/08/12 07:52:54.766274 Find Ty Friends
rdfLoader: 2020/08/12 07:52:54.766278 Find Ty Jobs
rdfLoader: 2020/08/12 07:52:54.766282 Find Ty Name
rdfLoader: 2020/08/12 07:52:54.766287 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:52:54.766298 Find Ty Siblings
rdfLoader: 2020/08/12 07:52:54.766309 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:52:54.766316 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:52:54.766321 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:52:54.766364 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:52:54.766370 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:52:54.766411 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.766420 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.766426 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.766432 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.766438 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.766444 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.766450 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:52:54.766454 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:52:54.766460 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000017f80)}
SaveRDFNode: 2020/08/12 07:52:54.766464 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:52:54.766471 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.766476 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.766481 UID received  : Y7SQUoSBQhiy5lD/JdYS5Q==
verify: 2020/08/12 07:52:54.766856 *** Verify running...... 2
rdfLoader: 2020/08/12 07:52:54.766864 .  getType..
rdfLoader: 2020/08/12 07:52:54.766883 node.TyName : [Person]
DB: 2020/08/12 07:52:54.768906 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.160718ms
verify: 2020/08/12 07:52:54.769721 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 07:52:54.770405 Find Ty Address
rdfLoader: 2020/08/12 07:52:54.770415 Find Ty Age
rdfLoader: 2020/08/12 07:52:54.770444 Find Ty Cars
rdfLoader: 2020/08/12 07:52:54.770450 Add to SS . [Bentley]
rdfLoader: 2020/08/12 07:52:54.770454 Find Ty DOB
rdfLoader: 2020/08/12 07:52:54.770459 Find Ty Friends
rdfLoader: 2020/08/12 07:52:54.770463 Find Ty Jobs
rdfLoader: 2020/08/12 07:52:54.770466 Find Ty Name
rdfLoader: 2020/08/12 07:52:54.770471 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:52:54.770474 Find Ty Siblings
rdfLoader: 2020/08/12 07:52:54.770483 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:52:54.770490 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:52:54.770495 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:52:54.770515 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:52:54.770525 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:52:54.770546 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.770553 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.770559 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.770564 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.770570 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.770575 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:52:54.770582 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:52:54.770603 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:52:54.770610 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0003871a0)}
SaveRDFNode: 2020/08/12 07:52:54.770614 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:52:54.770622 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.770626 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.770631 UID received  : DqTKUVmkTo+JNU8mNH2ztQ==
verify: 2020/08/12 07:52:54.771021 *** Verify running...... 2
verify: 2020/08/12 07:52:54.771034 verify exited.....
DB: 2020/08/12 07:52:54.773207 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.956395ms
DB: 2020/08/12 07:52:54.778016 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 9.076906ms
DB: 2020/08/12 07:52:54.782697 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.500195ms
DB: 2020/08/12 07:52:54.784940 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.430794ms
DB: 2020/08/12 07:52:54.788047 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.074979ms
DB: 2020/08/12 07:52:54.789478 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.819905ms
DB: 2020/08/12 07:52:54.789747 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.009914ms
DB: 2020/08/12 07:52:54.791011 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 2.934512ms
DB: 2020/08/12 07:52:54.792657 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 19.420556ms
DB: 2020/08/12 07:52:54.792941 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.431871ms
DB: 2020/08/12 07:52:54.793167 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.391724ms
SaveRDFNode: 2020/08/12 07:52:54.793177 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016c60)}
rdfUIDdb: 2020/08/12 07:52:54.793183 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.793187 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.793192 Received UID: X18=
SaveRDFNode: 2020/08/12 07:52:54.793209 a: = db.Item{PKey:[]uint8{0x34, 0xa7, 0x45, 0xf6, 0xa1, 0x24, 0x44, 0x58, 0x93, 0xf6, 0x9b, 0x9c, 0xe7, 0xf7, 0x6e, 0xc0}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:52:54.794323 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.284134ms
DB: 2020/08/12 07:52:54.795944 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.239461ms
DB: 2020/08/12 07:52:54.796768 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.788203ms
DB: 2020/08/12 07:52:54.797186 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.945433ms
SaveRDFNode: 2020/08/12 07:52:54.797197 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016c60)}
rdfUIDdb: 2020/08/12 07:52:54.797203 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.797207 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.797212 Received UID: X18=
SaveRDFNode: 2020/08/12 07:52:54.797222 a: = db.Item{PKey:[]uint8{0x34, 0xa7, 0x45, 0xf6, 0xa1, 0x24, 0x44, 0x58, 0x93, 0xf6, 0x9b, 0x9c, 0xe7, 0xf7, 0x6e, 0xc0}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:52:54.797579 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.066822ms
SaveRDFNode: 2020/08/12 07:52:54.797591 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017f80)}
rdfUIDdb: 2020/08/12 07:52:54.797611 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.797616 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.797632 Received UID: X18=
SaveRDFNode: 2020/08/12 07:52:54.797643 a: = db.Item{PKey:[]uint8{0x63, 0xb4, 0x90, 0x52, 0x84, 0x81, 0x42, 0x18, 0xb2, 0xe6, 0x50, 0xff, 0x25, 0xd6, 0x12, 0xe5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:52:54.799206 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.230416ms
DB: 2020/08/12 07:52:54.800232 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.378097ms
DB: 2020/08/12 07:52:54.800509 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.256735ms
SaveRDFNode: 2020/08/12 07:52:54.800519 Returned.+++++++++++ No error
DB: 2020/08/12 07:52:54.800723 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.049204ms
SaveRDFNode: 2020/08/12 07:52:54.800746 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017f80)}
rdfUIDdb: 2020/08/12 07:52:54.800764 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.800768 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.800773 Received UID: X18=
SaveRDFNode: 2020/08/12 07:52:54.800800 a: = db.Item{PKey:[]uint8{0x63, 0xb4, 0x90, 0x52, 0x84, 0x81, 0x42, 0x18, 0xb2, 0xe6, 0x50, 0xff, 0x25, 0xd6, 0x12, 0xe5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:52:54.802510 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.273772ms
SaveRDFNode: 2020/08/12 07:52:54.802522 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017560)}
rdfUIDdb: 2020/08/12 07:52:54.802527 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.802531 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.802536 Received UID: X18=
SaveRDFNode: 2020/08/12 07:52:54.802545 a: = db.Item{PKey:[]uint8{0xad, 0x2f, 0x46, 0x62, 0x85, 0xaf, 0x4a, 0xdc, 0xb4, 0x70, 0xb9, 0xad, 0xc9, 0xee, 0xee, 0xec}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:52:54.803456 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.195026ms
SaveRDFNode: 2020/08/12 07:52:54.803477 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003871a0)}
rdfUIDdb: 2020/08/12 07:52:54.803483 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.803487 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.803493 Received UID: X18=
SaveRDFNode: 2020/08/12 07:52:54.803503 a: = db.Item{PKey:[]uint8{0xe, 0xa4, 0xca, 0x51, 0x59, 0xa4, 0x4e, 0x8f, 0x89, 0x35, 0x4f, 0x26, 0x34, 0x7d, 0xb3, 0xb5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:52:54.804068 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.238195ms
SaveRDFNode: 2020/08/12 07:52:54.804100 Returned.+++++++++++ No error
DB: 2020/08/12 07:52:54.806028 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.45179ms
SaveRDFNode: 2020/08/12 07:52:54.806041 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017560)}
rdfUIDdb: 2020/08/12 07:52:54.806047 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.806051 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.806056 Received UID: X18=
SaveRDFNode: 2020/08/12 07:52:54.806066 a: = db.Item{PKey:[]uint8{0xad, 0x2f, 0x46, 0x62, 0x85, 0xaf, 0x4a, 0xdc, 0xb4, 0x70, 0xb9, 0xad, 0xc9, 0xee, 0xee, 0xec}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:52:54.806714 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.155774ms
SaveRDFNode: 2020/08/12 07:52:54.806725 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003871a0)}
rdfUIDdb: 2020/08/12 07:52:54.806731 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:52:54.806734 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:52:54.806739 Received UID: X18=
SaveRDFNode: 2020/08/12 07:52:54.806749 a: = db.Item{PKey:[]uint8{0xe, 0xa4, 0xca, 0x51, 0x59, 0xa4, 0x4e, 0x8f, 0x89, 0x35, 0x4f, 0x26, 0x34, 0x7d, 0xb3, 0xb5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:52:54.809465 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.344676ms
SaveRDFNode: 2020/08/12 07:52:54.809488 Returned.+++++++++++ No error
DB: 2020/08/12 07:52:54.810454 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.67236ms
SaveRDFNode: 2020/08/12 07:52:54.810638 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 07:52:54.810661 send on	uuid.AttachCh
rdfLoader: 2020/08/12 07:52:54.810665 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 07:52:54.810673 attachnaode: NKdF9qEkRFiT9puc5/duwA==, rS9GYoWvSty0cLmtye7u7A==, A#G#:S
DB: 2020/08/12 07:52:54.815063 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.494493ms
DB: 2020/08/12 07:52:54.821504 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.378201ms
AttachNode: main 2020/08/12 07:52:54.821517 FetchForUpdate: rS9GYoWvSty0cLmtye7u7A== sortK A#G#:S 
AttachNode: gr1 2020/08/12 07:52:54.821710 Enter...gr1 FetchForUpdate NKdF9qEkRFiT9puc5/duwA==
DB: 2020/08/12 07:52:54.824233 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.663584ms
AttachNode: main 2020/08/12 07:52:54.824904 FetchForUpdate:  completed..
DB: 2020/08/12 07:52:54.828903 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.398542ms
DB: 2020/08/12 07:52:54.839685 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 17.878729ms
AttachNode: gr1 2020/08/12 07:52:54.839874 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 07:52:54.839943 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 07:52:54.839989 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 07:52:54.840001 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 07:52:54.840456 Left UnmarshalCache(cnv); 
DB: 2020/08/12 07:52:54.847556 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.187579ms
DB: 2020/08/12 07:52:54.851615 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.716574ms
DB: 2020/08/12 07:52:54.857049 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.86502ms
DB: 2020/08/12 07:52:54.862964 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.559211ms
DB: 2020/08/12 07:52:54.867246 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.97761ms
DB: 2020/08/12 07:52:54.871749 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.943625ms
DB: 2020/08/12 07:52:54.878161 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.090276ms
DB: 2020/08/12 07:52:54.884593 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.123182ms
DB: 2020/08/12 07:52:54.888857 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.981956ms
DB: 2020/08/12 07:52:54.893762 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.235971ms
Cache: 2020/08/12 07:52:54.894253 In SetUpredAvailable: pUid, tUID:  rS9GYoWvSty0cLmtye7u7A== rS9GYoWvSty0cLmtye7u7A== A#G#:S
Cache: 2020/08/12 07:52:54.894261 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 07:52:54.898201 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.900919ms
DB: 2020/08/12 07:52:54.904656 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.338587ms
rdfLoader: 2020/08/12 07:53:02.904855 attachnaode: NKdF9qEkRFiT9puc5/duwA==, Y7SQUoSBQhiy5lD/JdYS5Q==, A#G#:S
DB: 2020/08/12 07:53:02.909275 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.289384ms
DB: 2020/08/12 07:53:02.914238 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.861089ms
AttachNode: main 2020/08/12 07:53:02.914257 FetchForUpdate: Y7SQUoSBQhiy5lD/JdYS5Q== sortK A#G#:S 
AttachNode: gr1 2020/08/12 07:53:02.914476 Enter...gr1 FetchForUpdate NKdF9qEkRFiT9puc5/duwA==
AttachNode: gr1 2020/08/12 07:53:02.914501 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 07:53:02.914509 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 07:53:02.914515 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 07:53:02.914520 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 07:53:02.914557 Left UnmarshalCache(cnv); 
DB: 2020/08/12 07:53:02.917159 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.840543ms
AttachNode: main 2020/08/12 07:53:02.917214 FetchForUpdate:  completed..
DB: 2020/08/12 07:53:02.921214 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.945051ms
DB: 2020/08/12 07:53:02.927422 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.046466ms
DB: 2020/08/12 07:53:02.930851 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.374737ms
DB: 2020/08/12 07:53:02.934978 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.015967ms
DB: 2020/08/12 07:53:02.941409 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.370955ms
DB: 2020/08/12 07:53:02.945039 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.562942ms
DB: 2020/08/12 07:53:02.948931 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.814631ms
DB: 2020/08/12 07:53:02.955151 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.140368ms
DB: 2020/08/12 07:53:02.958840 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.635048ms
DB: 2020/08/12 07:53:02.965962 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.049749ms
DB: 2020/08/12 07:53:02.969664 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.617758ms
Cache: 2020/08/12 07:53:02.969694 In SetUpredAvailable: pUid, tUID:  Y7SQUoSBQhiy5lD/JdYS5Q== Y7SQUoSBQhiy5lD/JdYS5Q== A#G#:S
Cache: 2020/08/12 07:53:02.969699 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 07:53:02.973473 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.738127ms
DB: 2020/08/12 07:53:02.977514 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.950322ms
rdfLoader: 2020/08/12 07:53:10.977737 attachnaode: rS9GYoWvSty0cLmtye7u7A==, NKdF9qEkRFiT9puc5/duwA==, A#G#:S
DB: 2020/08/12 07:53:10.981862 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.986946ms
DB: 2020/08/12 07:53:10.985885 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.951958ms
AttachNode: main 2020/08/12 07:53:10.985899 FetchForUpdate: NKdF9qEkRFiT9puc5/duwA== sortK A#G#:S 
AttachNode: gr1 2020/08/12 07:53:10.985926 Enter...gr1 FetchForUpdate rS9GYoWvSty0cLmtye7u7A==
DB:2020/08/12 07:56:59 log.go:18: ===============================================================================
grmgr: 2020/08/12 07:56:59.241860 Powering on...
rdfLoader: 2020/08/12 07:56:59.241904 verify started....xx.
rdfLoader: 2020/08/12 07:56:59.241917 saveNode started......
rdfuuid: 2020/08/12 07:56:59.241929 Powering on...
rdfLoader: 2020/08/12 07:56:59.241936 *************** All started 
rdfLoader: 2020/08/12 07:56:59.248539 .  getType..
rdfLoader: 2020/08/12 07:56:59.248549 node.TyName : [Person]
DB: 2020/08/12 07:56:59.319105 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 70.510471ms
verify: 2020/08/12 07:56:59.319253 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 07:56:59.319299 Find Ty Address
rdfLoader: 2020/08/12 07:56:59.319305 Find Ty Age
rdfLoader: 2020/08/12 07:56:59.319311 Find Ty Cars
rdfLoader: 2020/08/12 07:56:59.319316 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:56:59.319321 Add to SS . [Alfa]
rdfLoader: 2020/08/12 07:56:59.319326 Find Ty DOB
rdfLoader: 2020/08/12 07:56:59.319332 Find Ty Friends
rdfLoader: 2020/08/12 07:56:59.319337 Find Ty Jobs
rdfLoader: 2020/08/12 07:56:59.319341 Find Ty Name
rdfLoader: 2020/08/12 07:56:59.319346 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:56:59.319351 Find Ty Siblings
rdfLoader: 2020/08/12 07:56:59.319360 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:56:59.319368 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:56:59.319373 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:56:59.319400 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:56:59.319427 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:56:59.319452 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319463 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319470 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319476 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319482 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319489 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319496 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:56:59.319500 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:56:59.319508 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003845a0)}
SaveRDFNode: 2020/08/12 07:56:59.319513 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:56:59.319522 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.319526 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.319532 UID received  : eEueVWDqRgiHYzrSF+pagQ==
verify: 2020/08/12 07:56:59.319719 *** Verify running...... 1
rdfLoader: 2020/08/12 07:56:59.319729 .  getType..
rdfLoader: 2020/08/12 07:56:59.319734 node.TyName : [Person]
verify: 2020/08/12 07:56:59.319766 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 07:56:59.319823 Find Ty Address
rdfLoader: 2020/08/12 07:56:59.319829 Find Ty Age
rdfLoader: 2020/08/12 07:56:59.319835 Find Ty Cars
rdfLoader: 2020/08/12 07:56:59.319840 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:56:59.319846 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 07:56:59.319851 Find Ty DOB
rdfLoader: 2020/08/12 07:56:59.319855 Find Ty Friends
rdfLoader: 2020/08/12 07:56:59.319859 Find Ty Jobs
rdfLoader: 2020/08/12 07:56:59.319863 Find Ty Name
rdfLoader: 2020/08/12 07:56:59.319868 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:56:59.319872 Find Ty Siblings
rdfLoader: 2020/08/12 07:56:59.319880 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:56:59.319887 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:56:59.319891 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:56:59.319916 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:56:59.319921 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:56:59.319940 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319947 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319954 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319965 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319971 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319977 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.319983 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:56:59.319987 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:56:59.319993 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000384ae0)}
SaveRDFNode: 2020/08/12 07:56:59.319997 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:56:59.320004 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.320008 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.320014 UID received  : 017siKYjTBu44yo5pHnutA==
verify: 2020/08/12 07:56:59.320329 *** Verify running...... 1
rdfLoader: 2020/08/12 07:56:59.320379 .  getType..
rdfLoader: 2020/08/12 07:56:59.320385 node.TyName : [Person]
verify: 2020/08/12 07:56:59.320403 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 07:56:59.320452 Find Ty Address
rdfLoader: 2020/08/12 07:56:59.320459 Find Ty Age
rdfLoader: 2020/08/12 07:56:59.320464 Find Ty Cars
rdfLoader: 2020/08/12 07:56:59.320470 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 07:56:59.320474 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 07:56:59.320479 Add to SS . [Honda]
rdfLoader: 2020/08/12 07:56:59.320484 Find Ty DOB
rdfLoader: 2020/08/12 07:56:59.320488 Find Ty Friends
rdfLoader: 2020/08/12 07:56:59.320493 Find Ty Jobs
rdfLoader: 2020/08/12 07:56:59.320497 Find Ty Name
rdfLoader: 2020/08/12 07:56:59.320501 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:56:59.320505 Find Ty Siblings
rdfLoader: 2020/08/12 07:56:59.320514 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:56:59.320521 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:56:59.320525 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:56:59.320547 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:56:59.320552 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:56:59.320583 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.320590 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.320596 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.320603 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.320610 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.320617 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.320624 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:56:59.320633 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:56:59.320640 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000385020)}
SaveRDFNode: 2020/08/12 07:56:59.320645 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:56:59.320652 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.320657 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.320662 UID received  : 369S/uy9Q5CkdjjGKETt0g==
verify: 2020/08/12 07:56:59.320830 *** Verify running...... 2
rdfLoader: 2020/08/12 07:56:59.320840 .  getType..
rdfLoader: 2020/08/12 07:56:59.320848 node.TyName : [Person]
verify: 2020/08/12 07:56:59.320886 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 07:56:59.320919 Find Ty Address
rdfLoader: 2020/08/12 07:56:59.320925 Find Ty Age
rdfLoader: 2020/08/12 07:56:59.320931 Find Ty Cars
rdfLoader: 2020/08/12 07:56:59.320936 Add to SS . [Bentley]
rdfLoader: 2020/08/12 07:56:59.320941 Find Ty DOB
rdfLoader: 2020/08/12 07:56:59.320946 Find Ty Friends
rdfLoader: 2020/08/12 07:56:59.320951 Find Ty Jobs
rdfLoader: 2020/08/12 07:56:59.320955 Find Ty Name
rdfLoader: 2020/08/12 07:56:59.320960 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 07:56:59.320964 Find Ty Siblings
rdfLoader: 2020/08/12 07:56:59.320972 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 07:56:59.320978 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 07:56:59.320984 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 07:56:59.321003 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 07:56:59.321008 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 07:56:59.321029 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.321037 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.321044 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.321051 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.321057 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.321063 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 07:56:59.321069 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 07:56:59.321074 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 07:56:59.321080 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000385440)}
SaveRDFNode: 2020/08/12 07:56:59.321085 Waiting for UID ......................
rdfUIDdb: 2020/08/12 07:56:59.321093 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.321097 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.321103 UID received  : fUT1N1JTSDa6OJcmFpNaFg==
verify: 2020/08/12 07:56:59.321291 *** Verify running...... 2
verify: 2020/08/12 07:56:59.321300 verify exited.....
DB: 2020/08/12 07:56:59.326491 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.916828ms
DB: 2020/08/12 07:56:59.331498 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.45792ms
DB: 2020/08/12 07:56:59.335804 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.102849ms
DB: 2020/08/12 07:56:59.339613 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.777321ms
DB: 2020/08/12 07:56:59.343228 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.401094ms
DB: 2020/08/12 07:56:59.347468 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.869735ms
DB: 2020/08/12 07:56:59.348520 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 27.378951ms
DB: 2020/08/12 07:56:59.350546 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.043479ms
DB: 2020/08/12 07:56:59.351977 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.426205ms
DB: 2020/08/12 07:56:59.352471 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.939902ms
DB: 2020/08/12 07:56:59.354136 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.557679ms
DB: 2020/08/12 07:56:59.355187 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.175399ms
DB: 2020/08/12 07:56:59.356387 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.882482ms
DB: 2020/08/12 07:56:59.357318 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.138144ms
SaveRDFNode: 2020/08/12 07:56:59.357346 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/12 07:56:59.357360 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.357369 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.357436 Received UID: X18=
SaveRDFNode: 2020/08/12 07:56:59.357467 a: = db.Item{PKey:[]uint8{0x78, 0x4b, 0x9e, 0x55, 0x60, 0xea, 0x46, 0x8, 0x87, 0x63, 0x3a, 0xd2, 0x17, 0xea, 0x5a, 0x81}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:56:59.359742 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.47908ms
DB: 2020/08/12 07:56:59.360010 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.858869ms
DB: 2020/08/12 07:56:59.360233 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.807442ms
DB: 2020/08/12 07:56:59.360688 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.173025ms
SaveRDFNode: 2020/08/12 07:56:59.360700 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/12 07:56:59.360706 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.360710 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.360715 Received UID: X18=
SaveRDFNode: 2020/08/12 07:56:59.360726 a: = db.Item{PKey:[]uint8{0x78, 0x4b, 0x9e, 0x55, 0x60, 0xea, 0x46, 0x8, 0x87, 0x63, 0x3a, 0xd2, 0x17, 0xea, 0x5a, 0x81}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:56:59.363061 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.284213ms
SaveRDFNode: 2020/08/12 07:56:59.363074 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385020)}
rdfUIDdb: 2020/08/12 07:56:59.363080 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.363084 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.363089 Received UID: X18=
SaveRDFNode: 2020/08/12 07:56:59.363108 a: = db.Item{PKey:[]uint8{0xdf, 0xaf, 0x52, 0xfe, 0xec, 0xbd, 0x43, 0x90, 0xa4, 0x76, 0x38, 0xc6, 0x28, 0x44, 0xed, 0xd2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:56:59.363406 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.366845ms
SaveRDFNode: 2020/08/12 07:56:59.363418 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385440)}
rdfUIDdb: 2020/08/12 07:56:59.363423 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.363427 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.363432 Received UID: X18=
SaveRDFNode: 2020/08/12 07:56:59.363442 a: = db.Item{PKey:[]uint8{0x7d, 0x44, 0xf5, 0x37, 0x52, 0x53, 0x48, 0x36, 0xba, 0x38, 0x97, 0x26, 0x16, 0x93, 0x5a, 0x16}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:56:59.363671 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.40923ms
SaveRDFNode: 2020/08/12 07:56:59.363682 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/12 07:56:59.363687 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.363691 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.363696 Received UID: X18=
SaveRDFNode: 2020/08/12 07:56:59.363705 a: = db.Item{PKey:[]uint8{0xd3, 0x5e, 0xec, 0x88, 0xa6, 0x23, 0x4c, 0x1b, 0xb8, 0xe3, 0x2a, 0x39, 0xa4, 0x79, 0xee, 0xb4}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:56:59.363970 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.216655ms
SaveRDFNode: 2020/08/12 07:56:59.363979 Returned.+++++++++++ No error
DB: 2020/08/12 07:56:59.366610 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.46125ms
SaveRDFNode: 2020/08/12 07:56:59.366634 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385020)}
rdfUIDdb: 2020/08/12 07:56:59.366648 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.366656 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.366677 Received UID: X18=
SaveRDFNode: 2020/08/12 07:56:59.366686 a: = db.Item{PKey:[]uint8{0xdf, 0xaf, 0x52, 0xfe, 0xec, 0xbd, 0x43, 0x90, 0xa4, 0x76, 0x38, 0xc6, 0x28, 0x44, 0xed, 0xd2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:56:59.366978 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.504787ms
SaveRDFNode: 2020/08/12 07:56:59.366988 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385440)}
rdfUIDdb: 2020/08/12 07:56:59.366993 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.366996 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.367001 Received UID: X18=
SaveRDFNode: 2020/08/12 07:56:59.367010 a: = db.Item{PKey:[]uint8{0x7d, 0x44, 0xf5, 0x37, 0x52, 0x53, 0x48, 0x36, 0xba, 0x38, 0x97, 0x26, 0x16, 0x93, 0x5a, 0x16}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:56:59.367308 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.576886ms
SaveRDFNode: 2020/08/12 07:56:59.367319 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/12 07:56:59.367324 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 07:56:59.367328 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 07:56:59.367333 Received UID: X18=
SaveRDFNode: 2020/08/12 07:56:59.367342 a: = db.Item{PKey:[]uint8{0xd3, 0x5e, 0xec, 0x88, 0xa6, 0x23, 0x4c, 0x1b, 0xb8, 0xe3, 0x2a, 0x39, 0xa4, 0x79, 0xee, 0xb4}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 07:56:59.370112 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.35825ms
SaveRDFNode: 2020/08/12 07:56:59.370238 Returned.+++++++++++ No error
DB: 2020/08/12 07:56:59.370481 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.419609ms
SaveRDFNode: 2020/08/12 07:56:59.370489 Returned.+++++++++++ No error
DB: 2020/08/12 07:56:59.370708 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.293695ms
SaveRDFNode: 2020/08/12 07:56:59.370717 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 07:56:59.370724 send on	uuid.AttachCh
rdfLoader: 2020/08/12 07:56:59.370728 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 07:56:59.370736 attachnaode: eEueVWDqRgiHYzrSF+pagQ==, 017siKYjTBu44yo5pHnutA==, A#G#:S
DB: 2020/08/12 07:56:59.375064 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.159157ms
DB: 2020/08/12 07:56:59.382511 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.378735ms
AttachNode: main 2020/08/12 07:56:59.382525 FetchForUpdate: 017siKYjTBu44yo5pHnutA== sortK A#G#:S 
AttachNode: gr1 2020/08/12 07:56:59.382709 Enter...gr1 FetchForUpdate eEueVWDqRgiHYzrSF+pagQ==
DB: 2020/08/12 07:56:59.384967 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.386576ms
AttachNode: main 2020/08/12 07:56:59.385028 FetchForUpdate:  completed..
DB: 2020/08/12 07:56:59.388360 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.273816ms
DB: 2020/08/12 07:56:59.400887 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 18.113975ms
AttachNode: gr1 2020/08/12 07:56:59.401452 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 07:56:59.401832 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 07:56:59.402180 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 07:56:59.402189 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 07:56:59.405598 Left UnmarshalCache(cnv); 
DB:2020/08/12 08:10:36 log.go:18: ===============================================================================
grmgr: 2020/08/12 08:10:36.956074 Powering on...
rdfLoader: 2020/08/12 08:10:36.956469 verify started....xx.
rdfLoader: 2020/08/12 08:10:36.956492 saveNode started......
rdfuuid: 2020/08/12 08:10:36.956502 Powering on...
rdfLoader: 2020/08/12 08:10:36.956521 *************** All started 
rdfLoader: 2020/08/12 08:10:36.963764 .  getType..
rdfLoader: 2020/08/12 08:10:36.963774 node.TyName : [Person]
DB: 2020/08/12 08:10:37.043384 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 79.53285ms
verify: 2020/08/12 08:10:37.043592 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:10:37.043643 Find Ty Address
rdfLoader: 2020/08/12 08:10:37.043650 Find Ty Age
rdfLoader: 2020/08/12 08:10:37.043656 Find Ty Cars
rdfLoader: 2020/08/12 08:10:37.043663 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:10:37.043669 Add to SS . [Alfa]
rdfLoader: 2020/08/12 08:10:37.043675 Find Ty DOB
rdfLoader: 2020/08/12 08:10:37.043680 Find Ty Friends
rdfLoader: 2020/08/12 08:10:37.043686 Find Ty Jobs
rdfLoader: 2020/08/12 08:10:37.043690 Find Ty Name
rdfLoader: 2020/08/12 08:10:37.043696 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:10:37.043701 Find Ty Siblings
rdfLoader: 2020/08/12 08:10:37.043712 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:10:37.043720 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:10:37.043726 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:10:37.043754 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:10:37.043770 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:10:37.043796 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.043803 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.043811 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.043817 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.043823 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.043829 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.043836 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:10:37.043841 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:10:37.043849 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000387680)}
SaveRDFNode: 2020/08/12 08:10:37.043854 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:10:37.043863 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.043868 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.043874 UID received  : RNnuZtZ7TqOnJELMds5T4Q==
verify: 2020/08/12 08:10:37.044120 *** Verify running...... 1
rdfLoader: 2020/08/12 08:10:37.044130 .  getType..
rdfLoader: 2020/08/12 08:10:37.044138 node.TyName : [Person]
verify: 2020/08/12 08:10:37.044172 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:10:37.044209 Find Ty Address
rdfLoader: 2020/08/12 08:10:37.044215 Find Ty Age
rdfLoader: 2020/08/12 08:10:37.044220 Find Ty Cars
rdfLoader: 2020/08/12 08:10:37.044226 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:10:37.044231 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 08:10:37.044235 Find Ty DOB
rdfLoader: 2020/08/12 08:10:37.044240 Find Ty Friends
rdfLoader: 2020/08/12 08:10:37.044244 Find Ty Jobs
rdfLoader: 2020/08/12 08:10:37.044249 Find Ty Name
rdfLoader: 2020/08/12 08:10:37.044254 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:10:37.044259 Find Ty Siblings
rdfLoader: 2020/08/12 08:10:37.044267 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:10:37.044274 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:10:37.044279 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:10:37.044302 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:10:37.044310 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:10:37.044330 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.044336 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.044361 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.044367 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.044373 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.044378 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.044384 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:10:37.044389 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:10:37.044395 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000387a40)}
SaveRDFNode: 2020/08/12 08:10:37.044400 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:10:37.044407 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.044411 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.044416 UID received  : wDsNHhryRwKsRgJsEOWEyg==
verify: 2020/08/12 08:10:37.046142 *** Verify running...... 1
rdfLoader: 2020/08/12 08:10:37.049213 .  getType..
rdfLoader: 2020/08/12 08:10:37.049223 node.TyName : [Person]
verify: 2020/08/12 08:10:37.051002 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:10:37.051699 Find Ty Address
rdfLoader: 2020/08/12 08:10:37.051709 Find Ty Age
rdfLoader: 2020/08/12 08:10:37.051715 Find Ty Cars
rdfLoader: 2020/08/12 08:10:37.051721 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 08:10:37.051725 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 08:10:37.051730 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:10:37.051734 Find Ty DOB
rdfLoader: 2020/08/12 08:10:37.051738 Find Ty Friends
rdfLoader: 2020/08/12 08:10:37.051742 Find Ty Jobs
rdfLoader: 2020/08/12 08:10:37.051746 Find Ty Name
rdfLoader: 2020/08/12 08:10:37.051750 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:10:37.051754 Find Ty Siblings
rdfLoader: 2020/08/12 08:10:37.051764 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:10:37.051772 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:10:37.051776 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:10:37.051803 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:10:37.051807 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:10:37.051829 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.051835 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.051859 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.051866 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.051871 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.051883 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.051889 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:10:37.051893 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:10:37.051899 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000016840)}
SaveRDFNode: 2020/08/12 08:10:37.051903 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:10:37.051910 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.051914 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.051920 UID received  : pvn9RfoxQ/macHL+7UBLtQ==
verify: 2020/08/12 08:10:37.052303 *** Verify running...... 2
rdfLoader: 2020/08/12 08:10:37.052311 .  getType..
rdfLoader: 2020/08/12 08:10:37.052315 node.TyName : [Person]
verify: 2020/08/12 08:10:37.054418 *** Verify waiting on umarshal ch............................................. 2
DB: 2020/08/12 08:10:37.055034 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.129248ms
rdfLoader: 2020/08/12 08:10:37.055352 Find Ty Address
rdfLoader: 2020/08/12 08:10:37.055360 Find Ty Age
rdfLoader: 2020/08/12 08:10:37.055367 Find Ty Cars
rdfLoader: 2020/08/12 08:10:37.055372 Add to SS . [Bentley]
rdfLoader: 2020/08/12 08:10:37.055376 Find Ty DOB
rdfLoader: 2020/08/12 08:10:37.055380 Find Ty Friends
rdfLoader: 2020/08/12 08:10:37.055384 Find Ty Jobs
rdfLoader: 2020/08/12 08:10:37.055388 Find Ty Name
rdfLoader: 2020/08/12 08:10:37.055392 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:10:37.055395 Find Ty Siblings
rdfLoader: 2020/08/12 08:10:37.055404 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:10:37.055410 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:10:37.055415 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:10:37.055449 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:10:37.055454 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:10:37.055476 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.055541 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.055552 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.055560 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.055566 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.055572 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:10:37.055577 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:10:37.055597 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:10:37.055605 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000017bc0)}
SaveRDFNode: 2020/08/12 08:10:37.055609 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:10:37.055618 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.055627 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.055633 UID received  : EXVhnS0uSiSRsYkLk5TMCw==
verify: 2020/08/12 08:10:37.056052 *** Verify running...... 2
verify: 2020/08/12 08:10:37.056060 verify exited.....
DB: 2020/08/12 08:10:37.060030 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.587483ms
DB: 2020/08/12 08:10:37.065385 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.315886ms
DB: 2020/08/12 08:10:37.070846 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.42827ms
DB: 2020/08/12 08:10:37.075887 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.002028ms
DB: 2020/08/12 08:10:37.076346 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 24.394564ms
DB: 2020/08/12 08:10:37.081166 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.768291ms
DB: 2020/08/12 08:10:37.084141 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 28.442597ms
DB: 2020/08/12 08:10:37.085854 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.654587ms
DB: 2020/08/12 08:10:37.086929 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 21.493008ms
DB: 2020/08/12 08:10:37.089154 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.981943ms
DB: 2020/08/12 08:10:37.090797 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.904002ms
DB: 2020/08/12 08:10:37.091811 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.79593ms
DB: 2020/08/12 08:10:37.094329 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.096322ms
DB: 2020/08/12 08:10:37.095811 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.980337ms
SaveRDFNode: 2020/08/12 08:10:37.095825 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016840)}
rdfUIDdb: 2020/08/12 08:10:37.095833 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.095837 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.095843 Received UID: X18=
SaveRDFNode: 2020/08/12 08:10:37.095873 a: = db.Item{PKey:[]uint8{0xa6, 0xf9, 0xfd, 0x45, 0xfa, 0x31, 0x43, 0xf9, 0x9a, 0x70, 0x72, 0xfe, 0xed, 0x40, 0x4b, 0xb5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:10:37.096732 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.627944ms
DB: 2020/08/12 08:10:37.097211 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.992476ms
SaveRDFNode: 2020/08/12 08:10:37.097224 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387680)}
rdfUIDdb: 2020/08/12 08:10:37.097230 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.097234 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.097240 Received UID: X18=
SaveRDFNode: 2020/08/12 08:10:37.097250 a: = db.Item{PKey:[]uint8{0x44, 0xd9, 0xee, 0x66, 0xd6, 0x7b, 0x4e, 0xa3, 0xa7, 0x24, 0x42, 0xcc, 0x76, 0xce, 0x53, 0xe1}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:10:37.099469 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.06158ms
DB: 2020/08/12 08:10:37.100673 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.752036ms
SaveRDFNode: 2020/08/12 08:10:37.100685 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016840)}
rdfUIDdb: 2020/08/12 08:10:37.100699 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.100703 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.100708 Received UID: X18=
SaveRDFNode: 2020/08/12 08:10:37.100732 a: = db.Item{PKey:[]uint8{0xa6, 0xf9, 0xfd, 0x45, 0xfa, 0x31, 0x43, 0xf9, 0x9a, 0x70, 0x72, 0xfe, 0xed, 0x40, 0x4b, 0xb5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:10:37.101577 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.74317ms
SaveRDFNode: 2020/08/12 08:10:37.101590 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387a40)}
rdfUIDdb: 2020/08/12 08:10:37.101596 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.101600 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.101606 Received UID: X18=
SaveRDFNode: 2020/08/12 08:10:37.101616 a: = db.Item{PKey:[]uint8{0xc0, 0x3b, 0xd, 0x1e, 0x1a, 0xf2, 0x47, 0x2, 0xac, 0x46, 0x2, 0x6c, 0x10, 0xe5, 0x84, 0xca}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:10:37.101981 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.687392ms
SaveRDFNode: 2020/08/12 08:10:37.101993 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387680)}
rdfUIDdb: 2020/08/12 08:10:37.101998 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.102002 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.102007 Received UID: X18=
SaveRDFNode: 2020/08/12 08:10:37.102017 a: = db.Item{PKey:[]uint8{0x44, 0xd9, 0xee, 0x66, 0xd6, 0x7b, 0x4e, 0xa3, 0xa7, 0x24, 0x42, 0xcc, 0x76, 0xce, 0x53, 0xe1}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:10:37.104600 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.044929ms
SaveRDFNode: 2020/08/12 08:10:37.104612 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017bc0)}
rdfUIDdb: 2020/08/12 08:10:37.104617 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.104621 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.104627 Received UID: X18=
SaveRDFNode: 2020/08/12 08:10:37.104636 a: = db.Item{PKey:[]uint8{0x11, 0x75, 0x61, 0x9d, 0x2d, 0x2e, 0x4a, 0x24, 0x91, 0xb1, 0x89, 0xb, 0x93, 0x94, 0xcc, 0xb}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:10:37.105676 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.879823ms
SaveRDFNode: 2020/08/12 08:10:37.105685 Returned.+++++++++++ No error
DB: 2020/08/12 08:10:37.106524 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.869445ms
SaveRDFNode: 2020/08/12 08:10:37.106572 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387a40)}
rdfUIDdb: 2020/08/12 08:10:37.106586 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.106594 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.106607 Received UID: X18=
SaveRDFNode: 2020/08/12 08:10:37.106663 a: = db.Item{PKey:[]uint8{0xc0, 0x3b, 0xd, 0x1e, 0x1a, 0xf2, 0x47, 0x2, 0xac, 0x46, 0x2, 0x6c, 0x10, 0xe5, 0x84, 0xca}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:10:37.107020 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.957126ms
SaveRDFNode: 2020/08/12 08:10:37.107029 Returned.+++++++++++ No error
DB: 2020/08/12 08:10:37.109664 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.994005ms
SaveRDFNode: 2020/08/12 08:10:37.109868 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017bc0)}
rdfUIDdb: 2020/08/12 08:10:37.109879 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:10:37.109883 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:10:37.109895 Received UID: X18=
SaveRDFNode: 2020/08/12 08:10:37.109909 a: = db.Item{PKey:[]uint8{0x11, 0x75, 0x61, 0x9d, 0x2d, 0x2e, 0x4a, 0x24, 0x91, 0xb1, 0x89, 0xb, 0x93, 0x94, 0xcc, 0xb}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:10:37.111539 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.819349ms
SaveRDFNode: 2020/08/12 08:10:37.111548 Returned.+++++++++++ No error
DB: 2020/08/12 08:10:37.114728 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.786281ms
SaveRDFNode: 2020/08/12 08:10:37.114738 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 08:10:37.114745 send on	uuid.AttachCh
rdfLoader: 2020/08/12 08:10:37.114749 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 08:10:37.114757 attachnaode: RNnuZtZ7TqOnJELMds5T4Q==, wDsNHhryRwKsRgJsEOWEyg==, A#G#:S
DB: 2020/08/12 08:10:37.120788 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.072148ms
DB: 2020/08/12 08:10:37.128780 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.925097ms
AttachNode: main 2020/08/12 08:10:37.128797 FetchForUpdate: wDsNHhryRwKsRgJsEOWEyg== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:10:37.129002 Enter...gr1 FetchForUpdate RNnuZtZ7TqOnJELMds5T4Q==
DB: 2020/08/12 08:10:37.132946 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.067558ms
AttachNode: main 2020/08/12 08:10:37.133839 FetchForUpdate:  completed..
DB: 2020/08/12 08:10:37.140270 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.728906ms
DB: 2020/08/12 08:10:37.149193 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 20.110953ms
AttachNode: gr1 2020/08/12 08:10:37.149317 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:10:37.149342 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:10:37.149350 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:10:37.149355 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 08:10:37.149419 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 08:10:37.149424 target read from xch... 
AttachNode: gr1 2020/08/12 08:10:37.149429 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:10:37.155303 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.815118ms
DB: 2020/08/12 08:10:37.162457 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.957419ms
DB: 2020/08/12 08:10:37.170139 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.28446ms
DB: 2020/08/12 08:10:37.177489 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.896802ms
DB: 2020/08/12 08:10:37.182743 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.932227ms
DB: 2020/08/12 08:10:37.188404 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.339407ms
DB: 2020/08/12 08:10:37.196552 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.802907ms
DB: 2020/08/12 08:10:37.203135 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.254945ms
DB: 2020/08/12 08:10:37.212694 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 9.282964ms
DB:2020/08/12 08:13:53 log.go:18: ===============================================================================
grmgr: 2020/08/12 08:13:53.101799 Powering on...
rdfLoader: 2020/08/12 08:13:53.101845 verify started....xx.
rdfLoader: 2020/08/12 08:13:53.101860 saveNode started......
rdfuuid: 2020/08/12 08:13:53.101870 Powering on...
rdfLoader: 2020/08/12 08:13:53.101884 *************** All started 
rdfLoader: 2020/08/12 08:13:53.115072 .  getType..
rdfLoader: 2020/08/12 08:13:53.115090 node.TyName : [Person]
DB: 2020/08/12 08:13:53.189544 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 74.402961ms
verify: 2020/08/12 08:13:53.189714 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:13:53.189759 Find Ty Address
rdfLoader: 2020/08/12 08:13:53.189765 Find Ty Age
rdfLoader: 2020/08/12 08:13:53.189772 Find Ty Cars
rdfLoader: 2020/08/12 08:13:53.189778 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:13:53.189783 Add to SS . [Alfa]
rdfLoader: 2020/08/12 08:13:53.189789 Find Ty DOB
rdfLoader: 2020/08/12 08:13:53.189795 Find Ty Friends
rdfLoader: 2020/08/12 08:13:53.189799 Find Ty Jobs
rdfLoader: 2020/08/12 08:13:53.189804 Find Ty Name
rdfLoader: 2020/08/12 08:13:53.189809 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:13:53.189814 Find Ty Siblings
rdfLoader: 2020/08/12 08:13:53.189825 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:13:53.189833 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:13:53.189839 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:13:53.189868 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:13:53.189874 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:13:53.189901 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.189908 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.189915 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.189922 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.189929 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.189935 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.189942 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:13:53.189947 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:13:53.189955 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000017440)}
SaveRDFNode: 2020/08/12 08:13:53.189960 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:13:53.189970 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.189974 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.189981 UID received  : Kbe/7zNoTE+gF/uP/maqCg==
verify: 2020/08/12 08:13:53.190226 *** Verify running...... 1
rdfLoader: 2020/08/12 08:13:53.190236 .  getType..
rdfLoader: 2020/08/12 08:13:53.190241 node.TyName : [Person]
verify: 2020/08/12 08:13:53.190269 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:13:53.190314 Find Ty Address
rdfLoader: 2020/08/12 08:13:53.190319 Find Ty Age
rdfLoader: 2020/08/12 08:13:53.190325 Find Ty Cars
rdfLoader: 2020/08/12 08:13:53.190341 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:13:53.190346 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 08:13:53.190351 Find Ty DOB
rdfLoader: 2020/08/12 08:13:53.190356 Find Ty Friends
rdfLoader: 2020/08/12 08:13:53.190360 Find Ty Jobs
rdfLoader: 2020/08/12 08:13:53.190365 Find Ty Name
rdfLoader: 2020/08/12 08:13:53.190370 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:13:53.190374 Find Ty Siblings
rdfLoader: 2020/08/12 08:13:53.190383 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:13:53.190390 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:13:53.190395 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:13:53.190421 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:13:53.190426 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:13:53.190446 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.190454 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.190461 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.190468 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.190474 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.190480 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.190487 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:13:53.190491 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:13:53.190497 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017920)}
SaveRDFNode: 2020/08/12 08:13:53.190502 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:13:53.190509 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.190514 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.190520 UID received  : uMrNOJNnS1uehku4Tjqslw==
verify: 2020/08/12 08:13:53.190886 *** Verify running...... 1
rdfLoader: 2020/08/12 08:13:53.190942 .  getType..
rdfLoader: 2020/08/12 08:13:53.190948 node.TyName : [Person]
verify: 2020/08/12 08:13:53.190967 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:13:53.191237 Find Ty Address
rdfLoader: 2020/08/12 08:13:53.191247 Find Ty Age
rdfLoader: 2020/08/12 08:13:53.191254 Find Ty Cars
rdfLoader: 2020/08/12 08:13:53.191260 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 08:13:53.191267 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 08:13:53.191277 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:13:53.191283 Find Ty DOB
rdfLoader: 2020/08/12 08:13:53.191288 Find Ty Friends
rdfLoader: 2020/08/12 08:13:53.191294 Find Ty Jobs
rdfLoader: 2020/08/12 08:13:53.191299 Find Ty Name
rdfLoader: 2020/08/12 08:13:53.191304 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:13:53.191313 Find Ty Siblings
rdfLoader: 2020/08/12 08:13:53.191323 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:13:53.191350 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:13:53.191361 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:13:53.191656 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:13:53.191677 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:13:53.191855 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.191867 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.191874 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.191885 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.191892 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.191902 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.191909 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:13:53.191914 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:13:53.191920 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0003842a0)}
SaveRDFNode: 2020/08/12 08:13:53.191925 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:13:53.192087 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.192093 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.192100 UID received  : OSWOR+QwRByxnVvgw3Zz0g==
verify: 2020/08/12 08:13:53.192315 *** Verify running...... 2
rdfLoader: 2020/08/12 08:13:53.192324 .  getType..
rdfLoader: 2020/08/12 08:13:53.192330 node.TyName : [Person]
verify: 2020/08/12 08:13:53.192356 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:13:53.192500 Find Ty Address
rdfLoader: 2020/08/12 08:13:53.192507 Find Ty Age
rdfLoader: 2020/08/12 08:13:53.192518 Find Ty Cars
rdfLoader: 2020/08/12 08:13:53.192524 Add to SS . [Bentley]
rdfLoader: 2020/08/12 08:13:53.192529 Find Ty DOB
rdfLoader: 2020/08/12 08:13:53.192535 Find Ty Friends
rdfLoader: 2020/08/12 08:13:53.192539 Find Ty Jobs
rdfLoader: 2020/08/12 08:13:53.192548 Find Ty Name
rdfLoader: 2020/08/12 08:13:53.192553 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:13:53.192558 Find Ty Siblings
rdfLoader: 2020/08/12 08:13:53.192566 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:13:53.192579 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:13:53.192585 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:13:53.192619 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:13:53.192630 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:13:53.192947 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.192962 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.192973 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.192981 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.192992 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.192999 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:13:53.193006 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:13:53.193015 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:13:53.193022 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0003849c0)}
SaveRDFNode: 2020/08/12 08:13:53.193027 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:13:53.193037 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.193046 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.193058 UID received  : L7k7pMV6TTyCUvi/WoNJXg==
verify: 2020/08/12 08:13:53.193237 *** Verify running...... 2
verify: 2020/08/12 08:13:53.193252 verify exited.....
DB: 2020/08/12 08:13:53.200158 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.144344ms
DB: 2020/08/12 08:13:53.205288 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 14.741891ms
DB: 2020/08/12 08:13:53.210452 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.315822ms
DB: 2020/08/12 08:13:53.215751 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.886647ms
DB: 2020/08/12 08:13:53.224097 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 23.897094ms
DB: 2020/08/12 08:13:53.225141 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 32.039578ms
DB: 2020/08/12 08:13:53.226144 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.822365ms
DB: 2020/08/12 08:13:53.229028 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.893902ms
DB: 2020/08/12 08:13:53.230210 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.039014ms
DB: 2020/08/12 08:13:53.231004 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.653563ms
DB: 2020/08/12 08:13:53.233891 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.831088ms
DB: 2020/08/12 08:13:53.234989 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.747832ms
DB: 2020/08/12 08:13:53.235563 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 19.775884ms
DB: 2020/08/12 08:13:53.235825 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.790903ms
DB: 2020/08/12 08:13:53.238715 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.793031ms
SaveRDFNode: 2020/08/12 08:13:53.238730 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 08:13:53.238747 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.238752 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.238758 Received UID: X18=
SaveRDFNode: 2020/08/12 08:13:53.238772 a: = db.Item{PKey:[]uint8{0x29, 0xb7, 0xbf, 0xef, 0x33, 0x68, 0x4c, 0x4f, 0xa0, 0x17, 0xfb, 0x8f, 0xfe, 0x66, 0xaa, 0xa}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:13:53.239824 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.805315ms
DB: 2020/08/12 08:13:53.240381 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.786436ms
DB: 2020/08/12 08:13:53.240809 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.951445ms
SaveRDFNode: 2020/08/12 08:13:53.240925 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 08:13:53.240937 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.240941 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.240947 Received UID: X18=
SaveRDFNode: 2020/08/12 08:13:53.240958 a: = db.Item{PKey:[]uint8{0xb8, 0xca, 0xcd, 0x38, 0x93, 0x67, 0x4b, 0x5b, 0x9e, 0x86, 0x4b, 0xb8, 0x4e, 0x3a, 0xac, 0x97}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:13:53.243599 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.79035ms
SaveRDFNode: 2020/08/12 08:13:53.243615 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 08:13:53.243622 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.243626 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.243632 Received UID: X18=
SaveRDFNode: 2020/08/12 08:13:53.243643 a: = db.Item{PKey:[]uint8{0x29, 0xb7, 0xbf, 0xef, 0x33, 0x68, 0x4c, 0x4f, 0xa0, 0x17, 0xfb, 0x8f, 0xfe, 0x66, 0xaa, 0xa}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:13:53.244769 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.915382ms
SaveRDFNode: 2020/08/12 08:13:53.244782 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003849c0)}
rdfUIDdb: 2020/08/12 08:13:53.244788 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.244792 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.244797 Received UID: X18=
SaveRDFNode: 2020/08/12 08:13:53.244807 a: = db.Item{PKey:[]uint8{0x2f, 0xb9, 0x3b, 0xa4, 0xc5, 0x7a, 0x4d, 0x3c, 0x82, 0x52, 0xf8, 0xbf, 0x5a, 0x83, 0x49, 0x5e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:13:53.245267 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.686388ms
SaveRDFNode: 2020/08/12 08:13:53.245280 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003842a0)}
rdfUIDdb: 2020/08/12 08:13:53.245287 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.245291 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.245296 Received UID: X18=
SaveRDFNode: 2020/08/12 08:13:53.245306 a: = db.Item{PKey:[]uint8{0x39, 0x25, 0x8e, 0x47, 0xe4, 0x30, 0x44, 0x1c, 0xb1, 0x9d, 0x5b, 0xe0, 0xc3, 0x76, 0x73, 0xd2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:13:53.245830 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.841359ms
SaveRDFNode: 2020/08/12 08:13:53.245842 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 08:13:53.245847 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.245851 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.245857 Received UID: X18=
SaveRDFNode: 2020/08/12 08:13:53.245866 a: = db.Item{PKey:[]uint8{0xb8, 0xca, 0xcd, 0x38, 0x93, 0x67, 0x4b, 0x5b, 0x9e, 0x86, 0x4b, 0xb8, 0x4e, 0x3a, 0xac, 0x97}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:13:53.248628 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.952292ms
SaveRDFNode: 2020/08/12 08:13:53.248637 Returned.+++++++++++ No error
DB: 2020/08/12 08:13:53.250463 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.12422ms
SaveRDFNode: 2020/08/12 08:13:53.250478 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003842a0)}
rdfUIDdb: 2020/08/12 08:13:53.250507 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.250511 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.250517 Received UID: X18=
SaveRDFNode: 2020/08/12 08:13:53.250529 a: = db.Item{PKey:[]uint8{0x39, 0x25, 0x8e, 0x47, 0xe4, 0x30, 0x44, 0x1c, 0xb1, 0x9d, 0x5b, 0xe0, 0xc3, 0x76, 0x73, 0xd2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:13:53.250793 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.95593ms
SaveRDFNode: 2020/08/12 08:13:53.250804 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003849c0)}
rdfUIDdb: 2020/08/12 08:13:53.250809 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:13:53.250831 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:13:53.250837 Received UID: X18=
SaveRDFNode: 2020/08/12 08:13:53.250847 a: = db.Item{PKey:[]uint8{0x2f, 0xb9, 0x3b, 0xa4, 0xc5, 0x7a, 0x4d, 0x3c, 0x82, 0x52, 0xf8, 0xbf, 0x5a, 0x83, 0x49, 0x5e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:13:53.251106 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.205842ms
SaveRDFNode: 2020/08/12 08:13:53.251115 Returned.+++++++++++ No error
DB: 2020/08/12 08:13:53.255499 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.936639ms
SaveRDFNode: 2020/08/12 08:13:53.255512 Returned.+++++++++++ No error
DB: 2020/08/12 08:13:53.255722 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.847167ms
SaveRDFNode: 2020/08/12 08:13:53.255734 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 08:13:53.255741 send on	uuid.AttachCh
rdfLoader: 2020/08/12 08:13:53.255745 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 08:13:53.255753 attachnaode: Kbe/7zNoTE+gF/uP/maqCg==, uMrNOJNnS1uehku4Tjqslw==, A#G#:S
DB: 2020/08/12 08:13:53.266266 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.962608ms
DB: 2020/08/12 08:13:53.274107 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.758248ms
AttachNode: main 2020/08/12 08:13:53.274126 FetchForUpdate: uMrNOJNnS1uehku4Tjqslw== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:13:53.274343 Enter...gr1 FetchForUpdate Kbe/7zNoTE+gF/uP/maqCg==
DB: 2020/08/12 08:13:53.278349 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.158416ms
AttachNode: main 2020/08/12 08:13:53.278419 FetchForUpdate:  completed..
DB: 2020/08/12 08:13:53.283363 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.886421ms
DB: 2020/08/12 08:13:53.294587 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 20.159974ms
AttachNode: gr1 2020/08/12 08:13:53.294704 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:13:53.294712 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:13:53.294719 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:13:53.294723 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 08:13:53.294776 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 08:13:53.294782 target read from xch... 
AttachNode: gr1 2020/08/12 08:13:53.294795 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:13:53.301331 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.46726ms
DB: 2020/08/12 08:13:53.306163 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.777005ms
DB: 2020/08/12 08:13:53.312294 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.019481ms
DB: 2020/08/12 08:13:53.318943 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.585204ms
DB: 2020/08/12 08:13:53.323925 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.921713ms
DB: 2020/08/12 08:13:53.329209 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.21614ms
DB: 2020/08/12 08:13:53.335775 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.502469ms
DB: 2020/08/12 08:13:53.340726 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.89424ms
DB: 2020/08/12 08:13:53.346127 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.076625ms
AttachNode: gr1 2020/08/12 08:13:53.346138 unSet parent lock in propgatechilddata...2
DB: 2020/08/12 08:13:53.351040 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.829582ms
Cache: 2020/08/12 08:13:53.351083 In SetUpredAvailable: pUid, tUID:  uMrNOJNnS1uehku4Tjqslw== uMrNOJNnS1uehku4Tjqslw== A#G#:S
Cache: 2020/08/12 08:13:53.351090 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 08:13:53.356273 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.13125ms
DB: 2020/08/12 08:13:53.364152 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.790225ms
rdfLoader: 2020/08/12 08:13:53.364170 attachnaode: Kbe/7zNoTE+gF/uP/maqCg==, OSWOR+QwRByxnVvgw3Zz0g==, A#G#:S
DB: 2020/08/12 08:13:53.369148 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.92339ms
DB: 2020/08/12 08:13:53.373924 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.602522ms
AttachNode: main 2020/08/12 08:13:53.373938 FetchForUpdate: OSWOR+QwRByxnVvgw3Zz0g== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:13:53.374468 Enter...gr1 FetchForUpdate Kbe/7zNoTE+gF/uP/maqCg==
AttachNode: gr1 2020/08/12 08:13:53.374825 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:13:53.374912 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:13:53.374958 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:13:53.374965 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 08:13:53.375881 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 08:13:53.378376 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.056994ms
AttachNode: main 2020/08/12 08:13:53.378432 FetchForUpdate:  completed..
DB: 2020/08/12 08:13:53.383612 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.928117ms
AttachNode: gr1 2020/08/12 08:13:53.383894 target read from xch... 
AttachNode: gr1 2020/08/12 08:13:53.383901 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:13:53.390737 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.664395ms
DB: 2020/08/12 08:13:53.395506 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.710444ms
DB: 2020/08/12 08:13:53.400751 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.126019ms
DB: 2020/08/12 08:13:53.407572 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.700817ms
DB: 2020/08/12 08:13:53.412482 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.808025ms
DB: 2020/08/12 08:13:53.417519 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.956945ms
DB: 2020/08/12 08:13:53.423870 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.267998ms
DB: 2020/08/12 08:13:53.428680 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.721626ms
DB: 2020/08/12 08:13:53.434110 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.343289ms
AttachNode: gr1 2020/08/12 08:13:53.434148 unSet parent lock in propgatechilddata...2
DB: 2020/08/12 08:13:53.439652 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.112197ms
Cache: 2020/08/12 08:13:53.439683 In SetUpredAvailable: pUid, tUID:  OSWOR+QwRByxnVvgw3Zz0g== OSWOR+QwRByxnVvgw3Zz0g== A#G#:S
Cache: 2020/08/12 08:13:53.439688 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 08:13:53.444674 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.949996ms
DB: 2020/08/12 08:13:53.449811 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.028343ms
rdfLoader: 2020/08/12 08:13:53.449841 attachnaode: uMrNOJNnS1uehku4Tjqslw==, Kbe/7zNoTE+gF/uP/maqCg==, A#G#:S
DB: 2020/08/12 08:13:53.454830 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.932391ms
DB: 2020/08/12 08:13:53.459602 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.670826ms
AttachNode: main 2020/08/12 08:13:53.459617 FetchForUpdate: Kbe/7zNoTE+gF/uP/maqCg== sortK A#G#:S 
AttachNode: main 2020/08/12 08:13:53.459654 FetchForUpdate:  completed..
AttachNode: gr1 2020/08/12 08:13:53.459950 Enter...gr1 FetchForUpdate uMrNOJNnS1uehku4Tjqslw==
DB: 2020/08/12 08:13:53.464888 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.140217ms
DB:2020/08/12 08:26:19 log.go:18: ===============================================================================
grmgr: 2020/08/12 08:26:19.446894 Powering on...
rdfLoader: 2020/08/12 08:26:19.446939 verify started....xx.
rdfLoader: 2020/08/12 08:26:19.446954 saveNode started......
rdfuuid: 2020/08/12 08:26:19.446964 Powering on...
rdfLoader: 2020/08/12 08:26:19.446970 *************** All started 
rdfLoader: 2020/08/12 08:26:19.454198 .  getType..
rdfLoader: 2020/08/12 08:26:19.454207 node.TyName : [Person]
DB: 2020/08/12 08:26:19.532060 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 77.80608ms
verify: 2020/08/12 08:26:19.532232 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:26:19.532276 Find Ty Address
rdfLoader: 2020/08/12 08:26:19.532283 Find Ty Age
rdfLoader: 2020/08/12 08:26:19.532289 Find Ty Cars
rdfLoader: 2020/08/12 08:26:19.532295 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:26:19.532300 Add to SS . [Alfa]
rdfLoader: 2020/08/12 08:26:19.532305 Find Ty DOB
rdfLoader: 2020/08/12 08:26:19.532310 Find Ty Friends
rdfLoader: 2020/08/12 08:26:19.532315 Find Ty Jobs
rdfLoader: 2020/08/12 08:26:19.532320 Find Ty Name
rdfLoader: 2020/08/12 08:26:19.532325 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:26:19.532329 Find Ty Siblings
rdfLoader: 2020/08/12 08:26:19.532339 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:26:19.532347 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:26:19.532353 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:26:19.532404 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:26:19.532411 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:26:19.532436 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532443 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532450 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532456 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532462 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532468 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532475 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:26:19.532479 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:26:19.532487 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0007cc1e0)}
SaveRDFNode: 2020/08/12 08:26:19.532492 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:26:19.532501 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.532506 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.532512 UID received  : p/hg/M40Q5u+5Wj7VZTIUg==
verify: 2020/08/12 08:26:19.532714 *** Verify running...... 1
rdfLoader: 2020/08/12 08:26:19.532723 .  getType..
rdfLoader: 2020/08/12 08:26:19.532728 node.TyName : [Person]
verify: 2020/08/12 08:26:19.532748 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:26:19.532808 Find Ty Address
rdfLoader: 2020/08/12 08:26:19.532815 Find Ty Age
rdfLoader: 2020/08/12 08:26:19.532821 Find Ty Cars
rdfLoader: 2020/08/12 08:26:19.532827 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:26:19.532832 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 08:26:19.532837 Find Ty DOB
rdfLoader: 2020/08/12 08:26:19.532842 Find Ty Friends
rdfLoader: 2020/08/12 08:26:19.532846 Find Ty Jobs
rdfLoader: 2020/08/12 08:26:19.532851 Find Ty Name
rdfLoader: 2020/08/12 08:26:19.532856 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:26:19.532861 Find Ty Siblings
rdfLoader: 2020/08/12 08:26:19.532869 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:26:19.532877 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:26:19.532882 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:26:19.532909 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:26:19.532914 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:26:19.532940 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532948 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532955 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532962 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532968 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532974 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.532980 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:26:19.532985 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:26:19.532991 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0007cc5a0)}
SaveRDFNode: 2020/08/12 08:26:19.532996 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:26:19.533003 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.533008 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.533014 UID received  : wJ9HOrXeTPmhUHDqLCxzyw==
verify: 2020/08/12 08:26:19.534601 *** Verify running...... 1
rdfLoader: 2020/08/12 08:26:19.536624 .  getType..
rdfLoader: 2020/08/12 08:26:19.536634 node.TyName : [Person]
verify: 2020/08/12 08:26:19.536982 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:26:19.537729 Find Ty Address
rdfLoader: 2020/08/12 08:26:19.537740 Find Ty Age
rdfLoader: 2020/08/12 08:26:19.537746 Find Ty Cars
rdfLoader: 2020/08/12 08:26:19.537751 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 08:26:19.537756 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 08:26:19.537760 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:26:19.537764 Find Ty DOB
rdfLoader: 2020/08/12 08:26:19.537769 Find Ty Friends
rdfLoader: 2020/08/12 08:26:19.537773 Find Ty Jobs
rdfLoader: 2020/08/12 08:26:19.537777 Find Ty Name
rdfLoader: 2020/08/12 08:26:19.537781 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:26:19.537785 Find Ty Siblings
rdfLoader: 2020/08/12 08:26:19.537795 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:26:19.537801 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:26:19.537806 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:26:19.537833 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:26:19.537837 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:26:19.537858 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.537864 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.537888 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.537895 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.537906 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.537912 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.537918 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:26:19.537922 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:26:19.537928 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0007cccc0)}
SaveRDFNode: 2020/08/12 08:26:19.537932 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:26:19.537940 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.537944 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.537949 UID received  : bgvPsgvQRxagbt1wfqoSJg==
verify: 2020/08/12 08:26:19.538302 *** Verify running...... 2
rdfLoader: 2020/08/12 08:26:19.538310 .  getType..
rdfLoader: 2020/08/12 08:26:19.538323 node.TyName : [Person]
verify: 2020/08/12 08:26:19.538807 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:26:19.539328 Find Ty Address
rdfLoader: 2020/08/12 08:26:19.539337 Find Ty Age
rdfLoader: 2020/08/12 08:26:19.539343 Find Ty Cars
rdfLoader: 2020/08/12 08:26:19.539348 Add to SS . [Bentley]
rdfLoader: 2020/08/12 08:26:19.539353 Find Ty DOB
rdfLoader: 2020/08/12 08:26:19.539374 Find Ty Friends
rdfLoader: 2020/08/12 08:26:19.539378 Find Ty Jobs
rdfLoader: 2020/08/12 08:26:19.539381 Find Ty Name
rdfLoader: 2020/08/12 08:26:19.539386 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:26:19.539390 Find Ty Siblings
rdfLoader: 2020/08/12 08:26:19.539398 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:26:19.539405 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:26:19.539410 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:26:19.539431 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:26:19.539448 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:26:19.539485 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.539493 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.539498 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.539504 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.539509 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.539514 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:26:19.539519 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:26:19.539523 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:26:19.539529 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007cd2c0)}
SaveRDFNode: 2020/08/12 08:26:19.539537 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:26:19.539545 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.539549 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.539554 UID received  : URQ4kEbLTQSGVquKTiBAJw==
verify: 2020/08/12 08:26:19.539977 *** Verify running...... 2
verify: 2020/08/12 08:26:19.539985 verify exited.....
DB: 2020/08/12 08:26:19.543024 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.483918ms
DB: 2020/08/12 08:26:19.548652 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.608662ms
DB: 2020/08/12 08:26:19.553944 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.872594ms
DB: 2020/08/12 08:26:19.559489 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.503982ms
DB: 2020/08/12 08:26:19.565674 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 27.696502ms
DB: 2020/08/12 08:26:19.565923 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 26.343752ms
DB: 2020/08/12 08:26:19.568962 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.124248ms
DB: 2020/08/12 08:26:19.571028 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.071407ms
DB: 2020/08/12 08:26:19.571261 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.547455ms
DB: 2020/08/12 08:26:19.573538 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.543355ms
DB: 2020/08/12 08:26:19.576109 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.800363ms
DB: 2020/08/12 08:26:19.576371 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.296324ms
DB: 2020/08/12 08:26:19.577222 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.701311ms
DB: 2020/08/12 08:26:19.578106 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.538294ms
DB: 2020/08/12 08:26:19.581140 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.002097ms
DB: 2020/08/12 08:26:19.581383 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.982458ms
DB: 2020/08/12 08:26:19.582532 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.278057ms
SaveRDFNode: 2020/08/12 08:26:19.582547 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/12 08:26:19.582554 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.582590 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.582596 Received UID: X18=
SaveRDFNode: 2020/08/12 08:26:19.582611 a: = db.Item{PKey:[]uint8{0xa7, 0xf8, 0x60, 0xfc, 0xce, 0x34, 0x43, 0x9b, 0xbe, 0xe5, 0x68, 0xfb, 0x55, 0x94, 0xc8, 0x52}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:26:19.582900 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.762796ms
SaveRDFNode: 2020/08/12 08:26:19.582911 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/12 08:26:19.582917 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.582921 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.582926 Received UID: X18=
SaveRDFNode: 2020/08/12 08:26:19.582936 a: = db.Item{PKey:[]uint8{0xc0, 0x9f, 0x47, 0x3a, 0xb5, 0xde, 0x4c, 0xf9, 0xa1, 0x50, 0x70, 0xea, 0x2c, 0x2c, 0x73, 0xcb}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:26:19.586299 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.128528ms
SaveRDFNode: 2020/08/12 08:26:19.586312 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cccc0)}
rdfUIDdb: 2020/08/12 08:26:19.586317 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.586321 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.586327 Received UID: X18=
SaveRDFNode: 2020/08/12 08:26:19.586337 a: = db.Item{PKey:[]uint8{0x6e, 0xb, 0xcf, 0xb2, 0xb, 0xd0, 0x47, 0x16, 0xa0, 0x6e, 0xdd, 0x70, 0x7e, 0xaa, 0x12, 0x26}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:26:19.587193 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.901287ms
SaveRDFNode: 2020/08/12 08:26:19.587204 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd2c0)}
rdfUIDdb: 2020/08/12 08:26:19.587209 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.587213 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.587230 Received UID: X18=
SaveRDFNode: 2020/08/12 08:26:19.587239 a: = db.Item{PKey:[]uint8{0x51, 0x14, 0x38, 0x90, 0x46, 0xcb, 0x4d, 0x4, 0x86, 0x56, 0xab, 0x8a, 0x4e, 0x20, 0x40, 0x27}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:26:19.587520 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.549481ms
SaveRDFNode: 2020/08/12 08:26:19.587531 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/12 08:26:19.587537 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.587540 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.587546 Received UID: X18=
SaveRDFNode: 2020/08/12 08:26:19.587555 a: = db.Item{PKey:[]uint8{0xc0, 0x9f, 0x47, 0x3a, 0xb5, 0xde, 0x4c, 0xf9, 0xa1, 0x50, 0x70, 0xea, 0x2c, 0x2c, 0x73, 0xcb}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:26:19.587862 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.220034ms
SaveRDFNode: 2020/08/12 08:26:19.587873 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/12 08:26:19.587879 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.587883 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.587888 Received UID: X18=
SaveRDFNode: 2020/08/12 08:26:19.587897 a: = db.Item{PKey:[]uint8{0xa7, 0xf8, 0x60, 0xfc, 0xce, 0x34, 0x43, 0x9b, 0xbe, 0xe5, 0x68, 0xfb, 0x55, 0x94, 0xc8, 0x52}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:26:19.591196 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.830591ms
SaveRDFNode: 2020/08/12 08:26:19.591208 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cccc0)}
rdfUIDdb: 2020/08/12 08:26:19.591214 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.591218 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.591224 Received UID: X18=
SaveRDFNode: 2020/08/12 08:26:19.591234 a: = db.Item{PKey:[]uint8{0x6e, 0xb, 0xcf, 0xb2, 0xb, 0xd0, 0x47, 0x16, 0xa0, 0x6e, 0xdd, 0x70, 0x7e, 0xaa, 0x12, 0x26}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:26:19.592100 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.823131ms
SaveRDFNode: 2020/08/12 08:26:19.592112 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd2c0)}
rdfUIDdb: 2020/08/12 08:26:19.592118 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:26:19.592122 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:26:19.592127 Received UID: X18=
SaveRDFNode: 2020/08/12 08:26:19.592137 a: = db.Item{PKey:[]uint8{0x51, 0x14, 0x38, 0x90, 0x46, 0xcb, 0x4d, 0x4, 0x86, 0x56, 0xab, 0x8a, 0x4e, 0x20, 0x40, 0x27}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:26:19.592430 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.848529ms
SaveRDFNode: 2020/08/12 08:26:19.592439 Returned.+++++++++++ No error
DB: 2020/08/12 08:26:19.592619 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.678163ms
SaveRDFNode: 2020/08/12 08:26:19.592631 Returned.+++++++++++ No error
DB: 2020/08/12 08:26:19.597357 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.104828ms
SaveRDFNode: 2020/08/12 08:26:19.597512 Returned.+++++++++++ No error
DB: 2020/08/12 08:26:19.597627 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.345444ms
SaveRDFNode: 2020/08/12 08:26:19.597635 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 08:26:19.597642 send on	uuid.AttachCh
rdfLoader: 2020/08/12 08:26:19.597647 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 08:26:19.597669 attachnaode: p/hg/M40Q5u+5Wj7VZTIUg==, wJ9HOrXeTPmhUHDqLCxzyw==, A#G#:S
DB: 2020/08/12 08:26:19.603428 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.783452ms
DB: 2020/08/12 08:26:19.610084 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.138561ms
AttachNode: main 2020/08/12 08:26:19.610097 FetchForUpdate: wJ9HOrXeTPmhUHDqLCxzyw== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:26:19.610411 Enter...gr1 FetchForUpdate p/hg/M40Q5u+5Wj7VZTIUg==
DB: 2020/08/12 08:26:19.615528 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.938609ms
AttachNode: main 2020/08/12 08:26:19.615585 FetchForUpdate:  completed..
DB: 2020/08/12 08:26:19.620391 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.73654ms
AttachNode: main 2020/08/12 08:26:19.620436 About to send on xch : client.ovflTarget{tUID:util.UID{0xc0, 0x9f, 0x47, 0x3a, 0xb5, 0xde, 0x4c, 0xf9, 0xa1, 0x50, 0x70, 0xea, 0x2c, 0x2c, 0x73, 0xcb}, itemId:0}
DB: 2020/08/12 08:26:19.633413 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 18.537ms
AttachNode: gr1 2020/08/12 08:26:19.633771 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:26:19.633829 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:26:19.633875 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:26:19.633905 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 08:26:19.635141 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 08:26:19.635152 target read from xch... 
AttachNode: gr1 2020/08/12 08:26:19.635157 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:26:19.642634 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.683388ms
DB: 2020/08/12 08:26:19.648094 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.146475ms
DB: 2020/08/12 08:26:19.653634 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.960377ms
DB: 2020/08/12 08:26:19.660769 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.42557ms
DB: 2020/08/12 08:26:19.665522 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.697726ms
DB: 2020/08/12 08:26:19.670631 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.018287ms
DB: 2020/08/12 08:26:19.677436 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.728896ms
DB: 2020/08/12 08:26:19.682177 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.672283ms
DB: 2020/08/12 08:26:19.687269 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.991135ms
AttachNode: gr1 2020/08/12 08:26:19.687283 unSet parent lock in propgatechilddata...2
DB: 2020/08/12 08:26:19.692462 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.069942ms
Cache: 2020/08/12 08:26:19.692506 In SetUpredAvailable: pUid, tUID:  wJ9HOrXeTPmhUHDqLCxzyw== wJ9HOrXeTPmhUHDqLCxzyw== A#G#:S
Cache: 2020/08/12 08:26:19.692511 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 08:26:19.697809 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.223388ms
DB: 2020/08/12 08:26:19.705130 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.997957ms
rdfLoader: 2020/08/12 08:26:19.705226 attachnaode: p/hg/M40Q5u+5Wj7VZTIUg==, bgvPsgvQRxagbt1wfqoSJg==, A#G#:S
DB: 2020/08/12 08:26:19.710739 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.278155ms
DB: 2020/08/12 08:26:19.715621 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.688664ms
AttachNode: main 2020/08/12 08:26:19.715638 FetchForUpdate: bgvPsgvQRxagbt1wfqoSJg== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:26:19.716306 Enter...gr1 FetchForUpdate p/hg/M40Q5u+5Wj7VZTIUg==
AttachNode: gr1 2020/08/12 08:26:19.716706 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:26:19.716756 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:26:19.716801 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:26:19.716807 Enter UnmarshalCache(cnv); 
AttachNode: gr1 2020/08/12 08:26:19.717447 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 08:26:19.720102 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.960223ms
AttachNode: main 2020/08/12 08:26:19.720185 FetchForUpdate:  completed..
DB: 2020/08/12 08:26:19.725367 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.112544ms
AttachNode: main 2020/08/12 08:26:19.725423 About to send on xch : client.ovflTarget{tUID:util.UID{0x6e, 0xb, 0xcf, 0xb2, 0xb, 0xd0, 0x47, 0x16, 0xa0, 0x6e, 0xdd, 0x70, 0x7e, 0xaa, 0x12, 0x26}, itemId:0}
AttachNode: gr1 2020/08/12 08:26:19.725437 target read from xch... 
AttachNode: gr1 2020/08/12 08:26:19.725463 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:26:19.732107 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.526648ms
DB: 2020/08/12 08:26:19.739617 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.450128ms
DB: 2020/08/12 08:26:19.744920 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.109543ms
DB: 2020/08/12 08:26:19.751518 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.50169ms
DB: 2020/08/12 08:26:19.756748 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.153943ms
DB: 2020/08/12 08:26:19.763473 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.645593ms
DB: 2020/08/12 08:26:19.770016 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.463585ms
DB: 2020/08/12 08:26:19.774873 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.802087ms
DB: 2020/08/12 08:26:19.779932 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.977729ms
AttachNode: gr1 2020/08/12 08:26:19.779946 unSet parent lock in propgatechilddata...2
DB: 2020/08/12 08:26:19.784950 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.932465ms
Cache: 2020/08/12 08:26:19.784989 In SetUpredAvailable: pUid, tUID:  bgvPsgvQRxagbt1wfqoSJg== bgvPsgvQRxagbt1wfqoSJg== A#G#:S
Cache: 2020/08/12 08:26:19.784994 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 08:26:19.789951 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.922721ms
DB: 2020/08/12 08:26:19.794766 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.73385ms
rdfLoader: 2020/08/12 08:26:19.794785 attachnaode: wJ9HOrXeTPmhUHDqLCxzyw==, p/hg/M40Q5u+5Wj7VZTIUg==, A#G#:S
DB: 2020/08/12 08:26:19.799773 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.929325ms
DB: 2020/08/12 08:26:19.804591 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.698565ms
AttachNode: main 2020/08/12 08:26:19.804606 FetchForUpdate: p/hg/M40Q5u+5Wj7VZTIUg== sortK A#G#:S 
AttachNode: main 2020/08/12 08:26:19.804643 FetchForUpdate:  completed..
AttachNode: gr1 2020/08/12 08:26:19.804916 Enter...gr1 FetchForUpdate wJ9HOrXeTPmhUHDqLCxzyw==
DB: 2020/08/12 08:26:19.809569 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.842536ms
AttachNode: main 2020/08/12 08:26:19.809627 About to send on xch : client.ovflTarget{tUID:util.UID{0xa7, 0xf8, 0x60, 0xfc, 0xce, 0x34, 0x43, 0x9b, 0xbe, 0xe5, 0x68, 0xfb, 0x55, 0x94, 0xc8, 0x52}, itemId:0}
DB:2020/08/12 08:41:05 log.go:18: ===============================================================================
grmgr: 2020/08/12 08:41:05.548076 Powering on...
rdfLoader: 2020/08/12 08:41:05.548634 verify started....xx.
rdfLoader: 2020/08/12 08:41:05.548659 saveNode started......
rdfuuid: 2020/08/12 08:41:05.548669 Powering on...
rdfLoader: 2020/08/12 08:41:05.548675 *************** All started 
rdfLoader: 2020/08/12 08:41:05.555759 .  getType..
rdfLoader: 2020/08/12 08:41:05.555769 node.TyName : [Person]
DB: 2020/08/12 08:41:05.631179 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 75.362201ms
verify: 2020/08/12 08:41:05.631363 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:41:05.631410 Find Ty Address
rdfLoader: 2020/08/12 08:41:05.631416 Find Ty Age
rdfLoader: 2020/08/12 08:41:05.631423 Find Ty Cars
rdfLoader: 2020/08/12 08:41:05.631429 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:41:05.631435 Add to SS . [Alfa]
rdfLoader: 2020/08/12 08:41:05.631441 Find Ty DOB
rdfLoader: 2020/08/12 08:41:05.631446 Find Ty Friends
rdfLoader: 2020/08/12 08:41:05.631451 Find Ty Jobs
rdfLoader: 2020/08/12 08:41:05.631456 Find Ty Name
rdfLoader: 2020/08/12 08:41:05.631461 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:41:05.631466 Find Ty Siblings
rdfLoader: 2020/08/12 08:41:05.631477 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:41:05.631485 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:41:05.631491 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:41:05.631520 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:41:05.631527 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:41:05.631552 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.631569 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.631576 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.631583 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.631590 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.631596 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.631602 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:41:05.631607 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:41:05.631614 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000016ba0)}
SaveRDFNode: 2020/08/12 08:41:05.631619 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:41:05.631629 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.631634 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.631641 UID received  : pYgUQPeZRuGyL0sL6mwJPA==
verify: 2020/08/12 08:41:05.631857 *** Verify running...... 1
rdfLoader: 2020/08/12 08:41:05.631882 .  getType..
rdfLoader: 2020/08/12 08:41:05.631887 node.TyName : [Person]
verify: 2020/08/12 08:41:05.631908 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:41:05.631951 Find Ty Address
rdfLoader: 2020/08/12 08:41:05.631957 Find Ty Age
rdfLoader: 2020/08/12 08:41:05.631963 Find Ty Cars
rdfLoader: 2020/08/12 08:41:05.631968 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:41:05.631974 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 08:41:05.631979 Find Ty DOB
rdfLoader: 2020/08/12 08:41:05.631984 Find Ty Friends
rdfLoader: 2020/08/12 08:41:05.631989 Find Ty Jobs
rdfLoader: 2020/08/12 08:41:05.631993 Find Ty Name
rdfLoader: 2020/08/12 08:41:05.631998 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:41:05.632002 Find Ty Siblings
rdfLoader: 2020/08/12 08:41:05.632011 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:41:05.632017 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:41:05.632022 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:41:05.632049 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:41:05.632054 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:41:05.632074 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632081 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632088 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632095 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632101 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632113 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632119 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:41:05.632124 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:41:05.632130 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0000174a0)}
SaveRDFNode: 2020/08/12 08:41:05.632135 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:41:05.632143 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.632147 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.632153 UID received  : sShkbQbRTraDU/bFjClmyw==
verify: 2020/08/12 08:41:05.632539 *** Verify running...... 1
rdfLoader: 2020/08/12 08:41:05.632594 .  getType..
rdfLoader: 2020/08/12 08:41:05.632600 node.TyName : [Person]
verify: 2020/08/12 08:41:05.632621 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:41:05.632661 Find Ty Address
rdfLoader: 2020/08/12 08:41:05.632667 Find Ty Age
rdfLoader: 2020/08/12 08:41:05.632673 Find Ty Cars
rdfLoader: 2020/08/12 08:41:05.632679 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 08:41:05.632684 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 08:41:05.632689 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:41:05.632693 Find Ty DOB
rdfLoader: 2020/08/12 08:41:05.632699 Find Ty Friends
rdfLoader: 2020/08/12 08:41:05.632703 Find Ty Jobs
rdfLoader: 2020/08/12 08:41:05.632708 Find Ty Name
rdfLoader: 2020/08/12 08:41:05.632713 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:41:05.632717 Find Ty Siblings
rdfLoader: 2020/08/12 08:41:05.632726 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:41:05.632733 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:41:05.632740 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:41:05.632764 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:41:05.632769 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:41:05.632788 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632795 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632803 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632809 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632815 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632821 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.632828 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:41:05.632832 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:41:05.632838 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000017da0)}
SaveRDFNode: 2020/08/12 08:41:05.632843 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:41:05.632875 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.632882 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.632888 UID received  : Pj+CdPGHQ+ieti+EmGQYkw==
verify: 2020/08/12 08:41:05.633056 *** Verify running...... 2
rdfLoader: 2020/08/12 08:41:05.633066 .  getType..
rdfLoader: 2020/08/12 08:41:05.633070 node.TyName : [Person]
verify: 2020/08/12 08:41:05.633086 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:41:05.633115 Find Ty Address
rdfLoader: 2020/08/12 08:41:05.633120 Find Ty Age
rdfLoader: 2020/08/12 08:41:05.633125 Find Ty Cars
rdfLoader: 2020/08/12 08:41:05.633131 Add to SS . [Bentley]
rdfLoader: 2020/08/12 08:41:05.633136 Find Ty DOB
rdfLoader: 2020/08/12 08:41:05.633141 Find Ty Friends
rdfLoader: 2020/08/12 08:41:05.633145 Find Ty Jobs
rdfLoader: 2020/08/12 08:41:05.633150 Find Ty Name
rdfLoader: 2020/08/12 08:41:05.633155 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:41:05.633159 Find Ty Siblings
rdfLoader: 2020/08/12 08:41:05.633166 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:41:05.633185 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:41:05.633190 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:41:05.633210 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:41:05.633215 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:41:05.633237 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.633244 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.633251 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.633257 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.633263 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.633269 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:41:05.633276 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:41:05.633281 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:41:05.633288 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000386480)}
SaveRDFNode: 2020/08/12 08:41:05.633293 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:41:05.633300 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.633305 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.633311 UID received  : R+TR29wIQ5+ISr09jZ4Kvg==
verify: 2020/08/12 08:41:05.635704 *** Verify running...... 2
verify: 2020/08/12 08:41:05.635718 verify exited.....
DB: 2020/08/12 08:41:05.642015 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.34232ms
DB: 2020/08/12 08:41:05.647065 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 14.866886ms
DB: 2020/08/12 08:41:05.651601 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.502359ms
DB: 2020/08/12 08:41:05.656499 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.674462ms
DB: 2020/08/12 08:41:05.661214 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.681721ms
DB: 2020/08/12 08:41:05.664816 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 29.26818ms
DB: 2020/08/12 08:41:05.665128 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 32.214001ms
DB: 2020/08/12 08:41:05.667220 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.169222ms
DB: 2020/08/12 08:41:05.668963 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.693222ms
SaveRDFNode: 2020/08/12 08:41:05.668980 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0000174a0)}
rdfUIDdb: 2020/08/12 08:41:05.668990 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.669001 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.669008 Received UID: X18=
SaveRDFNode: 2020/08/12 08:41:05.669028 a: = db.Item{PKey:[]uint8{0xb1, 0x28, 0x64, 0x6d, 0x6, 0xd1, 0x4e, 0xb6, 0x83, 0x53, 0xf6, 0xc5, 0x8c, 0x29, 0x66, 0xcb}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:41:05.670021 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.1584ms
DB: 2020/08/12 08:41:05.670376 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.209822ms
DB: 2020/08/12 08:41:05.673005 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.422348ms
DB: 2020/08/12 08:41:05.674084 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.013798ms
SaveRDFNode: 2020/08/12 08:41:05.674097 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0000174a0)}
rdfUIDdb: 2020/08/12 08:41:05.674103 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.674107 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.674113 Received UID: X18=
SaveRDFNode: 2020/08/12 08:41:05.674124 a: = db.Item{PKey:[]uint8{0xb1, 0x28, 0x64, 0x6d, 0x6, 0xd1, 0x4e, 0xb6, 0x83, 0x53, 0xf6, 0xc5, 0x8c, 0x29, 0x66, 0xcb}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:41:05.674886 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.830275ms
DB: 2020/08/12 08:41:05.675250 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.838394ms
DB: 2020/08/12 08:41:05.678486 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.448408ms
DB: 2020/08/12 08:41:05.678789 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.636281ms
SaveRDFNode: 2020/08/12 08:41:05.678798 Returned.+++++++++++ No error
DB: 2020/08/12 08:41:05.679971 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.049782ms
DB: 2020/08/12 08:41:05.680221 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.937076ms
DB: 2020/08/12 08:41:05.683103 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.585122ms
SaveRDFNode: 2020/08/12 08:41:05.683326 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016ba0)}
rdfUIDdb: 2020/08/12 08:41:05.683339 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.683344 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.683350 Received UID: X18=
SaveRDFNode: 2020/08/12 08:41:05.683362 a: = db.Item{PKey:[]uint8{0xa5, 0x88, 0x14, 0x40, 0xf7, 0x99, 0x46, 0xe1, 0xb2, 0x2f, 0x4b, 0xb, 0xea, 0x6c, 0x9, 0x3c}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:41:05.684606 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.604562ms
SaveRDFNode: 2020/08/12 08:41:05.684618 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386480)}
rdfUIDdb: 2020/08/12 08:41:05.684624 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.684627 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.684636 Received UID: X18=
SaveRDFNode: 2020/08/12 08:41:05.684646 a: = db.Item{PKey:[]uint8{0x47, 0xe4, 0xd1, 0xdb, 0xdc, 0x8, 0x43, 0x9f, 0x88, 0x4a, 0xbd, 0x3d, 0x8d, 0x9e, 0xa, 0xbe}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:41:05.684931 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.681579ms
SaveRDFNode: 2020/08/12 08:41:05.684942 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017da0)}
rdfUIDdb: 2020/08/12 08:41:05.684947 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.684951 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.684956 Received UID: X18=
SaveRDFNode: 2020/08/12 08:41:05.684965 a: = db.Item{PKey:[]uint8{0x3e, 0x3f, 0x82, 0x74, 0xf1, 0x87, 0x43, 0xe8, 0x9e, 0xb6, 0x2f, 0x84, 0x98, 0x64, 0x18, 0x93}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:41:05.691249 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.845528ms
SaveRDFNode: 2020/08/12 08:41:05.691263 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016ba0)}
rdfUIDdb: 2020/08/12 08:41:05.691329 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.691334 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.691339 Received UID: X18=
SaveRDFNode: 2020/08/12 08:41:05.691351 a: = db.Item{PKey:[]uint8{0xa5, 0x88, 0x14, 0x40, 0xf7, 0x99, 0x46, 0xe1, 0xb2, 0x2f, 0x4b, 0xb, 0xea, 0x6c, 0x9, 0x3c}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:41:05.691939 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.941855ms
SaveRDFNode: 2020/08/12 08:41:05.691951 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017da0)}
rdfUIDdb: 2020/08/12 08:41:05.691956 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.691960 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.691966 Received UID: X18=
SaveRDFNode: 2020/08/12 08:41:05.691975 a: = db.Item{PKey:[]uint8{0x3e, 0x3f, 0x82, 0x74, 0xf1, 0x87, 0x43, 0xe8, 0x9e, 0xb6, 0x2f, 0x84, 0x98, 0x64, 0x18, 0x93}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:41:05.692245 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.570083ms
SaveRDFNode: 2020/08/12 08:41:05.692256 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386480)}
rdfUIDdb: 2020/08/12 08:41:05.692262 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:41:05.692265 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:41:05.692271 Received UID: X18=
SaveRDFNode: 2020/08/12 08:41:05.692281 a: = db.Item{PKey:[]uint8{0x47, 0xe4, 0xd1, 0xdb, 0xdc, 0x8, 0x43, 0x9f, 0x88, 0x4a, 0xbd, 0x3d, 0x8d, 0x9e, 0xa, 0xbe}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:41:05.696107 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.724148ms
SaveRDFNode: 2020/08/12 08:41:05.696117 Returned.+++++++++++ No error
DB: 2020/08/12 08:41:05.696718 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.708773ms
SaveRDFNode: 2020/08/12 08:41:05.696726 Returned.+++++++++++ No error
DB: 2020/08/12 08:41:05.696913 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.6043ms
SaveRDFNode: 2020/08/12 08:41:05.696934 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 08:41:05.696941 send on	uuid.AttachCh
rdfLoader: 2020/08/12 08:41:05.696946 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 08:41:05.696954 attachnaode: pYgUQPeZRuGyL0sL6mwJPA==, sShkbQbRTraDU/bFjClmyw==, A#G#:S
DB: 2020/08/12 08:41:05.703109 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.899939ms
DB: 2020/08/12 08:41:05.710029 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.848272ms
AttachNode: main 2020/08/12 08:41:05.710047 FetchForUpdate: sShkbQbRTraDU/bFjClmyw== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:41:05.710238 Enter...gr1 FetchForUpdate pYgUQPeZRuGyL0sL6mwJPA==
DB: 2020/08/12 08:41:05.714256 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.151256ms
AttachNode: main 2020/08/12 08:41:05.714311 FetchForUpdate:  completed..
DB: 2020/08/12 08:41:05.719525 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.152347ms
Unlock: 2020/08/12 08:41:05.719540 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 08:41:05.720173 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.720183 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 08:41:05.720194 About to send on xch : client.ovflTarget{tUID:util.UID{0xb1, 0x28, 0x64, 0x6d, 0x6, 0xd1, 0x4e, 0xb6, 0x83, 0x53, 0xf6, 0xc5, 0x8c, 0x29, 0x66, 0xcb}, itemId:0}
DB: 2020/08/12 08:41:05.731532 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 21.201806ms
AttachNode: gr1 2020/08/12 08:41:05.733030 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:41:05.733410 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:41:05.733727 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:41:05.733737 Enter UnmarshalCache(cnv); 
Unlock: 2020/08/12 08:41:05.736737 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 08:41:05.737218 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.737281 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 08:41:05.737289 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 08:41:05.737296 target read from xch... 
AttachNode: gr1 2020/08/12 08:41:05.737301 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:41:05.745456 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.248951ms
DB: 2020/08/12 08:41:05.750434 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.904129ms
DB: 2020/08/12 08:41:05.755921 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.363975ms
DB: 2020/08/12 08:41:05.762509 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.511515ms
DB: 2020/08/12 08:41:05.768569 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.980592ms
DB: 2020/08/12 08:41:05.774106 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.454144ms
DB: 2020/08/12 08:41:05.780859 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.673495ms
DB: 2020/08/12 08:41:05.785832 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.88484ms
DB: 2020/08/12 08:41:05.791385 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.481809ms
AttachNode: gr1 2020/08/12 08:41:05.791400 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 08:41:05.791406 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 08:41:05.791442 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.791447 Success: RWMutex UNLOCKed
DB: 2020/08/12 08:41:05.797098 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.600637ms
AttachNode: gr1 2020/08/12 08:41:05.797126 Errored: SetUpredAvailable :for  sShkbQbRTraDU/bFjClmyw==
Cache: 2020/08/12 08:41:05.797135 In SetUpredAvailable: pUid, tUID:  sShkbQbRTraDU/bFjClmyw== sShkbQbRTraDU/bFjClmyw== A#G#:S
Cache: 2020/08/12 08:41:05.797140 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 08:41:05.802195 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.020354ms
Unlock: 2020/08/12 08:41:05.802205 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 08:41:05.802228 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.802232 Success: RWMutex UNLOCKed
DB: 2020/08/12 08:41:05.809746 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.445181ms
rdfLoader: 2020/08/12 08:41:05.809767 attachnaode: pYgUQPeZRuGyL0sL6mwJPA==, Pj+CdPGHQ+ieti+EmGQYkw==, A#G#:S
DB: 2020/08/12 08:41:05.815135 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.310385ms
DB: 2020/08/12 08:41:05.820060 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.728172ms
AttachNode: main 2020/08/12 08:41:05.820074 FetchForUpdate: Pj+CdPGHQ+ieti+EmGQYkw== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:41:05.820266 Enter...gr1 FetchForUpdate pYgUQPeZRuGyL0sL6mwJPA==
AttachNode: gr1 2020/08/12 08:41:05.820306 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:41:05.820318 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:41:05.820325 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:41:05.820329 Enter UnmarshalCache(cnv); 
Unlock: 2020/08/12 08:41:05.820367 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 08:41:05.820394 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.820399 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 08:41:05.820403 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 08:41:05.824364 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.231712ms
AttachNode: main 2020/08/12 08:41:05.824417 FetchForUpdate:  completed..
DB: 2020/08/12 08:41:05.830044 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.573391ms
Unlock: 2020/08/12 08:41:05.830058 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 08:41:05.830082 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.830087 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 08:41:05.830095 About to send on xch : client.ovflTarget{tUID:util.UID{0x3e, 0x3f, 0x82, 0x74, 0xf1, 0x87, 0x43, 0xe8, 0x9e, 0xb6, 0x2f, 0x84, 0x98, 0x64, 0x18, 0x93}, itemId:0}
AttachNode: gr1 2020/08/12 08:41:05.830108 target read from xch... 
AttachNode: gr1 2020/08/12 08:41:05.830114 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:41:05.836996 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.793505ms
DB: 2020/08/12 08:41:05.841966 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.911069ms
DB: 2020/08/12 08:41:05.847768 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.436499ms
DB: 2020/08/12 08:41:05.854881 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.803596ms
DB: 2020/08/12 08:41:05.860385 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.179625ms
DB: 2020/08/12 08:41:05.866064 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.345601ms
DB: 2020/08/12 08:41:05.873366 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.964996ms
DB: 2020/08/12 08:41:05.878708 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.03407ms
DB: 2020/08/12 08:41:05.884399 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.395165ms
AttachNode: gr1 2020/08/12 08:41:05.884415 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 08:41:05.884420 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 08:41:05.884445 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.884450 Success: RWMutex UNLOCKed
DB: 2020/08/12 08:41:05.889437 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.924733ms
AttachNode: gr1 2020/08/12 08:41:05.889464 Errored: SetUpredAvailable :for  Pj+CdPGHQ+ieti+EmGQYkw==
Cache: 2020/08/12 08:41:05.889470 In SetUpredAvailable: pUid, tUID:  Pj+CdPGHQ+ieti+EmGQYkw== Pj+CdPGHQ+ieti+EmGQYkw== A#G#:S
Cache: 2020/08/12 08:41:05.889475 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 08:41:05.894700 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.18786ms
Unlock: 2020/08/12 08:41:05.894711 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 08:41:05.894735 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.894740 Success: RWMutex UNLOCKed
DB: 2020/08/12 08:41:05.899522 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.725125ms
rdfLoader: 2020/08/12 08:41:05.899542 attachnaode: sShkbQbRTraDU/bFjClmyw==, pYgUQPeZRuGyL0sL6mwJPA==, A#G#:S
DB: 2020/08/12 08:41:05.904709 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.113352ms
DB: 2020/08/12 08:41:05.910011 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.240364ms
AttachNode: main 2020/08/12 08:41:05.910024 FetchForUpdate: pYgUQPeZRuGyL0sL6mwJPA== sortK A#G#:S 
AttachNode: main 2020/08/12 08:41:05.910044 FetchForUpdate:  completed..
AttachNode: gr1 2020/08/12 08:41:05.910268 Enter...gr1 FetchForUpdate sShkbQbRTraDU/bFjClmyw==
DB: 2020/08/12 08:41:05.915215 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.112867ms
Unlock: 2020/08/12 08:41:05.915229 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 08:41:05.915606 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:41:05.915615 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 08:41:05.915625 About to send on xch : client.ovflTarget{tUID:util.UID{0xa5, 0x88, 0x14, 0x40, 0xf7, 0x99, 0x46, 0xe1, 0xb2, 0x2f, 0x4b, 0xb, 0xea, 0x6c, 0x9, 0x3c}, itemId:0}
DB:2020/08/12 08:45:49 log.go:18: ===============================================================================
grmgr: 2020/08/12 08:45:49.632646 Powering on...
rdfLoader: 2020/08/12 08:45:49.632976 verify started....xx.
rdfLoader: 2020/08/12 08:45:49.633000 saveNode started......
rdfuuid: 2020/08/12 08:45:49.633011 Powering on...
rdfLoader: 2020/08/12 08:45:49.633017 *************** All started 
rdfLoader: 2020/08/12 08:45:49.648208 .  getType..
rdfLoader: 2020/08/12 08:45:49.648228 node.TyName : [Person]
DB: 2020/08/12 08:45:49.719536 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.255017ms
verify: 2020/08/12 08:45:49.719709 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:45:49.719757 Find Ty Address
rdfLoader: 2020/08/12 08:45:49.719763 Find Ty Age
rdfLoader: 2020/08/12 08:45:49.719769 Find Ty Cars
rdfLoader: 2020/08/12 08:45:49.719776 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:45:49.719792 Add to SS . [Alfa]
rdfLoader: 2020/08/12 08:45:49.719798 Find Ty DOB
rdfLoader: 2020/08/12 08:45:49.719804 Find Ty Friends
rdfLoader: 2020/08/12 08:45:49.719808 Find Ty Jobs
rdfLoader: 2020/08/12 08:45:49.719813 Find Ty Name
rdfLoader: 2020/08/12 08:45:49.719818 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:45:49.719823 Find Ty Siblings
rdfLoader: 2020/08/12 08:45:49.719834 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:45:49.719842 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:45:49.719847 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:45:49.719879 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:45:49.719886 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:45:49.719914 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.719922 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.719929 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.719935 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.719942 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.719948 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.719955 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:45:49.719960 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:45:49.719968 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000017440)}
SaveRDFNode: 2020/08/12 08:45:49.719973 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:45:49.719983 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.719988 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.719994 UID received  : Xi6FCGBoQBe5oIUltJB3sg==
verify: 2020/08/12 08:45:49.720204 *** Verify running...... 1
rdfLoader: 2020/08/12 08:45:49.720229 .  getType..
rdfLoader: 2020/08/12 08:45:49.720237 node.TyName : [Person]
verify: 2020/08/12 08:45:49.720263 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 08:45:49.720301 Find Ty Address
rdfLoader: 2020/08/12 08:45:49.720306 Find Ty Age
rdfLoader: 2020/08/12 08:45:49.720312 Find Ty Cars
rdfLoader: 2020/08/12 08:45:49.720318 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:45:49.720323 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 08:45:49.720328 Find Ty DOB
rdfLoader: 2020/08/12 08:45:49.720333 Find Ty Friends
rdfLoader: 2020/08/12 08:45:49.720337 Find Ty Jobs
rdfLoader: 2020/08/12 08:45:49.720342 Find Ty Name
rdfLoader: 2020/08/12 08:45:49.720347 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:45:49.720351 Find Ty Siblings
rdfLoader: 2020/08/12 08:45:49.720361 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:45:49.720368 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:45:49.720380 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:45:49.720405 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:45:49.720410 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:45:49.720430 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.720437 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.720445 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.720451 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.720458 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.720464 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.720470 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:45:49.720475 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:45:49.720481 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017920)}
SaveRDFNode: 2020/08/12 08:45:49.720487 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:45:49.720494 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.720499 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.720523 UID received  : xY8vDEqyS9aKgmBNXrVxVw==
verify: 2020/08/12 08:45:49.722108 *** Verify running...... 1
rdfLoader: 2020/08/12 08:45:49.724208 .  getType..
rdfLoader: 2020/08/12 08:45:49.724218 node.TyName : [Person]
verify: 2020/08/12 08:45:49.724814 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:45:49.725471 Find Ty Address
rdfLoader: 2020/08/12 08:45:49.725482 Find Ty Age
rdfLoader: 2020/08/12 08:45:49.725488 Find Ty Cars
rdfLoader: 2020/08/12 08:45:49.725494 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 08:45:49.725498 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 08:45:49.725503 Add to SS . [Honda]
rdfLoader: 2020/08/12 08:45:49.725507 Find Ty DOB
rdfLoader: 2020/08/12 08:45:49.725512 Find Ty Friends
rdfLoader: 2020/08/12 08:45:49.725516 Find Ty Jobs
rdfLoader: 2020/08/12 08:45:49.725520 Find Ty Name
rdfLoader: 2020/08/12 08:45:49.725524 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:45:49.725529 Find Ty Siblings
rdfLoader: 2020/08/12 08:45:49.725540 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:45:49.725547 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:45:49.725602 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:45:49.725640 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:45:49.725651 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:45:49.725675 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.725682 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.725689 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.725695 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.725701 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.725707 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.725714 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:45:49.725718 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:45:49.725724 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0003864e0)}
SaveRDFNode: 2020/08/12 08:45:49.725728 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:45:49.725736 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.725758 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.725765 UID received  : HfJJ99EFTUWbo3/NuZCPew==
verify: 2020/08/12 08:45:49.726172 *** Verify running...... 2
rdfLoader: 2020/08/12 08:45:49.726180 .  getType..
rdfLoader: 2020/08/12 08:45:49.726191 node.TyName : [Person]
DB: 2020/08/12 08:45:49.727083 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.054112ms
verify: 2020/08/12 08:45:49.730051 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 08:45:49.730428 Find Ty Address
rdfLoader: 2020/08/12 08:45:49.730444 Find Ty Age
rdfLoader: 2020/08/12 08:45:49.730450 Find Ty Cars
rdfLoader: 2020/08/12 08:45:49.730456 Add to SS . [Bentley]
rdfLoader: 2020/08/12 08:45:49.730461 Find Ty DOB
rdfLoader: 2020/08/12 08:45:49.730466 Find Ty Friends
rdfLoader: 2020/08/12 08:45:49.730474 Find Ty Jobs
rdfLoader: 2020/08/12 08:45:49.730478 Find Ty Name
rdfLoader: 2020/08/12 08:45:49.730483 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 08:45:49.730486 Find Ty Siblings
rdfLoader: 2020/08/12 08:45:49.730521 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 08:45:49.730537 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 08:45:49.730542 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 08:45:49.730581 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 08:45:49.730586 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 08:45:49.730958 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.730973 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.730979 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.731022 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.731035 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.731041 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 08:45:49.731052 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 08:45:49.731056 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 08:45:49.731063 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0003870e0)}
SaveRDFNode: 2020/08/12 08:45:49.731067 Waiting for UID ......................
rdfUIDdb: 2020/08/12 08:45:49.731078 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.731087 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.731094 UID received  : bydMoyeuR9KNdlZPjN51iw==
verify: 2020/08/12 08:45:49.732440 *** Verify running...... 2
verify: 2020/08/12 08:45:49.732450 verify exited.....
DB: 2020/08/12 08:45:49.732951 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.394605ms
DB: 2020/08/12 08:45:49.738558 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.743502ms
DB: 2020/08/12 08:45:49.743664 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.509558ms
DB: 2020/08/12 08:45:49.748330 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 21.212016ms
DB: 2020/08/12 08:45:49.758673 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.686298ms
DB: 2020/08/12 08:45:49.760965 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.267318ms
DB: 2020/08/12 08:45:49.761492 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 22.703865ms
DB: 2020/08/12 08:45:49.761866 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 13.491654ms
DB: 2020/08/12 08:45:49.762329 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.441894ms
DB: 2020/08/12 08:45:49.764360 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.362705ms
DB: 2020/08/12 08:45:49.765067 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.169849ms
DB: 2020/08/12 08:45:49.765639 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.110672ms
DB: 2020/08/12 08:45:49.765884 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.518232ms
DB: 2020/08/12 08:45:49.769138 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.205869ms
SaveRDFNode: 2020/08/12 08:45:49.769155 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 08:45:49.769163 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.769167 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.769173 Received UID: X18=
SaveRDFNode: 2020/08/12 08:45:49.769207 a: = db.Item{PKey:[]uint8{0xc5, 0x8f, 0x2f, 0xc, 0x4a, 0xb2, 0x4b, 0xd6, 0x8a, 0x82, 0x60, 0x4d, 0x5e, 0xb5, 0x71, 0x57}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:45:49.772088 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.988443ms
SaveRDFNode: 2020/08/12 08:45:49.772102 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 08:45:49.772117 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.772121 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.772127 Received UID: X18=
SaveRDFNode: 2020/08/12 08:45:49.772137 a: = db.Item{PKey:[]uint8{0x5e, 0x2e, 0x85, 0x8, 0x60, 0x68, 0x40, 0x17, 0xb9, 0xa0, 0x85, 0x25, 0xb4, 0x90, 0x77, 0xb2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:45:49.772421 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.751495ms
DB: 2020/08/12 08:45:49.772686 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.277173ms
DB: 2020/08/12 08:45:49.772940 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.697494ms
SaveRDFNode: 2020/08/12 08:45:49.772951 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 08:45:49.772957 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.772968 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.772974 Received UID: X18=
SaveRDFNode: 2020/08/12 08:45:49.772984 a: = db.Item{PKey:[]uint8{0xc5, 0x8f, 0x2f, 0xc, 0x4a, 0xb2, 0x4b, 0xd6, 0x8a, 0x82, 0x60, 0x4d, 0x5e, 0xb5, 0x71, 0x57}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:45:49.775368 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.202417ms
SaveRDFNode: 2020/08/12 08:45:49.775596 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 08:45:49.775609 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.775613 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.775619 Received UID: X18=
SaveRDFNode: 2020/08/12 08:45:49.775629 a: = db.Item{PKey:[]uint8{0x5e, 0x2e, 0x85, 0x8, 0x60, 0x68, 0x40, 0x17, 0xb9, 0xa0, 0x85, 0x25, 0xb4, 0x90, 0x77, 0xb2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:45:49.776233 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.782134ms
SaveRDFNode: 2020/08/12 08:45:49.776249 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003864e0)}
rdfUIDdb: 2020/08/12 08:45:49.776255 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.776259 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.776265 Received UID: X18=
SaveRDFNode: 2020/08/12 08:45:49.776276 a: = db.Item{PKey:[]uint8{0x1d, 0xf2, 0x49, 0xf7, 0xd1, 0x5, 0x4d, 0x45, 0x9b, 0xa3, 0x7f, 0xcd, 0xb9, 0x90, 0x8f, 0x7b}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:45:49.776595 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.878078ms
SaveRDFNode: 2020/08/12 08:45:49.776606 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003870e0)}
rdfUIDdb: 2020/08/12 08:45:49.776612 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.776616 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.776621 Received UID: X18=
SaveRDFNode: 2020/08/12 08:45:49.776631 a: = db.Item{PKey:[]uint8{0x6f, 0x27, 0x4c, 0xa3, 0x27, 0xae, 0x47, 0xd2, 0x8d, 0x76, 0x56, 0x4f, 0x8c, 0xde, 0x75, 0x8b}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:45:49.776892 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.859989ms
SaveRDFNode: 2020/08/12 08:45:49.776900 Returned.+++++++++++ No error
DB: 2020/08/12 08:45:49.778873 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.209961ms
SaveRDFNode: 2020/08/12 08:45:49.778883 Returned.+++++++++++ No error
DB: 2020/08/12 08:45:49.780156 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.849911ms
SaveRDFNode: 2020/08/12 08:45:49.780188 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003864e0)}
rdfUIDdb: 2020/08/12 08:45:49.780195 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.780199 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.780205 Received UID: X18=
SaveRDFNode: 2020/08/12 08:45:49.780232 a: = db.Item{PKey:[]uint8{0x1d, 0xf2, 0x49, 0xf7, 0xd1, 0x5, 0x4d, 0x45, 0x9b, 0xa3, 0x7f, 0xcd, 0xb9, 0x90, 0x8f, 0x7b}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:45:49.780508 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.849889ms
SaveRDFNode: 2020/08/12 08:45:49.780520 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003870e0)}
rdfUIDdb: 2020/08/12 08:45:49.780525 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 08:45:49.780529 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 08:45:49.780535 Received UID: X18=
SaveRDFNode: 2020/08/12 08:45:49.780544 a: = db.Item{PKey:[]uint8{0x6f, 0x27, 0x4c, 0xa3, 0x27, 0xae, 0x47, 0xd2, 0x8d, 0x76, 0x56, 0x4f, 0x8c, 0xde, 0x75, 0x8b}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 08:45:49.783680 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.414402ms
SaveRDFNode: 2020/08/12 08:45:49.783689 Returned.+++++++++++ No error
DB: 2020/08/12 08:45:49.783972 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.378583ms
SaveRDFNode: 2020/08/12 08:45:49.783981 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 08:45:49.783987 send on	uuid.AttachCh
rdfLoader: 2020/08/12 08:45:49.783996 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 08:45:49.784004 attachnaode: Xi6FCGBoQBe5oIUltJB3sg==, xY8vDEqyS9aKgmBNXrVxVw==, A#G#:S
DB: 2020/08/12 08:45:49.788087 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.547281ms
DB: 2020/08/12 08:45:49.794732 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.387686ms
AttachNode: main 2020/08/12 08:45:49.794924 FetchForUpdate: xY8vDEqyS9aKgmBNXrVxVw== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:45:49.795837 Enter...gr1 FetchForUpdate Xi6FCGBoQBe5oIUltJB3sg==
DB: 2020/08/12 08:45:49.798456 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.787569ms
AttachNode: main 2020/08/12 08:45:49.798781 FetchForUpdate:  completed..
DB: 2020/08/12 08:45:49.802568 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.537677ms
Unlock: 2020/08/12 08:45:49.802579 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 08:45:49.802849 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.802858 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 08:45:49.802869 About to send on xch : client.ovflTarget{tUID:util.UID{0xc5, 0x8f, 0x2f, 0xc, 0x4a, 0xb2, 0x4b, 0xd6, 0x8a, 0x82, 0x60, 0x4d, 0x5e, 0xb5, 0x71, 0x57}, itemId:0}
DB: 2020/08/12 08:45:49.812508 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 15.939549ms
AttachNode: gr1 2020/08/12 08:45:49.813102 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 08:45:49.813113 GetType
AttachNode: gr1 2020/08/12 08:45:49.813118 Sccuess for GetType()
AttachNode: gr1 2020/08/12 08:45:49.813226 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:45:49.813319 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:45:49.813477 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:45:49.813487 Enter UnmarshalCache(cnv); 
Unlock: 2020/08/12 08:45:49.814464 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 08:45:49.814809 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.814826 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 08:45:49.814831 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 08:45:49.814836 target read from xch... 
AttachNode: gr1 2020/08/12 08:45:49.814841 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:45:49.821277 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.298943ms
DB: 2020/08/12 08:45:49.824977 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.348678ms
DB: 2020/08/12 08:45:49.829561 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.961333ms
DB: 2020/08/12 08:45:49.836177 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.985567ms
DB: 2020/08/12 08:45:49.840128 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.448436ms
DB: 2020/08/12 08:45:49.844340 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.716954ms
DB: 2020/08/12 08:45:49.850538 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.572251ms
DB: 2020/08/12 08:45:49.854501 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.308804ms
DB: 2020/08/12 08:45:49.859516 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.927625ms
AttachNode: gr1 2020/08/12 08:45:49.859529 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 08:45:49.859534 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 08:45:49.859561 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.859565 Success: RWMutex UNLOCKed
DB: 2020/08/12 08:45:49.862920 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.310704ms
AttachNode: gr1 2020/08/12 08:45:49.862948 Errored: SetUpredAvailable :for  xY8vDEqyS9aKgmBNXrVxVw==
Cache: 2020/08/12 08:45:49.862954 In SetUpredAvailable: pUid, tUID:  xY8vDEqyS9aKgmBNXrVxVw== xY8vDEqyS9aKgmBNXrVxVw== A#G#:S
Cache: 2020/08/12 08:45:49.862959 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 08:45:49.866449 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.455349ms
Unlock: 2020/08/12 08:45:49.866463 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 08:45:49.866499 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.866505 Success: RWMutex UNLOCKed
DB: 2020/08/12 08:45:49.873153 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.588842ms
rdfLoader: 2020/08/12 08:45:49.873175 attachnaode: Xi6FCGBoQBe5oIUltJB3sg==, HfJJ99EFTUWbo3/NuZCPew==, A#G#:S
DB: 2020/08/12 08:45:49.877735 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.504739ms
DB: 2020/08/12 08:45:49.882067 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.247411ms
AttachNode: main 2020/08/12 08:45:49.883242 FetchForUpdate: HfJJ99EFTUWbo3/NuZCPew== sortK A#G#:S 
AttachNode: gr1 2020/08/12 08:45:49.884145 Enter...gr1 FetchForUpdate Xi6FCGBoQBe5oIUltJB3sg==
AttachNode: gr1 2020/08/12 08:45:49.884858 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 08:45:49.884867 GetType
AttachNode: gr1 2020/08/12 08:45:49.884872 Sccuess for GetType()
AttachNode: gr1 2020/08/12 08:45:49.884960 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 08:45:49.885075 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 08:45:49.885186 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 08:45:49.885195 Enter UnmarshalCache(cnv); 
Unlock: 2020/08/12 08:45:49.886252 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 08:45:49.886871 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.886186ms
Unlock: 2020/08/12 08:45:49.886940 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.886946 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 08:45:49.886951 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: main 2020/08/12 08:45:49.887229 FetchForUpdate:  completed..
DB: 2020/08/12 08:45:49.891193 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.656695ms
Unlock: 2020/08/12 08:45:49.891204 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 08:45:49.891434 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.891484 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 08:45:49.891493 About to send on xch : client.ovflTarget{tUID:util.UID{0x1d, 0xf2, 0x49, 0xf7, 0xd1, 0x5, 0x4d, 0x45, 0x9b, 0xa3, 0x7f, 0xcd, 0xb9, 0x90, 0x8f, 0x7b}, itemId:0}
AttachNode: gr1 2020/08/12 08:45:49.891505 target read from xch... 
AttachNode: gr1 2020/08/12 08:45:49.891510 gc.FetchForUpdate(pUID, sortK)... 
DB: 2020/08/12 08:45:49.898039 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.231319ms
DB: 2020/08/12 08:45:49.902213 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.709232ms
DB: 2020/08/12 08:45:49.906253 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.818099ms
DB: 2020/08/12 08:45:49.914197 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.15808ms
DB: 2020/08/12 08:45:49.917802 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.297439ms
DB: 2020/08/12 08:45:49.921792 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.674054ms
DB: 2020/08/12 08:45:49.928167 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.068357ms
DB: 2020/08/12 08:45:49.932077 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.573945ms
DB: 2020/08/12 08:45:49.936668 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.062596ms
AttachNode: gr1 2020/08/12 08:45:49.936680 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 08:45:49.936685 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 08:45:49.937037 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.937057 Success: RWMutex UNLOCKed
DB: 2020/08/12 08:45:49.940729 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.399734ms
AttachNode: gr1 2020/08/12 08:45:49.940772 Errored: SetUpredAvailable :for  HfJJ99EFTUWbo3/NuZCPew==
Cache: 2020/08/12 08:45:49.940779 In SetUpredAvailable: pUid, tUID:  HfJJ99EFTUWbo3/NuZCPew== HfJJ99EFTUWbo3/NuZCPew== A#G#:S
Cache: 2020/08/12 08:45:49.940783 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 08:45:49.944277 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.436759ms
Unlock: 2020/08/12 08:45:49.944287 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 08:45:49.944316 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.944320 Success: RWMutex UNLOCKed
DB: 2020/08/12 08:45:49.948232 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.83654ms
rdfLoader: 2020/08/12 08:45:49.948260 attachnaode: xY8vDEqyS9aKgmBNXrVxVw==, Xi6FCGBoQBe5oIUltJB3sg==, A#G#:S
DB: 2020/08/12 08:45:49.952042 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.696573ms
DB: 2020/08/12 08:45:49.955803 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.683543ms
AttachNode: main 2020/08/12 08:45:49.955827 FetchForUpdate: Xi6FCGBoQBe5oIUltJB3sg== sortK A#G#:S 
AttachNode: main 2020/08/12 08:45:49.955932 FetchForUpdate:  completed..
AttachNode: gr1 2020/08/12 08:45:49.956330 Enter...gr1 FetchForUpdate xY8vDEqyS9aKgmBNXrVxVw==
AttachNode: gr1 2020/08/12 08:45:49.956623 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 08:45:49.956630 GetType
AttachNode: gr1 2020/08/12 08:45:49.956634 Error in GetType
DB: 2020/08/12 08:45:49.959772 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.775093ms
Unlock: 2020/08/12 08:45:49.959782 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 08:45:49.960041 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 08:45:49.960049 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 08:45:49.960057 About to send on xch : client.ovflTarget{tUID:util.UID{0x5e, 0x2e, 0x85, 0x8, 0x60, 0x68, 0x40, 0x17, 0xb9, 0xa0, 0x85, 0x25, 0xb4, 0x90, 0x77, 0xb2}, itemId:0}
DB:2020/08/12 09:11:38 log.go:18: ===============================================================================
grmgr: 2020/08/12 09:11:38.835645 Powering on...
rdfLoader: 2020/08/12 09:11:38.836016 verify started....xx.
rdfLoader: 2020/08/12 09:11:38.836040 saveNode started......
rdfuuid: 2020/08/12 09:11:38.836051 Powering on...
rdfLoader: 2020/08/12 09:11:38.836057 *************** All started 
rdfLoader: 2020/08/12 09:11:38.844058 .  getType..
rdfLoader: 2020/08/12 09:11:38.844068 node.TyName : [Person]
DB: 2020/08/12 09:11:38.914400 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 70.286777ms
verify: 2020/08/12 09:11:38.914559 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 09:11:38.914603 Find Ty Address
rdfLoader: 2020/08/12 09:11:38.914609 Find Ty Age
rdfLoader: 2020/08/12 09:11:38.914616 Find Ty Cars
rdfLoader: 2020/08/12 09:11:38.914623 Add to SS . [Honda]
rdfLoader: 2020/08/12 09:11:38.914628 Add to SS . [Alfa]
rdfLoader: 2020/08/12 09:11:38.914634 Find Ty DOB
rdfLoader: 2020/08/12 09:11:38.914639 Find Ty Friends
rdfLoader: 2020/08/12 09:11:38.914644 Find Ty Jobs
rdfLoader: 2020/08/12 09:11:38.914648 Find Ty Name
rdfLoader: 2020/08/12 09:11:38.914653 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 09:11:38.914658 Find Ty Siblings
rdfLoader: 2020/08/12 09:11:38.914669 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 09:11:38.914678 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 09:11:38.914684 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 09:11:38.914722 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 09:11:38.914728 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 09:11:38.914754 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.914763 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.914770 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.914777 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.914793 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.914800 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.914806 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 09:11:38.914811 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 09:11:38.914819 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0007cc1e0)}
SaveRDFNode: 2020/08/12 09:11:38.914824 Waiting for UID ......................
rdfUIDdb: 2020/08/12 09:11:38.914834 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.914839 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.914846 UID received  : X5shFhHZTQGOHz+knv9uxw==
verify: 2020/08/12 09:11:38.915053 *** Verify running...... 1
rdfLoader: 2020/08/12 09:11:38.915080 .  getType..
rdfLoader: 2020/08/12 09:11:38.915085 node.TyName : [Person]
verify: 2020/08/12 09:11:38.915113 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 09:11:38.915151 Find Ty Address
rdfLoader: 2020/08/12 09:11:38.915157 Find Ty Age
rdfLoader: 2020/08/12 09:11:38.915163 Find Ty Cars
rdfLoader: 2020/08/12 09:11:38.915170 Add to SS . [Honda]
rdfLoader: 2020/08/12 09:11:38.915175 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 09:11:38.915180 Find Ty DOB
rdfLoader: 2020/08/12 09:11:38.915185 Find Ty Friends
rdfLoader: 2020/08/12 09:11:38.915189 Find Ty Jobs
rdfLoader: 2020/08/12 09:11:38.915194 Find Ty Name
rdfLoader: 2020/08/12 09:11:38.915199 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 09:11:38.915204 Find Ty Siblings
rdfLoader: 2020/08/12 09:11:38.915213 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 09:11:38.915220 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 09:11:38.915225 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 09:11:38.915252 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 09:11:38.915257 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 09:11:38.915278 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915285 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915293 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915299 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915305 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915312 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915318 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 09:11:38.915323 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 09:11:38.915329 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0007cc5a0)}
SaveRDFNode: 2020/08/12 09:11:38.915339 Waiting for UID ......................
rdfUIDdb: 2020/08/12 09:11:38.915348 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.915353 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.915359 UID received  : nQzFdkGFTC+1HWtwm4k9/A==
verify: 2020/08/12 09:11:38.915720 *** Verify running...... 1
rdfLoader: 2020/08/12 09:11:38.915778 .  getType..
rdfLoader: 2020/08/12 09:11:38.915784 node.TyName : [Person]
verify: 2020/08/12 09:11:38.915804 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 09:11:38.915843 Find Ty Address
rdfLoader: 2020/08/12 09:11:38.915849 Find Ty Age
rdfLoader: 2020/08/12 09:11:38.915855 Find Ty Cars
rdfLoader: 2020/08/12 09:11:38.915860 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 09:11:38.915865 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 09:11:38.915870 Add to SS . [Honda]
rdfLoader: 2020/08/12 09:11:38.915875 Find Ty DOB
rdfLoader: 2020/08/12 09:11:38.915881 Find Ty Friends
rdfLoader: 2020/08/12 09:11:38.915886 Find Ty Jobs
rdfLoader: 2020/08/12 09:11:38.915891 Find Ty Name
rdfLoader: 2020/08/12 09:11:38.915896 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 09:11:38.915900 Find Ty Siblings
rdfLoader: 2020/08/12 09:11:38.915909 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 09:11:38.915917 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 09:11:38.915922 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 09:11:38.915946 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 09:11:38.915952 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 09:11:38.915971 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915979 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915986 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.915993 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916000 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916006 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916012 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 09:11:38.916017 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 09:11:38.916024 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0007ccba0)}
SaveRDFNode: 2020/08/12 09:11:38.916028 Waiting for UID ......................
rdfUIDdb: 2020/08/12 09:11:38.916036 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.916041 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.916047 UID received  : G7h+UpzASqShXd1Lrx7iCg==
verify: 2020/08/12 09:11:38.916213 *** Verify running...... 2
rdfLoader: 2020/08/12 09:11:38.916224 .  getType..
rdfLoader: 2020/08/12 09:11:38.916228 node.TyName : [Person]
verify: 2020/08/12 09:11:38.916246 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 09:11:38.916283 Find Ty Address
rdfLoader: 2020/08/12 09:11:38.916289 Find Ty Age
rdfLoader: 2020/08/12 09:11:38.916295 Find Ty Cars
rdfLoader: 2020/08/12 09:11:38.916300 Add to SS . [Bentley]
rdfLoader: 2020/08/12 09:11:38.916305 Find Ty DOB
rdfLoader: 2020/08/12 09:11:38.916310 Find Ty Friends
rdfLoader: 2020/08/12 09:11:38.916315 Find Ty Jobs
rdfLoader: 2020/08/12 09:11:38.916320 Find Ty Name
rdfLoader: 2020/08/12 09:11:38.916326 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 09:11:38.916331 Find Ty Siblings
rdfLoader: 2020/08/12 09:11:38.916338 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 09:11:38.916345 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 09:11:38.916350 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 09:11:38.916392 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 09:11:38.916399 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 09:11:38.916421 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916429 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916436 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916446 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916453 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916460 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 09:11:38.916467 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 09:11:38.916472 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 09:11:38.916485 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007ccfc0)}
SaveRDFNode: 2020/08/12 09:11:38.916490 Waiting for UID ......................
rdfUIDdb: 2020/08/12 09:11:38.916498 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.916503 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.916509 UID received  : miyKMJQuTEW53++tqRdUCA==
verify: 2020/08/12 09:11:38.916658 *** Verify running...... 2
verify: 2020/08/12 09:11:38.916668 verify exited.....
DB: 2020/08/12 09:11:38.920614 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.736086ms
DB: 2020/08/12 09:11:38.927732 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.338302ms
DB: 2020/08/12 09:11:38.931199 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 10.542989ms
DB: 2020/08/12 09:11:38.934796 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.55501ms
DB: 2020/08/12 09:11:38.941038 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 24.501595ms
DB: 2020/08/12 09:11:38.941501 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.483409ms
DB: 2020/08/12 09:11:38.944466 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.394001ms
DB: 2020/08/12 09:11:38.944826 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.286274ms
SaveRDFNode: 2020/08/12 09:11:38.944839 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/12 09:11:38.944846 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.944850 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.944855 Received UID: X18=
SaveRDFNode: 2020/08/12 09:11:38.944869 a: = db.Item{PKey:[]uint8{0x5f, 0x9b, 0x21, 0x16, 0x11, 0xd9, 0x4d, 0x1, 0x8e, 0x1f, 0x3f, 0xa4, 0x9e, 0xff, 0x6e, 0xc7}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:11:38.946666 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.900687ms
DB: 2020/08/12 09:11:38.947906 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.4084ms
DB: 2020/08/12 09:11:38.948148 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.250243ms
SaveRDFNode: 2020/08/12 09:11:38.948177 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/12 09:11:38.948184 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.948188 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.948193 Received UID: X18=
SaveRDFNode: 2020/08/12 09:11:38.948204 a: = db.Item{PKey:[]uint8{0x5f, 0x9b, 0x21, 0x16, 0x11, 0xd9, 0x4d, 0x1, 0x8e, 0x1f, 0x3f, 0xa4, 0x9e, 0xff, 0x6e, 0xc7}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:11:38.950514 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 34.440806ms
DB: 2020/08/12 09:11:38.951096 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.159931ms
DB: 2020/08/12 09:11:38.951377 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.143346ms
SaveRDFNode: 2020/08/12 09:11:38.951386 Returned.+++++++++++ No error
DB: 2020/08/12 09:11:38.953157 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.457159ms
DB: 2020/08/12 09:11:38.954250 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.120387ms
SaveRDFNode: 2020/08/12 09:11:38.954263 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007ccfc0)}
rdfUIDdb: 2020/08/12 09:11:38.954288 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.954293 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.954298 Received UID: X18=
SaveRDFNode: 2020/08/12 09:11:38.954309 a: = db.Item{PKey:[]uint8{0x9a, 0x2c, 0x8a, 0x30, 0x94, 0x2e, 0x4c, 0x45, 0xb9, 0xdf, 0xef, 0xad, 0xa9, 0x17, 0x54, 0x8}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:11:38.954828 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.131603ms
DB: 2020/08/12 09:11:38.956300 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.111699ms
DB: 2020/08/12 09:11:38.957644 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.30449ms
SaveRDFNode: 2020/08/12 09:11:38.957657 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007ccfc0)}
rdfUIDdb: 2020/08/12 09:11:38.957663 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.957667 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.957672 Received UID: X18=
SaveRDFNode: 2020/08/12 09:11:38.957683 a: = db.Item{PKey:[]uint8{0x9a, 0x2c, 0x8a, 0x30, 0x94, 0x2e, 0x4c, 0x45, 0xb9, 0xdf, 0xef, 0xad, 0xa9, 0x17, 0x54, 0x8}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:11:38.958046 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.185071ms
DB: 2020/08/12 09:11:38.959590 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.25705ms
SaveRDFNode: 2020/08/12 09:11:38.959603 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/12 09:11:38.959609 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.959613 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.959619 Received UID: X18=
SaveRDFNode: 2020/08/12 09:11:38.959629 a: = db.Item{PKey:[]uint8{0x9d, 0xc, 0xc5, 0x76, 0x41, 0x85, 0x4c, 0x2f, 0xb5, 0x1d, 0x6b, 0x70, 0x9b, 0x89, 0x3d, 0xfc}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:11:38.961036 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.316312ms
SaveRDFNode: 2020/08/12 09:11:38.961045 Returned.+++++++++++ No error
DB: 2020/08/12 09:11:38.961423 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.346512ms
DB: 2020/08/12 09:11:38.962943 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.285114ms
SaveRDFNode: 2020/08/12 09:11:38.962954 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/12 09:11:38.962960 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.962964 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.962969 Received UID: X18=
SaveRDFNode: 2020/08/12 09:11:38.962980 a: = db.Item{PKey:[]uint8{0x9d, 0xc, 0xc5, 0x76, 0x41, 0x85, 0x4c, 0x2f, 0xb5, 0x1d, 0x6b, 0x70, 0x9b, 0x89, 0x3d, 0xfc}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:11:38.964638 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.182932ms
SaveRDFNode: 2020/08/12 09:11:38.964650 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007ccba0)}
rdfUIDdb: 2020/08/12 09:11:38.964656 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.964660 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.964666 Received UID: X18=
SaveRDFNode: 2020/08/12 09:11:38.964676 a: = db.Item{PKey:[]uint8{0x1b, 0xb8, 0x7e, 0x52, 0x9c, 0xc0, 0x4a, 0xa4, 0xa1, 0x5d, 0xdd, 0x4b, 0xaf, 0x1e, 0xe2, 0xa}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:11:38.966139 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.128027ms
SaveRDFNode: 2020/08/12 09:11:38.966302 Returned.+++++++++++ No error
DB: 2020/08/12 09:11:38.967944 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.231036ms
SaveRDFNode: 2020/08/12 09:11:38.967957 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007ccba0)}
rdfUIDdb: 2020/08/12 09:11:38.967963 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:11:38.967967 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:11:38.967973 Received UID: X18=
SaveRDFNode: 2020/08/12 09:11:38.967983 a: = db.Item{PKey:[]uint8{0x1b, 0xb8, 0x7e, 0x52, 0x9c, 0xc0, 0x4a, 0xa4, 0xa1, 0x5d, 0xdd, 0x4b, 0xaf, 0x1e, 0xe2, 0xa}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:11:38.971161 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.122893ms
SaveRDFNode: 2020/08/12 09:11:38.971171 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 09:11:38.971178 send on	uuid.AttachCh
rdfLoader: 2020/08/12 09:11:38.971181 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 09:11:38.971189 attachnaode: X5shFhHZTQGOHz+knv9uxw==, nQzFdkGFTC+1HWtwm4k9/A==, A#G#:S
DB: 2020/08/12 09:11:38.975470 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.354484ms
DB: 2020/08/12 09:11:38.984211 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 8.238562ms
AttachNode: main 2020/08/12 09:11:38.984383 FetchForUpdate: nQzFdkGFTC+1HWtwm4k9/A== sortK A#G#:S 
FetchForUpdate: 2020/08/12 09:11:38.984394 ** Cache FetchForUpdate Cache Key Value: [nQzFdkGFTC+1HWtwm4k9/A==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:11:38.984399 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:38.984403 FFU: acquired gLock
AttachNode: gr1 2020/08/12 09:11:38.984733 Enter...gr1 FetchForUpdate X5shFhHZTQGOHz+knv9uxw==
FetchForUpdate: 2020/08/12 09:11:38.984744 ** Cache FetchForUpdate Cache Key Value: [X5shFhHZTQGOHz+knv9uxw==]   sortk: A#
FetchForUpdate: 2020/08/12 09:11:38.984749 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:38.984753 FFU: acquired gLock
DB: 2020/08/12 09:11:38.987314 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.469879ms
FetchForUpdate: 2020/08/12 09:11:38.987367 len(nb): 1
FetchForUpdate: 2020/08/12 09:11:38.987373 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:38.987377 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:38.987381 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:38.987384 e.NodeCache == nil FALSE good 
AttachNode: main 2020/08/12 09:11:38.987388 FetchForUpdate:  completed..
DB: 2020/08/12 09:11:38.990817 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.374773ms
Unlock: 2020/08/12 09:11:38.990828 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 09:11:38.990858 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:38.990862 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 09:11:38.990870 About to send on xch : client.ovflTarget{tUID:util.UID{0x9d, 0xc, 0xc5, 0x76, 0x41, 0x85, 0x4c, 0x2f, 0xb5, 0x1d, 0x6b, 0x70, 0x9b, 0x89, 0x3d, 0xfc}, itemId:0}
DB: 2020/08/12 09:11:39.001656 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 16.281878ms
FetchForUpdate: 2020/08/12 09:11:39.001783 len(nb): 7
FetchForUpdate: 2020/08/12 09:11:39.001791 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.001796 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.001800 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.001805 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:11:39.001810 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 09:11:39.001814 GetType
GetType: 2020/08/12 09:11:39.001835  %s : %#vA#G#:S&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#G#:S 0  false [] [] [] [] [] [[95 95]] [] [] [] [] [1] [0]}
GetType: 2020/08/12 09:11:39.001847  %s : %#vA#T&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#T 0 Person false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.001858  %s : %#vA#:A&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:A 62  false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.001872  %s : %#vA#:C&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:C 0  false [] [] [] [] [] [] [] [Alfa Fiat Honda] [] [] [] []}
GetType: 2020/08/12 09:11:39.001883  %s : %#vA#:D&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:D 0 13 March 1958 false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.001894  %s : %#vA#:N&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:N 0 Ross Payne false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.001904  %s : %#vA#G#:F&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#G#:F 0  false [] [] [] [] [] [[95 95]] [] [] [] [] [1] [0]}
AttachNode: gr1 2020/08/12 09:11:39.001910 Sccuess for GetType()
AttachNode: gr1 2020/08/12 09:11:39.001923 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 09:11:39.001930 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 09:11:39.001947 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 09:11:39.001952 Enter UnmarshalCache(cnv); 
GetType: 2020/08/12 09:11:39.001978  %s : %#vA#G#:S&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#G#:S 0  false [] [] [] [] [] [[95 95]] [] [] [] [] [1] [0]}
GetType: 2020/08/12 09:11:39.001989  %s : %#vA#T&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#T 0 Person false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.002000  %s : %#vA#:A&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:A 62  false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.002011  %s : %#vA#:C&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:C 0  false [] [] [] [] [] [] [] [Alfa Fiat Honda] [] [] [] []}
GetType: 2020/08/12 09:11:39.002021  %s : %#vA#:D&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:D 0 13 March 1958 false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.002031  %s : %#vA#:N&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:N 0 Ross Payne false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.002041  %s : %#vA#G#:F&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#G#:F 0  false [] [] [] [] [] [[95 95]] [] [] [] [] [1] [0]}
Unlock: 2020/08/12 09:11:39.002059 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 09:11:39.002101 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:39.002107 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 09:11:39.002112 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 09:11:39.002118 target read from xch... 
AttachNode: gr1 2020/08/12 09:11:39.002123 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 09:11:39.002128 ** Cache FetchForUpdate Cache Key Value: [nQzFdkGFTC+1HWtwm4k9/A==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:11:39.002133 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:39.002137 FFU: released gLock
FetchForUpdate: 2020/08/12 09:11:39.002142 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.002146 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.002150 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.002154 e.NodeCache == nil FALSE good 
DB: 2020/08/12 09:11:39.007675 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.461015ms
DB: 2020/08/12 09:11:39.011765 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.527652ms
DB: 2020/08/12 09:11:39.017084 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.886716ms
DB: 2020/08/12 09:11:39.023894 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.437724ms
DB: 2020/08/12 09:11:39.027793 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.583809ms
DB: 2020/08/12 09:11:39.034908 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.786189ms
DB: 2020/08/12 09:11:39.042366 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.132559ms
DB: 2020/08/12 09:11:39.046876 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.181239ms
DB: 2020/08/12 09:11:39.051149 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.946348ms
AttachNode: gr1 2020/08/12 09:11:39.051160 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 09:11:39.051165 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 09:11:39.051449 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:39.051457 Success: RWMutex UNLOCKed
DB: 2020/08/12 09:11:39.055681 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.024318ms
FetchForUpdate: 2020/08/12 09:11:39.055702 ** Cache FetchForUpdate Cache Key Value: [nQzFdkGFTC+1HWtwm4k9/A==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:11:39.055707 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:39.055711 FFU: released gLock
FetchForUpdate: 2020/08/12 09:11:39.055715 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.055718 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.055722 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.055725 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:11:39.055730 Errored: SetUpredAvailable :for  nQzFdkGFTC+1HWtwm4k9/A==
Cache: 2020/08/12 09:11:39.055736 In SetUpredAvailable: pUid, tUID:  nQzFdkGFTC+1HWtwm4k9/A== nQzFdkGFTC+1HWtwm4k9/A== A#G#:S
Cache: 2020/08/12 09:11:39.055740 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 09:11:39.059823 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.027824ms
Unlock: 2020/08/12 09:11:39.059839 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 09:11:39.060121 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:39.060132 Success: RWMutex UNLOCKed
DB: 2020/08/12 09:11:39.066996 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.798727ms
rdfLoader: 2020/08/12 09:11:39.067111 attachnaode: X5shFhHZTQGOHz+knv9uxw==, G7h+UpzASqShXd1Lrx7iCg==, A#G#:S
DB: 2020/08/12 09:11:39.071217 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.877009ms
DB: 2020/08/12 09:11:39.078609 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.202585ms
AttachNode: main 2020/08/12 09:11:39.078628 FetchForUpdate: G7h+UpzASqShXd1Lrx7iCg== sortK A#G#:S 
FetchForUpdate: 2020/08/12 09:11:39.078634 ** Cache FetchForUpdate Cache Key Value: [G7h+UpzASqShXd1Lrx7iCg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:11:39.078640 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:39.078645 FFU: acquired gLock
AttachNode: gr1 2020/08/12 09:11:39.078997 Enter...gr1 FetchForUpdate X5shFhHZTQGOHz+knv9uxw==
FetchForUpdate: 2020/08/12 09:11:39.079043 ** Cache FetchForUpdate Cache Key Value: [X5shFhHZTQGOHz+knv9uxw==]   sortk: A#
FetchForUpdate: 2020/08/12 09:11:39.079054 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:39.079059 FFU: released gLock
FetchForUpdate: 2020/08/12 09:11:39.079064 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.079068 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.079072 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.079077 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:11:39.079082 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 09:11:39.079087 GetType
GetType: 2020/08/12 09:11:39.079120  %s : %#vA#G#:S&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#G#:S 0  false [] [] [] [] [] [[95 95]] [] [] [] [] [1] [0]}
GetType: 2020/08/12 09:11:39.079132  %s : %#vA#T&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#T 0 Person false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.079144  %s : %#vA#:A&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:A 62  false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.079156  %s : %#vA#:C&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:C 0  false [] [] [] [] [] [] [] [Alfa Fiat Honda] [] [] [] []}
GetType: 2020/08/12 09:11:39.079170  %s : %#vA#:D&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:D 0 13 March 1958 false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.079182  %s : %#vA#:N&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:N 0 Ross Payne false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.079388  %s : %#vA#G#:F&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#G#:F 0  false [] [] [] [] [] [[95 95]] [] [] [] [] [1] [0]}
AttachNode: gr1 2020/08/12 09:11:39.079393 Sccuess for GetType()
AttachNode: gr1 2020/08/12 09:11:39.079501 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 09:11:39.079627 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 09:11:39.079705 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 09:11:39.079713 Enter UnmarshalCache(cnv); 
GetType: 2020/08/12 09:11:39.080129  %s : %#vA#:A&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:A 62  false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.080146  %s : %#vA#:C&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:C 0  false [] [] [] [] [] [] [] [Alfa Fiat Honda] [] [] [] []}
GetType: 2020/08/12 09:11:39.080157  %s : %#vA#:D&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:D 0 13 March 1958 false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.080171  %s : %#vA#:N&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#:N 0 Ross Payne false [] [] [] [] [] [] [] [] [] [] [] []}
GetType: 2020/08/12 09:11:39.080240  %s : %#vA#G#:F&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#G#:F 0  false [] [] [] [] [] [[95 95]] [] [] [] [] [1] [0]}
GetType: 2020/08/12 09:11:39.080256  %s : %#vA#G#:S&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#G#:S 0  false [] [] [] [] [] [[95 95]] [] [] [] [] [1] [0]}
GetType: 2020/08/12 09:11:39.080270  %s : %#vA#T&{[95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199] A#T 0 Person false [] [] [] [] [] [] [] [] [] [] [] []}
Unlock: 2020/08/12 09:11:39.080626 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 09:11:39.081081 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:39.081090 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 09:11:39.081094 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 09:11:39.081607 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.770028ms
FetchForUpdate: 2020/08/12 09:11:39.081672 len(nb): 1
FetchForUpdate: 2020/08/12 09:11:39.081679 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.081682 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.081686 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.081689 e.NodeCache == nil FALSE good 
AttachNode: main 2020/08/12 09:11:39.081693 FetchForUpdate:  completed..
DB: 2020/08/12 09:11:39.085981 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.101786ms
Unlock: 2020/08/12 09:11:39.085993 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 09:11:39.086241 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:39.086249 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 09:11:39.086258 About to send on xch : client.ovflTarget{tUID:util.UID{0x1b, 0xb8, 0x7e, 0x52, 0x9c, 0xc0, 0x4a, 0xa4, 0xa1, 0x5d, 0xdd, 0x4b, 0xaf, 0x1e, 0xe2, 0xa}, itemId:0}
AttachNode: gr1 2020/08/12 09:11:39.086270 target read from xch... 
AttachNode: gr1 2020/08/12 09:11:39.086276 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 09:11:39.086281 ** Cache FetchForUpdate Cache Key Value: [G7h+UpzASqShXd1Lrx7iCg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:11:39.086285 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:39.086288 FFU: released gLock
FetchForUpdate: 2020/08/12 09:11:39.086292 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.086296 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.086299 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.086303 e.NodeCache == nil FALSE good 
DB: 2020/08/12 09:11:39.093113 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.476147ms
DB: 2020/08/12 09:11:39.096745 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.450997ms
DB: 2020/08/12 09:11:39.100871 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.73799ms
DB: 2020/08/12 09:11:39.107477 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.275146ms
DB: 2020/08/12 09:11:39.111267 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.47633ms
DB: 2020/08/12 09:11:39.115791 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.01267ms
DB: 2020/08/12 09:11:39.121544 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.447618ms
DB: 2020/08/12 09:11:39.125354 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.434433ms
DB: 2020/08/12 09:11:39.129539 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.899666ms
AttachNode: gr1 2020/08/12 09:11:39.129551 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 09:11:39.129555 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 09:11:39.129868 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:39.129877 Success: RWMutex UNLOCKed
DB: 2020/08/12 09:11:39.133892 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.731812ms
FetchForUpdate: 2020/08/12 09:11:39.133908 ** Cache FetchForUpdate Cache Key Value: [G7h+UpzASqShXd1Lrx7iCg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:11:39.133913 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:39.133918 FFU: released gLock
FetchForUpdate: 2020/08/12 09:11:39.133922 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.133927 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.133931 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.133935 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:11:39.133941 Errored: SetUpredAvailable :for  G7h+UpzASqShXd1Lrx7iCg==
Cache: 2020/08/12 09:11:39.133948 In SetUpredAvailable: pUid, tUID:  G7h+UpzASqShXd1Lrx7iCg== G7h+UpzASqShXd1Lrx7iCg== A#G#:S
Cache: 2020/08/12 09:11:39.133953 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 09:11:39.137779 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.78741ms
Unlock: 2020/08/12 09:11:39.137791 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 09:11:39.137812 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:39.137816 Success: RWMutex UNLOCKed
DB: 2020/08/12 09:11:39.142186 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.313868ms
rdfLoader: 2020/08/12 09:11:39.142204 attachnaode: nQzFdkGFTC+1HWtwm4k9/A==, X5shFhHZTQGOHz+knv9uxw==, A#G#:S
DB: 2020/08/12 09:11:39.146352 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.093878ms
DB: 2020/08/12 09:11:39.150559 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.146321ms
AttachNode: main 2020/08/12 09:11:39.150576 FetchForUpdate: X5shFhHZTQGOHz+knv9uxw== sortK A#G#:S 
FetchForUpdate: 2020/08/12 09:11:39.150582 ** Cache FetchForUpdate Cache Key Value: [X5shFhHZTQGOHz+knv9uxw==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:11:39.150588 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:39.150592 FFU: released gLock
FetchForUpdate: 2020/08/12 09:11:39.150596 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.150601 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.150605 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.150609 e.NodeCache == nil FALSE good 
AttachNode: main 2020/08/12 09:11:39.150614 FetchForUpdate:  completed..
AttachNode: gr1 2020/08/12 09:11:39.150838 Enter...gr1 FetchForUpdate nQzFdkGFTC+1HWtwm4k9/A==
FetchForUpdate: 2020/08/12 09:11:39.150850 ** Cache FetchForUpdate Cache Key Value: [nQzFdkGFTC+1HWtwm4k9/A==]   sortk: A#
FetchForUpdate: 2020/08/12 09:11:39.150855 FFU: release gLock
FetchForUpdate: 2020/08/12 09:11:39.150859 FFU: released gLock
FetchForUpdate: 2020/08/12 09:11:39.150869 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:11:39.150873 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:11:39.150885 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:11:39.150890 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:11:39.150895 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 09:11:39.150899 GetType
GetType: 2020/08/12 09:11:39.150935  %s : %#vA#G#:S&{[157 12 197 118 65 133 76 47 181 29 107 112 155 137 61 252] A#G#:S 0  false [] [] [] [] [] [[95 95] [95 155 33 22 17 217 77 1 142 31 63 164 158 255 110 199]] [] [] [] [] [1 1] [0 0]}
AttachNode: gr1 2020/08/12 09:11:39.150941 Error in GetType
DB: 2020/08/12 09:11:39.154719 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.043758ms
Unlock: 2020/08/12 09:11:39.154734 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 09:11:39.155079 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:11:39.155087 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 09:11:39.155096 About to send on xch : client.ovflTarget{tUID:util.UID{0x5f, 0x9b, 0x21, 0x16, 0x11, 0xd9, 0x4d, 0x1, 0x8e, 0x1f, 0x3f, 0xa4, 0x9e, 0xff, 0x6e, 0xc7}, itemId:0}
DB:2020/08/12 09:14:35 log.go:18: ===============================================================================
grmgr: 2020/08/12 09:14:36.000357 Powering on...
rdfLoader: 2020/08/12 09:14:36.000670 verify started....xx.
rdfLoader: 2020/08/12 09:14:36.000694 saveNode started......
rdfuuid: 2020/08/12 09:14:36.000705 Powering on...
rdfLoader: 2020/08/12 09:14:36.000712 *************** All started 
rdfLoader: 2020/08/12 09:14:36.014139 .  getType..
rdfLoader: 2020/08/12 09:14:36.014158 node.TyName : [Person]
DB: 2020/08/12 09:14:36.094991 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 80.775263ms
verify: 2020/08/12 09:14:36.095158 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 09:14:36.095205 Find Ty Address
rdfLoader: 2020/08/12 09:14:36.095212 Find Ty Age
rdfLoader: 2020/08/12 09:14:36.095220 Find Ty Cars
rdfLoader: 2020/08/12 09:14:36.095226 Add to SS . [Honda]
rdfLoader: 2020/08/12 09:14:36.095232 Add to SS . [Alfa]
rdfLoader: 2020/08/12 09:14:36.095237 Find Ty DOB
rdfLoader: 2020/08/12 09:14:36.095242 Find Ty Friends
rdfLoader: 2020/08/12 09:14:36.095247 Find Ty Jobs
rdfLoader: 2020/08/12 09:14:36.095251 Find Ty Name
rdfLoader: 2020/08/12 09:14:36.095257 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 09:14:36.095262 Find Ty Siblings
rdfLoader: 2020/08/12 09:14:36.095273 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 09:14:36.095281 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 09:14:36.095287 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 09:14:36.095316 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 09:14:36.095322 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 09:14:36.095350 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095357 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095365 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095371 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095387 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095394 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095413 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 09:14:36.095419 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 09:14:36.095427 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003845a0)}
SaveRDFNode: 2020/08/12 09:14:36.095432 Waiting for UID ......................
rdfUIDdb: 2020/08/12 09:14:36.095443 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.095448 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.095455 UID received  : jVvkLpUQSR6DVo5f1TvSIA==
verify: 2020/08/12 09:14:36.095685 *** Verify running...... 1
rdfLoader: 2020/08/12 09:14:36.095711 .  getType..
rdfLoader: 2020/08/12 09:14:36.095717 node.TyName : [Person]
verify: 2020/08/12 09:14:36.095738 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 09:14:36.095778 Find Ty Address
rdfLoader: 2020/08/12 09:14:36.095784 Find Ty Age
rdfLoader: 2020/08/12 09:14:36.095790 Find Ty Cars
rdfLoader: 2020/08/12 09:14:36.095796 Add to SS . [Honda]
rdfLoader: 2020/08/12 09:14:36.095801 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 09:14:36.095806 Find Ty DOB
rdfLoader: 2020/08/12 09:14:36.095812 Find Ty Friends
rdfLoader: 2020/08/12 09:14:36.095817 Find Ty Jobs
rdfLoader: 2020/08/12 09:14:36.095822 Find Ty Name
rdfLoader: 2020/08/12 09:14:36.095827 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 09:14:36.095838 Find Ty Siblings
rdfLoader: 2020/08/12 09:14:36.095851 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 09:14:36.095858 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 09:14:36.095864 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 09:14:36.095893 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 09:14:36.095899 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 09:14:36.095920 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095927 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095935 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095942 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095948 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095954 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.095961 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 09:14:36.095966 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 09:14:36.095978 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000384ae0)}
SaveRDFNode: 2020/08/12 09:14:36.095983 Waiting for UID ......................
rdfUIDdb: 2020/08/12 09:14:36.095992 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.095996 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.096003 UID received  : 9AYZeUi6QDq94I7YHUmxwg==
verify: 2020/08/12 09:14:36.096366 *** Verify running...... 1
rdfLoader: 2020/08/12 09:14:36.096426 .  getType..
rdfLoader: 2020/08/12 09:14:36.096432 node.TyName : [Person]
verify: 2020/08/12 09:14:36.096452 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 09:14:36.096491 Find Ty Address
rdfLoader: 2020/08/12 09:14:36.096497 Find Ty Age
rdfLoader: 2020/08/12 09:14:36.096503 Find Ty Cars
rdfLoader: 2020/08/12 09:14:36.096510 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 09:14:36.096516 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 09:14:36.096521 Add to SS . [Honda]
rdfLoader: 2020/08/12 09:14:36.096526 Find Ty DOB
rdfLoader: 2020/08/12 09:14:36.096531 Find Ty Friends
rdfLoader: 2020/08/12 09:14:36.096536 Find Ty Jobs
rdfLoader: 2020/08/12 09:14:36.096541 Find Ty Name
rdfLoader: 2020/08/12 09:14:36.096546 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 09:14:36.096551 Find Ty Siblings
rdfLoader: 2020/08/12 09:14:36.096560 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 09:14:36.096568 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 09:14:36.096574 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 09:14:36.096599 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 09:14:36.096605 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 09:14:36.096625 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.096632 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.096639 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.096645 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.096654 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.096661 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.096667 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 09:14:36.096673 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 09:14:36.096679 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000385020)}
SaveRDFNode: 2020/08/12 09:14:36.096684 Waiting for UID ......................
rdfUIDdb: 2020/08/12 09:14:36.096692 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.096697 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.096703 UID received  : iLxEKrdNQbOlT8rPNl2l5w==
verify: 2020/08/12 09:14:36.096874 *** Verify running...... 2
rdfLoader: 2020/08/12 09:14:36.096884 .  getType..
rdfLoader: 2020/08/12 09:14:36.096889 node.TyName : [Person]
verify: 2020/08/12 09:14:36.096913 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 09:14:36.096967 Find Ty Address
rdfLoader: 2020/08/12 09:14:36.096974 Find Ty Age
rdfLoader: 2020/08/12 09:14:36.096980 Find Ty Cars
rdfLoader: 2020/08/12 09:14:36.096986 Add to SS . [Bentley]
rdfLoader: 2020/08/12 09:14:36.096991 Find Ty DOB
rdfLoader: 2020/08/12 09:14:36.096996 Find Ty Friends
rdfLoader: 2020/08/12 09:14:36.097000 Find Ty Jobs
rdfLoader: 2020/08/12 09:14:36.097005 Find Ty Name
rdfLoader: 2020/08/12 09:14:36.097010 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 09:14:36.097015 Find Ty Siblings
rdfLoader: 2020/08/12 09:14:36.097022 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 09:14:36.097029 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 09:14:36.097035 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 09:14:36.097058 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 09:14:36.097065 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 09:14:36.097088 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.097096 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.097102 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.097110 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.097116 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.097123 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 09:14:36.097130 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 09:14:36.097134 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 09:14:36.097141 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000385440)}
SaveRDFNode: 2020/08/12 09:14:36.097145 Waiting for UID ......................
rdfUIDdb: 2020/08/12 09:14:36.097154 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.097158 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.097164 UID received  : YNkr5WhIT/KlEi2mxXjo0g==
verify: 2020/08/12 09:14:36.097316 *** Verify running...... 2
verify: 2020/08/12 09:14:36.099714 verify exited.....
DB: 2020/08/12 09:14:36.107523 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.029037ms
DB: 2020/08/12 09:14:36.114299 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.266416ms
DB: 2020/08/12 09:14:36.118584 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.241735ms
DB: 2020/08/12 09:14:36.122364 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.74304ms
DB: 2020/08/12 09:14:36.125468 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 28.27359ms
DB: 2020/08/12 09:14:36.126039 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.631179ms
DB: 2020/08/12 09:14:36.128077 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 31.346624ms
DB: 2020/08/12 09:14:36.128879 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 21.303735ms
DB: 2020/08/12 09:14:36.129148 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.626834ms
DB: 2020/08/12 09:14:36.129696 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.610986ms
SaveRDFNode: 2020/08/12 09:14:36.129711 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/12 09:14:36.129719 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.129723 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.129729 Received UID: X18=
SaveRDFNode: 2020/08/12 09:14:36.129743 a: = db.Item{PKey:[]uint8{0xf4, 0x6, 0x19, 0x79, 0x48, 0xba, 0x40, 0x3a, 0xbd, 0xe0, 0x8e, 0xd8, 0x1d, 0x49, 0xb1, 0xc2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:14:36.131791 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.681765ms
DB: 2020/08/12 09:14:36.132749 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.820789ms
DB: 2020/08/12 09:14:36.133021 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.84294ms
DB: 2020/08/12 09:14:36.133748 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.97419ms
SaveRDFNode: 2020/08/12 09:14:36.133761 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/12 09:14:36.133768 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.133772 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.133778 Received UID: X18=
SaveRDFNode: 2020/08/12 09:14:36.133788 a: = db.Item{PKey:[]uint8{0xf4, 0x6, 0x19, 0x79, 0x48, 0xba, 0x40, 0x3a, 0xbd, 0xe0, 0x8e, 0xd8, 0x1d, 0x49, 0xb1, 0xc2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:14:36.135680 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.667464ms
DB: 2020/08/12 09:14:36.136599 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.545942ms
DB: 2020/08/12 09:14:36.136879 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.096184ms
DB: 2020/08/12 09:14:36.137480 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.662787ms
SaveRDFNode: 2020/08/12 09:14:36.137490 Returned.+++++++++++ No error
DB: 2020/08/12 09:14:36.139252 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.539093ms
DB: 2020/08/12 09:14:36.140073 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.419705ms
SaveRDFNode: 2020/08/12 09:14:36.140086 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385440)}
rdfUIDdb: 2020/08/12 09:14:36.140092 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.140097 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.140102 Received UID: X18=
SaveRDFNode: 2020/08/12 09:14:36.140114 a: = db.Item{PKey:[]uint8{0x60, 0xd9, 0x2b, 0xe5, 0x68, 0x48, 0x4f, 0xf2, 0xa5, 0x12, 0x2d, 0xa6, 0xc5, 0x78, 0xe8, 0xd2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:14:36.140619 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.700631ms
SaveRDFNode: 2020/08/12 09:14:36.140632 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/12 09:14:36.140658 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.140663 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.140669 Received UID: X18=
SaveRDFNode: 2020/08/12 09:14:36.140680 a: = db.Item{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:14:36.142960 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.670029ms
SaveRDFNode: 2020/08/12 09:14:36.142972 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385020)}
rdfUIDdb: 2020/08/12 09:14:36.142978 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.142982 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.142987 Received UID: X18=
SaveRDFNode: 2020/08/12 09:14:36.142997 a: = db.Item{PKey:[]uint8{0x88, 0xbc, 0x44, 0x2a, 0xb7, 0x4d, 0x41, 0xb3, 0xa5, 0x4f, 0xca, 0xcf, 0x36, 0x5d, 0xa5, 0xe7}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:14:36.143671 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.525487ms
SaveRDFNode: 2020/08/12 09:14:36.143682 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385440)}
rdfUIDdb: 2020/08/12 09:14:36.143688 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.143691 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.143696 Received UID: X18=
SaveRDFNode: 2020/08/12 09:14:36.143706 a: = db.Item{PKey:[]uint8{0x60, 0xd9, 0x2b, 0xe5, 0x68, 0x48, 0x4f, 0xf2, 0xa5, 0x12, 0x2d, 0xa6, 0xc5, 0x78, 0xe8, 0xd2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:14:36.144257 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.54618ms
SaveRDFNode: 2020/08/12 09:14:36.144268 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/12 09:14:36.144273 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.144277 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.144282 Received UID: X18=
SaveRDFNode: 2020/08/12 09:14:36.144292 a: = db.Item{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:14:36.146544 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.515483ms
SaveRDFNode: 2020/08/12 09:14:36.146557 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385020)}
rdfUIDdb: 2020/08/12 09:14:36.146563 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 09:14:36.146567 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 09:14:36.146572 Received UID: X18=
SaveRDFNode: 2020/08/12 09:14:36.146582 a: = db.Item{PKey:[]uint8{0x88, 0xbc, 0x44, 0x2a, 0xb7, 0x4d, 0x41, 0xb3, 0xa5, 0x4f, 0xca, 0xcf, 0x36, 0x5d, 0xa5, 0xe7}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 09:14:36.147266 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.533906ms
SaveRDFNode: 2020/08/12 09:14:36.147487 Returned.+++++++++++ No error
DB: 2020/08/12 09:14:36.147938 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.611652ms
SaveRDFNode: 2020/08/12 09:14:36.147947 Returned.+++++++++++ No error
DB: 2020/08/12 09:14:36.150373 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.763465ms
SaveRDFNode: 2020/08/12 09:14:36.150385 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 09:14:36.150393 send on	uuid.AttachCh
rdfLoader: 2020/08/12 09:14:36.150397 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 09:14:36.150404 attachnaode: jVvkLpUQSR6DVo5f1TvSIA==, 9AYZeUi6QDq94I7YHUmxwg==, A#G#:S
DB: 2020/08/12 09:14:36.155371 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.994386ms
DB: 2020/08/12 09:14:36.162335 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.887506ms
AttachNode: main 2020/08/12 09:14:36.162349 FetchForUpdate: 9AYZeUi6QDq94I7YHUmxwg== sortK A#G#:S 
FetchForUpdate: 2020/08/12 09:14:36.162355 ** Cache FetchForUpdate Cache Key Value: [9AYZeUi6QDq94I7YHUmxwg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:14:36.162360 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.162363 FFU: acquired gLock
AttachNode: gr1 2020/08/12 09:14:36.162545 Enter...gr1 FetchForUpdate jVvkLpUQSR6DVo5f1TvSIA==
FetchForUpdate: 2020/08/12 09:14:36.162554 ** Cache FetchForUpdate Cache Key Value: [jVvkLpUQSR6DVo5f1TvSIA==]   sortk: A#
FetchForUpdate: 2020/08/12 09:14:36.162559 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.162562 FFU: acquired gLock
DB: 2020/08/12 09:14:36.165422 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.997535ms
FetchForUpdate: 2020/08/12 09:14:36.165479 len(nb): 1
FetchForUpdate: 2020/08/12 09:14:36.165487 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.165491 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.165495 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.165500 e.NodeCache == nil FALSE good 
AttachNode: main 2020/08/12 09:14:36.165505 FetchForUpdate:  completed..
DB: 2020/08/12 09:14:36.169275 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.709787ms
Unlock: 2020/08/12 09:14:36.169287 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 09:14:36.169854 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.169864 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 09:14:36.169880 About to send on xch : client.ovflTarget{tUID:util.UID{0xf4, 0x6, 0x19, 0x79, 0x48, 0xba, 0x40, 0x3a, 0xbd, 0xe0, 0x8e, 0xd8, 0x1d, 0x49, 0xb1, 0xc2}, itemId:0}
DB: 2020/08/12 09:14:36.181641 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 18.982556ms
FetchForUpdate: 2020/08/12 09:14:36.181966 len(nb): 7
FetchForUpdate: 2020/08/12 09:14:36.181993 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.181997 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.182001 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.182004 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:14:36.182008 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 09:14:36.182012 GetType
GetType:2020/08/12 09:14:36.182016 len(d.m)= 7
GetType: 2020/08/12 09:14:36.182049  A#:A : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.182063  A#:C : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.182075  A#:D : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.182101  A#:N : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.182114  A#G#:F : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 09:14:36.182126  A#G#:S : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 09:14:36.182157  A#T : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 09:14:36.182163 Sccuess for GetType()
AttachNode: gr1 2020/08/12 09:14:36.182537 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 09:14:36.182860 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 09:14:36.183114 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 09:14:36.183124 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 09:14:36.185479 len(d.m)= 7
GetType: 2020/08/12 09:14:36.185520  A#G#:F : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 09:14:36.185536  A#G#:S : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 09:14:36.185574  A#T : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.185589  A#:A : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.185604  A#:C : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.185622  A#:D : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.185633  A#:N : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 09:14:36.186723 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 09:14:36.187268 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.187277 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 09:14:36.187282 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 09:14:36.187287 target read from xch... 
AttachNode: gr1 2020/08/12 09:14:36.187292 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 09:14:36.187297 ** Cache FetchForUpdate Cache Key Value: [9AYZeUi6QDq94I7YHUmxwg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:14:36.187301 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.187304 FFU: released gLock
FetchForUpdate: 2020/08/12 09:14:36.187308 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.187311 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.187315 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.187318 e.NodeCache == nil FALSE good 
DB: 2020/08/12 09:14:36.193363 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.552841ms
DB: 2020/08/12 09:14:36.197893 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.481069ms
DB: 2020/08/12 09:14:36.202571 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.564279ms
DB: 2020/08/12 09:14:36.209061 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.41234ms
DB: 2020/08/12 09:14:36.213344 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.936564ms
DB: 2020/08/12 09:14:36.218098 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.388201ms
DB: 2020/08/12 09:14:36.224676 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.258017ms
DB: 2020/08/12 09:14:36.228640 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.64596ms
DB: 2020/08/12 09:14:36.232732 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.781301ms
AttachNode: gr1 2020/08/12 09:14:36.232743 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 09:14:36.232748 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 09:14:36.233001 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.233009 Success: RWMutex UNLOCKed
DB: 2020/08/12 09:14:36.237033 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.852987ms
FetchForUpdate: 2020/08/12 09:14:36.237048 ** Cache FetchForUpdate Cache Key Value: [9AYZeUi6QDq94I7YHUmxwg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:14:36.237053 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.237058 FFU: released gLock
FetchForUpdate: 2020/08/12 09:14:36.237062 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.237077 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.237081 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.237086 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:14:36.237091 Errored: SetUpredAvailable :for  9AYZeUi6QDq94I7YHUmxwg==
Cache: 2020/08/12 09:14:36.237097 In SetUpredAvailable: pUid, tUID:  9AYZeUi6QDq94I7YHUmxwg== 9AYZeUi6QDq94I7YHUmxwg== A#G#:S
Cache: 2020/08/12 09:14:36.237102 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 09:14:36.241125 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.971892ms
Unlock: 2020/08/12 09:14:36.241136 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 09:14:36.241409 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.241418 Success: RWMutex UNLOCKed
DB: 2020/08/12 09:14:36.250336 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 8.855579ms
rdfLoader: 2020/08/12 09:14:36.250434 attachnaode: jVvkLpUQSR6DVo5f1TvSIA==, iLxEKrdNQbOlT8rPNl2l5w==, A#G#:S
DB: 2020/08/12 09:14:36.254699 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.000806ms
DB: 2020/08/12 09:14:36.259538 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.497521ms
AttachNode: main 2020/08/12 09:14:36.259572 FetchForUpdate: iLxEKrdNQbOlT8rPNl2l5w== sortK A#G#:S 
FetchForUpdate: 2020/08/12 09:14:36.259579 ** Cache FetchForUpdate Cache Key Value: [iLxEKrdNQbOlT8rPNl2l5w==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:14:36.259583 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.259587 FFU: acquired gLock
AttachNode: gr1 2020/08/12 09:14:36.259979 Enter...gr1 FetchForUpdate jVvkLpUQSR6DVo5f1TvSIA==
FetchForUpdate: 2020/08/12 09:14:36.259989 ** Cache FetchForUpdate Cache Key Value: [jVvkLpUQSR6DVo5f1TvSIA==]   sortk: A#
FetchForUpdate: 2020/08/12 09:14:36.259994 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.259998 FFU: released gLock
FetchForUpdate: 2020/08/12 09:14:36.260001 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.260005 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.260009 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.260013 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:14:36.260022 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 09:14:36.260025 GetType
GetType:2020/08/12 09:14:36.260030 len(d.m)= 7
GetType: 2020/08/12 09:14:36.260085  A#G#:S : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 09:14:36.260100  A#T : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.260114  A#:A : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.260127  A#:C : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.260147  A#:D : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.260159  A#:N : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.260171  A#G#:F : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
AttachNode: gr1 2020/08/12 09:14:36.260175 Sccuess for GetType()
AttachNode: gr1 2020/08/12 09:14:36.260295 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 09:14:36.260387 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 09:14:36.260493 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 09:14:36.260503 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 09:14:36.261173 len(d.m)= 7
GetType: 2020/08/12 09:14:36.261196  A#:D : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.261221  A#:N : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.261249  A#G#:F : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 09:14:36.261262  A#G#:S : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 09:14:36.261275  A#T : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.261287  A#:A : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 09:14:36.261307  A#:C : &block.DataItem{PKey:[]uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 09:14:36.261644 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 09:14:36.262002 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.262010 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 09:14:36.262014 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 09:14:36.262628 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.823348ms
FetchForUpdate: 2020/08/12 09:14:36.262684 len(nb): 1
FetchForUpdate: 2020/08/12 09:14:36.262691 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.262695 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.262698 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.262702 e.NodeCache == nil FALSE good 
AttachNode: main 2020/08/12 09:14:36.262706 FetchForUpdate:  completed..
DB: 2020/08/12 09:14:36.266773 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.820433ms
Unlock: 2020/08/12 09:14:36.266784 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 09:14:36.267070 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.267079 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 09:14:36.267088 About to send on xch : client.ovflTarget{tUID:util.UID{0x88, 0xbc, 0x44, 0x2a, 0xb7, 0x4d, 0x41, 0xb3, 0xa5, 0x4f, 0xca, 0xcf, 0x36, 0x5d, 0xa5, 0xe7}, itemId:0}
AttachNode: gr1 2020/08/12 09:14:36.267099 target read from xch... 
AttachNode: gr1 2020/08/12 09:14:36.267104 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 09:14:36.267108 ** Cache FetchForUpdate Cache Key Value: [iLxEKrdNQbOlT8rPNl2l5w==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:14:36.267112 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.267117 FFU: released gLock
FetchForUpdate: 2020/08/12 09:14:36.267120 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.267124 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.267127 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.267130 e.NodeCache == nil FALSE good 
DB: 2020/08/12 09:14:36.274051 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.383876ms
DB: 2020/08/12 09:14:36.278224 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.711609ms
DB: 2020/08/12 09:14:36.281992 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.671748ms
DB: 2020/08/12 09:14:36.288234 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.174916ms
DB: 2020/08/12 09:14:36.291796 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.502863ms
DB: 2020/08/12 09:14:36.295936 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.069656ms
DB: 2020/08/12 09:14:36.302496 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.251103ms
DB: 2020/08/12 09:14:36.306311 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.490949ms
DB: 2020/08/12 09:14:36.310819 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.183841ms
AttachNode: gr1 2020/08/12 09:14:36.310846 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 09:14:36.310852 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 09:14:36.311094 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.311104 Success: RWMutex UNLOCKed
DB: 2020/08/12 09:14:36.314828 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.561922ms
FetchForUpdate: 2020/08/12 09:14:36.314841 ** Cache FetchForUpdate Cache Key Value: [iLxEKrdNQbOlT8rPNl2l5w==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:14:36.314847 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.314850 FFU: released gLock
FetchForUpdate: 2020/08/12 09:14:36.314854 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.314858 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.314861 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.314865 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:14:36.314869 Errored: SetUpredAvailable :for  iLxEKrdNQbOlT8rPNl2l5w==
Cache: 2020/08/12 09:14:36.314876 In SetUpredAvailable: pUid, tUID:  iLxEKrdNQbOlT8rPNl2l5w== iLxEKrdNQbOlT8rPNl2l5w== A#G#:S
Cache: 2020/08/12 09:14:36.314880 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 09:14:36.318656 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.740281ms
Unlock: 2020/08/12 09:14:36.318665 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 09:14:36.318916 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.318923 Success: RWMutex UNLOCKed
DB: 2020/08/12 09:14:36.323543 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.562303ms
rdfLoader: 2020/08/12 09:14:36.323641 attachnaode: 9AYZeUi6QDq94I7YHUmxwg==, jVvkLpUQSR6DVo5f1TvSIA==, A#G#:S
DB: 2020/08/12 09:14:36.327836 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.963016ms
DB: 2020/08/12 09:14:36.332709 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.689264ms
AttachNode: main 2020/08/12 09:14:36.332724 FetchForUpdate: jVvkLpUQSR6DVo5f1TvSIA== sortK A#G#:S 
FetchForUpdate: 2020/08/12 09:14:36.332729 ** Cache FetchForUpdate Cache Key Value: [jVvkLpUQSR6DVo5f1TvSIA==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 09:14:36.332734 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.332738 FFU: released gLock
FetchForUpdate: 2020/08/12 09:14:36.332741 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.332745 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.332749 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.332752 e.NodeCache == nil FALSE good 
AttachNode: main 2020/08/12 09:14:36.332757 FetchForUpdate:  completed..
AttachNode: gr1 2020/08/12 09:14:36.333172 Enter...gr1 FetchForUpdate 9AYZeUi6QDq94I7YHUmxwg==
FetchForUpdate: 2020/08/12 09:14:36.333182 ** Cache FetchForUpdate Cache Key Value: [9AYZeUi6QDq94I7YHUmxwg==]   sortk: A#
FetchForUpdate: 2020/08/12 09:14:36.333187 FFU: release gLock
FetchForUpdate: 2020/08/12 09:14:36.333190 FFU: released gLock
FetchForUpdate: 2020/08/12 09:14:36.333194 FFU: acquire eLock
FetchForUpdate: 2020/08/12 09:14:36.333198 FFU: acquired eLock
FetchForUpdate: 2020/08/12 09:14:36.333201 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 09:14:36.333205 e.NodeCache == nil FALSE good 
AttachNode: gr1 2020/08/12 09:14:36.333210 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 09:14:36.333214 GetType
GetType:2020/08/12 09:14:36.333218 len(d.m)= 1
GetType: 2020/08/12 09:14:36.333280  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x6, 0x19, 0x79, 0x48, 0xba, 0x40, 0x3a, 0xbd, 0xe0, 0x8e, 0xd8, 0x1d, 0x49, 0xb1, 0xc2}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
AttachNode: gr1 2020/08/12 09:14:36.333297 Error in GetType
DB: 2020/08/12 09:14:36.337890 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.927505ms
Unlock: 2020/08/12 09:14:36.337904 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 09:14:36.338299 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 09:14:36.338308 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 09:14:36.338318 About to send on xch : client.ovflTarget{tUID:util.UID{0x8d, 0x5b, 0xe4, 0x2e, 0x95, 0x10, 0x49, 0x1e, 0x83, 0x56, 0x8e, 0x5f, 0xd5, 0x3b, 0xd2, 0x20}, itemId:0}
DB:2020/08/12 10:02:06 log.go:18: ===============================================================================
grmgr: 2020/08/12 10:02:06.577202 Powering on...
rdfLoader: 2020/08/12 10:02:06.577919 verify started....xx.
rdfLoader: 2020/08/12 10:02:06.577941 saveNode started......
rdfuuid: 2020/08/12 10:02:06.577952 Powering on...
rdfLoader: 2020/08/12 10:02:06.577958 *************** All started 
rdfLoader: 2020/08/12 10:02:06.585757 .  getType..
rdfLoader: 2020/08/12 10:02:06.585768 node.TyName : [Person]
DB: 2020/08/12 10:02:06.674592 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 88.775262ms
verify: 2020/08/12 10:02:06.674757 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:02:06.674802 Find Ty Address
rdfLoader: 2020/08/12 10:02:06.674808 Find Ty Age
rdfLoader: 2020/08/12 10:02:06.674814 Find Ty Cars
rdfLoader: 2020/08/12 10:02:06.674819 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:02:06.674824 Add to SS . [Alfa]
rdfLoader: 2020/08/12 10:02:06.674829 Find Ty DOB
rdfLoader: 2020/08/12 10:02:06.674834 Find Ty Friends
rdfLoader: 2020/08/12 10:02:06.674838 Find Ty Jobs
rdfLoader: 2020/08/12 10:02:06.674842 Find Ty Name
rdfLoader: 2020/08/12 10:02:06.674847 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:02:06.674851 Find Ty Siblings
rdfLoader: 2020/08/12 10:02:06.674862 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:02:06.674869 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 10:02:06.674875 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 10:02:06.674904 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:02:06.674910 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:02:06.674934 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.674942 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.674948 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.674954 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.674960 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.674966 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.674983 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:02:06.674987 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:02:06.674994 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000017440)}
SaveRDFNode: 2020/08/12 10:02:06.674999 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:02:06.675008 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.675012 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.675018 UID received  : SvRH5SRLTpGnW5oUFDDzjQ==
verify: 2020/08/12 10:02:06.675229 *** Verify running...... 1
rdfLoader: 2020/08/12 10:02:06.675238 .  getType..
rdfLoader: 2020/08/12 10:02:06.675242 node.TyName : [Person]
verify: 2020/08/12 10:02:06.675268 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:02:06.675305 Find Ty Address
rdfLoader: 2020/08/12 10:02:06.675310 Find Ty Age
rdfLoader: 2020/08/12 10:02:06.675315 Find Ty Cars
rdfLoader: 2020/08/12 10:02:06.675320 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:02:06.675325 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 10:02:06.675329 Find Ty DOB
rdfLoader: 2020/08/12 10:02:06.675334 Find Ty Friends
rdfLoader: 2020/08/12 10:02:06.675338 Find Ty Jobs
rdfLoader: 2020/08/12 10:02:06.675341 Find Ty Name
rdfLoader: 2020/08/12 10:02:06.675346 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:02:06.675350 Find Ty Siblings
rdfLoader: 2020/08/12 10:02:06.675358 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:02:06.675365 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 10:02:06.675370 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 10:02:06.675394 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:02:06.675398 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:02:06.675417 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.675425 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.675431 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.675436 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.675442 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.675448 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.675454 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:02:06.675458 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:02:06.675463 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017920)}
SaveRDFNode: 2020/08/12 10:02:06.675467 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:02:06.675475 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.675479 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.675492 UID received  : N7SmR+lhQPOO9PgeAYbHgg==
verify: 2020/08/12 10:02:06.675849 *** Verify running...... 1
rdfLoader: 2020/08/12 10:02:06.675904 .  getType..
rdfLoader: 2020/08/12 10:02:06.675909 node.TyName : [Person]
verify: 2020/08/12 10:02:06.675932 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:02:06.675969 Find Ty Address
rdfLoader: 2020/08/12 10:02:06.675974 Find Ty Age
rdfLoader: 2020/08/12 10:02:06.675979 Find Ty Cars
rdfLoader: 2020/08/12 10:02:06.675984 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 10:02:06.675989 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 10:02:06.675994 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:02:06.675998 Find Ty DOB
rdfLoader: 2020/08/12 10:02:06.676002 Find Ty Friends
rdfLoader: 2020/08/12 10:02:06.676006 Find Ty Jobs
rdfLoader: 2020/08/12 10:02:06.676010 Find Ty Name
rdfLoader: 2020/08/12 10:02:06.676015 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:02:06.676019 Find Ty Siblings
rdfLoader: 2020/08/12 10:02:06.676027 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:02:06.676034 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 10:02:06.676038 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 10:02:06.676063 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:02:06.676067 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:02:06.676087 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676095 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676100 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676106 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676112 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676117 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676123 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:02:06.676127 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:02:06.676133 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0003862a0)}
SaveRDFNode: 2020/08/12 10:02:06.676137 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:02:06.676144 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.676148 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.676153 UID received  : KW5784GsSCeUV4OAx8XJaw==
verify: 2020/08/12 10:02:06.676315 *** Verify running...... 2
rdfLoader: 2020/08/12 10:02:06.676324 .  getType..
rdfLoader: 2020/08/12 10:02:06.676328 node.TyName : [Person]
verify: 2020/08/12 10:02:06.676345 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:02:06.676374 Find Ty Address
rdfLoader: 2020/08/12 10:02:06.676379 Find Ty Age
rdfLoader: 2020/08/12 10:02:06.676384 Find Ty Cars
rdfLoader: 2020/08/12 10:02:06.676389 Add to SS . [Bentley]
rdfLoader: 2020/08/12 10:02:06.676399 Find Ty DOB
rdfLoader: 2020/08/12 10:02:06.676404 Find Ty Friends
rdfLoader: 2020/08/12 10:02:06.676408 Find Ty Jobs
rdfLoader: 2020/08/12 10:02:06.676412 Find Ty Name
rdfLoader: 2020/08/12 10:02:06.676416 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:02:06.676420 Find Ty Siblings
rdfLoader: 2020/08/12 10:02:06.676427 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:02:06.676433 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 10:02:06.676438 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 10:02:06.676458 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:02:06.676463 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:02:06.676483 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676489 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676496 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676501 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676507 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676512 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:02:06.676518 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:02:06.676522 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:02:06.676528 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0003869c0)}
SaveRDFNode: 2020/08/12 10:02:06.676532 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:02:06.676539 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.676543 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.676548 UID received  : Zkz2TStNQKmGmnhKMI9YTw==
verify: 2020/08/12 10:02:06.676692 *** Verify running...... 2
verify: 2020/08/12 10:02:06.676700 verify exited.....
DB: 2020/08/12 10:02:06.681629 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.58142ms
DB: 2020/08/12 10:02:06.688683 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 13.142076ms
DB: 2020/08/12 10:02:06.692231 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.657542ms
DB: 2020/08/12 10:02:06.695329 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.026195ms
DB: 2020/08/12 10:02:06.698460 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.09434ms
DB: 2020/08/12 10:02:06.706200 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 24.520741ms
DB: 2020/08/12 10:02:06.706460 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 30.281689ms
DB: 2020/08/12 10:02:06.707615 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 18.897008ms
DB: 2020/08/12 10:02:06.709534 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.30224ms
DB: 2020/08/12 10:02:06.709913 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.420827ms
DB: 2020/08/12 10:02:06.710959 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.303023ms
DB: 2020/08/12 10:02:06.712947 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.238018ms
DB: 2020/08/12 10:02:06.714155 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.2127ms
DB: 2020/08/12 10:02:06.714388 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.393766ms
DB: 2020/08/12 10:02:06.715241 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.742466ms
DB: 2020/08/12 10:02:06.716381 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.402718ms
SaveRDFNode: 2020/08/12 10:02:06.716394 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 10:02:06.716402 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.716406 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.716412 Received UID: X18=
SaveRDFNode: 2020/08/12 10:02:06.716426 a: = db.Item{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:02:06.717692 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.276789ms
SaveRDFNode: 2020/08/12 10:02:06.717705 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 10:02:06.717711 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.717715 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.717721 Received UID: X18=
SaveRDFNode: 2020/08/12 10:02:06.717732 a: = db.Item{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:02:06.717997 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.81293ms
DB: 2020/08/12 10:02:06.718374 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.103859ms
SaveRDFNode: 2020/08/12 10:02:06.718386 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003869c0)}
rdfUIDdb: 2020/08/12 10:02:06.718391 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.718395 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.718400 Received UID: X18=
SaveRDFNode: 2020/08/12 10:02:06.718410 a: = db.Item{PKey:[]uint8{0x66, 0x4c, 0xf6, 0x4d, 0x2b, 0x4d, 0x40, 0xa9, 0x86, 0x9a, 0x78, 0x4a, 0x30, 0x8f, 0x58, 0x4f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:02:06.719772 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.300151ms
SaveRDFNode: 2020/08/12 10:02:06.719784 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 10:02:06.719789 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.719793 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.719799 Received UID: X18=
SaveRDFNode: 2020/08/12 10:02:06.719808 a: = db.Item{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:02:06.721150 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.390531ms
SaveRDFNode: 2020/08/12 10:02:06.721166 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 10:02:06.721172 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.721176 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.721181 Received UID: X18=
SaveRDFNode: 2020/08/12 10:02:06.721195 a: = db.Item{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:02:06.721475 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.444987ms
SaveRDFNode: 2020/08/12 10:02:06.721487 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003862a0)}
rdfUIDdb: 2020/08/12 10:02:06.721492 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.721496 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.721502 Received UID: X18=
SaveRDFNode: 2020/08/12 10:02:06.721511 a: = db.Item{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:02:06.721773 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.335336ms
SaveRDFNode: 2020/08/12 10:02:06.721784 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003869c0)}
rdfUIDdb: 2020/08/12 10:02:06.721790 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.721794 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.721799 Received UID: X18=
SaveRDFNode: 2020/08/12 10:02:06.721808 a: = db.Item{PKey:[]uint8{0x66, 0x4c, 0xf6, 0x4d, 0x2b, 0x4d, 0x40, 0xa9, 0x86, 0x9a, 0x78, 0x4a, 0x30, 0x8f, 0x58, 0x4f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:02:06.723273 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.433933ms
SaveRDFNode: 2020/08/12 10:02:06.723282 Returned.+++++++++++ No error
DB: 2020/08/12 10:02:06.724649 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.426391ms
SaveRDFNode: 2020/08/12 10:02:06.724657 Returned.+++++++++++ No error
DB: 2020/08/12 10:02:06.725159 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.60759ms
SaveRDFNode: 2020/08/12 10:02:06.725337 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003862a0)}
rdfUIDdb: 2020/08/12 10:02:06.725375 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:02:06.725381 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:02:06.725386 Received UID: X18=
SaveRDFNode: 2020/08/12 10:02:06.725398 a: = db.Item{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:02:06.725651 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.817063ms
SaveRDFNode: 2020/08/12 10:02:06.725706 Returned.+++++++++++ No error
DB: 2020/08/12 10:02:06.729098 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.667046ms
SaveRDFNode: 2020/08/12 10:02:06.729107 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 10:02:06.729118 send on	uuid.AttachCh
rdfLoader: 2020/08/12 10:02:06.729122 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 10:02:06.729129 attachnaode: SvRH5SRLTpGnW5oUFDDzjQ==, N7SmR+lhQPOO9PgeAYbHgg==, A#G#:S
DB: 2020/08/12 10:02:06.733877 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.757055ms
DB: 2020/08/12 10:02:06.740100 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.158721ms
AttachNode: main 2020/08/12 10:02:06.740123 FetchForUpdate: N7SmR+lhQPOO9PgeAYbHgg== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:02:06.740129 ** Cache FetchForUpdate Cache Key Value: [N7SmR+lhQPOO9PgeAYbHgg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.740134 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.740138 FFU: acquired gLock
AttachNode: gr1 2020/08/12 10:02:06.740332 Enter...gr1 FetchForUpdate SvRH5SRLTpGnW5oUFDDzjQ==
FetchForUpdate: 2020/08/12 10:02:06.740342 ** Cache FetchForUpdate Cache Key Value: [SvRH5SRLTpGnW5oUFDDzjQ==]   sortk: A#
FetchForUpdate: 2020/08/12 10:02:06.740347 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.740350 FFU: acquired gLock
DB: 2020/08/12 10:02:06.742625 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.437547ms
FetchForUpdate: 2020/08/12 10:02:06.742678 len(nb): 1
FetchForUpdate: 2020/08/12 10:02:06.742684 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.742688 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.742692 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.742695 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.742699 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.742703 +++  Cache FetchItems for sortk A#G#:S UID: [N7SmR+lhQPOO9PgeAYbHgg==] 
DB: 2020/08/12 10:02:06.745203 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.461707ms
AttachNode: main 2020/08/12 10:02:06.745234 FetchForUpdate:  completed..
DB: 2020/08/12 10:02:06.749108 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.270573ms
Unlock: 2020/08/12 10:02:06.749119 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:02:06.749596 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.749606 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:02:06.749616 About to send on xch : client.ovflTarget{tUID:util.UID{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, itemId:0}
DB: 2020/08/12 10:02:06.757508 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 17.098057ms
FetchForUpdate: 2020/08/12 10:02:06.758086 len(nb): 7
FetchForUpdate: 2020/08/12 10:02:06.758097 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.758101 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.758105 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.758109 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.758112 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.758117 +++  Cache FetchItems for sortk A# UID: [SvRH5SRLTpGnW5oUFDDzjQ==] 
DB: 2020/08/12 10:02:06.761437 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.877645ms
AttachNode: gr1 2020/08/12 10:02:06.761541 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:02:06.761546 GetType
GetType:2020/08/12 10:02:06.761550 len(d.m)= 7
GetType: 2020/08/12 10:02:06.761569  A#:N : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.761582  A#G#:F : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.761598  A#G#:S : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.761619  A#T : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.761644  A#:A : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.761656  A#:C : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.761667  A#:D : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 10:02:06.761672 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:02:06.761989 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:02:06.762277 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:02:06.762590 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:02:06.762599 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:02:06.764681 len(d.m)= 7
GetType: 2020/08/12 10:02:06.764721  A#:A : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.764737  A#:C : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.764749  A#:D : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.764775  A#:N : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.764794  A#G#:F : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.764826  A#G#:S : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.764852  A#T : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:02:06.765547 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:02:06.766027 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.766069 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:02:06.766075 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 10:02:06.766081 target read from xch... 
AttachNode: gr1 2020/08/12 10:02:06.766085 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 10:02:06.766091 ** Cache FetchForUpdate Cache Key Value: [N7SmR+lhQPOO9PgeAYbHgg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.766095 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.766099 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.766103 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.766106 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.766110 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.766113 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.766117 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.766122 +++  Cache FetchItems for sortk A#G#:S UID: [N7SmR+lhQPOO9PgeAYbHgg==] 
DB: 2020/08/12 10:02:06.769318 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.877131ms
DB: 2020/08/12 10:02:06.775117 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.406137ms
DB: 2020/08/12 10:02:06.778955 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.62553ms
DB: 2020/08/12 10:02:06.783839 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.476884ms
DB: 2020/08/12 10:02:06.791857 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.691004ms
DB: 2020/08/12 10:02:06.795626 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.440032ms
DB: 2020/08/12 10:02:06.799899 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.964279ms
DB: 2020/08/12 10:02:06.806342 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.157646ms
DB: 2020/08/12 10:02:06.810251 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.570985ms
DB: 2020/08/12 10:02:06.814302 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.704749ms
AttachNode: gr1 2020/08/12 10:02:06.814313 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:02:06.814317 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:02:06.814562 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.814570 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:06.818490 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.748333ms
FetchForUpdate: 2020/08/12 10:02:06.818505 ** Cache FetchForUpdate Cache Key Value: [N7SmR+lhQPOO9PgeAYbHgg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.818510 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.818513 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.818518 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.818521 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.818525 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.818529 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.818532 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.818537 +++  Cache FetchItems for sortk A#G#:S UID: [N7SmR+lhQPOO9PgeAYbHgg==] 
DB: 2020/08/12 10:02:06.821573 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.843671ms
AttachNode: gr1 2020/08/12 10:02:06.821657 Errored: SetUpredAvailable :for  N7SmR+lhQPOO9PgeAYbHgg==
Cache: 2020/08/12 10:02:06.821664 In SetUpredAvailable: pUid, tUID:  N7SmR+lhQPOO9PgeAYbHgg== N7SmR+lhQPOO9PgeAYbHgg== A#G#:S
Cache: 2020/08/12 10:02:06.821684 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:02:06.825746 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.009558ms
Unlock: 2020/08/12 10:02:06.825756 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:02:06.826181 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.826209 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:06.832077 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.798921ms
rdfLoader: 2020/08/12 10:02:06.832216 attachnaode: SvRH5SRLTpGnW5oUFDDzjQ==, KW5784GsSCeUV4OAx8XJaw==, A#G#:S
DB: 2020/08/12 10:02:06.836901 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.337596ms
DB: 2020/08/12 10:02:06.844113 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.976879ms
AttachNode: main 2020/08/12 10:02:06.844129 FetchForUpdate: KW5784GsSCeUV4OAx8XJaw== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:02:06.844135 ** Cache FetchForUpdate Cache Key Value: [KW5784GsSCeUV4OAx8XJaw==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.844140 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.844144 FFU: acquired gLock
AttachNode: gr1 2020/08/12 10:02:06.844584 Enter...gr1 FetchForUpdate SvRH5SRLTpGnW5oUFDDzjQ==
FetchForUpdate: 2020/08/12 10:02:06.844622 ** Cache FetchForUpdate Cache Key Value: [SvRH5SRLTpGnW5oUFDDzjQ==]   sortk: A#
FetchForUpdate: 2020/08/12 10:02:06.844639 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.844646 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.844650 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.844654 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.844658 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.844661 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.844665 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.844670 +++  Cache FetchItems for sortk A# UID: [SvRH5SRLTpGnW5oUFDDzjQ==] 
DB: 2020/08/12 10:02:06.847483 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.589366ms
AttachNode: gr1 2020/08/12 10:02:06.847603 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:02:06.847610 GetType
GetType:2020/08/12 10:02:06.847614 len(d.m)= 7
GetType: 2020/08/12 10:02:06.847631  A#G#:F : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.847653  A#G#:S : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.847664  A#T : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.847676  A#:A : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.847687  A#:C : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.847718  A#:D : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.847731  A#:N : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 10:02:06.847735 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:02:06.847848 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:02:06.847946 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:02:06.848054 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:02:06.848062 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:02:06.848644 len(d.m)= 7
GetType: 2020/08/12 10:02:06.848682  A#:C : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.848697  A#:D : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.848708  A#:N : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.848729  A#G#:F : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.848742  A#G#:S : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.848753  A#T : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.848764  A#:A : &block.DataItem{PKey:[]uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:02:06.849089 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:02:06.849447 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.849455 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:02:06.849460 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:02:06.849603 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.142445ms
FetchForUpdate: 2020/08/12 10:02:06.849633 len(nb): 1
FetchForUpdate: 2020/08/12 10:02:06.849638 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.849641 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.849645 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.849648 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.849651 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.849656 +++  Cache FetchItems for sortk A#G#:S UID: [KW5784GsSCeUV4OAx8XJaw==] 
DB: 2020/08/12 10:02:06.852430 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.610854ms
AttachNode: main 2020/08/12 10:02:06.852499 FetchForUpdate:  completed..
DB: 2020/08/12 10:02:06.856388 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.633334ms
Unlock: 2020/08/12 10:02:06.856399 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:02:06.856662 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.856670 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:02:06.856679 About to send on xch : client.ovflTarget{tUID:util.UID{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, itemId:0}
AttachNode: gr1 2020/08/12 10:02:06.856691 target read from xch... 
AttachNode: gr1 2020/08/12 10:02:06.856696 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 10:02:06.856701 ** Cache FetchForUpdate Cache Key Value: [KW5784GsSCeUV4OAx8XJaw==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.856710 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.856714 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.856718 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.856721 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.856725 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.856728 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.856732 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.856736 +++  Cache FetchItems for sortk A#G#:S UID: [KW5784GsSCeUV4OAx8XJaw==] 
DB: 2020/08/12 10:02:06.859651 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.71221ms
DB: 2020/08/12 10:02:06.866547 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.210721ms
DB: 2020/08/12 10:02:06.870413 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.49432ms
DB: 2020/08/12 10:02:06.875151 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.165589ms
DB: 2020/08/12 10:02:06.881954 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.279468ms
DB: 2020/08/12 10:02:06.886016 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.486785ms
DB: 2020/08/12 10:02:06.890510 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.988108ms
DB: 2020/08/12 10:02:06.896209 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.225673ms
DB: 2020/08/12 10:02:06.900291 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.56156ms
DB: 2020/08/12 10:02:06.905660 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.086776ms
AttachNode: gr1 2020/08/12 10:02:06.905672 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:02:06.905676 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:02:06.905701 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.905706 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:06.909446 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.69825ms
FetchForUpdate: 2020/08/12 10:02:06.909458 ** Cache FetchForUpdate Cache Key Value: [KW5784GsSCeUV4OAx8XJaw==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.909463 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.909466 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.909470 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.909474 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.909477 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.909481 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.909484 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.909489 +++  Cache FetchItems for sortk A#G#:S UID: [KW5784GsSCeUV4OAx8XJaw==] 
DB: 2020/08/12 10:02:06.913716 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.185383ms
AttachNode: gr1 2020/08/12 10:02:06.913793 Errored: SetUpredAvailable :for  KW5784GsSCeUV4OAx8XJaw==
Cache: 2020/08/12 10:02:06.913801 In SetUpredAvailable: pUid, tUID:  KW5784GsSCeUV4OAx8XJaw== KW5784GsSCeUV4OAx8XJaw== A#G#:S
Cache: 2020/08/12 10:02:06.913805 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:02:06.917934 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.09822ms
Unlock: 2020/08/12 10:02:06.917947 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:02:06.917987 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.917992 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:06.922076 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.025674ms
rdfLoader: 2020/08/12 10:02:06.922199 attachnaode: N7SmR+lhQPOO9PgeAYbHgg==, SvRH5SRLTpGnW5oUFDDzjQ==, A#G#:S
DB: 2020/08/12 10:02:06.926188 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.909217ms
DB: 2020/08/12 10:02:06.930038 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.679952ms
AttachNode: main 2020/08/12 10:02:06.930051 FetchForUpdate: SvRH5SRLTpGnW5oUFDDzjQ== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:02:06.930056 ** Cache FetchForUpdate Cache Key Value: [SvRH5SRLTpGnW5oUFDDzjQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.930060 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.930064 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.930067 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.930071 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.930075 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.930078 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.930082 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.930087 +++  Cache FetchItems for sortk A#G#:S UID: [SvRH5SRLTpGnW5oUFDDzjQ==] 
AttachNode: gr1 2020/08/12 10:02:06.930431 Enter...gr1 FetchForUpdate N7SmR+lhQPOO9PgeAYbHgg==
FetchForUpdate: 2020/08/12 10:02:06.930441 ** Cache FetchForUpdate Cache Key Value: [N7SmR+lhQPOO9PgeAYbHgg==]   sortk: A#
FetchForUpdate: 2020/08/12 10:02:06.930446 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.930471 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.930475 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.930479 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.930482 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.930486 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.930489 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.930494 +++  Cache FetchItems for sortk A# UID: [N7SmR+lhQPOO9PgeAYbHgg==] 
DB: 2020/08/12 10:02:06.933094 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.828521ms
AttachNode: main 2020/08/12 10:02:06.933148 FetchForUpdate:  completed..
DB: 2020/08/12 10:02:06.935048 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.362578ms
AttachNode: gr1 2020/08/12 10:02:06.935380 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:02:06.935389 GetType
GetType:2020/08/12 10:02:06.935394 len(d.m)= 10
GetType: 2020/08/12 10:02:06.935412  A#:N : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.935426  A#G#:F : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.935437  A#T : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.935452  A#G#:S : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:02:06.935472  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.935503  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.935517  A#:A : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.935530  A#:C : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.935545  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.935558  A#:D : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 10:02:06.935563 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:02:06.935685 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:02:06.935776 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:02:06.935890 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:02:06.935899 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:02:06.936740 len(d.m)= 10
GetType: 2020/08/12 10:02:06.936761  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.936774  A#:D : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.936811  A#:A : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.936827  A#:C : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.936838  A#:N : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.936850  A#G#:F : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:06.936861  A#T : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.936876  A#G#:S : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:02:06.936888  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:06.936900  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:02:06.937255 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:02:06.937694 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.15857ms
Unlock: 2020/08/12 10:02:06.937705 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:02:06.937868 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.937877 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:02:06.937882 Left UnmarshalCache(cnv) - waiting on channel xch  
Unlock: 2020/08/12 10:02:06.938250 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.938258 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:02:06.938268 About to send on xch : client.ovflTarget{tUID:util.UID{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, itemId:0}
AttachNode: gr1 2020/08/12 10:02:06.938279 target read from xch... 
AttachNode: gr1 2020/08/12 10:02:06.938284 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 10:02:06.938290 ** Cache FetchForUpdate Cache Key Value: [SvRH5SRLTpGnW5oUFDDzjQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.938294 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.938298 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.938302 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.938305 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.938309 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.938312 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.938316 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.938321 +++  Cache FetchItems for sortk A#G#:S UID: [SvRH5SRLTpGnW5oUFDDzjQ==] 
DB: 2020/08/12 10:02:06.941498 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.952182ms
DB: 2020/08/12 10:02:06.947711 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.129811ms
DB: 2020/08/12 10:02:06.951214 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.444468ms
DB: 2020/08/12 10:02:06.955043 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.689341ms
DB: 2020/08/12 10:02:06.961370 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.253822ms
DB: 2020/08/12 10:02:06.964847 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.414768ms
DB: 2020/08/12 10:02:06.968722 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.793095ms
DB: 2020/08/12 10:02:06.974697 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.345887ms
DB: 2020/08/12 10:02:06.978603 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.457504ms
DB: 2020/08/12 10:02:06.982873 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.793654ms
AttachNode: gr1 2020/08/12 10:02:06.982887 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:02:06.982891 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:02:06.983466 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.983477 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:06.987598 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.721806ms
FetchForUpdate: 2020/08/12 10:02:06.987610 ** Cache FetchForUpdate Cache Key Value: [SvRH5SRLTpGnW5oUFDDzjQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:06.987615 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:06.987619 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:06.987623 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:06.987626 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:06.987630 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:06.987634 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:06.987637 check sortk is cached 
fetchItems: 2020/08/12 10:02:06.987642 +++  Cache FetchItems for sortk A#G#:S UID: [SvRH5SRLTpGnW5oUFDDzjQ==] 
DB: 2020/08/12 10:02:06.990559 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.834973ms
AttachNode: gr1 2020/08/12 10:02:06.990680 Errored: SetUpredAvailable :for  SvRH5SRLTpGnW5oUFDDzjQ==
Cache: 2020/08/12 10:02:06.990688 In SetUpredAvailable: pUid, tUID:  SvRH5SRLTpGnW5oUFDDzjQ== SvRH5SRLTpGnW5oUFDDzjQ== A#G#:S
Cache: 2020/08/12 10:02:06.990692 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:02:06.994435 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.708506ms
Unlock: 2020/08/12 10:02:06.994445 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:02:06.994486 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:06.994491 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:06.998384 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.81908ms
rdfLoader: 2020/08/12 10:02:06.998487 attachnaode: N7SmR+lhQPOO9PgeAYbHgg==, KW5784GsSCeUV4OAx8XJaw==, A#G#:S
DB: 2020/08/12 10:02:07.002761 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.908339ms
DB: 2020/08/12 10:02:07.006921 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.055658ms
AttachNode: main 2020/08/12 10:02:07.006935 FetchForUpdate: KW5784GsSCeUV4OAx8XJaw== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:02:07.006940 ** Cache FetchForUpdate Cache Key Value: [KW5784GsSCeUV4OAx8XJaw==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:07.006945 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.006949 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.006953 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.006957 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.006960 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.006964 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.006968 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.006972 +++  Cache FetchItems for sortk A#G#:S UID: [KW5784GsSCeUV4OAx8XJaw==] 
AttachNode: gr1 2020/08/12 10:02:07.007305 Enter...gr1 FetchForUpdate N7SmR+lhQPOO9PgeAYbHgg==
FetchForUpdate: 2020/08/12 10:02:07.007369 ** Cache FetchForUpdate Cache Key Value: [N7SmR+lhQPOO9PgeAYbHgg==]   sortk: A#
FetchForUpdate: 2020/08/12 10:02:07.007374 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.007378 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.007381 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.007385 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.007388 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.007392 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.007395 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.007400 +++  Cache FetchItems for sortk A# UID: [N7SmR+lhQPOO9PgeAYbHgg==] 
DB: 2020/08/12 10:02:07.010563 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 2.963101ms
AttachNode: gr1 2020/08/12 10:02:07.010742 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:02:07.010749 GetType
GetType:2020/08/12 10:02:07.010753 len(d.m)= 10
GetType: 2020/08/12 10:02:07.010771  A#T : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.010787  A#G#:S : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:02:07.010811  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.010824  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.010835  A#:A : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.010865  A#:C : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.010879  A#:N : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.010893  A#G#:F : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:07.010906  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.010917  A#:D : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 10:02:07.010923 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:02:07.011058 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:02:07.011149 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:02:07.011288 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:02:07.011297 Enter UnmarshalCache(cnv); 
DB: 2020/08/12 10:02:07.012082 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.029897ms
AttachNode: main 2020/08/12 10:02:07.012157 FetchForUpdate:  completed..
GetType:2020/08/12 10:02:07.013017 len(d.m)= 10
GetType: 2020/08/12 10:02:07.013041  A#G#:F : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:07.013057  A#T : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.013073  A#G#:S : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:02:07.013085  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.013097  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.013109  A#:A : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.013140  A#:C : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.013153  A#:N : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.013166  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.013183  A#:D : &block.DataItem{PKey:[]uint8{0x37, 0xb4, 0xa6, 0x47, 0xe9, 0x61, 0x40, 0xf3, 0x8e, 0xf4, 0xf8, 0x1e, 0x1, 0x86, 0xc7, 0x82}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:02:07.013516 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:02:07.013964 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.013972 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:02:07.013980 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:02:07.018128 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.79049ms
DB: 2020/08/12 10:02:07.021494 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.335257ms
DB: 2020/08/12 10:02:07.021513 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.335257ms
DB: 2020/08/12 10:02:07.024997 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.451098ms
DB: 2020/08/12 10:02:07.025011 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.451098ms
DB: 2020/08/12 10:02:07.028896 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.815981ms
DB: 2020/08/12 10:02:07.032867 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.881064ms
Unlock: 2020/08/12 10:02:07.032878 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:02:07.033204 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.033212 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:02:07.033221 About to send on xch : client.ovflTarget{tUID:util.UID{0xd6, 0xe4, 0xb9, 0x70, 0xc0, 0x7f, 0x4b, 0xee, 0xb6, 0x9d, 0xf9, 0x16, 0x1d, 0x5a, 0x9b, 0xc4}, itemId:1}
AttachNode: gr1 2020/08/12 10:02:07.033228 target read from xch... 
DB: 2020/08/12 10:02:07.039635 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.168264ms
DB: 2020/08/12 10:02:07.043524 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.569679ms
DB: 2020/08/12 10:02:07.047688 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.026061ms
DB: 2020/08/12 10:02:07.054075 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.109623ms
DB: 2020/08/12 10:02:07.057893 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.515622ms
DB: 2020/08/12 10:02:07.062318 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.899981ms
DB: 2020/08/12 10:02:07.068643 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.257711ms
DB: 2020/08/12 10:02:07.072528 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.820207ms
DB: 2020/08/12 10:02:07.076216 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.616301ms
DB: 2020/08/12 10:02:07.079808 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.536845ms
FetchForUpdate: 2020/08/12 10:02:07.079820 ** Cache FetchForUpdate Cache Key Value: [KW5784GsSCeUV4OAx8XJaw==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:07.079824 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.079828 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.079832 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.079836 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.079849 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.079852 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.079856 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.079860 +++  Cache FetchItems for sortk A#G#:S UID: [KW5784GsSCeUV4OAx8XJaw==] 
DB: 2020/08/12 10:02:07.083272 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.351888ms
AttachNode: gr1 2020/08/12 10:02:07.083521 Errored: SetUpredAvailable :for  KW5784GsSCeUV4OAx8XJaw==
Cache: 2020/08/12 10:02:07.083552 In SetUpredAvailable: pUid, tUID:  KW5784GsSCeUV4OAx8XJaw== 1uS5cMB/S+62nfkWHVqbxA== A#G#:S
Cache: 2020/08/12 10:02:07.083557 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:02:07.087683 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.081317ms
Unlock: 2020/08/12 10:02:07.087693 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:02:07.088010 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.088017 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:07.091961 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.8738ms
rdfLoader: 2020/08/12 10:02:07.092118 attachnaode: KW5784GsSCeUV4OAx8XJaw==, SvRH5SRLTpGnW5oUFDDzjQ==, A#G#:S
DB: 2020/08/12 10:02:07.095794 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.605588ms
DB: 2020/08/12 10:02:07.099825 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.962754ms
AttachNode: main 2020/08/12 10:02:07.099839 FetchForUpdate: SvRH5SRLTpGnW5oUFDDzjQ== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:02:07.099844 ** Cache FetchForUpdate Cache Key Value: [SvRH5SRLTpGnW5oUFDDzjQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:07.099849 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.099852 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.099856 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.099860 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.099864 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.099867 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.099871 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.099875 +++  Cache FetchItems for sortk A#G#:S UID: [SvRH5SRLTpGnW5oUFDDzjQ==] 
AttachNode: gr1 2020/08/12 10:02:07.100199 Enter...gr1 FetchForUpdate KW5784GsSCeUV4OAx8XJaw==
FetchForUpdate: 2020/08/12 10:02:07.100223 ** Cache FetchForUpdate Cache Key Value: [KW5784GsSCeUV4OAx8XJaw==]   sortk: A#
FetchForUpdate: 2020/08/12 10:02:07.100227 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.100231 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.100235 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.100238 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.100259 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.100263 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.100266 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.100275 +++  Cache FetchItems for sortk A# UID: [KW5784GsSCeUV4OAx8XJaw==] 
DB: 2020/08/12 10:02:07.102860 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.809358ms
AttachNode: main 2020/08/12 10:02:07.102987 FetchForUpdate:  completed..
DB: 2020/08/12 10:02:07.103797 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.33719ms
AttachNode: gr1 2020/08/12 10:02:07.103961 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:02:07.103967 GetType
GetType:2020/08/12 10:02:07.103972 len(d.m)= 10
GetType: 2020/08/12 10:02:07.103989  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104013  A#:A : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104026  A#:C : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104039  A#G#:F : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:07.104050  A#T : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104063  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104091  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104104  A#:D : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104116  A#:N : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104133  A#G#:S : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, []uint8{0xd6, 0xe4, 0xb9, 0x70, 0xc0, 0x7f, 0x4b, 0xee, 0xb6, 0x9d, 0xf9, 0x16, 0x1d, 0x5a, 0x9b, 0xc4}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
AttachNode: gr1 2020/08/12 10:02:07.104142 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:02:07.104204 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:02:07.104293 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:02:07.104343 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:02:07.104349 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:02:07.104740 len(d.m)= 10
GetType: 2020/08/12 10:02:07.104764  A#G#:S : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, []uint8{0xd6, 0xe4, 0xb9, 0x70, 0xc0, 0x7f, 0x4b, 0xee, 0xb6, 0x9d, 0xf9, 0x16, 0x1d, 0x5a, 0x9b, 0xc4}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:02:07.104777  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104788  A#:D : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104800  A#:N : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104811  A#T : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104823  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104834  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104846  A#:A : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104864  A#:C : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.104894  A#G#:F : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 10:02:07.105055 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:02:07.105500 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.105509 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:02:07.105513 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:02:07.106946 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.712889ms
DB: 2020/08/12 10:02:07.110375 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.396879ms
DB: 2020/08/12 10:02:07.110540 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.396879ms
DB: 2020/08/12 10:02:07.114109 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.530387ms
DB: 2020/08/12 10:02:07.114126 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.530387ms
DB: 2020/08/12 10:02:07.118123 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.893547ms
DB: 2020/08/12 10:02:07.122047 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.855636ms
Unlock: 2020/08/12 10:02:07.122058 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:02:07.122152 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.122159 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:02:07.122168 About to send on xch : client.ovflTarget{tUID:util.UID{0xc6, 0xa6, 0xbc, 0xf7, 0x4c, 0xd4, 0x45, 0x8c, 0x95, 0xc3, 0x3, 0x25, 0xf8, 0x6c, 0x7f, 0x0}, itemId:1}
AttachNode: gr1 2020/08/12 10:02:07.122176 target read from xch... 
DB: 2020/08/12 10:02:07.128528 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.155047ms
DB: 2020/08/12 10:02:07.132158 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.37403ms
DB: 2020/08/12 10:02:07.136515 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.025862ms
DB: 2020/08/12 10:02:07.142273 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.455531ms
DB: 2020/08/12 10:02:07.146111 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.531562ms
DB: 2020/08/12 10:02:07.150431 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.871683ms
DB: 2020/08/12 10:02:07.156891 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.142513ms
DB: 2020/08/12 10:02:07.160930 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.720343ms
DB: 2020/08/12 10:02:07.164749 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.698219ms
DB: 2020/08/12 10:02:07.168461 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.487143ms
FetchForUpdate: 2020/08/12 10:02:07.168472 ** Cache FetchForUpdate Cache Key Value: [SvRH5SRLTpGnW5oUFDDzjQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:07.168477 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.168481 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.168485 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.168488 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.168492 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.168495 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.168499 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.168504 +++  Cache FetchItems for sortk A#G#:S UID: [SvRH5SRLTpGnW5oUFDDzjQ==] 
DB: 2020/08/12 10:02:07.171728 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.035675ms
AttachNode: gr1 2020/08/12 10:02:07.171829 Errored: SetUpredAvailable :for  SvRH5SRLTpGnW5oUFDDzjQ==
Cache: 2020/08/12 10:02:07.171838 In SetUpredAvailable: pUid, tUID:  SvRH5SRLTpGnW5oUFDDzjQ== xqa890zURYyVwwMl+Gx/AA== A#G#:S
Cache: 2020/08/12 10:02:07.171842 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:02:07.175528 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.651474ms
Unlock: 2020/08/12 10:02:07.175538 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:02:07.175956 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.175964 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:07.179829 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.807779ms
rdfLoader: 2020/08/12 10:02:07.179846 attachnaode: KW5784GsSCeUV4OAx8XJaw==, N7SmR+lhQPOO9PgeAYbHgg==, A#G#:S
DB: 2020/08/12 10:02:07.183520 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.620181ms
DB: 2020/08/12 10:02:07.187660 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.07386ms
AttachNode: main 2020/08/12 10:02:07.187676 FetchForUpdate: N7SmR+lhQPOO9PgeAYbHgg== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:02:07.187681 ** Cache FetchForUpdate Cache Key Value: [N7SmR+lhQPOO9PgeAYbHgg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:07.187686 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.187690 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.187693 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.187697 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.187701 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.187704 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.187708 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.187713 +++  Cache FetchItems for sortk A#G#:S UID: [N7SmR+lhQPOO9PgeAYbHgg==] 
AttachNode: gr1 2020/08/12 10:02:07.187919 Enter...gr1 FetchForUpdate KW5784GsSCeUV4OAx8XJaw==
FetchForUpdate: 2020/08/12 10:02:07.187928 ** Cache FetchForUpdate Cache Key Value: [KW5784GsSCeUV4OAx8XJaw==]   sortk: A#
FetchForUpdate: 2020/08/12 10:02:07.187933 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.187937 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.187940 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.187944 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.187947 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.187951 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.187954 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.187959 +++  Cache FetchItems for sortk A# UID: [KW5784GsSCeUV4OAx8XJaw==] 
DB: 2020/08/12 10:02:07.190888 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 2.858776ms
AttachNode: gr1 2020/08/12 10:02:07.191044 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:02:07.191050 GetType
GetType:2020/08/12 10:02:07.191054 len(d.m)= 10
GetType: 2020/08/12 10:02:07.191070  A#:A : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191086  A#:C : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191099  A#G#:F : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:07.191113  A#T : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191125  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191138  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191149  A#:D : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191160  A#:N : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191177  A#G#:S : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, []uint8{0xd6, 0xe4, 0xb9, 0x70, 0xc0, 0x7f, 0x4b, 0xee, 0xb6, 0x9d, 0xf9, 0x16, 0x1d, 0x5a, 0x9b, 0xc4}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:02:07.191193  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 10:02:07.191197 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:02:07.191224 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:02:07.191234 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:02:07.191243 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:02:07.191247 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:02:07.191290 len(d.m)= 10
GetType: 2020/08/12 10:02:07.191304  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191316  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191328  A#:A : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191340  A#:C : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191352  A#G#:F : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:02:07.191363  A#T : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191398  A#G#:S : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x4a, 0xf4, 0x47, 0xe5, 0x24, 0x4b, 0x4e, 0x91, 0xa7, 0x5b, 0x9a, 0x14, 0x14, 0x30, 0xf3, 0x8d}, []uint8{0xd6, 0xe4, 0xb9, 0x70, 0xc0, 0x7f, 0x4b, 0xee, 0xb6, 0x9d, 0xf9, 0x16, 0x1d, 0x5a, 0x9b, 0xc4}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:02:07.191416  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191427  A#:D : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:02:07.191438  A#:N : &block.DataItem{PKey:[]uint8{0x29, 0x6e, 0x7b, 0xf3, 0x81, 0xac, 0x48, 0x27, 0x94, 0x57, 0x83, 0x80, 0xc7, 0xc5, 0xc9, 0x6b}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:02:07.191474 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:02:07.191504 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.191509 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:02:07.191513 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:02:07.191747 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.986616ms
AttachNode: main 2020/08/12 10:02:07.191840 FetchForUpdate:  completed..
DB: 2020/08/12 10:02:07.195786 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.859257ms
DB: 2020/08/12 10:02:07.199252 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.432088ms
DB: 2020/08/12 10:02:07.199416 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.432088ms
DB: 2020/08/12 10:02:07.202798 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.347829ms
DB: 2020/08/12 10:02:07.202815 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.347829ms
DB: 2020/08/12 10:02:07.206932 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.047706ms
DB: 2020/08/12 10:02:07.371994 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 164.989729ms
Unlock: 2020/08/12 10:02:07.372021 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:02:07.372065 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.372070 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:02:07.372077 About to send on xch : client.ovflTarget{tUID:util.UID{0x3b, 0x64, 0x2, 0xaa, 0xad, 0xea, 0x4b, 0x73, 0xb9, 0xe5, 0x87, 0x9b, 0x69, 0x39, 0xbd, 0xd8}, itemId:1}
AttachNode: gr1 2020/08/12 10:02:07.372084 target read from xch... 
DB: 2020/08/12 10:02:07.378355 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.197947ms
DB: 2020/08/12 10:02:07.382007 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.594068ms
DB: 2020/08/12 10:02:07.385776 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.657477ms
DB: 2020/08/12 10:02:07.392065 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.208803ms
DB: 2020/08/12 10:02:07.395955 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.559841ms
DB: 2020/08/12 10:02:07.399992 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.742646ms
DB: 2020/08/12 10:02:07.406599 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.295022ms
DB: 2020/08/12 10:02:07.410353 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.42279ms
DB: 2020/08/12 10:02:07.414345 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.677947ms
DB: 2020/08/12 10:02:07.418382 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.849879ms
FetchForUpdate: 2020/08/12 10:02:07.418394 ** Cache FetchForUpdate Cache Key Value: [N7SmR+lhQPOO9PgeAYbHgg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:02:07.418399 FFU: release gLock
FetchForUpdate: 2020/08/12 10:02:07.418402 FFU: released gLock
FetchForUpdate: 2020/08/12 10:02:07.418406 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:02:07.418410 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:02:07.418413 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:02:07.418417 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:02:07.418421 check sortk is cached 
fetchItems: 2020/08/12 10:02:07.418425 +++  Cache FetchItems for sortk A#G#:S UID: [N7SmR+lhQPOO9PgeAYbHgg==] 
DB: 2020/08/12 10:02:07.421406 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.804597ms
AttachNode: gr1 2020/08/12 10:02:07.421515 Errored: SetUpredAvailable :for  N7SmR+lhQPOO9PgeAYbHgg==
Cache: 2020/08/12 10:02:07.421524 In SetUpredAvailable: pUid, tUID:  N7SmR+lhQPOO9PgeAYbHgg== O2QCqq3qS3O55YebaTm92A== A#G#:S
Cache: 2020/08/12 10:02:07.421528 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:02:07.425510 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.952124ms
Unlock: 2020/08/12 10:02:07.425520 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:02:07.425916 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:02:07.425924 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:02:07.429952 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.972628ms
rdfLoader: 2020/08/12 10:02:07.430048 saveNode exited loop channel closed.....Waiting on SaveRDFNodes to finish.
rdfLoader: 2020/08/12 10:02:07.430056 saveNode finished waiting...exiting
grmgr: 2020/08/12 10:02:07.430067 Powering down...
rdfuuid: 2020/08/12 10:02:07.430074 Powering down...
DB:2020/08/12 10:08:09 log.go:18: ===============================================================================
grmgr: 2020/08/12 10:08:09.599707 Powering on...
rdfLoader: 2020/08/12 10:08:09.600039 verify started....xx.
rdfLoader: 2020/08/12 10:08:09.600062 saveNode started......
rdfuuid: 2020/08/12 10:08:09.600072 Powering on...
rdfLoader: 2020/08/12 10:08:09.600078 *************** All started 
rdfLoader: 2020/08/12 10:08:09.612725 .  getType..
rdfLoader: 2020/08/12 10:08:09.612742 node.TyName : [Person]
DB: 2020/08/12 10:08:09.682282 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 69.489043ms
verify: 2020/08/12 10:08:09.682445 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:08:09.682491 Find Ty Address
rdfLoader: 2020/08/12 10:08:09.682497 Find Ty Age
rdfLoader: 2020/08/12 10:08:09.682504 Find Ty Cars
rdfLoader: 2020/08/12 10:08:09.682510 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:08:09.682516 Add to SS . [Alfa]
rdfLoader: 2020/08/12 10:08:09.682530 Find Ty DOB
rdfLoader: 2020/08/12 10:08:09.682536 Find Ty Friends
rdfLoader: 2020/08/12 10:08:09.682541 Find Ty Jobs
rdfLoader: 2020/08/12 10:08:09.682546 Find Ty Name
rdfLoader: 2020/08/12 10:08:09.682552 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:08:09.682556 Find Ty Siblings
rdfLoader: 2020/08/12 10:08:09.682566 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:08:09.682574 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 10:08:09.682580 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 10:08:09.682609 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:08:09.682615 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:08:09.682641 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.682648 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.682655 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.682662 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.682668 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.682675 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.682681 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:08:09.682686 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:08:09.682693 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000017440)}
SaveRDFNode: 2020/08/12 10:08:09.682698 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:08:09.682708 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.682712 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.682719 UID received  : fey7tSb7QhiR3xngMR31Jg==
verify: 2020/08/12 10:08:09.682917 *** Verify running...... 1
rdfLoader: 2020/08/12 10:08:09.682927 .  getType..
rdfLoader: 2020/08/12 10:08:09.682931 node.TyName : [Person]
verify: 2020/08/12 10:08:09.682979 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:08:09.683018 Find Ty Address
rdfLoader: 2020/08/12 10:08:09.683024 Find Ty Age
rdfLoader: 2020/08/12 10:08:09.683030 Find Ty Cars
rdfLoader: 2020/08/12 10:08:09.683036 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:08:09.683041 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 10:08:09.683045 Find Ty DOB
rdfLoader: 2020/08/12 10:08:09.683050 Find Ty Friends
rdfLoader: 2020/08/12 10:08:09.683055 Find Ty Jobs
rdfLoader: 2020/08/12 10:08:09.683060 Find Ty Name
rdfLoader: 2020/08/12 10:08:09.683065 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:08:09.683069 Find Ty Siblings
rdfLoader: 2020/08/12 10:08:09.683078 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:08:09.683085 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 10:08:09.683090 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 10:08:09.683121 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:08:09.683128 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:08:09.683148 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.683155 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.683163 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.683169 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.683175 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.683181 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.683188 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:08:09.683192 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:08:09.683199 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017920)}
SaveRDFNode: 2020/08/12 10:08:09.683203 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:08:09.683211 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.683216 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.683222 UID received  : uuUq6c1tRBWcds4IkmUrcg==
verify: 2020/08/12 10:08:09.684860 *** Verify running...... 1
rdfLoader: 2020/08/12 10:08:09.688600 .  getType..
rdfLoader: 2020/08/12 10:08:09.688611 node.TyName : [Person]
DB: 2020/08/12 10:08:09.689002 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.252004ms
verify: 2020/08/12 10:08:09.691119 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:08:09.691782 Find Ty Address
rdfLoader: 2020/08/12 10:08:09.691791 Find Ty Age
rdfLoader: 2020/08/12 10:08:09.691806 Find Ty Cars
rdfLoader: 2020/08/12 10:08:09.691819 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 10:08:09.691823 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 10:08:09.691828 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:08:09.691832 Find Ty DOB
rdfLoader: 2020/08/12 10:08:09.691850 Find Ty Friends
rdfLoader: 2020/08/12 10:08:09.691861 Find Ty Jobs
rdfLoader: 2020/08/12 10:08:09.691865 Find Ty Name
rdfLoader: 2020/08/12 10:08:09.691869 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:08:09.691873 Find Ty Siblings
rdfLoader: 2020/08/12 10:08:09.691884 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:08:09.691891 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 10:08:09.691896 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 10:08:09.691923 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:08:09.691933 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:08:09.691955 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.691991 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.691999 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.692005 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.692011 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.692016 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.692022 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:08:09.692026 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:08:09.692032 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000386cc0)}
SaveRDFNode: 2020/08/12 10:08:09.692036 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:08:09.692045 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.692049 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.692054 UID received  : 6L4WBQfCQdWhZ4p65HtoBQ==
verify: 2020/08/12 10:08:09.693756 *** Verify running...... 2
rdfLoader: 2020/08/12 10:08:09.693767 .  getType..
rdfLoader: 2020/08/12 10:08:09.693772 node.TyName : [Person]
DB: 2020/08/12 10:08:09.694962 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.70192ms
verify: 2020/08/12 10:08:09.696509 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:08:09.697143 Find Ty Address
rdfLoader: 2020/08/12 10:08:09.697153 Find Ty Age
rdfLoader: 2020/08/12 10:08:09.697159 Find Ty Cars
rdfLoader: 2020/08/12 10:08:09.697164 Add to SS . [Bentley]
rdfLoader: 2020/08/12 10:08:09.697169 Find Ty DOB
rdfLoader: 2020/08/12 10:08:09.697176 Find Ty Friends
rdfLoader: 2020/08/12 10:08:09.697180 Find Ty Jobs
rdfLoader: 2020/08/12 10:08:09.697183 Find Ty Name
rdfLoader: 2020/08/12 10:08:09.697188 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:08:09.697191 Find Ty Siblings
rdfLoader: 2020/08/12 10:08:09.697201 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:08:09.697208 generate uid-pred NV entry with sortK "A#G#:F", Name: Friends 
rdfLoader: 2020/08/12 10:08:09.697213 generate uid-pred NV entry with sortK "A#G#:S", Name: Siblings 
rdfLoader: 2020/08/12 10:08:09.697233 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:08:09.697238 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:08:09.697259 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.697266 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.697277 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.697283 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.697329 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.697338 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:08:09.697344 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:08:09.697348 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:08:09.697354 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000754600)}
SaveRDFNode: 2020/08/12 10:08:09.697358 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:08:09.697366 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.697370 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.697375 UID received  : 6Zr8D8qSRcqIX13sS+uBrQ==
verify: 2020/08/12 10:08:09.697756 *** Verify running...... 2
verify: 2020/08/12 10:08:09.697773 verify exited.....
DB: 2020/08/12 10:08:09.715408 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 26.371209ms
DB: 2020/08/12 10:08:09.719633 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 22.230204ms
DB: 2020/08/12 10:08:09.723329 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.661272ms
DB: 2020/08/12 10:08:09.726767 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.39161ms
DB: 2020/08/12 10:08:09.730266 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.46587ms
DB: 2020/08/12 10:08:09.733545 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.246143ms
SaveRDFNode: 2020/08/12 10:08:09.733737 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000754600)}
rdfUIDdb: 2020/08/12 10:08:09.733750 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.733755 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.733761 Received UID: X18=
SaveRDFNode: 2020/08/12 10:08:09.733777 a: = db.Item{PKey:[]uint8{0xe9, 0x9a, 0xfc, 0xf, 0xca, 0x92, 0x45, 0xca, 0x88, 0x5f, 0x5d, 0xec, 0x4b, 0xeb, 0x81, 0xad}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:08:09.734102 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 17.722939ms
DB: 2020/08/12 10:08:09.737040 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.230156ms
SaveRDFNode: 2020/08/12 10:08:09.737052 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000754600)}
rdfUIDdb: 2020/08/12 10:08:09.737058 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.737062 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.737067 Received UID: X18=
SaveRDFNode: 2020/08/12 10:08:09.737078 a: = db.Item{PKey:[]uint8{0xe9, 0x9a, 0xfc, 0xf, 0xca, 0x92, 0x45, 0xca, 0x88, 0x5f, 0x5d, 0xec, 0x4b, 0xeb, 0x81, 0xad}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:08:09.739524 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 47.115235ms
DB: 2020/08/12 10:08:09.739876 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.742624ms
DB: 2020/08/12 10:08:09.740115 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 45.113554ms
DB: 2020/08/12 10:08:09.741395 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.280336ms
SaveRDFNode: 2020/08/12 10:08:09.741420 Returned.+++++++++++ No error
DB: 2020/08/12 10:08:09.742955 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.392087ms
DB: 2020/08/12 10:08:09.743265 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.358107ms
SaveRDFNode: 2020/08/12 10:08:09.743277 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 10:08:09.743282 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.743286 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.743292 Received UID: X18=
SaveRDFNode: 2020/08/12 10:08:09.743306 a: = db.Item{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:08:09.745064 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.891328ms
DB: 2020/08/12 10:08:09.746558 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.224725ms
SaveRDFNode: 2020/08/12 10:08:09.746572 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 10:08:09.746578 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.746582 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.746587 Received UID: X18=
SaveRDFNode: 2020/08/12 10:08:09.746597 a: = db.Item{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:08:09.746895 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.900089ms
DB: 2020/08/12 10:08:09.748547 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.448939ms
DB: 2020/08/12 10:08:09.749900 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.255185ms
SaveRDFNode: 2020/08/12 10:08:09.750065 Returned.+++++++++++ No error
DB: 2020/08/12 10:08:09.750180 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.251012ms
DB: 2020/08/12 10:08:09.752499 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.920465ms
SaveRDFNode: 2020/08/12 10:08:09.752512 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 10:08:09.752518 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.752522 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.752528 Received UID: X18=
SaveRDFNode: 2020/08/12 10:08:09.752538 a: = db.Item{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:08:09.753541 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.327561ms
SaveRDFNode: 2020/08/12 10:08:09.753553 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386cc0)}
rdfUIDdb: 2020/08/12 10:08:09.753559 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.753563 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.753568 Received UID: X18=
SaveRDFNode: 2020/08/12 10:08:09.753578 a: = db.Item{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:08:09.756130 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.562918ms
SaveRDFNode: 2020/08/12 10:08:09.756142 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 10:08:09.756154 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.756158 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.756163 Received UID: X18=
SaveRDFNode: 2020/08/12 10:08:09.756173 a: = db.Item{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:08:09.756844 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.23799ms
SaveRDFNode: 2020/08/12 10:08:09.756856 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386cc0)}
rdfUIDdb: 2020/08/12 10:08:09.756861 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:08:09.756865 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:08:09.756870 Received UID: X18=
SaveRDFNode: 2020/08/12 10:08:09.756880 a: = db.Item{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:08:09.759775 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.569846ms
SaveRDFNode: 2020/08/12 10:08:09.759785 Returned.+++++++++++ No error
DB: 2020/08/12 10:08:09.760120 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.209489ms
SaveRDFNode: 2020/08/12 10:08:09.760133 Returned.+++++++++++ No error
rdfLoader: 2020/08/12 10:08:09.760140 send on	uuid.AttachCh
rdfLoader: 2020/08/12 10:08:09.760145 passed on	uuid.AttachCh
rdfLoader: 2020/08/12 10:08:09.760152 attachnaode: fey7tSb7QhiR3xngMR31Jg==, uuUq6c1tRBWcds4IkmUrcg==, A#G#:S
DB: 2020/08/12 10:08:09.764014 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.755549ms
DB: 2020/08/12 10:08:09.772137 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.542126ms
AttachNode: main 2020/08/12 10:08:09.772305 FetchForUpdate: uuUq6c1tRBWcds4IkmUrcg== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:08:09.772316 ** Cache FetchForUpdate Cache Key Value: [uuUq6c1tRBWcds4IkmUrcg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:09.772322 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.772326 FFU: acquired gLock
AttachNode: gr1 2020/08/12 10:08:09.772664 Enter...gr1 FetchForUpdate fey7tSb7QhiR3xngMR31Jg==
FetchForUpdate: 2020/08/12 10:08:09.772681 ** Cache FetchForUpdate Cache Key Value: [fey7tSb7QhiR3xngMR31Jg==]   sortk: A#
FetchForUpdate: 2020/08/12 10:08:09.772686 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.772690 FFU: acquired gLock
DB: 2020/08/12 10:08:09.775623 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.880097ms
FetchForUpdate: 2020/08/12 10:08:09.775679 len(nb): 1
FetchForUpdate: 2020/08/12 10:08:09.775699 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.775703 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.775707 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.775711 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.775715 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.775720 +++  Cache FetchItems for sortk A#G#:S UID: [uuUq6c1tRBWcds4IkmUrcg==] 
DB: 2020/08/12 10:08:09.778723 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.963389ms
AttachNode: main 2020/08/12 10:08:09.778755 FetchForUpdate:  completed..
DB: 2020/08/12 10:08:09.783119 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.303721ms
Unlock: 2020/08/12 10:08:09.783134 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:08:09.783165 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.783180 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:08:09.783188 About to send on xch : client.ovflTarget{tUID:util.UID{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, itemId:0}
DB: 2020/08/12 10:08:09.788034 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 14.737492ms
FetchForUpdate: 2020/08/12 10:08:09.788172 len(nb): 7
FetchForUpdate: 2020/08/12 10:08:09.788180 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.788185 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.788189 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.788193 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.788198 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.788204 +++  Cache FetchItems for sortk A# UID: [fey7tSb7QhiR3xngMR31Jg==] 
DB: 2020/08/12 10:08:09.791533 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.742902ms
AttachNode: gr1 2020/08/12 10:08:09.791653 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:08:09.791659 GetType
GetType:2020/08/12 10:08:09.791663 len(d.m)= 7
GetType: 2020/08/12 10:08:09.791682  A#:A : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.791697  A#:C : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.791709  A#:D : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.791724  A#:N : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.791737  A#G#:F : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:09.791749  A#G#:S : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:09.791762  A#T : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 10:08:09.791787 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:08:09.792080 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:08:09.792374 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:08:09.792698 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:08:09.792707 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:08:09.794172 len(d.m)= 7
GetType: 2020/08/12 10:08:09.794194  A#:A : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.794209  A#:C : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.794239  A#:D : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.794257  A#:N : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.794270  A#G#:F : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:09.794284  A#G#:S : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:09.794295  A#T : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:08:09.794629 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:08:09.794988 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.794996 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:08:09.795000 Left UnmarshalCache(cnv) - waiting on channel xch  
AttachNode: gr1 2020/08/12 10:08:09.795005 target read from xch... 
AttachNode: gr1 2020/08/12 10:08:09.795010 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 10:08:09.795014 ** Cache FetchForUpdate Cache Key Value: [uuUq6c1tRBWcds4IkmUrcg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:09.795025 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.795029 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:09.795033 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.795037 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.795040 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.795043 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.795047 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.795051 +++  Cache FetchItems for sortk A#G#:S UID: [uuUq6c1tRBWcds4IkmUrcg==] 
DB: 2020/08/12 10:08:09.797801 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.545749ms
DB: 2020/08/12 10:08:09.803783 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.891865ms
DB: 2020/08/12 10:08:09.807291 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.45661ms
DB: 2020/08/12 10:08:09.810714 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.320735ms
DB: 2020/08/12 10:08:09.816824 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.024571ms
DB: 2020/08/12 10:08:09.820208 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.08912ms
DB: 2020/08/12 10:08:09.823893 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.343077ms
DB: 2020/08/12 10:08:09.830000 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.824333ms
DB: 2020/08/12 10:08:09.833525 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.223321ms
DB: 2020/08/12 10:08:09.837473 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.614482ms
AttachNode: gr1 2020/08/12 10:08:09.837489 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:08:09.837495 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:08:09.837835 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.837846 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:09.841554 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.449475ms
FetchForUpdate: 2020/08/12 10:08:09.841566 ** Cache FetchForUpdate Cache Key Value: [uuUq6c1tRBWcds4IkmUrcg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:09.841571 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.841586 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:09.841590 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.841593 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.841597 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.841600 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.841604 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.841609 +++  Cache FetchItems for sortk A#G#:S UID: [uuUq6c1tRBWcds4IkmUrcg==] 
DB: 2020/08/12 10:08:09.844447 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.646269ms
AttachNode: gr1 2020/08/12 10:08:09.844541 Errored: SetUpredAvailable :for  uuUq6c1tRBWcds4IkmUrcg==
Cache: 2020/08/12 10:08:09.844556 In SetUpredAvailable: pUid, tUID:  uuUq6c1tRBWcds4IkmUrcg== uuUq6c1tRBWcds4IkmUrcg== A#G#:S
Cache: 2020/08/12 10:08:09.844560 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:08:09.848083 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.487987ms
Unlock: 2020/08/12 10:08:09.848093 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:08:09.848436 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.848445 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:09.855600 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.074682ms
rdfLoader: 2020/08/12 10:08:09.855918 attachnaode: fey7tSb7QhiR3xngMR31Jg==, 6L4WBQfCQdWhZ4p65HtoBQ==, A#G#:S
DB: 2020/08/12 10:08:09.859790 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.500701ms
DB: 2020/08/12 10:08:09.864223 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.912181ms
AttachNode: main 2020/08/12 10:08:09.864237 FetchForUpdate: 6L4WBQfCQdWhZ4p65HtoBQ== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:08:09.864267 ** Cache FetchForUpdate Cache Key Value: [6L4WBQfCQdWhZ4p65HtoBQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:09.864272 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.864276 FFU: acquired gLock
AttachNode: gr1 2020/08/12 10:08:09.864643 Enter...gr1 FetchForUpdate fey7tSb7QhiR3xngMR31Jg==
FetchForUpdate: 2020/08/12 10:08:09.864667 ** Cache FetchForUpdate Cache Key Value: [fey7tSb7QhiR3xngMR31Jg==]   sortk: A#
FetchForUpdate: 2020/08/12 10:08:09.864671 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.864675 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:09.864678 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.864687 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.864691 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.864694 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.864698 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.864703 +++  Cache FetchItems for sortk A# UID: [fey7tSb7QhiR3xngMR31Jg==] 
DB: 2020/08/12 10:08:09.866942 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.451912ms
FetchForUpdate: 2020/08/12 10:08:09.867003 len(nb): 1
FetchForUpdate: 2020/08/12 10:08:09.867010 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.867014 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.867017 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.867021 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.867024 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.867029 +++  Cache FetchItems for sortk A#G#:S UID: [6L4WBQfCQdWhZ4p65HtoBQ==] 
DB: 2020/08/12 10:08:09.869866 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.626597ms
AttachNode: main 2020/08/12 10:08:09.869898 FetchForUpdate:  completed..
DB: 2020/08/12 10:08:09.873122 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 8.169844ms
AttachNode: gr1 2020/08/12 10:08:09.873383 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:08:09.873394 GetType
GetType:2020/08/12 10:08:09.873399 len(d.m)= 7
GetType: 2020/08/12 10:08:09.873416  A#:D : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.873429  A#:N : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.873442  A#G#:F : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:09.873454  A#G#:S : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:09.873473  A#T : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.873485  A#:A : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.873497  A#:C : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 10:08:09.873501 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:08:09.873648 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:08:09.873772 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:08:09.873860 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:08:09.873869 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:08:09.874454 len(d.m)= 7
GetType: 2020/08/12 10:08:09.874493  A#T : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.874507  A#:A : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.874520  A#:C : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.874531  A#:D : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.874543  A#:N : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.874562  A#G#:F : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:09.874574  A#G#:S : &block.DataItem{PKey:[]uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 10:08:09.874903 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:08:09.875271 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.875279 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:08:09.875283 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:08:09.875358 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.176669ms
Unlock: 2020/08/12 10:08:09.875385 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:08:09.875635 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.875644 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:08:09.875653 About to send on xch : client.ovflTarget{tUID:util.UID{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, itemId:0}
AttachNode: gr1 2020/08/12 10:08:09.875664 target read from xch... 
AttachNode: gr1 2020/08/12 10:08:09.875669 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 10:08:09.875674 ** Cache FetchForUpdate Cache Key Value: [6L4WBQfCQdWhZ4p65HtoBQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:09.875678 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.875682 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:09.875685 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.875689 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.875692 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.875696 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.875699 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.875704 +++  Cache FetchItems for sortk A#G#:S UID: [6L4WBQfCQdWhZ4p65HtoBQ==] 
DB: 2020/08/12 10:08:09.878333 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.431236ms
DB: 2020/08/12 10:08:09.884763 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.873372ms
DB: 2020/08/12 10:08:09.888302 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.283102ms
DB: 2020/08/12 10:08:09.895340 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.382179ms
DB: 2020/08/12 10:08:09.901115 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.7105ms
DB: 2020/08/12 10:08:09.904322 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.150358ms
DB: 2020/08/12 10:08:09.907733 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.342263ms
DB: 2020/08/12 10:08:09.913525 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.730003ms
DB: 2020/08/12 10:08:09.917131 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.311792ms
DB: 2020/08/12 10:08:09.920824 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.367876ms
AttachNode: gr1 2020/08/12 10:08:09.920849 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:08:09.920855 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:08:09.921282 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.921292 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:09.924858 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.29483ms
FetchForUpdate: 2020/08/12 10:08:09.924871 ** Cache FetchForUpdate Cache Key Value: [6L4WBQfCQdWhZ4p65HtoBQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:09.924876 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.924879 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:09.924883 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.924887 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.924891 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.924894 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.924898 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.924903 +++  Cache FetchItems for sortk A#G#:S UID: [6L4WBQfCQdWhZ4p65HtoBQ==] 
DB: 2020/08/12 10:08:09.927761 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.621166ms
AttachNode: gr1 2020/08/12 10:08:09.927858 Errored: SetUpredAvailable :for  6L4WBQfCQdWhZ4p65HtoBQ==
Cache: 2020/08/12 10:08:09.927867 In SetUpredAvailable: pUid, tUID:  6L4WBQfCQdWhZ4p65HtoBQ== 6L4WBQfCQdWhZ4p65HtoBQ== A#G#:S
Cache: 2020/08/12 10:08:09.927871 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:08:09.931549 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.639613ms
Unlock: 2020/08/12 10:08:09.931562 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:08:09.931941 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.931950 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:09.936344 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.326756ms
rdfLoader: 2020/08/12 10:08:09.936657 attachnaode: uuUq6c1tRBWcds4IkmUrcg==, fey7tSb7QhiR3xngMR31Jg==, A#G#:S
DB: 2020/08/12 10:08:09.941806 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.350355ms
DB: 2020/08/12 10:08:09.945403 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.533027ms
AttachNode: main 2020/08/12 10:08:09.945418 FetchForUpdate: fey7tSb7QhiR3xngMR31Jg== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:08:09.945424 ** Cache FetchForUpdate Cache Key Value: [fey7tSb7QhiR3xngMR31Jg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:09.945429 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.945432 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:09.945436 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.945440 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.945444 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.945447 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.945451 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.945456 +++  Cache FetchItems for sortk A#G#:S UID: [fey7tSb7QhiR3xngMR31Jg==] 
AttachNode: gr1 2020/08/12 10:08:09.945627 Enter...gr1 FetchForUpdate uuUq6c1tRBWcds4IkmUrcg==
FetchForUpdate: 2020/08/12 10:08:09.945635 ** Cache FetchForUpdate Cache Key Value: [uuUq6c1tRBWcds4IkmUrcg==]   sortk: A#
FetchForUpdate: 2020/08/12 10:08:09.945656 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.945660 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:09.945664 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.945667 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.945678 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.945681 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.945685 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.945699 +++  Cache FetchItems for sortk A# UID: [uuUq6c1tRBWcds4IkmUrcg==] 
DB: 2020/08/12 10:08:09.947979 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.478883ms
AttachNode: main 2020/08/12 10:08:09.948016 FetchForUpdate:  completed..
DB: 2020/08/12 10:08:09.949015 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.253446ms
AttachNode: gr1 2020/08/12 10:08:09.949203 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:08:09.949212 GetType
GetType:2020/08/12 10:08:09.949216 len(d.m)= 10
GetType: 2020/08/12 10:08:09.949234  A#T : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.949264  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.949282  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.949295  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.949307  A#:A : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.949319  A#:D : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.949333  A#:N : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.949348  A#G#:S : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:08:09.949367  A#:C : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.949380  A#G#:F : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
AttachNode: gr1 2020/08/12 10:08:09.949385 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:08:09.949543 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:08:09.949657 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:08:09.949749 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:08:09.949758 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:08:09.950377 len(d.m)= 10
GetType: 2020/08/12 10:08:09.950398  A#:A : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.950410  A#:D : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.950422  A#:N : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.950434  A#T : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.950446  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.950521  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.950538  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.950559  A#G#:S : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:08:09.950572  A#:C : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:09.950584  A#G#:F : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 10:08:09.950906 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:08:09.951526 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.951539 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:08:09.951544 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:08:09.951800 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.578307ms
Unlock: 2020/08/12 10:08:09.951812 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:08:09.952196 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.952204 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:08:09.952214 About to send on xch : client.ovflTarget{tUID:util.UID{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, itemId:0}
AttachNode: gr1 2020/08/12 10:08:09.952225 target read from xch... 
AttachNode: gr1 2020/08/12 10:08:09.952230 gc.FetchForUpdate(pUID, sortK)... 
FetchForUpdate: 2020/08/12 10:08:09.952235 ** Cache FetchForUpdate Cache Key Value: [fey7tSb7QhiR3xngMR31Jg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:09.952240 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:09.952243 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:09.952247 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:09.952250 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:09.952254 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:09.952275 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:09.952279 check sortk is cached 
fetchItems: 2020/08/12 10:08:09.952284 +++  Cache FetchItems for sortk A#G#:S UID: [fey7tSb7QhiR3xngMR31Jg==] 
DB: 2020/08/12 10:08:09.954883 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.396062ms
DB: 2020/08/12 10:08:09.961222 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.986197ms
DB: 2020/08/12 10:08:09.964658 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.123224ms
DB: 2020/08/12 10:08:09.968652 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.412372ms
DB: 2020/08/12 10:08:09.975100 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.804628ms
DB: 2020/08/12 10:08:09.978684 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.132333ms
DB: 2020/08/12 10:08:09.983059 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.891374ms
DB: 2020/08/12 10:08:09.989779 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.072622ms
DB: 2020/08/12 10:08:09.994251 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.318708ms
DB: 2020/08/12 10:08:09.998315 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.9948ms
AttachNode: gr1 2020/08/12 10:08:09.998326 unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:08:09.998331 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
Unlock: 2020/08/12 10:08:09.998360 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:09.998365 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:10.001637 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.229549ms
FetchForUpdate: 2020/08/12 10:08:10.001650 ** Cache FetchForUpdate Cache Key Value: [fey7tSb7QhiR3xngMR31Jg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:10.001655 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.001659 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.001663 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.001667 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.001670 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.001674 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.001678 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.001683 +++  Cache FetchItems for sortk A#G#:S UID: [fey7tSb7QhiR3xngMR31Jg==] 
DB: 2020/08/12 10:08:10.004343 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.615649ms
AttachNode: gr1 2020/08/12 10:08:10.004453 Errored: SetUpredAvailable :for  fey7tSb7QhiR3xngMR31Jg==
Cache: 2020/08/12 10:08:10.004462 In SetUpredAvailable: pUid, tUID:  fey7tSb7QhiR3xngMR31Jg== fey7tSb7QhiR3xngMR31Jg== A#G#:S
Cache: 2020/08/12 10:08:10.004466 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:08:10.008048 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.548129ms
Unlock: 2020/08/12 10:08:10.008064 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:08:10.008106 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.008112 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:10.012164 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.976476ms
rdfLoader: 2020/08/12 10:08:10.012191 attachnaode: uuUq6c1tRBWcds4IkmUrcg==, 6L4WBQfCQdWhZ4p65HtoBQ==, A#G#:S
DB: 2020/08/12 10:08:10.015715 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.433561ms
DB: 2020/08/12 10:08:10.019471 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.659419ms
AttachNode: main 2020/08/12 10:08:10.019486 FetchForUpdate: 6L4WBQfCQdWhZ4p65HtoBQ== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:08:10.019492 ** Cache FetchForUpdate Cache Key Value: [6L4WBQfCQdWhZ4p65HtoBQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:10.019496 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.019500 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.019504 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.019508 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.019512 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.019515 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.019519 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.019534 +++  Cache FetchItems for sortk A#G#:S UID: [6L4WBQfCQdWhZ4p65HtoBQ==] 
AttachNode: gr1 2020/08/12 10:08:10.019930 Enter...gr1 FetchForUpdate uuUq6c1tRBWcds4IkmUrcg==
FetchForUpdate: 2020/08/12 10:08:10.019941 ** Cache FetchForUpdate Cache Key Value: [uuUq6c1tRBWcds4IkmUrcg==]   sortk: A#
FetchForUpdate: 2020/08/12 10:08:10.019945 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.019949 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.019952 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.019956 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.019960 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.019963 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.019977 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.019982 +++  Cache FetchItems for sortk A# UID: [uuUq6c1tRBWcds4IkmUrcg==] 
DB: 2020/08/12 10:08:10.022284 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.67954ms
AttachNode: main 2020/08/12 10:08:10.022398 FetchForUpdate:  completed..
DB: 2020/08/12 10:08:10.024079 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.898402ms
AttachNode: gr1 2020/08/12 10:08:10.024248 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:08:10.024256 GetType
GetType:2020/08/12 10:08:10.024260 len(d.m)= 10
GetType: 2020/08/12 10:08:10.024279  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.024292  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.024306  A#:A : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.024319  A#:D : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.024331  A#:N : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.024358  A#T : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.024372  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.024394  A#:C : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.024407  A#G#:F : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:10.024424  A#G#:S : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
AttachNode: gr1 2020/08/12 10:08:10.024429 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:08:10.024500 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:08:10.024572 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:08:10.024619 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:08:10.024625 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:08:10.025016 len(d.m)= 10
GetType: 2020/08/12 10:08:10.025036  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.025048  A#:A : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.025060  A#:D : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.025071  A#:N : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.025082  A#T : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.025099  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.025319  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.025342  A#G#:F : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:10.025358  A#G#:S : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:08:10.025372  A#:C : &block.DataItem{PKey:[]uint8{0xba, 0xe5, 0x2a, 0xe9, 0xcd, 0x6d, 0x44, 0x15, 0x9c, 0x76, 0xce, 0x8, 0x92, 0x65, 0x2b, 0x72}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:08:10.025638 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:08:10.026053 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.575625ms
Unlock: 2020/08/12 10:08:10.026423 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.026433 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:08:10.026438 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:08:10.029163 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.076487ms
DB: 2020/08/12 10:08:10.029179 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.076487ms
DB: 2020/08/12 10:08:10.035164 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.952769ms
DB: 2020/08/12 10:08:10.035180 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.952769ms
DB: 2020/08/12 10:08:10.039167 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.889198ms
DB: 2020/08/12 10:08:10.042755 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.497324ms
Unlock: 2020/08/12 10:08:10.042772 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:08:10.043199 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.043210 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:08:10.043223 About to send on xch : client.ovflTarget{tUID:util.UID{0x58, 0xd8, 0x72, 0x77, 0xb, 0x11, 0x4b, 0x4b, 0xa3, 0xf1, 0xf9, 0x56, 0xab, 0xfe, 0xf0, 0xd2}, itemId:1}
AttachNode: gr1 2020/08/12 10:08:10.043231 target read from xch... 
DB: 2020/08/12 10:08:10.049689 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.132968ms
DB: 2020/08/12 10:08:10.052888 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.115409ms
DB: 2020/08/12 10:08:10.056536 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.507311ms
DB: 2020/08/12 10:08:10.062805 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.953993ms
DB: 2020/08/12 10:08:10.067168 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.863091ms
DB: 2020/08/12 10:08:10.071731 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.462746ms
DB: 2020/08/12 10:08:10.077578 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.769376ms
DB: 2020/08/12 10:08:10.080799 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.151835ms
DB: 2020/08/12 10:08:10.085468 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.532523ms
DB: 2020/08/12 10:08:10.088865 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.304366ms
FetchForUpdate: 2020/08/12 10:08:10.088878 ** Cache FetchForUpdate Cache Key Value: [6L4WBQfCQdWhZ4p65HtoBQ==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:10.088883 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.088887 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.088891 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.088895 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.088898 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.088902 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.088906 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.088911 +++  Cache FetchItems for sortk A#G#:S UID: [6L4WBQfCQdWhZ4p65HtoBQ==] 
DB: 2020/08/12 10:08:10.091539 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.552386ms
AttachNode: gr1 2020/08/12 10:08:10.091648 Errored: SetUpredAvailable :for  6L4WBQfCQdWhZ4p65HtoBQ==
Cache: 2020/08/12 10:08:10.091657 In SetUpredAvailable: pUid, tUID:  6L4WBQfCQdWhZ4p65HtoBQ== WNhydwsRS0uj8flWq/7w0g== A#G#:S
Cache: 2020/08/12 10:08:10.091661 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:08:10.095041 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.329955ms
Unlock: 2020/08/12 10:08:10.095280 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:08:10.096883 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.096911 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:10.101397 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.354253ms
rdfLoader: 2020/08/12 10:08:10.101637 attachnaode: 6L4WBQfCQdWhZ4p65HtoBQ==, fey7tSb7QhiR3xngMR31Jg==, A#G#:S
DB: 2020/08/12 10:08:10.105228 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.304753ms
DB: 2020/08/12 10:08:10.109484 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.037564ms
AttachNode: main 2020/08/12 10:08:10.109504 FetchForUpdate: fey7tSb7QhiR3xngMR31Jg== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:08:10.109509 ** Cache FetchForUpdate Cache Key Value: [fey7tSb7QhiR3xngMR31Jg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:10.109524 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.109528 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.109532 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.109535 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.109539 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.109562 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.109566 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.109571 +++  Cache FetchItems for sortk A#G#:S UID: [fey7tSb7QhiR3xngMR31Jg==] 
AttachNode: gr1 2020/08/12 10:08:10.109950 Enter...gr1 FetchForUpdate 6L4WBQfCQdWhZ4p65HtoBQ==
FetchForUpdate: 2020/08/12 10:08:10.109960 ** Cache FetchForUpdate Cache Key Value: [6L4WBQfCQdWhZ4p65HtoBQ==]   sortk: A#
FetchForUpdate: 2020/08/12 10:08:10.109981 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.109985 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.109989 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.109993 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.109996 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.110005 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.110008 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.110013 +++  Cache FetchItems for sortk A# UID: [6L4WBQfCQdWhZ4p65HtoBQ==] 
DB: 2020/08/12 10:08:10.112702 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.931904ms
AttachNode: main 2020/08/12 10:08:10.112950 FetchForUpdate:  completed..
DB: 2020/08/12 10:08:10.147745 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 37.51111ms
AttachNode: gr1 2020/08/12 10:08:10.148193 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:08:10.148205 GetType
GetType:2020/08/12 10:08:10.148210 len(d.m)= 10
GetType: 2020/08/12 10:08:10.148236  A#G#:S : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, []uint8{0x58, 0xd8, 0x72, 0x77, 0xb, 0x11, 0x4b, 0x4b, 0xa3, 0xf1, 0xf9, 0x56, 0xab, 0xfe, 0xf0, 0xd2}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:08:10.148250  A#:D : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.148264  A#G#:F : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:08:10.148276  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.148289  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.148330  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.148343  A#:A : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.148357  A#:C : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.148368  A#:N : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.148380  A#T : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
AttachNode: gr1 2020/08/12 10:08:10.148385 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:08:10.148497 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:08:10.148552 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:08:10.148598 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:08:10.148605 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:08:10.148991 len(d.m)= 10
GetType: 2020/08/12 10:08:10.149011  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.149025  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.149037  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.149054  A#:A : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.149067  A#:C : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.149078  A#:N : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.149090  A#T : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.149108  A#G#:S : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, []uint8{0x58, 0xd8, 0x72, 0x77, 0xb, 0x11, 0x4b, 0x4b, 0xa3, 0xf1, 0xf9, 0x56, 0xab, 0xfe, 0xf0, 0xd2}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:08:10.149123  A#:D : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.149157  A#G#:F : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 10:08:10.149347 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:08:10.149865 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 36.63517ms
Unlock: 2020/08/12 10:08:10.150127 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.150135 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:08:10.150140 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:08:10.152947 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.048793ms
DB: 2020/08/12 10:08:10.152961 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.048793ms
DB: 2020/08/12 10:08:10.158992 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.998719ms
DB: 2020/08/12 10:08:10.159015 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.998719ms
DB: 2020/08/12 10:08:10.164992 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.904111ms
DB: 2020/08/12 10:08:10.168849 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.792163ms
Unlock: 2020/08/12 10:08:10.168862 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:08:10.168911 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.168916 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:08:10.168924 About to send on xch : client.ovflTarget{tUID:util.UID{0x1e, 0xd3, 0xc0, 0xd6, 0x5, 0xe6, 0x42, 0xc2, 0x87, 0x35, 0xcf, 0xf7, 0xa3, 0x8, 0x57, 0x48}, itemId:1}
AttachNode: gr1 2020/08/12 10:08:10.168936 target read from xch... 
DB: 2020/08/12 10:08:10.174878 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.867305ms
DB: 2020/08/12 10:08:10.179014 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.077686ms
DB: 2020/08/12 10:08:10.183404 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.253149ms
DB: 2020/08/12 10:08:10.196030 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 12.1682ms
DB: 2020/08/12 10:08:10.199328 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.220995ms
DB: 2020/08/12 10:08:10.202920 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.364517ms
DB: 2020/08/12 10:08:10.208744 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.751827ms
DB: 2020/08/12 10:08:10.212190 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.153061ms
DB: 2020/08/12 10:08:10.215941 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.449439ms
DB: 2020/08/12 10:08:10.219329 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.194748ms
FetchForUpdate: 2020/08/12 10:08:10.219341 ** Cache FetchForUpdate Cache Key Value: [fey7tSb7QhiR3xngMR31Jg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:10.219346 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.219351 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.219355 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.219358 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.219362 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.219366 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.219369 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.219374 +++  Cache FetchItems for sortk A#G#:S UID: [fey7tSb7QhiR3xngMR31Jg==] 
DB: 2020/08/12 10:08:10.224379 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.826008ms
AttachNode: gr1 2020/08/12 10:08:10.224494 Errored: SetUpredAvailable :for  fey7tSb7QhiR3xngMR31Jg==
Cache: 2020/08/12 10:08:10.224506 In SetUpredAvailable: pUid, tUID:  fey7tSb7QhiR3xngMR31Jg== HtPA1gXmQsKHNc/3owhXSA== A#G#:S
Cache: 2020/08/12 10:08:10.224511 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:08:10.227859 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.311596ms
Unlock: 2020/08/12 10:08:10.227870 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:08:10.228291 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.228299 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:10.232230 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.872553ms
rdfLoader: 2020/08/12 10:08:10.232408 attachnaode: 6L4WBQfCQdWhZ4p65HtoBQ==, uuUq6c1tRBWcds4IkmUrcg==, A#G#:S
DB: 2020/08/12 10:08:10.235865 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.387433ms
DB: 2020/08/12 10:08:10.239476 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.539508ms
AttachNode: main 2020/08/12 10:08:10.239491 FetchForUpdate: uuUq6c1tRBWcds4IkmUrcg== sortK A#G#:S 
FetchForUpdate: 2020/08/12 10:08:10.239497 ** Cache FetchForUpdate Cache Key Value: [uuUq6c1tRBWcds4IkmUrcg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:10.239501 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.239504 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.239508 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.239512 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.239515 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.239519 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.239522 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.239527 +++  Cache FetchItems for sortk A#G#:S UID: [uuUq6c1tRBWcds4IkmUrcg==] 
AttachNode: gr1 2020/08/12 10:08:10.239766 Enter...gr1 FetchForUpdate 6L4WBQfCQdWhZ4p65HtoBQ==
FetchForUpdate: 2020/08/12 10:08:10.239775 ** Cache FetchForUpdate Cache Key Value: [6L4WBQfCQdWhZ4p65HtoBQ==]   sortk: A#
FetchForUpdate: 2020/08/12 10:08:10.239779 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.239782 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.239786 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.239790 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.239793 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.239797 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.239800 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.239805 +++  Cache FetchItems for sortk A# UID: [6L4WBQfCQdWhZ4p65HtoBQ==] 
DB: 2020/08/12 10:08:10.242209 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.613587ms
AttachNode: main 2020/08/12 10:08:10.242286 FetchForUpdate:  completed..
DB: 2020/08/12 10:08:10.243170 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.297286ms
AttachNode: gr1 2020/08/12 10:08:10.243349 Sccuess for FetchForUpdate
AttachNode: gr1 2020/08/12 10:08:10.243357 GetType
GetType:2020/08/12 10:08:10.243361 len(d.m)= 10
GetType: 2020/08/12 10:08:10.243379  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.243395  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.243408  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.243420  A#:A : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.243443  A#:C : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.243471  A#:N : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.243485  A#T : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.243502  A#G#:S : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, []uint8{0x58, 0xd8, 0x72, 0x77, 0xb, 0x11, 0x4b, 0x4b, 0xa3, 0xf1, 0xf9, 0x56, 0xab, 0xfe, 0xf0, 0xd2}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:08:10.243514  A#:D : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.243526  A#G#:F : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
AttachNode: gr1 2020/08/12 10:08:10.243531 Sccuess for GetType()
AttachNode: gr1 2020/08/12 10:08:10.243594 v.Name, V.DT=  Pg Age, I, true
AttachNode: gr1 2020/08/12 10:08:10.243665 v.Name, V.DT=  Pg DOB, S, true
AttachNode: gr1 2020/08/12 10:08:10.243713 v.Name, V.DT=  Pg Name, S, true
AttachNode: gr1 2020/08/12 10:08:10.243720 Enter UnmarshalCache(cnv); 
GetType:2020/08/12 10:08:10.244095 len(d.m)= 10
GetType: 2020/08/12 10:08:10.244134  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.244148  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.244169  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.244181  A#:A : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.244194  A#:C : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.244205  A#:N : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.244216  A#T : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.244233  A#G#:S : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x7d, 0xec, 0xbb, 0xb5, 0x26, 0xfb, 0x42, 0x18, 0x91, 0xdf, 0x19, 0xe0, 0x31, 0x1d, 0xf5, 0x26}, []uint8{0x58, 0xd8, 0x72, 0x77, 0xb, 0x11, 0x4b, 0x4b, 0xa3, 0xf1, 0xf9, 0x56, 0xab, 0xfe, 0xf0, 0xd2}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:08:10.244244  A#:D : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:08:10.244256  A#G#:F : &block.DataItem{PKey:[]uint8{0xe8, 0xbe, 0x16, 0x5, 0x7, 0xc2, 0x41, 0xd5, 0xa1, 0x67, 0x8a, 0x7a, 0xe4, 0x7b, 0x68, 0x5}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 10:08:10.244421 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
Unlock: 2020/08/12 10:08:10.244854 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.244862 Success: RWMutex UNLOCKed
AttachNode: gr1 2020/08/12 10:08:10.244871 Left UnmarshalCache(cnv) - waiting on channel xch  
DB: 2020/08/12 10:08:10.245973 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.431429ms
DB: 2020/08/12 10:08:10.249153 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.149097ms
DB: 2020/08/12 10:08:10.249315 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.149097ms
DB: 2020/08/12 10:08:10.252595 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.243571ms
DB: 2020/08/12 10:08:10.252610 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.243571ms
DB: 2020/08/12 10:08:10.258157 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.475937ms
DB: 2020/08/12 10:08:10.319572 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 60.703488ms
Unlock: 2020/08/12 10:08:10.319600 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
Unlock: 2020/08/12 10:08:10.319642 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.319648 Success: RWMutex UNLOCKed
AttachNode: main 2020/08/12 10:08:10.319656 About to send on xch : client.ovflTarget{tUID:util.UID{0x50, 0xe4, 0xcd, 0x75, 0x8c, 0x7, 0x46, 0x10, 0xae, 0x88, 0xcb, 0x93, 0x10, 0x74, 0xb1, 0x0}, itemId:1}
AttachNode: gr1 2020/08/12 10:08:10.319664 target read from xch... 
DB: 2020/08/12 10:08:10.325611 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.879818ms
DB: 2020/08/12 10:08:10.328848 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.183334ms
DB: 2020/08/12 10:08:10.332489 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.535549ms
DB: 2020/08/12 10:08:10.337792 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.236878ms
DB: 2020/08/12 10:08:10.341262 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.405359ms
DB: 2020/08/12 10:08:10.345421 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.93403ms
DB: 2020/08/12 10:08:10.351861 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.115108ms
DB: 2020/08/12 10:08:10.356239 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.067042ms
DB: 2020/08/12 10:08:10.360041 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.487537ms
DB: 2020/08/12 10:08:10.363657 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.426784ms
FetchForUpdate: 2020/08/12 10:08:10.363669 ** Cache FetchForUpdate Cache Key Value: [uuUq6c1tRBWcds4IkmUrcg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:08:10.363673 FFU: release gLock
FetchForUpdate: 2020/08/12 10:08:10.363677 FFU: released gLock
FetchForUpdate: 2020/08/12 10:08:10.363682 FFU: acquire eLock
FetchForUpdate: 2020/08/12 10:08:10.363686 FFU: acquired eLock
FetchForUpdate: 2020/08/12 10:08:10.363689 e.NodeCache == nil 
FetchForUpdate: 2020/08/12 10:08:10.363693 e.NodeCache == nil FALSE good 
FetchForUpdate: 2020/08/12 10:08:10.363696 check sortk is cached 
fetchItems: 2020/08/12 10:08:10.363701 +++  Cache FetchItems for sortk A#G#:S UID: [uuUq6c1tRBWcds4IkmUrcg==] 
DB: 2020/08/12 10:08:10.366677 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.803432ms
AttachNode: gr1 2020/08/12 10:08:10.366783 Errored: SetUpredAvailable :for  uuUq6c1tRBWcds4IkmUrcg==
Cache: 2020/08/12 10:08:10.366791 In SetUpredAvailable: pUid, tUID:  uuUq6c1tRBWcds4IkmUrcg== UOTNdYwHRhCuiMuTEHSxAA== A#G#:S
Cache: 2020/08/12 10:08:10.366805 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:08:10.370141 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.299984ms
Unlock: 2020/08/12 10:08:10.370151 ******* IN UNLOCK NC ********************
Unlock: 2020/08/12 10:08:10.370523 ffuEnabled: About to RWMutex UNLOCK
Unlock: 2020/08/12 10:08:10.370531 Success: RWMutex UNLOCKed
DB: 2020/08/12 10:08:10.374480 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.890326ms
rdfLoader: 2020/08/12 10:08:10.374558 saveNode exited loop channel closed.....Waiting on SaveRDFNodes to finish.
rdfLoader: 2020/08/12 10:08:10.374583 saveNode finished waiting...exiting
grmgr: 2020/08/12 10:08:10.374596 Powering down...
rdfuuid: 2020/08/12 10:08:10.374603 Powering down...
DB:2020/08/12 10:16:19 log.go:18: ===============================================================================
grmgr: 2020/08/12 10:16:19.267435 Powering on...
rdfLoader: 2020/08/12 10:16:19.267764 verify started....xx.
rdfLoader: 2020/08/12 10:16:19.267779 saveNode started......
rdfuuid: 2020/08/12 10:16:19.267792 Powering on...
rdfLoader: 2020/08/12 10:16:19.267799 *************** All started 
rdfLoader: 2020/08/12 10:16:19.276277 .  getType..
rdfLoader: 2020/08/12 10:16:19.276288 node.TyName : [Person]
DB: 2020/08/12 10:16:19.347929 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.593045ms
verify: 2020/08/12 10:16:19.348117 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:16:19.348164 Find Ty Address
rdfLoader: 2020/08/12 10:16:19.348171 Find Ty Age
rdfLoader: 2020/08/12 10:16:19.348177 Find Ty Cars
rdfLoader: 2020/08/12 10:16:19.348183 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:16:19.348188 Add to SS . [Alfa]
rdfLoader: 2020/08/12 10:16:19.348193 Find Ty DOB
rdfLoader: 2020/08/12 10:16:19.348198 Find Ty Friends
rdfLoader: 2020/08/12 10:16:19.348203 Find Ty Jobs
rdfLoader: 2020/08/12 10:16:19.348207 Find Ty Name
rdfLoader: 2020/08/12 10:16:19.348213 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:16:19.348218 Find Ty Siblings
rdfLoader: 2020/08/12 10:16:19.348228 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:16:19.348258 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:16:19.348264 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:16:19.348290 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348299 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348305 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348312 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348319 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348326 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348341 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:16:19.348346 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:16:19.348366 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003865a0)}
SaveRDFNode: 2020/08/12 10:16:19.348370 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:16:19.348379 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.348384 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.348390 UID received  : 9Ccx6Ta5R4+MySZV9XYzEQ==
verify: 2020/08/12 10:16:19.348603 *** Verify running...... 1
rdfLoader: 2020/08/12 10:16:19.348624 .  getType..
rdfLoader: 2020/08/12 10:16:19.348643 node.TyName : [Person]
verify: 2020/08/12 10:16:19.348666 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:16:19.348708 Find Ty Address
rdfLoader: 2020/08/12 10:16:19.348714 Find Ty Age
rdfLoader: 2020/08/12 10:16:19.348721 Find Ty Cars
rdfLoader: 2020/08/12 10:16:19.348726 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:16:19.348731 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 10:16:19.348736 Find Ty DOB
rdfLoader: 2020/08/12 10:16:19.348742 Find Ty Friends
rdfLoader: 2020/08/12 10:16:19.348746 Find Ty Jobs
rdfLoader: 2020/08/12 10:16:19.348751 Find Ty Name
rdfLoader: 2020/08/12 10:16:19.348756 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:16:19.348760 Find Ty Siblings
rdfLoader: 2020/08/12 10:16:19.348769 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:16:19.348799 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:16:19.348805 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:16:19.348826 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348834 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348841 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348847 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348853 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348859 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.348865 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:16:19.348870 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:16:19.348876 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000386ae0)}
SaveRDFNode: 2020/08/12 10:16:19.348880 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:16:19.348889 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.348893 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.348899 UID received  : /quN3FsjSyimS9VAYtUKoA==
verify: 2020/08/12 10:16:19.349288 *** Verify running...... 1
rdfLoader: 2020/08/12 10:16:19.352203 .  getType..
rdfLoader: 2020/08/12 10:16:19.352232 node.TyName : [Person]
verify: 2020/08/12 10:16:19.352576 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:16:19.353108 Find Ty Address
rdfLoader: 2020/08/12 10:16:19.353124 Find Ty Age
rdfLoader: 2020/08/12 10:16:19.353130 Find Ty Cars
rdfLoader: 2020/08/12 10:16:19.353136 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 10:16:19.353140 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 10:16:19.353145 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:16:19.353149 Find Ty DOB
rdfLoader: 2020/08/12 10:16:19.353153 Find Ty Friends
rdfLoader: 2020/08/12 10:16:19.353157 Find Ty Jobs
rdfLoader: 2020/08/12 10:16:19.353161 Find Ty Name
rdfLoader: 2020/08/12 10:16:19.353165 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:16:19.353169 Find Ty Siblings
rdfLoader: 2020/08/12 10:16:19.353193 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:16:19.353246 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:16:19.353278 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:16:19.353300 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.353306 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.353313 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.353319 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.353324 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.353329 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.353335 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:16:19.353339 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:16:19.353344 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000387140)}
SaveRDFNode: 2020/08/12 10:16:19.353348 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:16:19.353355 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.353359 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.353364 UID received  : Wl2xfMSySDSDTJ8fOE9+zg==
verify: 2020/08/12 10:16:19.353789 *** Verify running...... 2
rdfLoader: 2020/08/12 10:16:19.353805 .  getType..
rdfLoader: 2020/08/12 10:16:19.353810 node.TyName : [Person]
verify: 2020/08/12 10:16:19.354109 *** Verify waiting on umarshal ch............................................. 2
DB: 2020/08/12 10:16:19.356058 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.637732ms
rdfLoader: 2020/08/12 10:16:19.356721 Find Ty Address
rdfLoader: 2020/08/12 10:16:19.356730 Find Ty Age
rdfLoader: 2020/08/12 10:16:19.356736 Find Ty Cars
rdfLoader: 2020/08/12 10:16:19.356741 Add to SS . [Bentley]
rdfLoader: 2020/08/12 10:16:19.356746 Find Ty DOB
rdfLoader: 2020/08/12 10:16:19.356750 Find Ty Friends
rdfLoader: 2020/08/12 10:16:19.356754 Find Ty Jobs
rdfLoader: 2020/08/12 10:16:19.356758 Find Ty Name
rdfLoader: 2020/08/12 10:16:19.356762 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:16:19.356766 Find Ty Siblings
rdfLoader: 2020/08/12 10:16:19.356780 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:16:19.356808 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:16:19.356812 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:16:19.356857 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.356865 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.356871 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.356879 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.356884 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.356890 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:16:19.356895 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:16:19.356899 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:16:19.356905 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000387ce0)}
SaveRDFNode: 2020/08/12 10:16:19.356909 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:16:19.356916 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.356921 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.356926 UID received  : QK4pgXxxSTOCHGqRDyUPmA==
verify: 2020/08/12 10:16:19.357136 *** Verify running...... 2
verify: 2020/08/12 10:16:19.357145 verify exited.....
DB: 2020/08/12 10:16:19.359456 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.530205ms
DB: 2020/08/12 10:16:19.363338 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.243628ms
DB: 2020/08/12 10:16:19.368212 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.259549ms
DB: 2020/08/12 10:16:19.374670 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.211047ms
DB: 2020/08/12 10:16:19.374972 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.590557ms
DB: 2020/08/12 10:16:19.376490 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 23.094796ms
DB: 2020/08/12 10:16:19.377973 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.268117ms
DB: 2020/08/12 10:16:19.378367 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.353725ms
DB: 2020/08/12 10:16:19.381415 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.411233ms
DB: 2020/08/12 10:16:19.381775 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.377135ms
SaveRDFNode: 2020/08/12 10:16:19.381787 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003865a0)}
rdfUIDdb: 2020/08/12 10:16:19.381793 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.381803 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.381821 Received UID: X18=
SaveRDFNode: 2020/08/12 10:16:19.381846 a: = db.Item{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:16:19.384708 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.262237ms
SaveRDFNode: 2020/08/12 10:16:19.384724 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387ce0)}
rdfUIDdb: 2020/08/12 10:16:19.384731 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.384736 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.384743 Received UID: X18=
SaveRDFNode: 2020/08/12 10:16:19.384754 a: = db.Item{PKey:[]uint8{0x40, 0xae, 0x29, 0x81, 0x7c, 0x71, 0x49, 0x33, 0x82, 0x1c, 0x6a, 0x91, 0xf, 0x25, 0xf, 0x98}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:16:19.385810 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.936094ms
SaveRDFNode: 2020/08/12 10:16:19.385823 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003865a0)}
rdfUIDdb: 2020/08/12 10:16:19.385828 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.385832 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.385837 Received UID: X18=
SaveRDFNode: 2020/08/12 10:16:19.385847 a: = db.Item{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:16:19.387748 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 28.25782ms
DB: 2020/08/12 10:16:19.388234 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.446719ms
SaveRDFNode: 2020/08/12 10:16:19.388271 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387ce0)}
rdfUIDdb: 2020/08/12 10:16:19.388279 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.388283 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.388289 Received UID: X18=
SaveRDFNode: 2020/08/12 10:16:19.388300 a: = db.Item{PKey:[]uint8{0x40, 0xae, 0x29, 0x81, 0x7c, 0x71, 0x49, 0x33, 0x82, 0x1c, 0x6a, 0x91, 0xf, 0x25, 0xf, 0x98}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:16:19.389238 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.362142ms
SaveRDFNode: 2020/08/12 10:16:19.389265 Returned.+++++++++++ No error
DB: 2020/08/12 10:16:19.391183 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.398608ms
DB: 2020/08/12 10:16:19.392314 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.98005ms
SaveRDFNode: 2020/08/12 10:16:19.392323 Returned.+++++++++++ No error
DB: 2020/08/12 10:16:19.394670 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.449984ms
DB: 2020/08/12 10:16:19.395855 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 19.335036ms
DB: 2020/08/12 10:16:19.398024 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.320261ms
SaveRDFNode: 2020/08/12 10:16:19.398037 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/12 10:16:19.398042 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.398046 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.398052 Received UID: X18=
SaveRDFNode: 2020/08/12 10:16:19.398062 a: = db.Item{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:16:19.399270 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.382836ms
DB: 2020/08/12 10:16:19.401315 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.21425ms
SaveRDFNode: 2020/08/12 10:16:19.401475 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/12 10:16:19.401487 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.401492 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.401517 Received UID: X18=
SaveRDFNode: 2020/08/12 10:16:19.401530 a: = db.Item{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:16:19.402675 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.375551ms
DB: 2020/08/12 10:16:19.404997 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.419739ms
SaveRDFNode: 2020/08/12 10:16:19.405009 Returned.+++++++++++ No error
DB: 2020/08/12 10:16:19.406280 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.573081ms
SaveRDFNode: 2020/08/12 10:16:19.406296 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387140)}
rdfUIDdb: 2020/08/12 10:16:19.406303 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.406307 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.406313 Received UID: X18=
SaveRDFNode: 2020/08/12 10:16:19.406324 a: = db.Item{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:16:19.409591 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.235367ms
SaveRDFNode: 2020/08/12 10:16:19.409605 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387140)}
rdfUIDdb: 2020/08/12 10:16:19.409610 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:16:19.409614 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:16:19.409620 Received UID: X18=
SaveRDFNode: 2020/08/12 10:16:19.409630 a: = db.Item{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:16:19.413005 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.341491ms
SaveRDFNode: 2020/08/12 10:16:19.413015 Returned.+++++++++++ No error
DB: 2020/08/12 10:16:19.417420 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.630454ms
DB: 2020/08/12 10:16:19.426048 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.929668ms
FetchForUpdate: 2020/08/12 10:16:19.426068 ** Cache FetchForUpdate Cache Key Value: [/quN3FsjSyimS9VAYtUKoA==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:16:19.426458 ** Cache FetchForUpdate Cache Key Value: [9Ccx6Ta5R4+MySZV9XYzEQ==]   sortk: A#
DB: 2020/08/12 10:16:19.429384 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.832547ms
FetchForUpdate: 2020/08/12 10:16:19.429446 len(nb): 1
fetchItems: 2020/08/12 10:16:19.429455 +++  Cache FetchItems for sortk A#G#:S UID: [/quN3FsjSyimS9VAYtUKoA==] 
DB: 2020/08/12 10:16:19.432434 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.573075ms
DB: 2020/08/12 10:16:19.436809 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.701753ms
Unlock: 2020/08/12 10:16:19.438001 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:16:19.443414 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 16.336609ms
FetchForUpdate: 2020/08/12 10:16:19.443522 len(nb): 7
fetchItems: 2020/08/12 10:16:19.443539 +++  Cache FetchItems for sortk A# UID: [9Ccx6Ta5R4+MySZV9XYzEQ==] 
DB: 2020/08/12 10:16:19.449190 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 5.231521ms
GetType:2020/08/12 10:16:19.449310 len(d.m)= 7
GetType: 2020/08/12 10:16:19.449334  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.449347  A#T : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.449363  A#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.449376  A#:C : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.449390  A#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.449400  A#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.449412  A#G#:F : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 10:16:19.453019 len(d.m)= 7
GetType: 2020/08/12 10:16:19.453067  A#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.453236  A#G#:F : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.453267  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.453292  A#T : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.453306  A#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.453318  A#:C : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.453332  A#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:16:19.453768 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/12 10:16:19.454093 ** Cache FetchForUpdate Cache Key Value: [/quN3FsjSyimS9VAYtUKoA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:19.454102 +++  Cache FetchItems for sortk A#G#:S UID: [/quN3FsjSyimS9VAYtUKoA==] 
DB: 2020/08/12 10:16:19.456939 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.671363ms
DB: 2020/08/12 10:16:19.463181 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.153087ms
DB: 2020/08/12 10:16:19.466616 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.391316ms
DB: 2020/08/12 10:16:19.470642 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.668408ms
DB: 2020/08/12 10:16:19.477182 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.203902ms
DB: 2020/08/12 10:16:19.480989 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.480275ms
DB: 2020/08/12 10:16:19.484988 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.691082ms
DB: 2020/08/12 10:16:19.491354 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.069995ms
DB: 2020/08/12 10:16:19.495157 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.479289ms
DB: 2020/08/12 10:16:19.499019 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.555895ms
Unlock: 2020/08/12 10:16:19.499031 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:16:19.502846 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.449761ms
FetchForUpdate: 2020/08/12 10:16:19.502858 ** Cache FetchForUpdate Cache Key Value: [/quN3FsjSyimS9VAYtUKoA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:19.502864 +++  Cache FetchItems for sortk A#G#:S UID: [/quN3FsjSyimS9VAYtUKoA==] 
DB: 2020/08/12 10:16:19.506215 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.167412ms
AttachNode: gr1 2020/08/12 10:16:19.506385 Errored: SetUpredAvailable :for  /quN3FsjSyimS9VAYtUKoA==
Cache: 2020/08/12 10:16:19.506395 In SetUpredAvailable: pUid, tUID:  /quN3FsjSyimS9VAYtUKoA== /quN3FsjSyimS9VAYtUKoA== A#G#:S
Cache: 2020/08/12 10:16:19.506399 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:16:19.510461 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.01482ms
Unlock: 2020/08/12 10:16:19.510475 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:16:19.520717 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 9.716157ms
DB: 2020/08/12 10:16:19.524557 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.776401ms
DB: 2020/08/12 10:16:19.530671 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.051791ms
FetchForUpdate: 2020/08/12 10:16:19.530701 ** Cache FetchForUpdate Cache Key Value: [Wl2xfMSySDSDTJ8fOE9+zg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:16:19.530873 ** Cache FetchForUpdate Cache Key Value: [9Ccx6Ta5R4+MySZV9XYzEQ==]   sortk: A#
fetchItems: 2020/08/12 10:16:19.530884 +++  Cache FetchItems for sortk A# UID: [9Ccx6Ta5R4+MySZV9XYzEQ==] 
DB: 2020/08/12 10:16:19.533528 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.781293ms
FetchForUpdate: 2020/08/12 10:16:19.533565 len(nb): 1
fetchItems: 2020/08/12 10:16:19.533572 +++  Cache FetchItems for sortk A#G#:S UID: [Wl2xfMSySDSDTJ8fOE9+zg==] 
DB: 2020/08/12 10:16:19.536662 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.921926ms
DB: 2020/08/12 10:16:19.540746 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.77358ms
Unlock: 2020/08/12 10:16:19.540757 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:16:19.726991 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 196.018186ms
GetType:2020/08/12 10:16:19.727425 len(d.m)= 7
GetType: 2020/08/12 10:16:19.727454  A#:C : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.727470  A#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.727484  A#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.727507  A#G#:F : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.727535  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.727548  A#T : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.727561  A#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:16:19.728249 len(d.m)= 7
GetType: 2020/08/12 10:16:19.728269  A#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.728282  A#G#:F : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.728298  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.728310  A#T : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.728322  A#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.728339  A#:C : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.728351  A#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:16:19.728668 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/12 10:16:19.729044 ** Cache FetchForUpdate Cache Key Value: [Wl2xfMSySDSDTJ8fOE9+zg==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:19.729054 +++  Cache FetchItems for sortk A#G#:S UID: [Wl2xfMSySDSDTJ8fOE9+zg==] 
DB: 2020/08/12 10:16:19.736664 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 7.40271ms
DB: 2020/08/12 10:16:19.745356 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 8.607231ms
DB: 2020/08/12 10:16:19.753739 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 8.214816ms
DB: 2020/08/12 10:16:19.761004 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.894238ms
DB: 2020/08/12 10:16:19.769286 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.965959ms
DB: 2020/08/12 10:16:19.775405 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.654364ms
DB: 2020/08/12 10:16:19.782997 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.119068ms
DB: 2020/08/12 10:16:19.792706 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 9.090597ms
DB: 2020/08/12 10:16:19.800943 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.76863ms
DB: 2020/08/12 10:16:19.807918 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.28076ms
Unlock: 2020/08/12 10:16:19.807931 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:16:19.814981 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.517749ms
FetchForUpdate: 2020/08/12 10:16:19.814993 ** Cache FetchForUpdate Cache Key Value: [Wl2xfMSySDSDTJ8fOE9+zg==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:19.815000 +++  Cache FetchItems for sortk A#G#:S UID: [Wl2xfMSySDSDTJ8fOE9+zg==] 
DB: 2020/08/12 10:16:19.819086 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.868947ms
AttachNode: gr1 2020/08/12 10:16:19.819338 Errored: SetUpredAvailable :for  Wl2xfMSySDSDTJ8fOE9+zg==
Cache: 2020/08/12 10:16:19.819351 In SetUpredAvailable: pUid, tUID:  Wl2xfMSySDSDTJ8fOE9+zg== Wl2xfMSySDSDTJ8fOE9+zg== A#G#:S
Cache: 2020/08/12 10:16:19.819355 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:16:19.824856 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.460357ms
Unlock: 2020/08/12 10:16:19.824866 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:16:19.832658 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.389746ms
DB: 2020/08/12 10:16:19.841453 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 8.460724ms
DB: 2020/08/12 10:16:19.848460 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.410094ms
FetchForUpdate: 2020/08/12 10:16:19.848476 ** Cache FetchForUpdate Cache Key Value: [9Ccx6Ta5R4+MySZV9XYzEQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:19.848483 +++  Cache FetchItems for sortk A#G#:S UID: [9Ccx6Ta5R4+MySZV9XYzEQ==] 
FetchForUpdate: 2020/08/12 10:16:19.848899 ** Cache FetchForUpdate Cache Key Value: [/quN3FsjSyimS9VAYtUKoA==]   sortk: A#
fetchItems: 2020/08/12 10:16:19.848910 +++  Cache FetchItems for sortk A# UID: [/quN3FsjSyimS9VAYtUKoA==] 
DB: 2020/08/12 10:16:19.852291 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.148647ms
GetType:2020/08/12 10:16:19.852459 len(d.m)= 10
GetType: 2020/08/12 10:16:19.852483  A#G#:S : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:16:19.852497  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.852512  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.852523  A#:N : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.852536  A#T : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.852548  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.852561  A#:A : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.852611  A#:C : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.852624  A#:D : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.852637  A#G#:F : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 10:16:19.853499 len(d.m)= 10
GetType: 2020/08/12 10:16:19.853522  A#G#:F : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.853536  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.853548  A#:A : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.853560  A#:C : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.853592  A#:D : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.853605  A#T : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.853621  A#G#:S : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:16:19.853638  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.853650  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.853661  A#:N : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:16:19.853999 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:16:19.854589 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.92563ms
DB: 2020/08/12 10:16:19.860013 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.103063ms
Unlock: 2020/08/12 10:16:19.860026 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 10:16:19.860569 ** Cache FetchForUpdate Cache Key Value: [9Ccx6Ta5R4+MySZV9XYzEQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:19.860580 +++  Cache FetchItems for sortk A#G#:S UID: [9Ccx6Ta5R4+MySZV9XYzEQ==] 
DB: 2020/08/12 10:16:19.877896 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 17.091704ms
DB: 2020/08/12 10:16:19.888136 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 10.116606ms
DB: 2020/08/12 10:16:19.893507 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.312589ms
DB: 2020/08/12 10:16:19.897804 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.181003ms
DB: 2020/08/12 10:16:19.904182 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.313217ms
DB: 2020/08/12 10:16:19.909404 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.165961ms
DB: 2020/08/12 10:16:19.914788 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.313695ms
DB: 2020/08/12 10:16:19.921201 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.337356ms
DB: 2020/08/12 10:16:19.928371 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.105852ms
DB: 2020/08/12 10:16:19.934249 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.576782ms
Unlock: 2020/08/12 10:16:19.934262 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:16:19.939136 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.805783ms
FetchForUpdate: 2020/08/12 10:16:19.939157 ** Cache FetchForUpdate Cache Key Value: [9Ccx6Ta5R4+MySZV9XYzEQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:19.939162 +++  Cache FetchItems for sortk A#G#:S UID: [9Ccx6Ta5R4+MySZV9XYzEQ==] 
DB: 2020/08/12 10:16:19.943336 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.133106ms
AttachNode: gr1 2020/08/12 10:16:19.943424 Errored: SetUpredAvailable :for  9Ccx6Ta5R4+MySZV9XYzEQ==
Cache: 2020/08/12 10:16:19.943432 In SetUpredAvailable: pUid, tUID:  9Ccx6Ta5R4+MySZV9XYzEQ== 9Ccx6Ta5R4+MySZV9XYzEQ== A#G#:S
Cache: 2020/08/12 10:16:19.943437 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:16:19.949105 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.63593ms
Unlock: 2020/08/12 10:16:19.949118 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:16:19.956452 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.251547ms
DB: 2020/08/12 10:16:19.960610 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.079335ms
DB: 2020/08/12 10:16:19.968036 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.241668ms
FetchForUpdate: 2020/08/12 10:16:19.968053 ** Cache FetchForUpdate Cache Key Value: [Wl2xfMSySDSDTJ8fOE9+zg==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:19.968060 +++  Cache FetchItems for sortk A#G#:S UID: [Wl2xfMSySDSDTJ8fOE9+zg==] 
FetchForUpdate: 2020/08/12 10:16:19.968411 ** Cache FetchForUpdate Cache Key Value: [/quN3FsjSyimS9VAYtUKoA==]   sortk: A#
fetchItems: 2020/08/12 10:16:19.968428 +++  Cache FetchItems for sortk A# UID: [/quN3FsjSyimS9VAYtUKoA==] 
DB: 2020/08/12 10:16:19.971744 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.11692ms
GetType:2020/08/12 10:16:19.971902 len(d.m)= 10
GetType: 2020/08/12 10:16:19.971923  A#G#:S : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:16:19.971938  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.971951  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.971963  A#:N : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.971975  A#T : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.971998  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972009  A#:A : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972021  A#:C : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972034  A#:D : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972046  A#G#:F : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 10:16:19.972437 len(d.m)= 10
GetType: 2020/08/12 10:16:19.972455  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972466  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972480  A#:N : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972491  A#T : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972521  A#G#:S : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:16:19.972532  A#:A : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972562  A#:C : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972575  A#:D : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:19.972586  A#G#:F : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:19.972598  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xfe, 0xab, 0x8d, 0xdc, 0x5b, 0x23, 0x4b, 0x28, 0xa6, 0x4b, 0xd5, 0x40, 0x62, 0xd5, 0xa, 0xa0}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:16:19.972756 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:16:19.973776 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.527019ms
DB: 2020/08/12 10:16:19.980765 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.637797ms
DB: 2020/08/12 10:16:19.991029 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 10.232485ms
DB: 2020/08/12 10:16:19.991048 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 10.232485ms
DB: 2020/08/12 10:16:19.996065 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.986187ms
DB: 2020/08/12 10:16:19.996080 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.986187ms
DB: 2020/08/12 10:16:20.001251 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.00829ms
DB: 2020/08/12 10:16:20.006473 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.038362ms
Unlock: 2020/08/12 10:16:20.006498 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:16:20.013675 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.519283ms
DB: 2020/08/12 10:16:20.021876 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 8.000238ms
DB: 2020/08/12 10:16:20.029836 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.322913ms
DB: 2020/08/12 10:16:20.036264 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.709011ms
DB: 2020/08/12 10:16:20.041416 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.076714ms
DB: 2020/08/12 10:16:20.045761 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.266964ms
DB: 2020/08/12 10:16:20.052093 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.266713ms
DB: 2020/08/12 10:16:20.055806 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.654366ms
DB: 2020/08/12 10:16:20.059831 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.961395ms
DB: 2020/08/12 10:16:20.064238 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.24007ms
FetchForUpdate: 2020/08/12 10:16:20.064253 ** Cache FetchForUpdate Cache Key Value: [Wl2xfMSySDSDTJ8fOE9+zg==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:20.064260 +++  Cache FetchItems for sortk A#G#:S UID: [Wl2xfMSySDSDTJ8fOE9+zg==] 
DB: 2020/08/12 10:16:20.067401 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.095439ms
AttachNode: gr1 2020/08/12 10:16:20.067489 Errored: SetUpredAvailable :for  Wl2xfMSySDSDTJ8fOE9+zg==
Cache: 2020/08/12 10:16:20.067497 In SetUpredAvailable: pUid, tUID:  Wl2xfMSySDSDTJ8fOE9+zg== 47RtBUWwSdyhH7u4RV+yiw== A#G#:S
Cache: 2020/08/12 10:16:20.067501 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:16:20.071480 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.944502ms
Unlock: 2020/08/12 10:16:20.071495 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:16:20.076146 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.270988ms
DB: 2020/08/12 10:16:20.080885 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.542163ms
DB: 2020/08/12 10:16:20.085037 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.968274ms
FetchForUpdate: 2020/08/12 10:16:20.085052 ** Cache FetchForUpdate Cache Key Value: [9Ccx6Ta5R4+MySZV9XYzEQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:20.085058 +++  Cache FetchItems for sortk A#G#:S UID: [9Ccx6Ta5R4+MySZV9XYzEQ==] 
FetchForUpdate: 2020/08/12 10:16:20.085382 ** Cache FetchForUpdate Cache Key Value: [Wl2xfMSySDSDTJ8fOE9+zg==]   sortk: A#
fetchItems: 2020/08/12 10:16:20.085392 +++  Cache FetchItems for sortk A# UID: [Wl2xfMSySDSDTJ8fOE9+zg==] 
DB: 2020/08/12 10:16:20.088433 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.194983ms
DB: 2020/08/12 10:16:20.089595 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.010655ms
GetType:2020/08/12 10:16:20.089761 len(d.m)= 10
GetType: 2020/08/12 10:16:20.089781  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.089804  A#:C : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.089815  A#:N : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.089828  A#G#:F : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:20.089860  A#G#:S : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, []uint8{0xe3, 0xb4, 0x6d, 0x5, 0x45, 0xb0, 0x49, 0xdc, 0xa1, 0x1f, 0xbb, 0xb8, 0x45, 0x5f, 0xb2, 0x8b}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:16:20.089874  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.089887  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.089898  A#:A : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.089909  A#:D : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.089920  A#T : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:16:20.090368 len(d.m)= 10
GetType: 2020/08/12 10:16:20.090388  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.090401  A#:C : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.090413  A#:N : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.090425  A#G#:F : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:20.090443  A#G#:S : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, []uint8{0xe3, 0xb4, 0x6d, 0x5, 0x45, 0xb0, 0x49, 0xdc, 0xa1, 0x1f, 0xbb, 0xb8, 0x45, 0x5f, 0xb2, 0x8b}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:16:20.090467  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.090478  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.090489  A#:A : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.090501  A#:D : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.090573  A#T : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:16:20.090878 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:16:20.092940 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.152459ms
DB: 2020/08/12 10:16:20.096708 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.682015ms
DB: 2020/08/12 10:16:20.096727 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.682015ms
DB: 2020/08/12 10:16:20.100355 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.597929ms
DB: 2020/08/12 10:16:20.100370 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.597929ms
DB: 2020/08/12 10:16:20.104351 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.795854ms
DB: 2020/08/12 10:16:20.108555 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.904821ms
Unlock: 2020/08/12 10:16:20.108565 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:16:20.115129 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.465838ms
DB: 2020/08/12 10:16:20.118616 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.398604ms
DB: 2020/08/12 10:16:20.122182 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.461624ms
DB: 2020/08/12 10:16:20.128556 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.06223ms
DB: 2020/08/12 10:16:20.131940 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.324734ms
DB: 2020/08/12 10:16:20.136617 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.362473ms
DB: 2020/08/12 10:16:20.143335 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.410798ms
DB: 2020/08/12 10:16:20.148369 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.746921ms
DB: 2020/08/12 10:16:20.152754 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.079861ms
DB: 2020/08/12 10:16:20.156506 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.494882ms
FetchForUpdate: 2020/08/12 10:16:20.156517 ** Cache FetchForUpdate Cache Key Value: [9Ccx6Ta5R4+MySZV9XYzEQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:20.156523 +++  Cache FetchItems for sortk A#G#:S UID: [9Ccx6Ta5R4+MySZV9XYzEQ==] 
DB: 2020/08/12 10:16:20.159635 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.951545ms
AttachNode: gr1 2020/08/12 10:16:20.159741 Errored: SetUpredAvailable :for  9Ccx6Ta5R4+MySZV9XYzEQ==
Cache: 2020/08/12 10:16:20.159751 In SetUpredAvailable: pUid, tUID:  9Ccx6Ta5R4+MySZV9XYzEQ== xzTVKcFsQ+uAgeMeof/tDw== A#G#:S
Cache: 2020/08/12 10:16:20.159765 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:16:20.163508 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.710779ms
Unlock: 2020/08/12 10:16:20.163518 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:16:20.168353 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.445064ms
DB: 2020/08/12 10:16:20.172348 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.796608ms
DB: 2020/08/12 10:16:20.176577 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.061897ms
FetchForUpdate: 2020/08/12 10:16:20.176610 ** Cache FetchForUpdate Cache Key Value: [/quN3FsjSyimS9VAYtUKoA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:20.176618 +++  Cache FetchItems for sortk A#G#:S UID: [/quN3FsjSyimS9VAYtUKoA==] 
FetchForUpdate: 2020/08/12 10:16:20.177134 ** Cache FetchForUpdate Cache Key Value: [Wl2xfMSySDSDTJ8fOE9+zg==]   sortk: A#
fetchItems: 2020/08/12 10:16:20.177159 +++  Cache FetchItems for sortk A# UID: [Wl2xfMSySDSDTJ8fOE9+zg==] 
DB: 2020/08/12 10:16:20.179759 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.82618ms
DB: 2020/08/12 10:16:20.181396 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.094596ms
GetType:2020/08/12 10:16:20.181564 len(d.m)= 10
GetType: 2020/08/12 10:16:20.181584  A#:C : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.181596  A#:N : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.181609  A#G#:F : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:16:20.181621  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.181633  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.181645  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.181680  A#:A : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.181693  A#:D : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.181705  A#T : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.181722  A#G#:S : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, []uint8{0xe3, 0xb4, 0x6d, 0x5, 0x45, 0xb0, 0x49, 0xdc, 0xa1, 0x1f, 0xbb, 0xb8, 0x45, 0x5f, 0xb2, 0x8b}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType:2020/08/12 10:16:20.182114 len(d.m)= 10
GetType: 2020/08/12 10:16:20.182138  A#G#:S : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xf4, 0x27, 0x31, 0xe9, 0x36, 0xb9, 0x47, 0x8f, 0x8c, 0xc9, 0x26, 0x55, 0xf5, 0x76, 0x33, 0x11}, []uint8{0xe3, 0xb4, 0x6d, 0x5, 0x45, 0xb0, 0x49, 0xdc, 0xa1, 0x1f, 0xbb, 0xb8, 0x45, 0x5f, 0xb2, 0x8b}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:16:20.182151  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.182163  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.182191  A#:A : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.182209  A#:D : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.182221  A#T : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.182234  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.182246  A#:C : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.182260  A#:N : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:16:20.182272  A#G#:F : &block.DataItem{PKey:[]uint8{0x5a, 0x5d, 0xb1, 0x7c, 0xc4, 0xb2, 0x48, 0x34, 0x83, 0x4c, 0x9f, 0x1f, 0x38, 0x4f, 0x7e, 0xce}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 10:16:20.182438 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:16:20.183782 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.856117ms
DB: 2020/08/12 10:16:20.187300 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.486282ms
DB: 2020/08/12 10:16:20.187319 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.486282ms
DB: 2020/08/12 10:16:20.190903 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.549118ms
DB: 2020/08/12 10:16:20.190919 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.549118ms
DB: 2020/08/12 10:16:20.195003 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.918513ms
DB: 2020/08/12 10:16:20.198872 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.720195ms
Unlock: 2020/08/12 10:16:20.198884 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:16:20.205742 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.204485ms
DB: 2020/08/12 10:16:20.209523 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.475808ms
DB: 2020/08/12 10:16:20.213704 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.770187ms
DB: 2020/08/12 10:16:20.220277 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.103332ms
DB: 2020/08/12 10:16:20.224108 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.526943ms
DB: 2020/08/12 10:16:20.228109 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.693304ms
DB: 2020/08/12 10:16:20.234658 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.233394ms
DB: 2020/08/12 10:16:20.238478 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.51363ms
DB: 2020/08/12 10:16:20.242446 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.65681ms
DB: 2020/08/12 10:16:20.246157 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.385172ms
FetchForUpdate: 2020/08/12 10:16:20.246169 ** Cache FetchForUpdate Cache Key Value: [/quN3FsjSyimS9VAYtUKoA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:16:20.246176 +++  Cache FetchItems for sortk A#G#:S UID: [/quN3FsjSyimS9VAYtUKoA==] 
DB: 2020/08/12 10:16:20.250585 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.214256ms
AttachNode: gr1 2020/08/12 10:16:20.250778 Errored: SetUpredAvailable :for  /quN3FsjSyimS9VAYtUKoA==
Cache: 2020/08/12 10:16:20.250790 In SetUpredAvailable: pUid, tUID:  /quN3FsjSyimS9VAYtUKoA== Uas9rVqlRZi7QyMCRnZ4IQ== A#G#:S
Cache: 2020/08/12 10:16:20.250795 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:16:20.254359 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.513997ms
Unlock: 2020/08/12 10:16:20.254369 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:16:20.258849 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.045762ms
rdfLoader: 2020/08/12 10:16:20.258950 saveNode finished waiting...exiting
grmgr: 2020/08/12 10:16:20.258965 Powering down...
rdfuuid: 2020/08/12 10:16:20.258971 Powering down...
DB:2020/08/12 10:31:38 log.go:18: ===============================================================================
grmgr: 2020/08/12 10:31:38.241747 Powering on...
rdfLoader: 2020/08/12 10:31:38.241800 verify started....xx.
rdfLoader: 2020/08/12 10:31:38.241808 saveNode started......
rdfuuid: 2020/08/12 10:31:38.241832 Powering on...
rdfLoader: 2020/08/12 10:31:38.241839 *************** All started 
rdfLoader: 2020/08/12 10:31:38.250391 .  getType..
rdfLoader: 2020/08/12 10:31:38.250402 node.TyName : [Person]
DB: 2020/08/12 10:31:38.319346 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 68.88972ms
verify: 2020/08/12 10:31:38.319501 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:31:38.319572 Find Ty Address
rdfLoader: 2020/08/12 10:31:38.319580 Find Ty Age
rdfLoader: 2020/08/12 10:31:38.319587 Find Ty Cars
rdfLoader: 2020/08/12 10:31:38.319594 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:31:38.319599 Add to SS . [Alfa]
rdfLoader: 2020/08/12 10:31:38.319604 Find Ty DOB
rdfLoader: 2020/08/12 10:31:38.319610 Find Ty Friends
rdfLoader: 2020/08/12 10:31:38.319615 Find Ty Jobs
rdfLoader: 2020/08/12 10:31:38.319619 Find Ty Name
rdfLoader: 2020/08/12 10:31:38.319625 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:31:38.319629 Find Ty Siblings
rdfLoader: 2020/08/12 10:31:38.319640 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:31:38.319680 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:31:38.319696 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:31:38.319721 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.319729 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.319735 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.319741 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.319749 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.319755 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.319761 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:31:38.319766 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:31:38.319774 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0007cc1e0)}
SaveRDFNode: 2020/08/12 10:31:38.319779 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:31:38.319787 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.319792 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.319798 UID received  : 7RWmiEyQTw214zkz5qzPIQ==
verify: 2020/08/12 10:31:38.320008 *** Verify running...... 1
rdfLoader: 2020/08/12 10:31:38.320018 .  getType..
rdfLoader: 2020/08/12 10:31:38.320023 node.TyName : [Person]
verify: 2020/08/12 10:31:38.320048 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:31:38.320098 Find Ty Address
rdfLoader: 2020/08/12 10:31:38.320104 Find Ty Age
rdfLoader: 2020/08/12 10:31:38.320110 Find Ty Cars
rdfLoader: 2020/08/12 10:31:38.320115 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:31:38.320120 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 10:31:38.320125 Find Ty DOB
rdfLoader: 2020/08/12 10:31:38.320130 Find Ty Friends
rdfLoader: 2020/08/12 10:31:38.320134 Find Ty Jobs
rdfLoader: 2020/08/12 10:31:38.320138 Find Ty Name
rdfLoader: 2020/08/12 10:31:38.320143 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:31:38.320148 Find Ty Siblings
rdfLoader: 2020/08/12 10:31:38.320156 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:31:38.320184 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:31:38.320189 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:31:38.320208 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320215 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320227 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320233 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320239 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320245 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320251 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:31:38.320256 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:31:38.320262 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0007cc5a0)}
SaveRDFNode: 2020/08/12 10:31:38.320267 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:31:38.320274 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.320279 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.320285 UID received  : OWeCiRC8QWS/rVMrr3nbqA==
verify: 2020/08/12 10:31:38.320660 *** Verify running...... 1
rdfLoader: 2020/08/12 10:31:38.320715 .  getType..
rdfLoader: 2020/08/12 10:31:38.320721 node.TyName : [Person]
verify: 2020/08/12 10:31:38.320740 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:31:38.320777 Find Ty Address
rdfLoader: 2020/08/12 10:31:38.320783 Find Ty Age
rdfLoader: 2020/08/12 10:31:38.320789 Find Ty Cars
rdfLoader: 2020/08/12 10:31:38.320795 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 10:31:38.320800 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 10:31:38.320805 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:31:38.320810 Find Ty DOB
rdfLoader: 2020/08/12 10:31:38.320816 Find Ty Friends
rdfLoader: 2020/08/12 10:31:38.320821 Find Ty Jobs
rdfLoader: 2020/08/12 10:31:38.320825 Find Ty Name
rdfLoader: 2020/08/12 10:31:38.320830 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:31:38.320834 Find Ty Siblings
rdfLoader: 2020/08/12 10:31:38.320843 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:31:38.320869 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:31:38.320874 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:31:38.320894 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320901 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320908 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320914 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320921 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320928 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.320934 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:31:38.320944 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:31:38.320950 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0007ccba0)}
SaveRDFNode: 2020/08/12 10:31:38.320956 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:31:38.320963 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.320968 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.320974 UID received  : iIixhnsRS0egSxu+cNnSJg==
verify: 2020/08/12 10:31:38.321138 *** Verify running...... 2
rdfLoader: 2020/08/12 10:31:38.321148 .  getType..
rdfLoader: 2020/08/12 10:31:38.321153 node.TyName : [Person]
verify: 2020/08/12 10:31:38.321170 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:31:38.321200 Find Ty Address
rdfLoader: 2020/08/12 10:31:38.321206 Find Ty Age
rdfLoader: 2020/08/12 10:31:38.321211 Find Ty Cars
rdfLoader: 2020/08/12 10:31:38.321217 Add to SS . [Bentley]
rdfLoader: 2020/08/12 10:31:38.321222 Find Ty DOB
rdfLoader: 2020/08/12 10:31:38.321227 Find Ty Friends
rdfLoader: 2020/08/12 10:31:38.321231 Find Ty Jobs
rdfLoader: 2020/08/12 10:31:38.321235 Find Ty Name
rdfLoader: 2020/08/12 10:31:38.321240 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:31:38.321244 Find Ty Siblings
rdfLoader: 2020/08/12 10:31:38.321253 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:31:38.321274 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:31:38.321280 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:31:38.321305 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.321312 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.321320 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.323550 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.323572 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.323579 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:31:38.323585 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:31:38.323589 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:31:38.323595 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007cd140)}
SaveRDFNode: 2020/08/12 10:31:38.323600 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:31:38.323607 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.323611 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.323617 UID received  : e7VzanvlQXW4CMSaFm3DlA==
verify: 2020/08/12 10:31:38.323940 *** Verify running...... 2
verify: 2020/08/12 10:31:38.323948 verify exited.....
DB: 2020/08/12 10:31:38.329125 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 9.298323ms
DB: 2020/08/12 10:31:38.333994 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 13.683611ms
DB: 2020/08/12 10:31:38.337917 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.888201ms
DB: 2020/08/12 10:31:38.341840 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.73874ms
DB: 2020/08/12 10:31:38.345111 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.239499ms
DB: 2020/08/12 10:31:38.346236 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.235599ms
DB: 2020/08/12 10:31:38.348565 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.410147ms
SaveRDFNode: 2020/08/12 10:31:38.348578 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/12 10:31:38.348584 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.348588 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.348594 Received UID: X18=
SaveRDFNode: 2020/08/12 10:31:38.348607 a: = db.Item{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:31:38.348908 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.258182ms
DB: 2020/08/12 10:31:38.349192 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 19.994985ms
DB: 2020/08/12 10:31:38.349630 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.361593ms
DB: 2020/08/12 10:31:38.352091 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.445614ms
SaveRDFNode: 2020/08/12 10:31:38.352102 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/12 10:31:38.352108 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.352112 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.352118 Received UID: X18=
SaveRDFNode: 2020/08/12 10:31:38.352128 a: = db.Item{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:31:38.352389 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.45235ms
DB: 2020/08/12 10:31:38.352662 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.424279ms
DB: 2020/08/12 10:31:38.352999 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.312108ms
DB: 2020/08/12 10:31:38.355338 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.164559ms
SaveRDFNode: 2020/08/12 10:31:38.356472 Returned.+++++++++++ No error
DB: 2020/08/12 10:31:38.356500 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.662362ms
DB: 2020/08/12 10:31:38.356662 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.026701ms
DB: 2020/08/12 10:31:38.357003 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.946161ms
DB: 2020/08/12 10:31:38.359767 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.240165ms
SaveRDFNode: 2020/08/12 10:31:38.359781 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/12 10:31:38.359787 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.359791 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.359796 Received UID: X18=
SaveRDFNode: 2020/08/12 10:31:38.359810 a: = db.Item{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:31:38.360467 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.431843ms
SaveRDFNode: 2020/08/12 10:31:38.360479 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007ccba0)}
rdfUIDdb: 2020/08/12 10:31:38.360485 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.360489 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.360495 Received UID: X18=
SaveRDFNode: 2020/08/12 10:31:38.360504 a: = db.Item{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:31:38.363244 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.399632ms
SaveRDFNode: 2020/08/12 10:31:38.363256 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/12 10:31:38.363262 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.363266 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.363271 Received UID: X18=
SaveRDFNode: 2020/08/12 10:31:38.363281 a: = db.Item{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:31:38.363787 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.2395ms
SaveRDFNode: 2020/08/12 10:31:38.363799 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007ccba0)}
rdfUIDdb: 2020/08/12 10:31:38.363804 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.363808 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.363814 Received UID: X18=
SaveRDFNode: 2020/08/12 10:31:38.363823 a: = db.Item{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:31:38.366778 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.468358ms
SaveRDFNode: 2020/08/12 10:31:38.366788 Returned.+++++++++++ No error
DB: 2020/08/12 10:31:38.367349 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.469235ms
SaveRDFNode: 2020/08/12 10:31:38.367357 Returned.+++++++++++ No error
DB: 2020/08/12 10:31:38.372837 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.128814ms
DB: 2020/08/12 10:31:38.376465 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.474589ms
SaveRDFNode: 2020/08/12 10:31:38.376479 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd140)}
rdfUIDdb: 2020/08/12 10:31:38.376486 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.376490 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.376495 Received UID: X18=
SaveRDFNode: 2020/08/12 10:31:38.376506 a: = db.Item{PKey:[]uint8{0x7b, 0xb5, 0x73, 0x6a, 0x7b, 0xe5, 0x41, 0x75, 0xb8, 0x8, 0xc4, 0x9a, 0x16, 0x6d, 0xc3, 0x94}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:31:38.379985 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.446292ms
SaveRDFNode: 2020/08/12 10:31:38.379998 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd140)}
rdfUIDdb: 2020/08/12 10:31:38.380004 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:31:38.380008 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:31:38.380013 Received UID: X18=
SaveRDFNode: 2020/08/12 10:31:38.380027 a: = db.Item{PKey:[]uint8{0x7b, 0xb5, 0x73, 0x6a, 0x7b, 0xe5, 0x41, 0x75, 0xb8, 0x8, 0xc4, 0x9a, 0x16, 0x6d, 0xc3, 0x94}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:31:38.383606 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.540475ms
SaveRDFNode: 2020/08/12 10:31:38.383617 Returned.+++++++++++ No error
DB: 2020/08/12 10:31:38.387840 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.529919ms
DB: 2020/08/12 10:31:38.394515 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.608449ms
FetchForUpdate: 2020/08/12 10:31:38.394544 ** Cache FetchForUpdate Cache Key Value: [OWeCiRC8QWS/rVMrr3nbqA==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:31:38.394732 ** Cache FetchForUpdate Cache Key Value: [7RWmiEyQTw214zkz5qzPIQ==]   sortk: A#
DB: 2020/08/12 10:31:38.400323 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.72979ms
FetchForUpdate: 2020/08/12 10:31:38.400405 len(nb): 1
fetchItems: 2020/08/12 10:31:38.400415 +++  Cache FetchItems for sortk A#G#:S UID: [OWeCiRC8QWS/rVMrr3nbqA==] 
DB: 2020/08/12 10:31:38.401131 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 6.334077ms
FetchForUpdate: 2020/08/12 10:31:38.401244 len(nb): 7
fetchItems: 2020/08/12 10:31:38.401252 +++  Cache FetchItems for sortk A# UID: [7RWmiEyQTw214zkz5qzPIQ==] 
DB: 2020/08/12 10:31:38.403482 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.736296ms
DB: 2020/08/12 10:31:38.404632 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.969847ms
GetType:2020/08/12 10:31:38.404744 len(d.m)= 7
GetType: 2020/08/12 10:31:38.404766  A#:D : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.404782  A#:N : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.404795  A#G#:F : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.404810  A#G#:S : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.404822  A#T : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.404834  A#:A : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.404853  A#:C : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:31:38.404875 len(d.m)= 7
GetType: 2020/08/12 10:31:38.404886  A#:N : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.404898  A#G#:F : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.404909  A#G#:S : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.404920  A#T : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.404931  A#:A : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.404945  A#:C : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.404955  A#:D : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:31:38.404972 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:31:38.407134 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.560391ms
Unlock: 2020/08/12 10:31:38.407144 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 10:31:38.407544 ** Cache FetchForUpdate Cache Key Value: [OWeCiRC8QWS/rVMrr3nbqA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.407560 +++  Cache FetchItems for sortk A#G#:S UID: [OWeCiRC8QWS/rVMrr3nbqA==] 
DB: 2020/08/12 10:31:38.410565 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.680963ms
DB: 2020/08/12 10:31:38.417019 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.153703ms
DB: 2020/08/12 10:31:38.420914 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.275264ms
DB: 2020/08/12 10:31:38.425874 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.803581ms
DB: 2020/08/12 10:31:38.434037 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.454694ms
DB: 2020/08/12 10:31:38.437448 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.340969ms
DB: 2020/08/12 10:31:38.441395 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.881883ms
DB: 2020/08/12 10:31:38.447536 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.084205ms
DB: 2020/08/12 10:31:38.451180 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.338072ms
DB: 2020/08/12 10:31:38.455040 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.542057ms
Unlock: 2020/08/12 10:31:38.455058 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:31:38.458889 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.400189ms
FetchForUpdate: 2020/08/12 10:31:38.458922 ** Cache FetchForUpdate Cache Key Value: [OWeCiRC8QWS/rVMrr3nbqA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.458929 +++  Cache FetchItems for sortk A#G#:S UID: [OWeCiRC8QWS/rVMrr3nbqA==] 
DB: 2020/08/12 10:31:38.461972 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.8589ms
AttachNode: gr1 2020/08/12 10:31:38.462076 Errored: SetUpredAvailable :for  OWeCiRC8QWS/rVMrr3nbqA==
Cache: 2020/08/12 10:31:38.462086 In SetUpredAvailable: pUid, tUID:  OWeCiRC8QWS/rVMrr3nbqA== OWeCiRC8QWS/rVMrr3nbqA== A#G#:S
Cache: 2020/08/12 10:31:38.462090 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:31:38.465616 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.492159ms
Unlock: 2020/08/12 10:31:38.465625 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:31:38.469893 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.874124ms
DB: 2020/08/12 10:31:38.473814 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.506779ms
DB: 2020/08/12 10:31:38.477801 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.707147ms
FetchForUpdate: 2020/08/12 10:31:38.477815 ** Cache FetchForUpdate Cache Key Value: [iIixhnsRS0egSxu+cNnSJg==]   sortk: A#G#:S
FetchForUpdate: 2020/08/12 10:31:38.478167 ** Cache FetchForUpdate Cache Key Value: [7RWmiEyQTw214zkz5qzPIQ==]   sortk: A#
fetchItems: 2020/08/12 10:31:38.478190 +++  Cache FetchItems for sortk A# UID: [7RWmiEyQTw214zkz5qzPIQ==] 
DB: 2020/08/12 10:31:38.481274 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.844425ms
GetType:2020/08/12 10:31:38.481461 len(d.m)= 7
GetType: 2020/08/12 10:31:38.481484  A#T : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.481506  A#:A : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.481538  A#:C : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.481551  A#:D : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.481563  A#:N : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.481575  A#G#:F : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.481586  A#G#:S : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 10:31:38.482291 len(d.m)= 7
GetType: 2020/08/12 10:31:38.482310  A#:A : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.482322  A#:C : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.482336  A#:D : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.482364  A#:N : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.482400  A#G#:F : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.482412  A#G#:S : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.482423  A#T : &block.DataItem{PKey:[]uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:31:38.482748 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:31:38.483269 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.243071ms
FetchForUpdate: 2020/08/12 10:31:38.483300 len(nb): 1
fetchItems: 2020/08/12 10:31:38.483306 +++  Cache FetchItems for sortk A#G#:S UID: [iIixhnsRS0egSxu+cNnSJg==] 
DB: 2020/08/12 10:31:38.486098 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.582778ms
DB: 2020/08/12 10:31:38.490277 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.675578ms
Unlock: 2020/08/12 10:31:38.490288 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 10:31:38.490612 ** Cache FetchForUpdate Cache Key Value: [iIixhnsRS0egSxu+cNnSJg==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.490623 +++  Cache FetchItems for sortk A#G#:S UID: [iIixhnsRS0egSxu+cNnSJg==] 
DB: 2020/08/12 10:31:38.493499 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.674476ms
DB: 2020/08/12 10:31:38.499496 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.882208ms
DB: 2020/08/12 10:31:38.502952 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.391362ms
DB: 2020/08/12 10:31:38.506988 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.652304ms
DB: 2020/08/12 10:31:38.513397 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.094544ms
DB: 2020/08/12 10:31:38.517184 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.407203ms
DB: 2020/08/12 10:31:38.521181 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.522893ms
DB: 2020/08/12 10:31:38.528098 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.053921ms
DB: 2020/08/12 10:31:38.532143 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.89733ms
DB: 2020/08/12 10:31:38.536088 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.625194ms
Unlock: 2020/08/12 10:31:38.536108 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:31:38.540281 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.500613ms
FetchForUpdate: 2020/08/12 10:31:38.540298 ** Cache FetchForUpdate Cache Key Value: [iIixhnsRS0egSxu+cNnSJg==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.540305 +++  Cache FetchItems for sortk A#G#:S UID: [iIixhnsRS0egSxu+cNnSJg==] 
DB: 2020/08/12 10:31:38.543541 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.839168ms
AttachNode: gr1 2020/08/12 10:31:38.543646 Errored: SetUpredAvailable :for  iIixhnsRS0egSxu+cNnSJg==
Cache: 2020/08/12 10:31:38.543656 In SetUpredAvailable: pUid, tUID:  iIixhnsRS0egSxu+cNnSJg== iIixhnsRS0egSxu+cNnSJg== A#G#:S
Cache: 2020/08/12 10:31:38.543660 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:31:38.547192 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.500373ms
Unlock: 2020/08/12 10:31:38.547202 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:31:38.551443 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.80489ms
DB: 2020/08/12 10:31:38.555225 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.478403ms
DB: 2020/08/12 10:31:38.559306 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.667841ms
FetchForUpdate: 2020/08/12 10:31:38.559324 ** Cache FetchForUpdate Cache Key Value: [7RWmiEyQTw214zkz5qzPIQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.559331 +++  Cache FetchItems for sortk A#G#:S UID: [7RWmiEyQTw214zkz5qzPIQ==] 
FetchForUpdate: 2020/08/12 10:31:38.559695 ** Cache FetchForUpdate Cache Key Value: [OWeCiRC8QWS/rVMrr3nbqA==]   sortk: A#
fetchItems: 2020/08/12 10:31:38.559708 +++  Cache FetchItems for sortk A# UID: [OWeCiRC8QWS/rVMrr3nbqA==] 
DB: 2020/08/12 10:31:38.562317 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.539824ms
DB: 2020/08/12 10:31:38.565523 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 5.361223ms
GetType:2020/08/12 10:31:38.565688 len(d.m)= 10
GetType: 2020/08/12 10:31:38.565710  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.565737  A#:A : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.565749  A#:D : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.565762  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.565792  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.565821  A#:C : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.565837  A#:N : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.565850  A#G#:F : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.565861  A#T : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.565887  A#G#:S : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType:2020/08/12 10:31:38.566816 len(d.m)= 10
GetType: 2020/08/12 10:31:38.566837  A#G#:F : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.566849  A#T : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.566866  A#G#:S : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:31:38.566886  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.566900  A#:C : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.566911  A#:N : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.566924  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.566936  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.566965  A#:A : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.566978  A#:D : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:31:38.567315 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:31:38.567708 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.086625ms
Unlock: 2020/08/12 10:31:38.567717 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 10:31:38.568258 ** Cache FetchForUpdate Cache Key Value: [7RWmiEyQTw214zkz5qzPIQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.568268 +++  Cache FetchItems for sortk A#G#:S UID: [7RWmiEyQTw214zkz5qzPIQ==] 
DB: 2020/08/12 10:31:38.571047 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.567506ms
DB: 2020/08/12 10:31:38.577238 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.082164ms
DB: 2020/08/12 10:31:38.580752 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.454595ms
DB: 2020/08/12 10:31:38.584640 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.772422ms
DB: 2020/08/12 10:31:38.590523 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.807227ms
DB: 2020/08/12 10:31:38.594260 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.623421ms
DB: 2020/08/12 10:31:38.598771 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.325555ms
DB: 2020/08/12 10:31:38.604806 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.957679ms
DB: 2020/08/12 10:31:38.608270 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.38872ms
DB: 2020/08/12 10:31:38.612084 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.736111ms
Unlock: 2020/08/12 10:31:38.612100 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:31:38.615692 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.464185ms
FetchForUpdate: 2020/08/12 10:31:38.615704 ** Cache FetchForUpdate Cache Key Value: [7RWmiEyQTw214zkz5qzPIQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.615711 +++  Cache FetchItems for sortk A#G#:S UID: [7RWmiEyQTw214zkz5qzPIQ==] 
DB: 2020/08/12 10:31:38.618606 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.844291ms
AttachNode: gr1 2020/08/12 10:31:38.618698 Errored: SetUpredAvailable :for  7RWmiEyQTw214zkz5qzPIQ==
Cache: 2020/08/12 10:31:38.618718 In SetUpredAvailable: pUid, tUID:  7RWmiEyQTw214zkz5qzPIQ== 7RWmiEyQTw214zkz5qzPIQ== A#G#:S
Cache: 2020/08/12 10:31:38.618722 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:31:38.622743 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.987768ms
Unlock: 2020/08/12 10:31:38.622755 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:31:38.627046 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.980376ms
DB: 2020/08/12 10:31:38.631122 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.00598ms
DB: 2020/08/12 10:31:38.635615 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.333336ms
FetchForUpdate: 2020/08/12 10:31:38.635629 ** Cache FetchForUpdate Cache Key Value: [iIixhnsRS0egSxu+cNnSJg==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.635635 +++  Cache FetchItems for sortk A#G#:S UID: [iIixhnsRS0egSxu+cNnSJg==] 
FetchForUpdate: 2020/08/12 10:31:38.636474 ** Cache FetchForUpdate Cache Key Value: [OWeCiRC8QWS/rVMrr3nbqA==]   sortk: A#
fetchItems: 2020/08/12 10:31:38.636485 +++  Cache FetchItems for sortk A# UID: [OWeCiRC8QWS/rVMrr3nbqA==] 
DB: 2020/08/12 10:31:38.638989 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.305742ms
DB: 2020/08/12 10:31:38.641490 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.880121ms
GetType:2020/08/12 10:31:38.641652 len(d.m)= 10
GetType: 2020/08/12 10:31:38.641670  A#:N : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641695  A#G#:F : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.641708  A#T : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641723  A#G#:S : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:31:38.641735  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641748  A#:C : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641759  A#:D : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641771  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641783  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641793  A#:A : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:31:38.641861 len(d.m)= 10
GetType: 2020/08/12 10:31:38.641876  A#:C : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641888  A#:N : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641900  A#G#:F : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.641912  A#T : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641926  A#G#:S : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:31:38.641938  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641949  A#:A : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641960  A#:D : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.641991  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.642004  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x39, 0x67, 0x82, 0x89, 0x10, 0xbc, 0x41, 0x64, 0xbf, 0xad, 0x53, 0x2b, 0xaf, 0x79, 0xdb, 0xa8}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:31:38.642035 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:31:38.642933 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.797313ms
DB: 2020/08/12 10:31:38.646520 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.544003ms
DB: 2020/08/12 10:31:38.646708 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.544003ms
DB: 2020/08/12 10:31:38.650179 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.337896ms
DB: 2020/08/12 10:31:38.650205 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.337896ms
DB: 2020/08/12 10:31:38.654168 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.760351ms
DB: 2020/08/12 10:31:38.658061 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.70651ms
Unlock: 2020/08/12 10:31:38.658072 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:31:38.664839 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.967399ms
DB: 2020/08/12 10:31:38.668444 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.396595ms
DB: 2020/08/12 10:31:38.672242 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.690759ms
DB: 2020/08/12 10:31:38.678214 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.901068ms
DB: 2020/08/12 10:31:38.681701 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.418489ms
DB: 2020/08/12 10:31:38.685429 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.498221ms
DB: 2020/08/12 10:31:38.691442 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.940944ms
DB: 2020/08/12 10:31:38.694836 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.322854ms
DB: 2020/08/12 10:31:38.698660 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.724733ms
DB: 2020/08/12 10:31:38.702609 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.722956ms
FetchForUpdate: 2020/08/12 10:31:38.702623 ** Cache FetchForUpdate Cache Key Value: [iIixhnsRS0egSxu+cNnSJg==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.702630 +++  Cache FetchItems for sortk A#G#:S UID: [iIixhnsRS0egSxu+cNnSJg==] 
DB: 2020/08/12 10:31:38.705719 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.022751ms
AttachNode: gr1 2020/08/12 10:31:38.705829 Errored: SetUpredAvailable :for  iIixhnsRS0egSxu+cNnSJg==
Cache: 2020/08/12 10:31:38.705837 In SetUpredAvailable: pUid, tUID:  iIixhnsRS0egSxu+cNnSJg== 0E8ouKpFQ2yld43P1BVw8A== A#G#:S
Cache: 2020/08/12 10:31:38.705841 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:31:38.709312 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.440446ms
Unlock: 2020/08/12 10:31:38.709322 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:31:38.713638 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.919911ms
DB: 2020/08/12 10:31:38.717708 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.871316ms
DB: 2020/08/12 10:31:38.721938 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.860452ms
FetchForUpdate: 2020/08/12 10:31:38.721955 ** Cache FetchForUpdate Cache Key Value: [7RWmiEyQTw214zkz5qzPIQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.721962 +++  Cache FetchItems for sortk A#G#:S UID: [7RWmiEyQTw214zkz5qzPIQ==] 
FetchForUpdate: 2020/08/12 10:31:38.722319 ** Cache FetchForUpdate Cache Key Value: [iIixhnsRS0egSxu+cNnSJg==]   sortk: A#
fetchItems: 2020/08/12 10:31:38.722330 +++  Cache FetchItems for sortk A# UID: [iIixhnsRS0egSxu+cNnSJg==] 
DB: 2020/08/12 10:31:38.724906 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.736506ms
DB: 2020/08/12 10:31:38.725656 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.143233ms
GetType:2020/08/12 10:31:38.725810 len(d.m)= 10
GetType: 2020/08/12 10:31:38.725974  A#G#:S : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, []uint8{0xd0, 0x4f, 0x28, 0xb8, 0xaa, 0x45, 0x43, 0x6c, 0xa5, 0x77, 0x8d, 0xcf, 0xd4, 0x15, 0x70, 0xf0}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:31:38.726026  A#:C : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726041  A#:D : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726053  A#:N : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726065  A#G#:F : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.726078  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726092  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726113  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726125  A#:A : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726136  A#T : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:31:38.726422 len(d.m)= 10
GetType: 2020/08/12 10:31:38.726457  A#G#:S : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, []uint8{0xd0, 0x4f, 0x28, 0xb8, 0xaa, 0x45, 0x43, 0x6c, 0xa5, 0x77, 0x8d, 0xcf, 0xd4, 0x15, 0x70, 0xf0}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:31:38.726471  A#:C : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726482  A#:D : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726492  A#:N : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726584  A#G#:F : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.726608  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726620  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726631  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726641  A#:A : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.726651  A#T : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:31:38.726821 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:31:38.728679 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.603093ms
DB: 2020/08/12 10:31:38.732874 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.163785ms
DB: 2020/08/12 10:31:38.732889 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.163785ms
DB: 2020/08/12 10:31:38.736487 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.554396ms
DB: 2020/08/12 10:31:38.736670 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.554396ms
DB: 2020/08/12 10:31:38.740555 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.702916ms
DB: 2020/08/12 10:31:38.744386 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.67787ms
Unlock: 2020/08/12 10:31:38.744421 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:31:38.752043 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.720922ms
DB: 2020/08/12 10:31:38.755560 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.465064ms
DB: 2020/08/12 10:31:38.759223 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.558806ms
DB: 2020/08/12 10:31:38.765313 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.033736ms
DB: 2020/08/12 10:31:38.931359 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 165.98123ms
DB: 2020/08/12 10:31:38.935093 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.614783ms
DB: 2020/08/12 10:31:38.941316 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.144666ms
DB: 2020/08/12 10:31:38.944674 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.276909ms
DB: 2020/08/12 10:31:38.948462 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.709011ms
DB: 2020/08/12 10:31:38.952075 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.532125ms
FetchForUpdate: 2020/08/12 10:31:38.952090 ** Cache FetchForUpdate Cache Key Value: [7RWmiEyQTw214zkz5qzPIQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.952096 +++  Cache FetchItems for sortk A#G#:S UID: [7RWmiEyQTw214zkz5qzPIQ==] 
DB: 2020/08/12 10:31:38.955147 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.871986ms
AttachNode: gr1 2020/08/12 10:31:38.955252 Errored: SetUpredAvailable :for  7RWmiEyQTw214zkz5qzPIQ==
Cache: 2020/08/12 10:31:38.955261 In SetUpredAvailable: pUid, tUID:  7RWmiEyQTw214zkz5qzPIQ== tteAr8+8RLupAg/d3GqEbg== A#G#:S
Cache: 2020/08/12 10:31:38.955265 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:31:38.958762 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.464289ms
Unlock: 2020/08/12 10:31:38.958771 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:31:38.963161 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.940198ms
DB: 2020/08/12 10:31:38.966928 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.558504ms
DB: 2020/08/12 10:31:38.970815 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.701582ms
FetchForUpdate: 2020/08/12 10:31:38.970831 ** Cache FetchForUpdate Cache Key Value: [OWeCiRC8QWS/rVMrr3nbqA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:38.970837 +++  Cache FetchItems for sortk A#G#:S UID: [OWeCiRC8QWS/rVMrr3nbqA==] 
FetchForUpdate: 2020/08/12 10:31:38.971192 ** Cache FetchForUpdate Cache Key Value: [iIixhnsRS0egSxu+cNnSJg==]   sortk: A#
fetchItems: 2020/08/12 10:31:38.971202 +++  Cache FetchItems for sortk A# UID: [iIixhnsRS0egSxu+cNnSJg==] 
DB: 2020/08/12 10:31:38.973847 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.830852ms
DB: 2020/08/12 10:31:38.974944 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.555307ms
GetType:2020/08/12 10:31:38.975096 len(d.m)= 10
GetType: 2020/08/12 10:31:38.975132  A#G#:S : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, []uint8{0xd0, 0x4f, 0x28, 0xb8, 0xaa, 0x45, 0x43, 0x6c, 0xa5, 0x77, 0x8d, 0xcf, 0xd4, 0x15, 0x70, 0xf0}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:31:38.975147  A#:C : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975169  A#:D : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975181  A#:N : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975193  A#G#:F : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.975205  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975220  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975255  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975273  A#:A : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975285  A#T : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:31:38.975323 len(d.m)= 10
GetType: 2020/08/12 10:31:38.975341  A#G#:S : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xed, 0x15, 0xa6, 0x88, 0x4c, 0x90, 0x4f, 0xd, 0xb5, 0xe3, 0x39, 0x33, 0xe6, 0xac, 0xcf, 0x21}, []uint8{0xd0, 0x4f, 0x28, 0xb8, 0xaa, 0x45, 0x43, 0x6c, 0xa5, 0x77, 0x8d, 0xcf, 0xd4, 0x15, 0x70, 0xf0}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:31:38.975357  A#:C : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975368  A#:D : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975378  A#:N : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975390  A#G#:F : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:31:38.975402  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975413  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975428  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975451  A#:A : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:31:38.975476  A#T : &block.DataItem{PKey:[]uint8{0x88, 0x88, 0xb1, 0x86, 0x7b, 0x11, 0x4b, 0x47, 0xa0, 0x4b, 0x1b, 0xbe, 0x70, 0xd9, 0xd2, 0x26}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:31:38.975492 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:31:38.980442 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.052174ms
DB: 2020/08/12 10:31:38.983884 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.409699ms
DB: 2020/08/12 10:31:38.983903 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.409699ms
DB: 2020/08/12 10:31:38.987391 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.452857ms
DB: 2020/08/12 10:31:38.987406 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.452857ms
DB: 2020/08/12 10:31:38.991545 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.962347ms
DB: 2020/08/12 10:31:38.995427 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.721652ms
Unlock: 2020/08/12 10:31:38.995437 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:31:39.002212 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.104652ms
DB: 2020/08/12 10:31:39.005771 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.364655ms
DB: 2020/08/12 10:31:39.010065 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.923047ms
DB: 2020/08/12 10:31:39.016345 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.957645ms
DB: 2020/08/12 10:31:39.020097 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.45042ms
DB: 2020/08/12 10:31:39.024910 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.128718ms
DB: 2020/08/12 10:31:39.031026 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.056941ms
DB: 2020/08/12 10:31:39.034400 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.31843ms
DB: 2020/08/12 10:31:39.038810 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.102721ms
DB: 2020/08/12 10:31:39.043157 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.074271ms
FetchForUpdate: 2020/08/12 10:31:39.043169 ** Cache FetchForUpdate Cache Key Value: [OWeCiRC8QWS/rVMrr3nbqA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:31:39.043175 +++  Cache FetchItems for sortk A#G#:S UID: [OWeCiRC8QWS/rVMrr3nbqA==] 
DB: 2020/08/12 10:31:39.046173 FetchNode:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.774686ms
AttachNode: gr1 2020/08/12 10:31:39.046301 Errored: SetUpredAvailable :for  OWeCiRC8QWS/rVMrr3nbqA==
Cache: 2020/08/12 10:31:39.046309 In SetUpredAvailable: pUid, tUID:  OWeCiRC8QWS/rVMrr3nbqA== XX5jQ6d3RCaM5lc181Ij0A== A#G#:S
Cache: 2020/08/12 10:31:39.046314 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:31:39.049920 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.573704ms
Unlock: 2020/08/12 10:31:39.049929 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:31:39.054244 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.774137ms
rdfLoader: 2020/08/12 10:31:39.054437 saveNode finished waiting...exiting
grmgr: 2020/08/12 10:31:39.054522 Powering down...
rdfuuid: 2020/08/12 10:31:39.054531 Powering down...
DB:2020/08/12 10:58:42 log.go:18: ===============================================================================
grmgr: 2020/08/12 10:58:42.080977 Powering on...
rdfLoader: 2020/08/12 10:58:42.082894 verify started....xx.
rdfLoader: 2020/08/12 10:58:42.082910 saveNode started......
rdfuuid: 2020/08/12 10:58:42.082923 Powering on...
rdfLoader: 2020/08/12 10:58:42.082930 *************** All started 
rdfLoader: 2020/08/12 10:58:42.088919 .  getType..
rdfLoader: 2020/08/12 10:58:42.088943 node.TyName : [Person]
DB: 2020/08/12 10:58:42.165932 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 76.938413ms
verify: 2020/08/12 10:58:42.166082 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:58:42.166126 Find Ty Address
rdfLoader: 2020/08/12 10:58:42.166132 Find Ty Age
rdfLoader: 2020/08/12 10:58:42.166138 Find Ty Cars
rdfLoader: 2020/08/12 10:58:42.166143 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:58:42.166149 Add to SS . [Alfa]
rdfLoader: 2020/08/12 10:58:42.166153 Find Ty DOB
rdfLoader: 2020/08/12 10:58:42.166158 Find Ty Friends
rdfLoader: 2020/08/12 10:58:42.166162 Find Ty Jobs
rdfLoader: 2020/08/12 10:58:42.166167 Find Ty Name
rdfLoader: 2020/08/12 10:58:42.166172 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:58:42.166176 Find Ty Siblings
rdfLoader: 2020/08/12 10:58:42.166186 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:58:42.166213 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:58:42.166219 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:58:42.166242 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166249 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166255 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166261 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166267 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166273 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166278 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:58:42.166283 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:58:42.166290 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003865a0)}
SaveRDFNode: 2020/08/12 10:58:42.166294 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:58:42.166304 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.166320 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.166326 UID received  : I14Bf6qjQCGA8fM8bIl6KA==
verify: 2020/08/12 10:58:42.166514 *** Verify running...... 1
rdfLoader: 2020/08/12 10:58:42.166523 .  getType..
rdfLoader: 2020/08/12 10:58:42.166544 node.TyName : [Person]
verify: 2020/08/12 10:58:42.166566 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 10:58:42.166623 Find Ty Address
rdfLoader: 2020/08/12 10:58:42.166629 Find Ty Age
rdfLoader: 2020/08/12 10:58:42.166646 Find Ty Cars
rdfLoader: 2020/08/12 10:58:42.166656 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:58:42.166661 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 10:58:42.166674 Find Ty DOB
rdfLoader: 2020/08/12 10:58:42.166680 Find Ty Friends
rdfLoader: 2020/08/12 10:58:42.166685 Find Ty Jobs
rdfLoader: 2020/08/12 10:58:42.166690 Find Ty Name
rdfLoader: 2020/08/12 10:58:42.166695 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:58:42.166699 Find Ty Siblings
rdfLoader: 2020/08/12 10:58:42.166708 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:58:42.166748 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:58:42.166754 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:58:42.166775 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166783 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166790 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166796 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166802 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166808 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.166814 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:58:42.166819 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:58:42.166825 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000386ae0)}
SaveRDFNode: 2020/08/12 10:58:42.166830 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:58:42.166837 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.166842 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.166848 UID received  : UvLX64w2R7uZ71qZ1IH+cQ==
verify: 2020/08/12 10:58:42.167201 *** Verify running...... 1
rdfLoader: 2020/08/12 10:58:42.167264 .  getType..
rdfLoader: 2020/08/12 10:58:42.167270 node.TyName : [Person]
verify: 2020/08/12 10:58:42.167290 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:58:42.167339 Find Ty Address
rdfLoader: 2020/08/12 10:58:42.167345 Find Ty Age
rdfLoader: 2020/08/12 10:58:42.167351 Find Ty Cars
rdfLoader: 2020/08/12 10:58:42.167357 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 10:58:42.167363 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 10:58:42.167367 Add to SS . [Honda]
rdfLoader: 2020/08/12 10:58:42.167372 Find Ty DOB
rdfLoader: 2020/08/12 10:58:42.167377 Find Ty Friends
rdfLoader: 2020/08/12 10:58:42.167382 Find Ty Jobs
rdfLoader: 2020/08/12 10:58:42.167386 Find Ty Name
rdfLoader: 2020/08/12 10:58:42.167391 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:58:42.167396 Find Ty Siblings
rdfLoader: 2020/08/12 10:58:42.167404 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:58:42.167432 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:58:42.167443 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:58:42.167464 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167472 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167478 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167486 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167493 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167499 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167505 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:58:42.167510 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:58:42.167516 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000387020)}
SaveRDFNode: 2020/08/12 10:58:42.167520 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:58:42.167528 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.167533 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.167539 UID received  : 82Iois9STPKBmkpAMGtvyQ==
verify: 2020/08/12 10:58:42.167679 *** Verify running...... 2
rdfLoader: 2020/08/12 10:58:42.167688 .  getType..
rdfLoader: 2020/08/12 10:58:42.167693 node.TyName : [Person]
verify: 2020/08/12 10:58:42.167709 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 10:58:42.167760 Find Ty Address
rdfLoader: 2020/08/12 10:58:42.167768 Find Ty Age
rdfLoader: 2020/08/12 10:58:42.167774 Find Ty Cars
rdfLoader: 2020/08/12 10:58:42.167779 Add to SS . [Bentley]
rdfLoader: 2020/08/12 10:58:42.167784 Find Ty DOB
rdfLoader: 2020/08/12 10:58:42.167789 Find Ty Friends
rdfLoader: 2020/08/12 10:58:42.167794 Find Ty Jobs
rdfLoader: 2020/08/12 10:58:42.167798 Find Ty Name
rdfLoader: 2020/08/12 10:58:42.167803 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 10:58:42.167808 Find Ty Siblings
rdfLoader: 2020/08/12 10:58:42.167828 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 10:58:42.167856 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 10:58:42.167861 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 10:58:42.167884 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167891 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167898 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167905 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167918 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167924 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 10:58:42.167931 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 10:58:42.167935 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 10:58:42.167942 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000387440)}
SaveRDFNode: 2020/08/12 10:58:42.167946 Waiting for UID ......................
rdfUIDdb: 2020/08/12 10:58:42.167968 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.167986 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.167992 UID received  : Hy9XIQ+4QomdnRQPBMp9iQ==
verify: 2020/08/12 10:58:42.168129 *** Verify running...... 2
verify: 2020/08/12 10:58:42.168138 verify exited.....
DB: 2020/08/12 10:58:42.180657 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 14.290865ms
DB: 2020/08/12 10:58:42.186181 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.615756ms
DB: 2020/08/12 10:58:42.191130 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.909115ms
DB: 2020/08/12 10:58:42.196218 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.054711ms
DB: 2020/08/12 10:58:42.201059 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.806355ms
DB: 2020/08/12 10:58:42.201759 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 33.742334ms
DB: 2020/08/12 10:58:42.202041 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 35.166441ms
DB: 2020/08/12 10:58:42.202278 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 21.544834ms
DB: 2020/08/12 10:58:42.205851 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.76081ms
SaveRDFNode: 2020/08/12 10:58:42.206005 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387020)}
rdfUIDdb: 2020/08/12 10:58:42.206018 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.206022 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.206028 Received UID: X18=
SaveRDFNode: 2020/08/12 10:58:42.206042 a: = db.Item{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:58:42.206699 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.897316ms
DB: 2020/08/12 10:58:42.206980 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.907108ms
DB: 2020/08/12 10:58:42.207397 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.089841ms
DB: 2020/08/12 10:58:42.211415 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.684826ms
DB: 2020/08/12 10:58:42.211929 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.906514ms
DB: 2020/08/12 10:58:42.212191 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.088952ms
SaveRDFNode: 2020/08/12 10:58:42.212203 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387020)}
rdfUIDdb: 2020/08/12 10:58:42.212209 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.212221 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.212227 Received UID: X18=
SaveRDFNode: 2020/08/12 10:58:42.212237 a: = db.Item{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:58:42.212582 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.156179ms
DB: 2020/08/12 10:58:42.216265 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.819693ms
DB: 2020/08/12 10:58:42.216807 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.846879ms
DB: 2020/08/12 10:58:42.217300 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.031297ms
SaveRDFNode: 2020/08/12 10:58:42.217310 Returned.+++++++++++ No error
DB: 2020/08/12 10:58:42.218812 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.20078ms
SaveRDFNode: 2020/08/12 10:58:42.218824 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003865a0)}
rdfUIDdb: 2020/08/12 10:58:42.218835 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.218839 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.218845 Received UID: X18=
SaveRDFNode: 2020/08/12 10:58:42.218855 a: = db.Item{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:58:42.221459 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.162869ms
SaveRDFNode: 2020/08/12 10:58:42.221642 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387440)}
rdfUIDdb: 2020/08/12 10:58:42.221654 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.221658 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.221664 Received UID: X18=
SaveRDFNode: 2020/08/12 10:58:42.221675 a: = db.Item{PKey:[]uint8{0x1f, 0x2f, 0x57, 0x21, 0xf, 0xb8, 0x42, 0x89, 0x9d, 0x9d, 0x14, 0xf, 0x4, 0xca, 0x7d, 0x89}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:58:42.221965 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.105629ms
SaveRDFNode: 2020/08/12 10:58:42.221981 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/12 10:58:42.221987 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.221991 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.221997 Received UID: X18=
SaveRDFNode: 2020/08/12 10:58:42.222007 a: = db.Item{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:58:42.223929 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.022432ms
SaveRDFNode: 2020/08/12 10:58:42.223942 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003865a0)}
rdfUIDdb: 2020/08/12 10:58:42.223948 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.223952 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.223958 Received UID: X18=
SaveRDFNode: 2020/08/12 10:58:42.223968 a: = db.Item{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:58:42.226791 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.751381ms
SaveRDFNode: 2020/08/12 10:58:42.226803 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/12 10:58:42.226809 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.226819 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.226825 Received UID: X18=
SaveRDFNode: 2020/08/12 10:58:42.226835 a: = db.Item{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:58:42.227098 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.392668ms
SaveRDFNode: 2020/08/12 10:58:42.227109 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387440)}
rdfUIDdb: 2020/08/12 10:58:42.227120 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 10:58:42.227124 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 10:58:42.227130 Received UID: X18=
SaveRDFNode: 2020/08/12 10:58:42.227139 a: = db.Item{PKey:[]uint8{0x1f, 0x2f, 0x57, 0x21, 0xf, 0xb8, 0x42, 0x89, 0x9d, 0x9d, 0x14, 0xf, 0x4, 0xca, 0x7d, 0x89}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 10:58:42.228751 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.754694ms
SaveRDFNode: 2020/08/12 10:58:42.228761 Returned.+++++++++++ No error
DB: 2020/08/12 10:58:42.231707 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.844777ms
SaveRDFNode: 2020/08/12 10:58:42.231722 Returned.+++++++++++ No error
DB: 2020/08/12 10:58:42.232015 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.848433ms
SaveRDFNode: 2020/08/12 10:58:42.232025 Returned.+++++++++++ No error
DB: 2020/08/12 10:58:42.238150 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.41275ms
DB: 2020/08/12 10:58:42.245998 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.769129ms
FetchForUpdate: 2020/08/12 10:58:42.246012 ** Cache FetchForUpdate Cache Key Value: [UvLX64w2R7uZ71qZ1IH+cQ==]   sortk: A#G#:S
FetchNode: 2020/08/12 10:58:42.246019  node: UvLX64w2R7uZ71qZ1IH+cQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 10:58:42.246178 ** Cache FetchForUpdate Cache Key Value: [I14Bf6qjQCGA8fM8bIl6KA==]   sortk: A#
FetchNode: 2020/08/12 10:58:42.246208  node: I14Bf6qjQCGA8fM8bIl6KA== subKey: A#
DB: 2020/08/12 10:58:42.259220 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 13.169516ms
FetchForUpdate: 2020/08/12 10:58:42.259280 len(nb): 1
fetchItems: 2020/08/12 10:58:42.259289 +++  Cache FetchItems for sortk A#G#:S UID: [UvLX64w2R7uZ71qZ1IH+cQ==] 
FetchNode: 2020/08/12 10:58:42.259294  node: UvLX64w2R7uZ71qZ1IH+cQ== subKey: A#G#:S
DB: 2020/08/12 10:58:42.263576 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.240282ms
DB: 2020/08/12 10:58:42.264126 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 17.864072ms
FetchForUpdate: 2020/08/12 10:58:42.264234 len(nb): 7
fetchItems: 2020/08/12 10:58:42.264242 +++  Cache FetchItems for sortk A# UID: [I14Bf6qjQCGA8fM8bIl6KA==] 
FetchNode: 2020/08/12 10:58:42.264247  node: I14Bf6qjQCGA8fM8bIl6KA== subKey: A#
DB: 2020/08/12 10:58:42.268528 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 4.240991ms
GetType:2020/08/12 10:58:42.268651 len(d.m)= 7
GetType: 2020/08/12 10:58:42.268675  A#:A : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.268689  A#:C : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.268710  A#:D : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.268724  A#:N : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.268749  A#G#:F : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.268778  A#G#:S : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.268793  A#T : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:58:42.269962 len(d.m)= 7
GetType: 2020/08/12 10:58:42.269984  A#:N : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.269998  A#G#:F : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.270233  A#G#:S : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.270261  A#T : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.270279  A#:A : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.270291  A#:C : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.270303  A#:D : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:58:42.270726 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:58:42.271123 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.519444ms
Unlock: 2020/08/12 10:58:42.271132 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 10:58:42.271547 ** Cache FetchForUpdate Cache Key Value: [UvLX64w2R7uZ71qZ1IH+cQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.271559 +++  Cache FetchItems for sortk A#G#:S UID: [UvLX64w2R7uZ71qZ1IH+cQ==] 
FetchNode: 2020/08/12 10:58:42.271564  node: UvLX64w2R7uZ71qZ1IH+cQ== subKey: A#G#:S
DB: 2020/08/12 10:58:42.276322 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.722474ms
DB: 2020/08/12 10:58:42.283342 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.667452ms
DB: 2020/08/12 10:58:42.289143 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.615889ms
DB: 2020/08/12 10:58:42.295318 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.787573ms
DB: 2020/08/12 10:58:42.302125 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.493879ms
DB: 2020/08/12 10:58:42.307307 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.854523ms
DB: 2020/08/12 10:58:42.312858 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.239726ms
DB: 2020/08/12 10:58:42.320032 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.877244ms
DB: 2020/08/12 10:58:42.325962 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.582761ms
DB: 2020/08/12 10:58:42.332015 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.742568ms
Unlock: 2020/08/12 10:58:42.332032 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:58:42.339686 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 7.278583ms
FetchForUpdate: 2020/08/12 10:58:42.339699 ** Cache FetchForUpdate Cache Key Value: [UvLX64w2R7uZ71qZ1IH+cQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.339705 +++  Cache FetchItems for sortk A#G#:S UID: [UvLX64w2R7uZ71qZ1IH+cQ==] 
FetchNode: 2020/08/12 10:58:42.339710  node: UvLX64w2R7uZ71qZ1IH+cQ== subKey: A#G#:S
DB: 2020/08/12 10:58:42.344487 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.734056ms
AttachNode: gr1 2020/08/12 10:58:42.344602 Errored: SetUpredAvailable :for  UvLX64w2R7uZ71qZ1IH+cQ==
Cache: 2020/08/12 10:58:42.344611 In SetUpredAvailable: pUid, tUID:  UvLX64w2R7uZ71qZ1IH+cQ== UvLX64w2R7uZ71qZ1IH+cQ== A#G#:S
Cache: 2020/08/12 10:58:42.344615 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:58:42.350837 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.172761ms
Unlock: 2020/08/12 10:58:42.350852 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:58:42.361830 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 10.062258ms
DB: 2020/08/12 10:58:42.372115 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 10.210719ms
DB: 2020/08/12 10:58:42.377994 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.813727ms
FetchForUpdate: 2020/08/12 10:58:42.378010 ** Cache FetchForUpdate Cache Key Value: [82Iois9STPKBmkpAMGtvyQ==]   sortk: A#G#:S
FetchNode: 2020/08/12 10:58:42.378019  node: 82Iois9STPKBmkpAMGtvyQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 10:58:42.378194 ** Cache FetchForUpdate Cache Key Value: [I14Bf6qjQCGA8fM8bIl6KA==]   sortk: A#
fetchItems: 2020/08/12 10:58:42.378219 +++  Cache FetchItems for sortk A# UID: [I14Bf6qjQCGA8fM8bIl6KA==] 
FetchNode: 2020/08/12 10:58:42.378232  node: I14Bf6qjQCGA8fM8bIl6KA== subKey: A#
DB: 2020/08/12 10:58:42.381866 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.587028ms
GetType:2020/08/12 10:58:42.381980 len(d.m)= 7
GetType: 2020/08/12 10:58:42.381999  A#:A : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.382012  A#:C : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.382024  A#:D : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.382035  A#:N : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.382048  A#G#:F : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.382059  A#G#:S : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.382081  A#T : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:58:42.382384 len(d.m)= 7
GetType: 2020/08/12 10:58:42.382420  A#:A : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.382436  A#:C : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.382448  A#:D : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.382459  A#:N : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.382490  A#G#:F : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.382503  A#G#:S : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.382515  A#T : &block.DataItem{PKey:[]uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:58:42.382679 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:58:42.383105 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.05202ms
FetchForUpdate: 2020/08/12 10:58:42.383162 len(nb): 1
fetchItems: 2020/08/12 10:58:42.383170 +++  Cache FetchItems for sortk A#G#:S UID: [82Iois9STPKBmkpAMGtvyQ==] 
FetchNode: 2020/08/12 10:58:42.383175  node: 82Iois9STPKBmkpAMGtvyQ== subKey: A#G#:S
DB: 2020/08/12 10:58:42.386957 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.750534ms
DB: 2020/08/12 10:58:42.393624 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.419702ms
Unlock: 2020/08/12 10:58:42.393651 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 10:58:42.393989 ** Cache FetchForUpdate Cache Key Value: [82Iois9STPKBmkpAMGtvyQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.394001 +++  Cache FetchItems for sortk A#G#:S UID: [82Iois9STPKBmkpAMGtvyQ==] 
FetchNode: 2020/08/12 10:58:42.394007  node: 82Iois9STPKBmkpAMGtvyQ== subKey: A#G#:S
DB: 2020/08/12 10:58:42.397530 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.370351ms
DB: 2020/08/12 10:58:42.405940 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.442155ms
DB: 2020/08/12 10:58:42.412209 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.741299ms
DB: 2020/08/12 10:58:42.417810 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.496327ms
DB: 2020/08/12 10:58:42.428303 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 10.419261ms
DB: 2020/08/12 10:58:42.433579 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.210724ms
DB: 2020/08/12 10:58:42.439013 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.365182ms
DB: 2020/08/12 10:58:42.446622 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.541936ms
DB: 2020/08/12 10:58:42.452484 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.802746ms
DB: 2020/08/12 10:58:42.457524 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.975527ms
Unlock: 2020/08/12 10:58:42.457535 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:58:42.462350 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.752176ms
FetchForUpdate: 2020/08/12 10:58:42.462364 ** Cache FetchForUpdate Cache Key Value: [82Iois9STPKBmkpAMGtvyQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.462371 +++  Cache FetchItems for sortk A#G#:S UID: [82Iois9STPKBmkpAMGtvyQ==] 
FetchNode: 2020/08/12 10:58:42.462376  node: 82Iois9STPKBmkpAMGtvyQ== subKey: A#G#:S
DB: 2020/08/12 10:58:42.465688 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.272423ms
AttachNode: gr1 2020/08/12 10:58:42.465773 Errored: SetUpredAvailable :for  82Iois9STPKBmkpAMGtvyQ==
Cache: 2020/08/12 10:58:42.465781 In SetUpredAvailable: pUid, tUID:  82Iois9STPKBmkpAMGtvyQ== 82Iois9STPKBmkpAMGtvyQ== A#G#:S
Cache: 2020/08/12 10:58:42.465786 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:58:42.471495 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.676569ms
Unlock: 2020/08/12 10:58:42.471505 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:58:42.476857 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.018687ms
DB: 2020/08/12 10:58:42.482123 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.073221ms
DB: 2020/08/12 10:58:42.487504 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.222386ms
FetchForUpdate: 2020/08/12 10:58:42.487532 ** Cache FetchForUpdate Cache Key Value: [I14Bf6qjQCGA8fM8bIl6KA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.487538 +++  Cache FetchItems for sortk A#G#:S UID: [I14Bf6qjQCGA8fM8bIl6KA==] 
FetchNode: 2020/08/12 10:58:42.487543  node: I14Bf6qjQCGA8fM8bIl6KA== subKey: A#G#:S
FetchForUpdate: 2020/08/12 10:58:42.487721 ** Cache FetchForUpdate Cache Key Value: [UvLX64w2R7uZ71qZ1IH+cQ==]   sortk: A#
fetchItems: 2020/08/12 10:58:42.487746 +++  Cache FetchItems for sortk A# UID: [UvLX64w2R7uZ71qZ1IH+cQ==] 
FetchNode: 2020/08/12 10:58:42.487775  node: UvLX64w2R7uZ71qZ1IH+cQ== subKey: A#
DB: 2020/08/12 10:58:42.491297 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.47153ms
GetType:2020/08/12 10:58:42.491455 len(d.m)= 10
GetType: 2020/08/12 10:58:42.491475  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.491491  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.491503  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.491517  A#:C : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.491528  A#:N : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.491540  A#G#:F : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.491552  A#T : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.491566  A#G#:S : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:58:42.491597  A#:D : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.491609  A#:A : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:58:42.492064 len(d.m)= 10
GetType: 2020/08/12 10:58:42.492083  A#:N : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.492096  A#G#:F : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.492107  A#T : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.492182  A#G#:S : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:58:42.492200  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.492213  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.492225  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.492243  A#:C : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.492256  A#:A : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.492267  A#:D : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:58:42.492588 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:58:42.493117 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.522152ms
DB: 2020/08/12 10:58:42.498591 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.197348ms
Unlock: 2020/08/12 10:58:42.498606 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 10:58:42.499104 ** Cache FetchForUpdate Cache Key Value: [I14Bf6qjQCGA8fM8bIl6KA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.499115 +++  Cache FetchItems for sortk A#G#:S UID: [I14Bf6qjQCGA8fM8bIl6KA==] 
FetchNode: 2020/08/12 10:58:42.499120  node: I14Bf6qjQCGA8fM8bIl6KA== subKey: A#G#:S
DB: 2020/08/12 10:58:42.503456 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.305389ms
DB: 2020/08/12 10:58:42.510449 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.898536ms
DB: 2020/08/12 10:58:42.515469 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.964217ms
DB: 2020/08/12 10:58:42.520757 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.176435ms
DB: 2020/08/12 10:58:42.527612 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.787961ms
DB: 2020/08/12 10:58:42.532609 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.930769ms
DB: 2020/08/12 10:58:42.537863 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.184385ms
DB: 2020/08/12 10:58:42.543898 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.974943ms
DB: 2020/08/12 10:58:42.550314 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.123309ms
DB: 2020/08/12 10:58:42.555838 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.190955ms
Unlock: 2020/08/12 10:58:42.555852 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 10:58:42.563654 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 7.329962ms
FetchForUpdate: 2020/08/12 10:58:42.563666 ** Cache FetchForUpdate Cache Key Value: [I14Bf6qjQCGA8fM8bIl6KA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.563672 +++  Cache FetchItems for sortk A#G#:S UID: [I14Bf6qjQCGA8fM8bIl6KA==] 
FetchNode: 2020/08/12 10:58:42.563677  node: I14Bf6qjQCGA8fM8bIl6KA== subKey: A#G#:S
DB: 2020/08/12 10:58:42.567883 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.173492ms
AttachNode: gr1 2020/08/12 10:58:42.568005 Errored: SetUpredAvailable :for  I14Bf6qjQCGA8fM8bIl6KA==
Cache: 2020/08/12 10:58:42.568014 In SetUpredAvailable: pUid, tUID:  I14Bf6qjQCGA8fM8bIl6KA== I14Bf6qjQCGA8fM8bIl6KA== A#G#:S
Cache: 2020/08/12 10:58:42.568020 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:58:42.573150 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.095771ms
Unlock: 2020/08/12 10:58:42.573161 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:58:42.578809 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.14769ms
DB: 2020/08/12 10:58:42.584273 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.276082ms
DB: 2020/08/12 10:58:42.589424 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.860603ms
FetchForUpdate: 2020/08/12 10:58:42.589441 ** Cache FetchForUpdate Cache Key Value: [82Iois9STPKBmkpAMGtvyQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.589447 +++  Cache FetchItems for sortk A#G#:S UID: [82Iois9STPKBmkpAMGtvyQ==] 
FetchNode: 2020/08/12 10:58:42.589452  node: 82Iois9STPKBmkpAMGtvyQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 10:58:42.589672 ** Cache FetchForUpdate Cache Key Value: [UvLX64w2R7uZ71qZ1IH+cQ==]   sortk: A#
fetchItems: 2020/08/12 10:58:42.589681 +++  Cache FetchItems for sortk A# UID: [UvLX64w2R7uZ71qZ1IH+cQ==] 
FetchNode: 2020/08/12 10:58:42.589698  node: UvLX64w2R7uZ71qZ1IH+cQ== subKey: A#
DB: 2020/08/12 10:58:42.593694 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.952231ms
GetType:2020/08/12 10:58:42.593898 len(d.m)= 10
GetType: 2020/08/12 10:58:42.593922  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.593936  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.593949  A#:C : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.593960  A#:N : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.593981  A#G#:F : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.594011  A#T : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.594027  A#G#:S : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:58:42.594040  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.594051  A#:A : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.594065  A#:D : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:58:42.594946 len(d.m)= 10
GetType: 2020/08/12 10:58:42.594986  A#:A : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.595000  A#:D : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.595016  A#G#:S : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 10:58:42.595033  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.595046  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.595059  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.595070  A#:C : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.595081  A#:N : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.595096  A#G#:F : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.595107  A#T : &block.DataItem{PKey:[]uint8{0x52, 0xf2, 0xd7, 0xeb, 0x8c, 0x36, 0x47, 0xbb, 0x99, 0xef, 0x5a, 0x99, 0xd4, 0x81, 0xfe, 0x71}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:58:42.595432 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:58:42.599692 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 10.205992ms
DB: 2020/08/12 10:58:42.613574 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 13.270796ms
DB: 2020/08/12 10:58:42.619641 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.023816ms
DB: 2020/08/12 10:58:42.619659 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.023816ms
DB: 2020/08/12 10:58:42.625240 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.550363ms
DB: 2020/08/12 10:58:42.625256 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.550363ms
DB: 2020/08/12 10:58:42.632039 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.683474ms
DB: 2020/08/12 10:58:42.638020 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.890561ms
Unlock: 2020/08/12 10:58:42.638032 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:58:42.645601 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.922531ms
DB: 2020/08/12 10:58:42.651871 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.223434ms
DB: 2020/08/12 10:58:42.658486 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.510754ms
DB: 2020/08/12 10:58:42.667025 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 8.468999ms
DB: 2020/08/12 10:58:42.679880 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 12.795769ms
DB: 2020/08/12 10:58:42.686196 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.222211ms
DB: 2020/08/12 10:58:42.693134 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.625063ms
DB: 2020/08/12 10:58:42.699126 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.655649ms
DB: 2020/08/12 10:58:42.705002 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.558032ms
DB: 2020/08/12 10:58:42.711172 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.990917ms
FetchForUpdate: 2020/08/12 10:58:42.711184 ** Cache FetchForUpdate Cache Key Value: [82Iois9STPKBmkpAMGtvyQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.711191 +++  Cache FetchItems for sortk A#G#:S UID: [82Iois9STPKBmkpAMGtvyQ==] 
FetchNode: 2020/08/12 10:58:42.711196  node: 82Iois9STPKBmkpAMGtvyQ== subKey: A#G#:S
DB: 2020/08/12 10:58:42.715887 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.658831ms
AttachNode: gr1 2020/08/12 10:58:42.715991 Errored: SetUpredAvailable :for  82Iois9STPKBmkpAMGtvyQ==
Cache: 2020/08/12 10:58:42.716002 In SetUpredAvailable: pUid, tUID:  82Iois9STPKBmkpAMGtvyQ== n5UJxYXnQvOJPdd2sA9TwQ== A#G#:S
Cache: 2020/08/12 10:58:42.716006 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:58:42.722055 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.01716ms
Unlock: 2020/08/12 10:58:42.722066 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:58:42.727859 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.409191ms
DB: 2020/08/12 10:58:42.741108 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 13.050467ms
DB: 2020/08/12 10:58:42.746046 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.758895ms
FetchForUpdate: 2020/08/12 10:58:42.746060 ** Cache FetchForUpdate Cache Key Value: [I14Bf6qjQCGA8fM8bIl6KA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.746066 +++  Cache FetchItems for sortk A#G#:S UID: [I14Bf6qjQCGA8fM8bIl6KA==] 
FetchNode: 2020/08/12 10:58:42.746071  node: I14Bf6qjQCGA8fM8bIl6KA== subKey: A#G#:S
FetchForUpdate: 2020/08/12 10:58:42.746254 ** Cache FetchForUpdate Cache Key Value: [82Iois9STPKBmkpAMGtvyQ==]   sortk: A#
fetchItems: 2020/08/12 10:58:42.746278 +++  Cache FetchItems for sortk A# UID: [82Iois9STPKBmkpAMGtvyQ==] 
FetchNode: 2020/08/12 10:58:42.746291  node: 82Iois9STPKBmkpAMGtvyQ== subKey: A#
DB: 2020/08/12 10:58:42.750804 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.698155ms
DB: 2020/08/12 10:58:42.752145 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 5.78461ms
GetType:2020/08/12 10:58:42.752565 len(d.m)= 10
GetType: 2020/08/12 10:58:42.752600  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.752621  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.752641  A#:C : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.752660  A#T : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.752684  A#G#:F : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.752729  A#G#:S : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, []uint8{0x9f, 0x95, 0x9, 0xc5, 0x85, 0xe7, 0x42, 0xf3, 0x89, 0x3d, 0xd7, 0x76, 0xb0, 0xf, 0x53, 0xc1}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:58:42.752751  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.752775  A#:A : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.752809  A#:D : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.752837  A#:N : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 10:58:42.753758 len(d.m)= 10
GetType: 2020/08/12 10:58:42.753789  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.753815  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.753946  A#:C : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.753969  A#T : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.754000  A#G#:S : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, []uint8{0x9f, 0x95, 0x9, 0xc5, 0x85, 0xe7, 0x42, 0xf3, 0x89, 0x3d, 0xd7, 0x76, 0xb0, 0xf, 0x53, 0xc1}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:58:42.754027  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.754046  A#:A : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.754085  A#:D : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.754108  A#:N : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.754132  A#G#:F : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 10:58:42.754481 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:58:42.758267 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.028033ms
DB: 2020/08/12 10:58:42.772045 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 13.74109ms
DB: 2020/08/12 10:58:42.772062 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 13.74109ms
DB: 2020/08/12 10:58:42.779878 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.763524ms
DB: 2020/08/12 10:58:42.779898 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 7.763524ms
DB: 2020/08/12 10:58:42.788118 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 8.148676ms
DB: 2020/08/12 10:58:42.794429 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.234622ms
Unlock: 2020/08/12 10:58:42.794442 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:58:42.803339 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.708045ms
DB: 2020/08/12 10:58:42.808567 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.170218ms
DB: 2020/08/12 10:58:42.814037 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.343052ms
DB: 2020/08/12 10:58:42.820718 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.615014ms
DB: 2020/08/12 10:58:42.825760 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.973176ms
DB: 2020/08/12 10:58:42.831672 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.424606ms
DB: 2020/08/12 10:58:42.838968 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.796286ms
DB: 2020/08/12 10:58:42.844718 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.108808ms
DB: 2020/08/12 10:58:42.851139 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.119527ms
DB: 2020/08/12 10:58:42.856659 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.220203ms
FetchForUpdate: 2020/08/12 10:58:42.856676 ** Cache FetchForUpdate Cache Key Value: [I14Bf6qjQCGA8fM8bIl6KA==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.856693 +++  Cache FetchItems for sortk A#G#:S UID: [I14Bf6qjQCGA8fM8bIl6KA==] 
FetchNode: 2020/08/12 10:58:42.856699  node: I14Bf6qjQCGA8fM8bIl6KA== subKey: A#G#:S
DB: 2020/08/12 10:58:42.861141 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.40309ms
AttachNode: gr1 2020/08/12 10:58:42.861262 Errored: SetUpredAvailable :for  I14Bf6qjQCGA8fM8bIl6KA==
Cache: 2020/08/12 10:58:42.861272 In SetUpredAvailable: pUid, tUID:  I14Bf6qjQCGA8fM8bIl6KA== 3/DskFDXSouCngavDlrVXQ== A#G#:S
Cache: 2020/08/12 10:58:42.861276 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:58:42.866206 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.890546ms
Unlock: 2020/08/12 10:58:42.866216 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:58:42.871749 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.909898ms
DB: 2020/08/12 10:58:42.877091 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.930902ms
DB: 2020/08/12 10:58:42.882716 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.225914ms
FetchForUpdate: 2020/08/12 10:58:42.882734 ** Cache FetchForUpdate Cache Key Value: [UvLX64w2R7uZ71qZ1IH+cQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.882739 +++  Cache FetchItems for sortk A#G#:S UID: [UvLX64w2R7uZ71qZ1IH+cQ==] 
FetchNode: 2020/08/12 10:58:42.882744  node: UvLX64w2R7uZ71qZ1IH+cQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 10:58:42.882932 ** Cache FetchForUpdate Cache Key Value: [82Iois9STPKBmkpAMGtvyQ==]   sortk: A#
fetchItems: 2020/08/12 10:58:42.882941 +++  Cache FetchItems for sortk A# UID: [82Iois9STPKBmkpAMGtvyQ==] 
FetchNode: 2020/08/12 10:58:42.882992  node: 82Iois9STPKBmkpAMGtvyQ== subKey: A#
DB: 2020/08/12 10:58:42.886910 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.129974ms
DB: 2020/08/12 10:58:42.887858 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.821647ms
GetType:2020/08/12 10:58:42.888032 len(d.m)= 10
GetType: 2020/08/12 10:58:42.888054  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.888071  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.888084  A#:C : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.888096  A#T : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.888141  A#G#:S : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, []uint8{0x9f, 0x95, 0x9, 0xc5, 0x85, 0xe7, 0x42, 0xf3, 0x89, 0x3d, 0xd7, 0x76, 0xb0, 0xf, 0x53, 0xc1}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:58:42.888156  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.888167  A#:A : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.891817  A#:D : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.891849  A#:N : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.891878  A#G#:F : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 10:58:42.892296 len(d.m)= 10
GetType: 2020/08/12 10:58:42.892316  A#:D : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.892346  A#:N : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.892360  A#G#:F : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 10:58:42.892383  A#G#:S : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x23, 0x5e, 0x1, 0x7f, 0xaa, 0xa3, 0x40, 0x21, 0x80, 0xf1, 0xf3, 0x3c, 0x6c, 0x89, 0x7a, 0x28}, []uint8{0x9f, 0x95, 0x9, 0xc5, 0x85, 0xe7, 0x42, 0xf3, 0x89, 0x3d, 0xd7, 0x76, 0xb0, 0xf, 0x53, 0xc1}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 10:58:42.892397  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.892420  A#:A : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.892432  A#T : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.892443  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.892455  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 10:58:42.892466  A#:C : &block.DataItem{PKey:[]uint8{0xf3, 0x62, 0x28, 0x8a, 0xcf, 0x52, 0x4c, 0xf2, 0x81, 0x9a, 0x4a, 0x40, 0x30, 0x6b, 0x6f, 0xc9}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 10:58:42.892705 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 10:58:42.893434 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.164964ms
DB: 2020/08/12 10:58:42.898352 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.885157ms
DB: 2020/08/12 10:58:42.898405 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.885157ms
DB: 2020/08/12 10:58:42.903162 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.706343ms
DB: 2020/08/12 10:58:42.903184 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.706343ms
DB: 2020/08/12 10:58:42.908207 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.956116ms
DB: 2020/08/12 10:58:42.913129 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.854806ms
Unlock: 2020/08/12 10:58:42.913141 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 10:58:42.919380 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.151428ms
DB: 2020/08/12 10:58:42.924228 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.790971ms
DB: 2020/08/12 10:58:42.929364 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.026064ms
DB: 2020/08/12 10:58:42.935638 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.211482ms
DB: 2020/08/12 10:58:42.940193 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.49427ms
DB: 2020/08/12 10:58:42.945100 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.838876ms
DB: 2020/08/12 10:58:42.951370 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.212538ms
DB: 2020/08/12 10:58:42.956000 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.570964ms
DB: 2020/08/12 10:58:42.961160 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.092131ms
DB: 2020/08/12 10:58:42.966063 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.739211ms
FetchForUpdate: 2020/08/12 10:58:42.966074 ** Cache FetchForUpdate Cache Key Value: [UvLX64w2R7uZ71qZ1IH+cQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 10:58:42.966081 +++  Cache FetchItems for sortk A#G#:S UID: [UvLX64w2R7uZ71qZ1IH+cQ==] 
FetchNode: 2020/08/12 10:58:42.966086  node: UvLX64w2R7uZ71qZ1IH+cQ== subKey: A#G#:S
DB: 2020/08/12 10:58:42.970268 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.138729ms
AttachNode: gr1 2020/08/12 10:58:42.970373 Errored: SetUpredAvailable :for  UvLX64w2R7uZ71qZ1IH+cQ==
Cache: 2020/08/12 10:58:42.970382 In SetUpredAvailable: pUid, tUID:  UvLX64w2R7uZ71qZ1IH+cQ== JImig/65SL2nT4W3mJdeIA== A#G#:S
Cache: 2020/08/12 10:58:42.970388 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 10:58:42.976207 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.785604ms
Unlock: 2020/08/12 10:58:42.976218 ******* IN UNLOCK NC ********************
DB: 2020/08/12 10:58:42.981392 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.712725ms
rdfLoader: 2020/08/12 10:58:42.981403 saveNode finished waiting...exiting
grmgr: 2020/08/12 10:58:42.981414 Powering down...
rdfuuid: 2020/08/12 10:58:42.981420 Powering down...
DB:2020/08/12 11:09:44 log.go:18: ===============================================================================
grmgr: 2020/08/12 11:09:44.944182 Powering on...
rdfLoader: 2020/08/12 11:09:44.944225 verify started....xx.
rdfLoader: 2020/08/12 11:09:44.944254 saveNode started......
rdfuuid: 2020/08/12 11:09:44.944268 Powering on...
rdfLoader: 2020/08/12 11:09:44.944275 *************** All started 
rdfLoader: 2020/08/12 11:09:44.952341 .  getType..
rdfLoader: 2020/08/12 11:09:44.952355 node.TyName : [Person]
DB: 2020/08/12 11:09:45.028535 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 76.118117ms
verify: 2020/08/12 11:09:45.028707 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 11:09:45.028766 Find Ty Address
rdfLoader: 2020/08/12 11:09:45.028772 Find Ty Age
rdfLoader: 2020/08/12 11:09:45.028779 Find Ty Cars
rdfLoader: 2020/08/12 11:09:45.028786 Add to SS . [Honda]
rdfLoader: 2020/08/12 11:09:45.028791 Add to SS . [Alfa]
rdfLoader: 2020/08/12 11:09:45.028796 Find Ty DOB
rdfLoader: 2020/08/12 11:09:45.028801 Find Ty Friends
rdfLoader: 2020/08/12 11:09:45.028806 Find Ty Jobs
rdfLoader: 2020/08/12 11:09:45.028810 Find Ty Name
rdfLoader: 2020/08/12 11:09:45.028815 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 11:09:45.028820 Find Ty Siblings
rdfLoader: 2020/08/12 11:09:45.028831 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 11:09:45.028861 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 11:09:45.028867 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 11:09:45.028894 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.028901 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.028908 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.028914 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.028921 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.028927 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.028933 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 11:09:45.028938 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 11:09:45.028946 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003845a0)}
SaveRDFNode: 2020/08/12 11:09:45.028951 Waiting for UID ......................
rdfUIDdb: 2020/08/12 11:09:45.028961 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.028966 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.028973 UID received  : xyq4nASnRWOH270RSS6wRQ==
verify: 2020/08/12 11:09:45.029198 *** Verify running...... 1
rdfLoader: 2020/08/12 11:09:45.029224 .  getType..
rdfLoader: 2020/08/12 11:09:45.029229 node.TyName : [Person]
verify: 2020/08/12 11:09:45.029250 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 11:09:45.029294 Find Ty Address
rdfLoader: 2020/08/12 11:09:45.029300 Find Ty Age
rdfLoader: 2020/08/12 11:09:45.029306 Find Ty Cars
rdfLoader: 2020/08/12 11:09:45.029311 Add to SS . [Honda]
rdfLoader: 2020/08/12 11:09:45.029317 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 11:09:45.029322 Find Ty DOB
rdfLoader: 2020/08/12 11:09:45.030540 Find Ty Friends
rdfLoader: 2020/08/12 11:09:45.030545 Find Ty Jobs
rdfLoader: 2020/08/12 11:09:45.030549 Find Ty Name
rdfLoader: 2020/08/12 11:09:45.030554 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 11:09:45.030558 Find Ty Siblings
rdfLoader: 2020/08/12 11:09:45.030569 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 11:09:45.030601 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 11:09:45.030612 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 11:09:45.030635 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.030641 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.030647 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.030653 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.030659 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.030683 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.030690 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 11:09:45.030694 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 11:09:45.030700 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000384ae0)}
SaveRDFNode: 2020/08/12 11:09:45.030704 Waiting for UID ......................
rdfUIDdb: 2020/08/12 11:09:45.030712 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.030716 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.030722 UID received  : lNP8nBgfSxu+2n7/XaCdDQ==
verify: 2020/08/12 11:09:45.031138 *** Verify running...... 1
rdfLoader: 2020/08/12 11:09:45.033078 .  getType..
rdfLoader: 2020/08/12 11:09:45.033087 node.TyName : [Person]
verify: 2020/08/12 11:09:45.033523 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 11:09:45.034088 Find Ty Address
rdfLoader: 2020/08/12 11:09:45.034097 Find Ty Age
rdfLoader: 2020/08/12 11:09:45.034103 Find Ty Cars
rdfLoader: 2020/08/12 11:09:45.034109 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 11:09:45.034114 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 11:09:45.034118 Add to SS . [Honda]
rdfLoader: 2020/08/12 11:09:45.034122 Find Ty DOB
rdfLoader: 2020/08/12 11:09:45.034127 Find Ty Friends
rdfLoader: 2020/08/12 11:09:45.034130 Find Ty Jobs
rdfLoader: 2020/08/12 11:09:45.034134 Find Ty Name
rdfLoader: 2020/08/12 11:09:45.034139 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 11:09:45.034143 Find Ty Siblings
rdfLoader: 2020/08/12 11:09:45.034153 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 11:09:45.034182 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 11:09:45.034186 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 11:09:45.034208 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.034220 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.034225 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.034250 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.034257 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.034262 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.034268 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 11:09:45.034272 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 11:09:45.034278 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0003850e0)}
SaveRDFNode: 2020/08/12 11:09:45.034282 Waiting for UID ......................
rdfUIDdb: 2020/08/12 11:09:45.034290 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.034294 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.034299 UID received  : GuMquEYTQVmlP/TFPFPrFw==
verify: 2020/08/12 11:09:45.034699 *** Verify running...... 2
rdfLoader: 2020/08/12 11:09:45.034708 .  getType..
rdfLoader: 2020/08/12 11:09:45.034717 node.TyName : [Person]
verify: 2020/08/12 11:09:45.035034 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 11:09:45.035711 Find Ty Address
rdfLoader: 2020/08/12 11:09:45.035735 Find Ty Age
rdfLoader: 2020/08/12 11:09:45.035743 Find Ty Cars
rdfLoader: 2020/08/12 11:09:45.035748 Add to SS . [Bentley]
rdfLoader: 2020/08/12 11:09:45.035752 Find Ty DOB
rdfLoader: 2020/08/12 11:09:45.035757 Find Ty Friends
rdfLoader: 2020/08/12 11:09:45.035761 Find Ty Jobs
rdfLoader: 2020/08/12 11:09:45.035764 Find Ty Name
rdfLoader: 2020/08/12 11:09:45.035769 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 11:09:45.035789 Find Ty Siblings
rdfLoader: 2020/08/12 11:09:45.035798 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 11:09:45.035822 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 11:09:45.035827 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 11:09:45.035847 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.035854 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.035860 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.035866 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.035871 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.035877 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 11:09:45.035883 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 11:09:45.035895 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 11:09:45.035901 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000385740)}
SaveRDFNode: 2020/08/12 11:09:45.035905 Waiting for UID ......................
rdfUIDdb: 2020/08/12 11:09:45.035912 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.035916 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.035921 UID received  : iDlejwyJTKOqeHroPbtCJQ==
verify: 2020/08/12 11:09:45.036322 *** Verify running...... 2
verify: 2020/08/12 11:09:45.036330 verify exited.....
DB: 2020/08/12 11:09:45.040825 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.817128ms
DB: 2020/08/12 11:09:45.046977 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.223214ms
DB: 2020/08/12 11:09:45.053659 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.413519ms
DB: 2020/08/12 11:09:45.058522 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.809785ms
DB: 2020/08/12 11:09:45.062352 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 28.025257ms
DB: 2020/08/12 11:09:45.063176 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.615681ms
DB: 2020/08/12 11:09:45.063764 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 27.798908ms
DB: 2020/08/12 11:09:45.065699 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 24.812693ms
DB: 2020/08/12 11:09:45.068341 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.955389ms
DB: 2020/08/12 11:09:45.068844 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.633665ms
SaveRDFNode: 2020/08/12 11:09:45.068859 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/12 11:09:45.068866 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.068870 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.068876 Received UID: X18=
SaveRDFNode: 2020/08/12 11:09:45.068890 a: = db.Item{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 11:09:45.069317 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.520795ms
DB: 2020/08/12 11:09:45.070519 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.7858ms
DB: 2020/08/12 11:09:45.073264 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.892513ms
DB: 2020/08/12 11:09:45.074121 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.737982ms
DB: 2020/08/12 11:09:45.074392 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.455298ms
SaveRDFNode: 2020/08/12 11:09:45.074404 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/12 11:09:45.074410 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.074414 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.074419 Received UID: X18=
SaveRDFNode: 2020/08/12 11:09:45.074430 a: = db.Item{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 11:09:45.076170 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.62012ms
DB: 2020/08/12 11:09:45.078258 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.96064ms
DB: 2020/08/12 11:09:45.078825 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.658527ms
DB: 2020/08/12 11:09:45.079226 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.764856ms
SaveRDFNode: 2020/08/12 11:09:45.079237 Returned.+++++++++++ No error
DB: 2020/08/12 11:09:45.081064 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.862727ms
SaveRDFNode: 2020/08/12 11:09:45.081075 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/12 11:09:45.081082 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.081085 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.081091 Received UID: X18=
SaveRDFNode: 2020/08/12 11:09:45.081102 a: = db.Item{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 11:09:45.083356 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.053609ms
SaveRDFNode: 2020/08/12 11:09:45.083369 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003850e0)}
rdfUIDdb: 2020/08/12 11:09:45.083374 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.083378 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.083384 Received UID: X18=
SaveRDFNode: 2020/08/12 11:09:45.083393 a: = db.Item{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 11:09:45.083848 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.847967ms
SaveRDFNode: 2020/08/12 11:09:45.083860 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385740)}
rdfUIDdb: 2020/08/12 11:09:45.083866 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.083870 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.083876 Received UID: X18=
SaveRDFNode: 2020/08/12 11:09:45.083886 a: = db.Item{PKey:[]uint8{0x88, 0x39, 0x5e, 0x8f, 0xc, 0x89, 0x4c, 0xa3, 0xaa, 0x78, 0x7a, 0xe8, 0x3d, 0xbb, 0x42, 0x25}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 11:09:45.087981 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.830871ms
SaveRDFNode: 2020/08/12 11:09:45.087994 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/12 11:09:45.088000 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.088004 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.088009 Received UID: X18=
SaveRDFNode: 2020/08/12 11:09:45.088020 a: = db.Item{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 11:09:45.088300 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.876662ms
SaveRDFNode: 2020/08/12 11:09:45.088311 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003850e0)}
rdfUIDdb: 2020/08/12 11:09:45.088316 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.088320 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.088325 Received UID: X18=
SaveRDFNode: 2020/08/12 11:09:45.088338 a: = db.Item{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 11:09:45.088655 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.739912ms
SaveRDFNode: 2020/08/12 11:09:45.088666 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385740)}
rdfUIDdb: 2020/08/12 11:09:45.088678 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 11:09:45.088682 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 11:09:45.088688 Received UID: X18=
SaveRDFNode: 2020/08/12 11:09:45.088698 a: = db.Item{PKey:[]uint8{0x88, 0x39, 0x5e, 0x8f, 0xc, 0x89, 0x4c, 0xa3, 0xaa, 0x78, 0x7a, 0xe8, 0x3d, 0xbb, 0x42, 0x25}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 11:09:45.092802 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.754379ms
SaveRDFNode: 2020/08/12 11:09:45.092812 Returned.+++++++++++ No error
DB: 2020/08/12 11:09:45.093372 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.646804ms
SaveRDFNode: 2020/08/12 11:09:45.093386 Returned.+++++++++++ No error
DB: 2020/08/12 11:09:45.093522 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.137385ms
SaveRDFNode: 2020/08/12 11:09:45.093530 Returned.+++++++++++ No error
DB: 2020/08/12 11:09:45.099359 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.0093ms
DB: 2020/08/12 11:09:45.112925 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 8.741138ms
FetchForUpdate: 2020/08/12 11:09:45.112945 ** Cache FetchForUpdate Cache Key Value: [lNP8nBgfSxu+2n7/XaCdDQ==]   sortk: A#G#:S
FetchNode: 2020/08/12 11:09:45.112951  node: lNP8nBgfSxu+2n7/XaCdDQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 11:09:45.113136 ** Cache FetchForUpdate Cache Key Value: [xyq4nASnRWOH270RSS6wRQ==]   sortk: A#
FetchNode: 2020/08/12 11:09:45.113152  node: xyq4nASnRWOH270RSS6wRQ== subKey: A#
DB: 2020/08/12 11:09:45.117189 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.197825ms
FetchForUpdate: 2020/08/12 11:09:45.117240 len(nb): 1
fetchItems: 2020/08/12 11:09:45.117249 +++  Cache FetchItems for sortk A#G#:S UID: [lNP8nBgfSxu+2n7/XaCdDQ==] 
FetchNode: 2020/08/12 11:09:45.117254  node: lNP8nBgfSxu+2n7/XaCdDQ== subKey: A#G#:S
DB: 2020/08/12 11:09:45.120391 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.107257ms
DB: 2020/08/12 11:09:45.125312 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 12.113553ms
FetchForUpdate: 2020/08/12 11:09:45.125441 len(nb): 7
fetchItems: 2020/08/12 11:09:45.125450 +++  Cache FetchItems for sortk A# UID: [xyq4nASnRWOH270RSS6wRQ==] 
FetchNode: 2020/08/12 11:09:45.125455  node: xyq4nASnRWOH270RSS6wRQ== subKey: A#
DB: 2020/08/12 11:09:45.125711 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.229823ms
Unlock: 2020/08/12 11:09:45.125720 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 11:09:45.128770 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.272972ms
GetType:2020/08/12 11:09:45.128921 len(d.m)= 7
GetType: 2020/08/12 11:09:45.128944  A#:A : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.128959  A#:C : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.128980  A#:D : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.128994  A#:N : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.129007  A#G#:F : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.129036  A#G#:S : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.129048  A#T : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 11:09:45.129326 len(d.m)= 7
GetType: 2020/08/12 11:09:45.129368  A#:N : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.129382  A#G#:F : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.129397  A#G#:S : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.129409  A#T : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.129423  A#:A : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.129440  A#:C : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.129452  A#:D : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 11:09:45.129621 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/12 11:09:45.130001 ** Cache FetchForUpdate Cache Key Value: [lNP8nBgfSxu+2n7/XaCdDQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.130011 +++  Cache FetchItems for sortk A#G#:S UID: [lNP8nBgfSxu+2n7/XaCdDQ==] 
FetchNode: 2020/08/12 11:09:45.130016  node: lNP8nBgfSxu+2n7/XaCdDQ== subKey: A#G#:S
DB: 2020/08/12 11:09:45.133983 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.934589ms
DB: 2020/08/12 11:09:45.140549 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.467385ms
DB: 2020/08/12 11:09:45.145499 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.89662ms
DB: 2020/08/12 11:09:45.150614 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.990953ms
DB: 2020/08/12 11:09:45.157169 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.495023ms
DB: 2020/08/12 11:09:45.161969 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.726576ms
DB: 2020/08/12 11:09:45.167028 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.984019ms
DB: 2020/08/12 11:09:45.173520 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.403432ms
DB: 2020/08/12 11:09:45.178419 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.81123ms
DB: 2020/08/12 11:09:45.183325 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.825401ms
Unlock: 2020/08/12 11:09:45.183338 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 11:09:45.188235 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.828645ms
FetchForUpdate: 2020/08/12 11:09:45.188247 ** Cache FetchForUpdate Cache Key Value: [lNP8nBgfSxu+2n7/XaCdDQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.188253 +++  Cache FetchItems for sortk A#G#:S UID: [lNP8nBgfSxu+2n7/XaCdDQ==] 
FetchNode: 2020/08/12 11:09:45.188258  node: lNP8nBgfSxu+2n7/XaCdDQ== subKey: A#G#:S
DB: 2020/08/12 11:09:45.191565 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.273635ms
AttachNode: gr1 2020/08/12 11:09:45.191648 Errored: SetUpredAvailable :for  lNP8nBgfSxu+2n7/XaCdDQ==
Cache: 2020/08/12 11:09:45.191656 In SetUpredAvailable: pUid, tUID:  lNP8nBgfSxu+2n7/XaCdDQ== lNP8nBgfSxu+2n7/XaCdDQ== A#G#:S
Cache: 2020/08/12 11:09:45.191661 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 11:09:45.196959 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.261797ms
Unlock: 2020/08/12 11:09:45.196986 ******* IN UNLOCK NC ********************
DB: 2020/08/12 11:09:45.206160 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 9.091911ms
DB: 2020/08/12 11:09:45.211197 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.956331ms
DB: 2020/08/12 11:09:45.215791 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.508542ms
FetchForUpdate: 2020/08/12 11:09:45.215810 ** Cache FetchForUpdate Cache Key Value: [GuMquEYTQVmlP/TFPFPrFw==]   sortk: A#G#:S
FetchNode: 2020/08/12 11:09:45.215819  node: GuMquEYTQVmlP/TFPFPrFw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 11:09:45.216007 ** Cache FetchForUpdate Cache Key Value: [xyq4nASnRWOH270RSS6wRQ==]   sortk: A#
fetchItems: 2020/08/12 11:09:45.216016 +++  Cache FetchItems for sortk A# UID: [xyq4nASnRWOH270RSS6wRQ==] 
FetchNode: 2020/08/12 11:09:45.216044  node: xyq4nASnRWOH270RSS6wRQ== subKey: A#
DB: 2020/08/12 11:09:45.219408 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.550241ms
FetchForUpdate: 2020/08/12 11:09:45.219451 len(nb): 1
fetchItems: 2020/08/12 11:09:45.219458 +++  Cache FetchItems for sortk A#G#:S UID: [GuMquEYTQVmlP/TFPFPrFw==] 
FetchNode: 2020/08/12 11:09:45.219463  node: GuMquEYTQVmlP/TFPFPrFw== subKey: A#G#:S
DB: 2020/08/12 11:09:45.220375 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 4.274581ms
GetType:2020/08/12 11:09:45.220494 len(d.m)= 7
GetType: 2020/08/12 11:09:45.220515  A#:N : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.220528  A#G#:F : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.220541  A#G#:S : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.220552  A#T : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.220563  A#:A : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.220575  A#:C : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.220596  A#:D : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 11:09:45.220945 len(d.m)= 7
GetType: 2020/08/12 11:09:45.220967  A#:C : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.220979  A#:D : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.220991  A#:N : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.221003  A#G#:F : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.221033  A#G#:S : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.221045  A#T : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.221061  A#:A : &block.DataItem{PKey:[]uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 11:09:45.221226 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 11:09:45.222920 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.427123ms
DB: 2020/08/12 11:09:45.227789 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.78232ms
Unlock: 2020/08/12 11:09:45.227804 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 11:09:45.227835 ** Cache FetchForUpdate Cache Key Value: [GuMquEYTQVmlP/TFPFPrFw==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.227842 +++  Cache FetchItems for sortk A#G#:S UID: [GuMquEYTQVmlP/TFPFPrFw==] 
FetchNode: 2020/08/12 11:09:45.227847  node: GuMquEYTQVmlP/TFPFPrFw== subKey: A#G#:S
DB: 2020/08/12 11:09:45.231021 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.143146ms
DB: 2020/08/12 11:09:45.237706 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.332279ms
DB: 2020/08/12 11:09:45.243566 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.690281ms
DB: 2020/08/12 11:09:45.248903 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.969285ms
DB: 2020/08/12 11:09:45.255582 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.376953ms
DB: 2020/08/12 11:09:45.260719 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.813021ms
DB: 2020/08/12 11:09:45.266155 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.124022ms
DB: 2020/08/12 11:09:45.272714 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.249587ms
DB: 2020/08/12 11:09:45.278716 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.711961ms
DB: 2020/08/12 11:09:45.284001 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.948493ms
Unlock: 2020/08/12 11:09:45.284017 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 11:09:45.289892 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.466129ms
FetchForUpdate: 2020/08/12 11:09:45.289909 ** Cache FetchForUpdate Cache Key Value: [GuMquEYTQVmlP/TFPFPrFw==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.289916 +++  Cache FetchItems for sortk A#G#:S UID: [GuMquEYTQVmlP/TFPFPrFw==] 
FetchNode: 2020/08/12 11:09:45.289921  node: GuMquEYTQVmlP/TFPFPrFw== subKey: A#G#:S
DB: 2020/08/12 11:09:45.294062 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.102373ms
AttachNode: gr1 2020/08/12 11:09:45.294158 Errored: SetUpredAvailable :for  GuMquEYTQVmlP/TFPFPrFw==
Cache: 2020/08/12 11:09:45.294167 In SetUpredAvailable: pUid, tUID:  GuMquEYTQVmlP/TFPFPrFw== GuMquEYTQVmlP/TFPFPrFw== A#G#:S
Cache: 2020/08/12 11:09:45.294172 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 11:09:45.299103 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.89115ms
Unlock: 2020/08/12 11:09:45.299117 ******* IN UNLOCK NC ********************
DB: 2020/08/12 11:09:45.303964 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.737325ms
DB: 2020/08/12 11:09:45.309057 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.876564ms
DB: 2020/08/12 11:09:45.313974 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.734556ms
FetchForUpdate: 2020/08/12 11:09:45.313989 ** Cache FetchForUpdate Cache Key Value: [xyq4nASnRWOH270RSS6wRQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.313996 +++  Cache FetchItems for sortk A#G#:S UID: [xyq4nASnRWOH270RSS6wRQ==] 
FetchNode: 2020/08/12 11:09:45.314000  node: xyq4nASnRWOH270RSS6wRQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 11:09:45.314196 ** Cache FetchForUpdate Cache Key Value: [lNP8nBgfSxu+2n7/XaCdDQ==]   sortk: A#
fetchItems: 2020/08/12 11:09:45.314205 +++  Cache FetchItems for sortk A# UID: [lNP8nBgfSxu+2n7/XaCdDQ==] 
FetchNode: 2020/08/12 11:09:45.314247  node: lNP8nBgfSxu+2n7/XaCdDQ== subKey: A#
DB: 2020/08/12 11:09:45.317126 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.092796ms
DB: 2020/08/12 11:09:45.318462 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.169782ms
GetType:2020/08/12 11:09:45.318625 len(d.m)= 10
GetType: 2020/08/12 11:09:45.318647  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.318664  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.318694  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.318709  A#:C : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.318721  A#:D : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.318732  A#:N : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.318744  A#G#:F : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.318781  A#G#:S : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 11:09:45.318799  A#:A : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.318811  A#T : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 11:09:45.319925 len(d.m)= 10
GetType: 2020/08/12 11:09:45.319955  A#G#:S : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 11:09:45.319970  A#:A : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.319983  A#T : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.319997  A#:N : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.320010  A#G#:F : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.320026  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.320039  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.320052  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.320225  A#:C : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.320263  A#:D : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 11:09:45.320617 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 11:09:45.322222 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.852232ms
Unlock: 2020/08/12 11:09:45.322233 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 11:09:45.322267 ** Cache FetchForUpdate Cache Key Value: [xyq4nASnRWOH270RSS6wRQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.322274 +++  Cache FetchItems for sortk A#G#:S UID: [xyq4nASnRWOH270RSS6wRQ==] 
FetchNode: 2020/08/12 11:09:45.322278  node: xyq4nASnRWOH270RSS6wRQ== subKey: A#G#:S
DB: 2020/08/12 11:09:45.325368 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.059789ms
DB: 2020/08/12 11:09:45.331895 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.43856ms
DB: 2020/08/12 11:09:45.336972 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.976258ms
DB: 2020/08/12 11:09:45.342363 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.973396ms
DB: 2020/08/12 11:09:45.348943 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.284169ms
DB: 2020/08/12 11:09:45.354183 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.922151ms
DB: 2020/08/12 11:09:45.359494 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.988886ms
DB: 2020/08/12 11:09:45.372139 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 12.339895ms
DB: 2020/08/12 11:09:45.377396 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.924519ms
DB: 2020/08/12 11:09:45.384168 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.454745ms
Unlock: 2020/08/12 11:09:45.384179 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 11:09:45.389731 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.039295ms
FetchForUpdate: 2020/08/12 11:09:45.389746 ** Cache FetchForUpdate Cache Key Value: [xyq4nASnRWOH270RSS6wRQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.389753 +++  Cache FetchItems for sortk A#G#:S UID: [xyq4nASnRWOH270RSS6wRQ==] 
FetchNode: 2020/08/12 11:09:45.389758  node: xyq4nASnRWOH270RSS6wRQ== subKey: A#G#:S
DB: 2020/08/12 11:09:45.393021 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.229653ms
AttachNode: gr1 2020/08/12 11:09:45.393139 Errored: SetUpredAvailable :for  xyq4nASnRWOH270RSS6wRQ==
Cache: 2020/08/12 11:09:45.393148 In SetUpredAvailable: pUid, tUID:  xyq4nASnRWOH270RSS6wRQ== xyq4nASnRWOH270RSS6wRQ== A#G#:S
Cache: 2020/08/12 11:09:45.393152 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 11:09:45.398092 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.907504ms
Unlock: 2020/08/12 11:09:45.398101 ******* IN UNLOCK NC ********************
DB: 2020/08/12 11:09:45.403147 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.582567ms
DB: 2020/08/12 11:09:45.408298 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.943912ms
DB: 2020/08/12 11:09:45.415281 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.766668ms
FetchForUpdate: 2020/08/12 11:09:45.415300 ** Cache FetchForUpdate Cache Key Value: [GuMquEYTQVmlP/TFPFPrFw==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.415307 +++  Cache FetchItems for sortk A#G#:S UID: [GuMquEYTQVmlP/TFPFPrFw==] 
FetchNode: 2020/08/12 11:09:45.415312  node: GuMquEYTQVmlP/TFPFPrFw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 11:09:45.415523 ** Cache FetchForUpdate Cache Key Value: [lNP8nBgfSxu+2n7/XaCdDQ==]   sortk: A#
fetchItems: 2020/08/12 11:09:45.415566 +++  Cache FetchItems for sortk A# UID: [lNP8nBgfSxu+2n7/XaCdDQ==] 
FetchNode: 2020/08/12 11:09:45.415579  node: lNP8nBgfSxu+2n7/XaCdDQ== subKey: A#
DB: 2020/08/12 11:09:45.419805 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.44893ms
DB: 2020/08/12 11:09:45.420872 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 5.250028ms
GetType:2020/08/12 11:09:45.421034 len(d.m)= 10
GetType: 2020/08/12 11:09:45.421073  A#G#:S : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 11:09:45.421087  A#:A : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.421099  A#T : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.421112  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.421125  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.421147  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.421160  A#:C : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.421171  A#:D : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.421182  A#:N : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.421194  A#G#:F : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 11:09:45.424241 len(d.m)= 10
GetType: 2020/08/12 11:09:45.424268  A#:N : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.424296  A#G#:F : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.424313  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.424326  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.424347  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.424359  A#:C : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.424371  A#:D : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.424778  A#G#:S : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 11:09:45.424795  A#:A : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.424807  A#T : &block.DataItem{PKey:[]uint8{0x94, 0xd3, 0xfc, 0x9c, 0x18, 0x1f, 0x4b, 0x1b, 0xbe, 0xda, 0x7e, 0xff, 0x5d, 0xa0, 0x9d, 0xd}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 11:09:45.425273 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 11:09:45.425927 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.588861ms
DB: 2020/08/12 11:09:45.430628 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.654977ms
DB: 2020/08/12 11:09:45.430648 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.654977ms
DB: 2020/08/12 11:09:45.435640 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.959914ms
DB: 2020/08/12 11:09:45.435658 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.959914ms
DB: 2020/08/12 11:09:45.440866 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.126438ms
DB: 2020/08/12 11:09:45.445856 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.921764ms
Unlock: 2020/08/12 11:09:45.445868 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 11:09:45.452424 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.46587ms
DB: 2020/08/12 11:09:45.457209 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.719867ms
DB: 2020/08/12 11:09:45.462372 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.0565ms
DB: 2020/08/12 11:09:45.469005 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.574088ms
DB: 2020/08/12 11:09:45.473699 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.637107ms
DB: 2020/08/12 11:09:45.478896 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.890315ms
DB: 2020/08/12 11:09:45.485590 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.382752ms
DB: 2020/08/12 11:09:45.490585 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.699972ms
DB: 2020/08/12 11:09:45.495929 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.038354ms
DB: 2020/08/12 11:09:45.500700 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.715016ms
FetchForUpdate: 2020/08/12 11:09:45.500711 ** Cache FetchForUpdate Cache Key Value: [GuMquEYTQVmlP/TFPFPrFw==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.500718 +++  Cache FetchItems for sortk A#G#:S UID: [GuMquEYTQVmlP/TFPFPrFw==] 
FetchNode: 2020/08/12 11:09:45.500723  node: GuMquEYTQVmlP/TFPFPrFw== subKey: A#G#:S
DB: 2020/08/12 11:09:45.504062 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.308143ms
AttachNode: gr1 2020/08/12 11:09:45.504149 Errored: SetUpredAvailable :for  GuMquEYTQVmlP/TFPFPrFw==
Cache: 2020/08/12 11:09:45.504157 In SetUpredAvailable: pUid, tUID:  GuMquEYTQVmlP/TFPFPrFw== C3XOmhM2SkG+8uevq6z4HQ== A#G#:S
Cache: 2020/08/12 11:09:45.504162 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 11:09:45.508973 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.777752ms
Unlock: 2020/08/12 11:09:45.508986 ******* IN UNLOCK NC ********************
DB: 2020/08/12 11:09:45.513831 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.76219ms
DB: 2020/08/12 11:09:45.518741 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.84582ms
DB: 2020/08/12 11:09:45.523491 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.578906ms
FetchForUpdate: 2020/08/12 11:09:45.523508 ** Cache FetchForUpdate Cache Key Value: [xyq4nASnRWOH270RSS6wRQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.523515 +++  Cache FetchItems for sortk A#G#:S UID: [xyq4nASnRWOH270RSS6wRQ==] 
FetchNode: 2020/08/12 11:09:45.523520  node: xyq4nASnRWOH270RSS6wRQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 11:09:45.523696 ** Cache FetchForUpdate Cache Key Value: [GuMquEYTQVmlP/TFPFPrFw==]   sortk: A#
fetchItems: 2020/08/12 11:09:45.523721 +++  Cache FetchItems for sortk A# UID: [GuMquEYTQVmlP/TFPFPrFw==] 
FetchNode: 2020/08/12 11:09:45.523734  node: GuMquEYTQVmlP/TFPFPrFw== subKey: A#
DB: 2020/08/12 11:09:45.526748 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.196991ms
DB: 2020/08/12 11:09:45.528308 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.509591ms
GetType:2020/08/12 11:09:45.528513 len(d.m)= 10
GetType: 2020/08/12 11:09:45.528534  A#:D : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.528557  A#G#:F : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.528569  A#T : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.528582  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.528611  A#:A : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.528625  A#:C : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.528636  A#:N : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.528654  A#G#:S : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, []uint8{0xb, 0x75, 0xce, 0x9a, 0x13, 0x36, 0x4a, 0x41, 0xbe, 0xf2, 0xe7, 0xaf, 0xab, 0xac, 0xf8, 0x1d}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 11:09:45.528668  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.528680  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 11:09:45.529066 len(d.m)= 10
GetType: 2020/08/12 11:09:45.529084  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.529115  A#:N : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.529134  A#G#:S : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, []uint8{0xb, 0x75, 0xce, 0x9a, 0x13, 0x36, 0x4a, 0x41, 0xbe, 0xf2, 0xe7, 0xaf, 0xab, 0xac, 0xf8, 0x1d}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 11:09:45.529147  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.529160  A#:C : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.529171  A#:D : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.529184  A#G#:F : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.529195  A#T : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.529208  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.529225  A#:A : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 11:09:45.529388 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 11:09:45.531979 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.893009ms
DB: 2020/08/12 11:09:45.536668 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.652267ms
DB: 2020/08/12 11:09:45.536683 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.652267ms
DB: 2020/08/12 11:09:45.541557 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.843179ms
DB: 2020/08/12 11:09:45.541576 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.843179ms
DB: 2020/08/12 11:09:45.546847 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.207661ms
DB: 2020/08/12 11:09:45.551663 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.742562ms
Unlock: 2020/08/12 11:09:45.551674 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 11:09:45.558378 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.619712ms
DB: 2020/08/12 11:09:45.563176 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.731534ms
DB: 2020/08/12 11:09:45.569187 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.62047ms
DB: 2020/08/12 11:09:45.575996 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.492442ms
DB: 2020/08/12 11:09:45.581167 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.863877ms
DB: 2020/08/12 11:09:45.586461 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.946695ms
DB: 2020/08/12 11:09:45.593143 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.372984ms
DB: 2020/08/12 11:09:45.598188 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.73339ms
DB: 2020/08/12 11:09:45.603466 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.970395ms
DB: 2020/08/12 11:09:45.615402 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 11.745219ms
FetchForUpdate: 2020/08/12 11:09:45.615421 ** Cache FetchForUpdate Cache Key Value: [xyq4nASnRWOH270RSS6wRQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.615429 +++  Cache FetchItems for sortk A#G#:S UID: [xyq4nASnRWOH270RSS6wRQ==] 
FetchNode: 2020/08/12 11:09:45.615435  node: xyq4nASnRWOH270RSS6wRQ== subKey: A#G#:S
DB: 2020/08/12 11:09:45.619402 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.932252ms
AttachNode: gr1 2020/08/12 11:09:45.619541 Errored: SetUpredAvailable :for  xyq4nASnRWOH270RSS6wRQ==
Cache: 2020/08/12 11:09:45.619551 In SetUpredAvailable: pUid, tUID:  xyq4nASnRWOH270RSS6wRQ== nfPYyjvyQpi9zLvX5p1DjA== A#G#:S
Cache: 2020/08/12 11:09:45.619565 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 11:09:45.625469 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.869158ms
Unlock: 2020/08/12 11:09:45.625480 ******* IN UNLOCK NC ********************
DB: 2020/08/12 11:09:45.630952 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.950497ms
DB: 2020/08/12 11:09:45.635874 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.849493ms
DB: 2020/08/12 11:09:45.640305 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.361487ms
FetchForUpdate: 2020/08/12 11:09:45.640320 ** Cache FetchForUpdate Cache Key Value: [lNP8nBgfSxu+2n7/XaCdDQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.640326 +++  Cache FetchItems for sortk A#G#:S UID: [lNP8nBgfSxu+2n7/XaCdDQ==] 
FetchNode: 2020/08/12 11:09:45.640330  node: lNP8nBgfSxu+2n7/XaCdDQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 11:09:45.640485 ** Cache FetchForUpdate Cache Key Value: [GuMquEYTQVmlP/TFPFPrFw==]   sortk: A#
fetchItems: 2020/08/12 11:09:45.640494 +++  Cache FetchItems for sortk A# UID: [GuMquEYTQVmlP/TFPFPrFw==] 
FetchNode: 2020/08/12 11:09:45.640505  node: GuMquEYTQVmlP/TFPFPrFw== subKey: A#
DB: 2020/08/12 11:09:45.644025 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.653223ms
DB: 2020/08/12 11:09:45.644974 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.404011ms
GetType:2020/08/12 11:09:45.645134 len(d.m)= 10
GetType: 2020/08/12 11:09:45.645176  A#G#:S : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, []uint8{0xb, 0x75, 0xce, 0x9a, 0x13, 0x36, 0x4a, 0x41, 0xbe, 0xf2, 0xe7, 0xaf, 0xab, 0xac, 0xf8, 0x1d}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 11:09:45.645190  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645202  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645214  A#:N : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645226  A#T : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645247  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645259  A#:A : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645272  A#:C : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645284  A#:D : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645296  A#G#:F : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 11:09:45.645726 len(d.m)= 10
GetType: 2020/08/12 11:09:45.645762  A#T : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645777  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645789  A#:A : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645801  A#:C : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645872  A#:D : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645895  A#G#:F : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 11:09:45.645914  A#G#:S : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xc7, 0x2a, 0xb8, 0x9c, 0x4, 0xa7, 0x45, 0x63, 0x87, 0xdb, 0xbd, 0x11, 0x49, 0x2e, 0xb0, 0x45}, []uint8{0xb, 0x75, 0xce, 0x9a, 0x13, 0x36, 0x4a, 0x41, 0xbe, 0xf2, 0xe7, 0xaf, 0xab, 0xac, 0xf8, 0x1d}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 11:09:45.645926  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645938  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 11:09:45.645949  A#:N : &block.DataItem{PKey:[]uint8{0x1a, 0xe3, 0x2a, 0xb8, 0x46, 0x13, 0x41, 0x59, 0xa5, 0x3f, 0xf4, 0xc5, 0x3c, 0x53, 0xeb, 0x17}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 11:09:45.646289 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 11:09:45.649502 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.071381ms
DB: 2020/08/12 11:09:45.654128 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.588606ms
DB: 2020/08/12 11:09:45.654146 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.588606ms
DB: 2020/08/12 11:09:45.658955 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.77576ms
DB: 2020/08/12 11:09:45.658972 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.77576ms
DB: 2020/08/12 11:09:45.664141 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.964542ms
DB: 2020/08/12 11:09:45.669322 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.991453ms
Unlock: 2020/08/12 11:09:45.669336 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 11:09:45.676329 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.821228ms
DB: 2020/08/12 11:09:45.682426 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.912481ms
DB: 2020/08/12 11:09:45.687629 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.833071ms
DB: 2020/08/12 11:09:45.694439 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.509268ms
DB: 2020/08/12 11:09:45.725902 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 31.149788ms
DB: 2020/08/12 11:09:45.832670 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 106.053719ms
DB: 2020/08/12 11:09:45.839814 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.737275ms
DB: 2020/08/12 11:09:45.844985 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.868037ms
DB: 2020/08/12 11:09:45.850751 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.272632ms
DB: 2020/08/12 11:09:45.856143 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.815071ms
FetchForUpdate: 2020/08/12 11:09:45.856156 ** Cache FetchForUpdate Cache Key Value: [lNP8nBgfSxu+2n7/XaCdDQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 11:09:45.856162 +++  Cache FetchItems for sortk A#G#:S UID: [lNP8nBgfSxu+2n7/XaCdDQ==] 
FetchNode: 2020/08/12 11:09:45.856167  node: lNP8nBgfSxu+2n7/XaCdDQ== subKey: A#G#:S
DB: 2020/08/12 11:09:45.859698 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.497923ms
AttachNode: gr1 2020/08/12 11:09:45.859777 Errored: SetUpredAvailable :for  lNP8nBgfSxu+2n7/XaCdDQ==
Cache: 2020/08/12 11:09:45.859784 In SetUpredAvailable: pUid, tUID:  lNP8nBgfSxu+2n7/XaCdDQ== 4b3RfA94QLep92JvJSbR4w== A#G#:S
Cache: 2020/08/12 11:09:45.859789 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 11:09:45.864734 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.893129ms
Unlock: 2020/08/12 11:09:45.864744 ******* IN UNLOCK NC ********************
DB: 2020/08/12 11:09:45.870089 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.792368ms
rdfLoader: 2020/08/12 11:09:45.870153 saveNode finished waiting...exiting
grmgr: 2020/08/12 11:09:45.870174 Powering down...
rdfuuid: 2020/08/12 11:09:45.870188 Powering down...
DB:2020/08/12 22:30:41 log.go:18: ===============================================================================
grmgr: 2020/08/12 22:30:41.570226 Powering on...
rdfLoader: 2020/08/12 22:30:41.570287 verify started....xx.
rdfLoader: 2020/08/12 22:30:41.570296 saveNode started......
rdfuuid: 2020/08/12 22:30:41.570307 Powering on...
rdfLoader: 2020/08/12 22:30:41.570314 *************** All started 
rdfLoader: 2020/08/12 22:30:41.578963 .  getType..
rdfLoader: 2020/08/12 22:30:41.578973 node.TyName : [Person]
DB: 2020/08/12 22:30:41.651363 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 72.336622ms
verify: 2020/08/12 22:30:41.651523 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 22:30:41.651577 Find Ty Address
rdfLoader: 2020/08/12 22:30:41.651583 Find Ty Age
rdfLoader: 2020/08/12 22:30:41.651589 Find Ty Cars
rdfLoader: 2020/08/12 22:30:41.651594 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:30:41.651599 Add to SS . [Alfa]
rdfLoader: 2020/08/12 22:30:41.651603 Find Ty DOB
rdfLoader: 2020/08/12 22:30:41.651608 Find Ty Friends
rdfLoader: 2020/08/12 22:30:41.651612 Find Ty Jobs
rdfLoader: 2020/08/12 22:30:41.651616 Find Ty Name
rdfLoader: 2020/08/12 22:30:41.651621 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:30:41.651637 Find Ty Siblings
rdfLoader: 2020/08/12 22:30:41.651646 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:30:41.651677 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:30:41.651682 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:30:41.651708 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.651715 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.651721 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.651727 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.651732 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.651738 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.651744 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:30:41.651747 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:30:41.651754 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000017440)}
SaveRDFNode: 2020/08/12 22:30:41.651759 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:30:41.651768 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.651772 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.651778 UID received  : IbljfXLER+ye+LyC+OYVcA==
verify: 2020/08/12 22:30:41.651992 *** Verify running...... 1
rdfLoader: 2020/08/12 22:30:41.652000 .  getType..
rdfLoader: 2020/08/12 22:30:41.652004 node.TyName : [Person]
verify: 2020/08/12 22:30:41.652024 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 22:30:41.652083 Find Ty Address
rdfLoader: 2020/08/12 22:30:41.652088 Find Ty Age
rdfLoader: 2020/08/12 22:30:41.652094 Find Ty Cars
rdfLoader: 2020/08/12 22:30:41.652099 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:30:41.652108 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 22:30:41.652112 Find Ty DOB
rdfLoader: 2020/08/12 22:30:41.652116 Find Ty Friends
rdfLoader: 2020/08/12 22:30:41.652120 Find Ty Jobs
rdfLoader: 2020/08/12 22:30:41.652124 Find Ty Name
rdfLoader: 2020/08/12 22:30:41.652128 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:30:41.652132 Find Ty Siblings
rdfLoader: 2020/08/12 22:30:41.652141 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:30:41.652167 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:30:41.652172 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:30:41.652197 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.652203 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.652209 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.652214 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.652221 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.652226 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.652232 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:30:41.652236 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:30:41.652241 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017920)}
SaveRDFNode: 2020/08/12 22:30:41.652245 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:30:41.652252 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.652256 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.652261 UID received  : f9yJtsWpRIuXOEiJMtW1sw==
verify: 2020/08/12 22:30:41.653575 *** Verify running...... 1
rdfLoader: 2020/08/12 22:30:41.655586 .  getType..
rdfLoader: 2020/08/12 22:30:41.655597 node.TyName : [Person]
verify: 2020/08/12 22:30:41.656003 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 22:30:41.656719 Find Ty Address
rdfLoader: 2020/08/12 22:30:41.656728 Find Ty Age
rdfLoader: 2020/08/12 22:30:41.656734 Find Ty Cars
rdfLoader: 2020/08/12 22:30:41.656740 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 22:30:41.656744 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 22:30:41.656749 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:30:41.656753 Find Ty DOB
rdfLoader: 2020/08/12 22:30:41.656757 Find Ty Friends
rdfLoader: 2020/08/12 22:30:41.656761 Find Ty Jobs
rdfLoader: 2020/08/12 22:30:41.656765 Find Ty Name
rdfLoader: 2020/08/12 22:30:41.656769 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:30:41.656773 Find Ty Siblings
rdfLoader: 2020/08/12 22:30:41.656784 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:30:41.656817 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:30:41.656823 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:30:41.656860 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.656870 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.656875 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.656881 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.656886 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.656898 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.656904 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:30:41.656908 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:30:41.656913 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc00037e4e0)}
SaveRDFNode: 2020/08/12 22:30:41.656918 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:30:41.656925 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.656929 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.656935 UID received  : WKj2251ATmeLeTLUKtv34g==
verify: 2020/08/12 22:30:41.657314 *** Verify running...... 2
rdfLoader: 2020/08/12 22:30:41.657350 .  getType..
rdfLoader: 2020/08/12 22:30:41.657354 node.TyName : [Person]
verify: 2020/08/12 22:30:41.657674 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 22:30:41.658157 Find Ty Address
rdfLoader: 2020/08/12 22:30:41.658167 Find Ty Age
rdfLoader: 2020/08/12 22:30:41.658173 Find Ty Cars
rdfLoader: 2020/08/12 22:30:41.658178 Add to SS . [Bentley]
rdfLoader: 2020/08/12 22:30:41.658183 Find Ty DOB
rdfLoader: 2020/08/12 22:30:41.658187 Find Ty Friends
rdfLoader: 2020/08/12 22:30:41.658191 Find Ty Jobs
rdfLoader: 2020/08/12 22:30:41.658195 Find Ty Name
rdfLoader: 2020/08/12 22:30:41.658199 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:30:41.658203 Find Ty Siblings
rdfLoader: 2020/08/12 22:30:41.658227 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:30:41.658252 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:30:41.658257 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:30:41.658278 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.658285 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.658291 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.658297 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.658302 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.658308 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:30:41.658313 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:30:41.658317 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:30:41.658323 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc00037ecc0)}
SaveRDFNode: 2020/08/12 22:30:41.658327 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:30:41.658334 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.658339 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.658344 UID received  : 4iR5bxycRwCP9agVYYPrgw==
verify: 2020/08/12 22:30:41.658732 *** Verify running...... 2
verify: 2020/08/12 22:30:41.658748 verify exited.....
DB: 2020/08/12 22:30:41.661751 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 9.941619ms
DB: 2020/08/12 22:30:41.668045 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.748035ms
DB: 2020/08/12 22:30:41.673586 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 15.211072ms
DB: 2020/08/12 22:30:41.678480 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.852081ms
DB: 2020/08/12 22:30:41.682061 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.083809ms
DB: 2020/08/12 22:30:41.686657 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.552797ms
DB: 2020/08/12 22:30:41.688517 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 26.728632ms
DB: 2020/08/12 22:30:41.690517 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 22.435273ms
DB: 2020/08/12 22:30:41.691302 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.606828ms
DB: 2020/08/12 22:30:41.693211 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.662727ms
DB: 2020/08/12 22:30:41.695295 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.746676ms
DB: 2020/08/12 22:30:41.695928 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.591295ms
DB: 2020/08/12 22:30:41.697959 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.716776ms
DB: 2020/08/12 22:30:41.699941 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 21.42648ms
DB: 2020/08/12 22:30:41.700150 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.818777ms
DB: 2020/08/12 22:30:41.700483 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.525513ms
SaveRDFNode: 2020/08/12 22:30:41.700497 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037e4e0)}
rdfUIDdb: 2020/08/12 22:30:41.700505 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.700509 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.700516 Received UID: X18=
SaveRDFNode: 2020/08/12 22:30:41.700530 a: = db.Item{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:30:41.702806 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.813923ms
SaveRDFNode: 2020/08/12 22:30:41.702820 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 22:30:41.702825 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.702829 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.702835 Received UID: X18=
SaveRDFNode: 2020/08/12 22:30:41.702846 a: = db.Item{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:30:41.704786 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.603147ms
SaveRDFNode: 2020/08/12 22:30:41.704802 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 22:30:41.704808 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.704812 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.704818 Received UID: X18=
SaveRDFNode: 2020/08/12 22:30:41.704829 a: = db.Item{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:30:41.705155 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.180011ms
DB: 2020/08/12 22:30:41.705411 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.849004ms
SaveRDFNode: 2020/08/12 22:30:41.705428 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037e4e0)}
rdfUIDdb: 2020/08/12 22:30:41.705434 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.705437 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.705443 Received UID: X18=
SaveRDFNode: 2020/08/12 22:30:41.705453 a: = db.Item{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:30:41.707735 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.860701ms
SaveRDFNode: 2020/08/12 22:30:41.707748 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/12 22:30:41.707753 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.707757 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.707763 Received UID: X18=
SaveRDFNode: 2020/08/12 22:30:41.707773 a: = db.Item{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:30:41.709535 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.633046ms
SaveRDFNode: 2020/08/12 22:30:41.709547 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/12 22:30:41.709552 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.709556 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.709561 Received UID: X18=
SaveRDFNode: 2020/08/12 22:30:41.709571 a: = db.Item{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:30:41.710249 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.762984ms
SaveRDFNode: 2020/08/12 22:30:41.710259 Returned.+++++++++++ No error
DB: 2020/08/12 22:30:41.710382 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.198173ms
SaveRDFNode: 2020/08/12 22:30:41.710393 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037ecc0)}
rdfUIDdb: 2020/08/12 22:30:41.710399 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.710403 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.710408 Received UID: X18=
SaveRDFNode: 2020/08/12 22:30:41.710418 a: = db.Item{PKey:[]uint8{0xe2, 0x24, 0x79, 0x6f, 0x1c, 0x9c, 0x47, 0x0, 0x8f, 0xf5, 0xa8, 0x15, 0x61, 0x83, 0xeb, 0x83}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:30:41.714502 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.903901ms
SaveRDFNode: 2020/08/12 22:30:41.714513 Returned.+++++++++++ No error
DB: 2020/08/12 22:30:41.714746 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.945017ms
SaveRDFNode: 2020/08/12 22:30:41.714754 Returned.+++++++++++ No error
DB: 2020/08/12 22:30:41.715058 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.608255ms
SaveRDFNode: 2020/08/12 22:30:41.715070 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037ecc0)}
rdfUIDdb: 2020/08/12 22:30:41.715076 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:30:41.715087 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:30:41.715093 Received UID: X18=
SaveRDFNode: 2020/08/12 22:30:41.715103 a: = db.Item{PKey:[]uint8{0xe2, 0x24, 0x79, 0x6f, 0x1c, 0x9c, 0x47, 0x0, 0x8f, 0xf5, 0xa8, 0x15, 0x61, 0x83, 0xeb, 0x83}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:30:41.719696 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.541774ms
SaveRDFNode: 2020/08/12 22:30:41.719706 Returned.+++++++++++ No error
DB: 2020/08/12 22:30:41.723471 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.726601 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.729315 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.732948 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.737811 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.808068ms
DB: 2020/08/12 22:30:41.745544 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.204825ms
FetchForUpdate: 2020/08/12 22:30:41.745559 ** Cache FetchForUpdate Cache Key Value: [f9yJtsWpRIuXOEiJMtW1sw==]   sortk: A#G#:S
FetchNode: 2020/08/12 22:30:41.745565  node: f9yJtsWpRIuXOEiJMtW1sw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:30:41.745745 ** Cache FetchForUpdate Cache Key Value: [IbljfXLER+ye+LyC+OYVcA==]   sortk: A#
FetchNode: 2020/08/12 22:30:41.745761  node: IbljfXLER+ye+LyC+OYVcA== subKey: A#
DB: 2020/08/12 22:30:41.749587 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.990641ms
FetchForUpdate: 2020/08/12 22:30:41.749632 len(nb): 1
fetchItems: 2020/08/12 22:30:41.749659 +++  Cache FetchItems for sortk A#G#:S UID: [f9yJtsWpRIuXOEiJMtW1sw==] 
FetchNode: 2020/08/12 22:30:41.749663  node: f9yJtsWpRIuXOEiJMtW1sw== subKey: A#G#:S
DB: 2020/08/12 22:30:41.752401 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.710228ms
DB: 2020/08/12 22:30:41.757791 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.809808ms
Unlock: 2020/08/12 22:30:41.757802 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:30:41.765188 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 19.385185ms
FetchForUpdate: 2020/08/12 22:30:41.765329 len(nb): 7
fetchItems: 2020/08/12 22:30:41.765339 +++  Cache FetchItems for sortk A# UID: [IbljfXLER+ye+LyC+OYVcA==] 
FetchNode: 2020/08/12 22:30:41.765343  node: IbljfXLER+ye+LyC+OYVcA== subKey: A#
DB: 2020/08/12 22:30:41.770441 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 5.068091ms
GetType:2020/08/12 22:30:41.770572 len(d.m)= 7
GetType: 2020/08/12 22:30:41.770593  A#:N : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.770607  A#G#:F : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:41.770623  A#G#:S : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:41.770644  A#T : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.770658  A#:A : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.770670  A#:C : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.770681  A#:D : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:30:41.772348 len(d.m)= 7
GetType: 2020/08/12 22:30:41.772377  A#G#:F : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:41.772391  A#G#:S : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:41.772406  A#T : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.772418  A#:A : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.772438  A#:C : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.772473  A#:D : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.772487  A#:N : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:30:41.774127 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/12 22:30:41.774487 ** Cache FetchForUpdate Cache Key Value: [f9yJtsWpRIuXOEiJMtW1sw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:41.774497 +++  Cache FetchItems for sortk A#G#:S UID: [f9yJtsWpRIuXOEiJMtW1sw==] 
FetchNode: 2020/08/12 22:30:41.774503  node: f9yJtsWpRIuXOEiJMtW1sw== subKey: A#G#:S
DB: 2020/08/12 22:30:41.777985 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.446761ms
DB: 2020/08/12 22:30:41.784571 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.223088ms
DB: 2020/08/12 22:30:41.789878 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.048762ms
DB: 2020/08/12 22:30:41.795737 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.240691ms
DB: 2020/08/12 22:30:41.802305 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.096016ms
DB: 2020/08/12 22:30:41.807796 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.052099ms
DB: 2020/08/12 22:30:41.813766 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.489609ms
DB: 2020/08/12 22:30:41.821237 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.037735ms
DB: 2020/08/12 22:30:41.826723 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.081568ms
DB: 2020/08/12 22:30:41.833404 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.220066ms
Unlock: 2020/08/12 22:30:41.833415 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:30:41.839334 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.424321ms
FetchForUpdate: 2020/08/12 22:30:41.839346 ** Cache FetchForUpdate Cache Key Value: [f9yJtsWpRIuXOEiJMtW1sw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:41.839352 +++  Cache FetchItems for sortk A#G#:S UID: [f9yJtsWpRIuXOEiJMtW1sw==] 
FetchNode: 2020/08/12 22:30:41.839357  node: f9yJtsWpRIuXOEiJMtW1sw== subKey: A#G#:S
DB: 2020/08/12 22:30:41.843133 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.740116ms
AttachNode: gr1 2020/08/12 22:30:41.843234 Errored: SetUpredAvailable :for  f9yJtsWpRIuXOEiJMtW1sw==
Cache: 2020/08/12 22:30:41.843243 In SetUpredAvailable: pUid, tUID:  f9yJtsWpRIuXOEiJMtW1sw== f9yJtsWpRIuXOEiJMtW1sw== A#G#:S
Cache: 2020/08/12 22:30:41.843247 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:30:41.848766 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.483054ms
Unlock: 2020/08/12 22:30:41.848786 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:30:41.857280 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 8.062232ms
DB: 2020/08/12 22:30:41.860524 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.864136 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.868362 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.872575 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.878093 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.465808ms
DB: 2020/08/12 22:30:41.883383 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.029654ms
FetchForUpdate: 2020/08/12 22:30:41.883399 ** Cache FetchForUpdate Cache Key Value: [WKj2251ATmeLeTLUKtv34g==]   sortk: A#G#:S
FetchNode: 2020/08/12 22:30:41.883405  node: WKj2251ATmeLeTLUKtv34g== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:30:41.883612 ** Cache FetchForUpdate Cache Key Value: [IbljfXLER+ye+LyC+OYVcA==]   sortk: A#
fetchItems: 2020/08/12 22:30:41.883622 +++  Cache FetchItems for sortk A# UID: [IbljfXLER+ye+LyC+OYVcA==] 
FetchNode: 2020/08/12 22:30:41.883635  node: IbljfXLER+ye+LyC+OYVcA== subKey: A#
DB: 2020/08/12 22:30:41.886897 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.197899ms
GetType:2020/08/12 22:30:41.887023 len(d.m)= 7
GetType: 2020/08/12 22:30:41.887043  A#:A : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.887056  A#:C : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.887068  A#:D : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.887080  A#:N : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.887093  A#G#:F : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:41.887106  A#G#:S : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:41.887148  A#T : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:30:41.887763 len(d.m)= 7
GetType: 2020/08/12 22:30:41.887783  A#:A : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.887796  A#:C : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.887807  A#:D : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.887817  A#:N : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:41.887867  A#G#:F : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:41.887879  A#G#:S : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:41.887891  A#T : &block.DataItem{PKey:[]uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:30:41.888215 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:30:41.888706 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.249953ms
FetchForUpdate: 2020/08/12 22:30:41.888737 len(nb): 1
fetchItems: 2020/08/12 22:30:41.888744 +++  Cache FetchItems for sortk A#G#:S UID: [WKj2251ATmeLeTLUKtv34g==] 
FetchNode: 2020/08/12 22:30:41.888754  node: WKj2251ATmeLeTLUKtv34g== subKey: A#G#:S
DB: 2020/08/12 22:30:41.892703 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.920892ms
DB: 2020/08/12 22:30:41.898428 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.401856ms
Unlock: 2020/08/12 22:30:41.898439 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 22:30:41.898706 ** Cache FetchForUpdate Cache Key Value: [WKj2251ATmeLeTLUKtv34g==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:41.898717 +++  Cache FetchItems for sortk A#G#:S UID: [WKj2251ATmeLeTLUKtv34g==] 
FetchNode: 2020/08/12 22:30:41.898722  node: WKj2251ATmeLeTLUKtv34g== subKey: A#G#:S
DB: 2020/08/12 22:30:41.903168 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.412732ms
DB: 2020/08/12 22:30:41.909950 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.236666ms
DB: 2020/08/12 22:30:41.915212 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.012815ms
DB: 2020/08/12 22:30:41.921205 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.430349ms
DB: 2020/08/12 22:30:41.927563 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.852163ms
DB: 2020/08/12 22:30:41.933431 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.4353ms
DB: 2020/08/12 22:30:41.939389 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.471244ms
DB: 2020/08/12 22:30:41.945875 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.9641ms
DB: 2020/08/12 22:30:41.951569 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.266783ms
DB: 2020/08/12 22:30:41.957763 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.723487ms
Unlock: 2020/08/12 22:30:41.957775 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:30:41.963798 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.535886ms
FetchForUpdate: 2020/08/12 22:30:41.963811 ** Cache FetchForUpdate Cache Key Value: [WKj2251ATmeLeTLUKtv34g==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:41.963817 +++  Cache FetchItems for sortk A#G#:S UID: [WKj2251ATmeLeTLUKtv34g==] 
FetchNode: 2020/08/12 22:30:41.963822  node: WKj2251ATmeLeTLUKtv34g== subKey: A#G#:S
DB: 2020/08/12 22:30:41.967566 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.710742ms
AttachNode: gr1 2020/08/12 22:30:41.967643 Errored: SetUpredAvailable :for  WKj2251ATmeLeTLUKtv34g==
Cache: 2020/08/12 22:30:41.967666 In SetUpredAvailable: pUid, tUID:  WKj2251ATmeLeTLUKtv34g== WKj2251ATmeLeTLUKtv34g== A#G#:S
Cache: 2020/08/12 22:30:41.967670 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:30:41.972912 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.209185ms
Unlock: 2020/08/12 22:30:41.972922 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:30:41.978866 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.563322ms
DB: 2020/08/12 22:30:41.983093 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.986222 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.989882 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:41.993195 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.000864 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 7.616171ms
DB: 2020/08/12 22:30:42.006215 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.030586ms
FetchForUpdate: 2020/08/12 22:30:42.006230 ** Cache FetchForUpdate Cache Key Value: [IbljfXLER+ye+LyC+OYVcA==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.006236 +++  Cache FetchItems for sortk A#G#:S UID: [IbljfXLER+ye+LyC+OYVcA==] 
FetchNode: 2020/08/12 22:30:42.006241  node: IbljfXLER+ye+LyC+OYVcA== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:30:42.006403 ** Cache FetchForUpdate Cache Key Value: [f9yJtsWpRIuXOEiJMtW1sw==]   sortk: A#
fetchItems: 2020/08/12 22:30:42.006412 +++  Cache FetchItems for sortk A# UID: [f9yJtsWpRIuXOEiJMtW1sw==] 
FetchNode: 2020/08/12 22:30:42.006424  node: f9yJtsWpRIuXOEiJMtW1sw== subKey: A#
DB: 2020/08/12 22:30:42.009947 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.670808ms
DB: 2020/08/12 22:30:42.010956 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.454508ms
GetType:2020/08/12 22:30:42.011127 len(d.m)= 10
GetType: 2020/08/12 22:30:42.011150  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.011168  A#:A : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.011184  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.011196  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.011219  A#:D : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.011233  A#:N : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.011245  A#G#:F : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:42.011268  A#T : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.011283  A#G#:S : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:30:42.011298  A#:C : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:30:42.012143 len(d.m)= 10
GetType: 2020/08/12 22:30:42.012185  A#G#:S : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:30:42.012200  A#:C : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.012212  A#:D : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.012223  A#:N : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.012234  A#G#:F : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:42.012251  A#T : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.012264  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.012277  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.012289  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.012301  A#:A : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:30:42.012600 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:30:42.015287 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.230829ms
Unlock: 2020/08/12 22:30:42.015297 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 22:30:42.015639 ** Cache FetchForUpdate Cache Key Value: [IbljfXLER+ye+LyC+OYVcA==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.015649 +++  Cache FetchItems for sortk A#G#:S UID: [IbljfXLER+ye+LyC+OYVcA==] 
FetchNode: 2020/08/12 22:30:42.015654  node: IbljfXLER+ye+LyC+OYVcA== subKey: A#G#:S
DB: 2020/08/12 22:30:42.019351 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.664796ms
DB: 2020/08/12 22:30:42.026957 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.016649ms
DB: 2020/08/12 22:30:42.032267 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.058306ms
DB: 2020/08/12 22:30:42.038190 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.357487ms
DB: 2020/08/12 22:30:42.045279 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.612581ms
DB: 2020/08/12 22:30:42.050908 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.227636ms
DB: 2020/08/12 22:30:42.056962 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.555417ms
DB: 2020/08/12 22:30:42.065066 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.5716ms
DB: 2020/08/12 22:30:42.072110 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.627398ms
DB: 2020/08/12 22:30:42.078590 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.989036ms
Unlock: 2020/08/12 22:30:42.078604 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:30:42.084751 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.487413ms
FetchForUpdate: 2020/08/12 22:30:42.084770 ** Cache FetchForUpdate Cache Key Value: [IbljfXLER+ye+LyC+OYVcA==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.084777 +++  Cache FetchItems for sortk A#G#:S UID: [IbljfXLER+ye+LyC+OYVcA==] 
FetchNode: 2020/08/12 22:30:42.084782  node: IbljfXLER+ye+LyC+OYVcA== subKey: A#G#:S
DB: 2020/08/12 22:30:42.089433 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.610782ms
AttachNode: gr1 2020/08/12 22:30:42.089541 Errored: SetUpredAvailable :for  IbljfXLER+ye+LyC+OYVcA==
Cache: 2020/08/12 22:30:42.089551 In SetUpredAvailable: pUid, tUID:  IbljfXLER+ye+LyC+OYVcA== IbljfXLER+ye+LyC+OYVcA== A#G#:S
Cache: 2020/08/12 22:30:42.089555 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:30:42.094955 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.361791ms
Unlock: 2020/08/12 22:30:42.094969 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:30:42.100045 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.978899ms
DB: 2020/08/12 22:30:42.103742 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.107035 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.110698 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.114000 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.119720 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.66389ms
DB: 2020/08/12 22:30:42.125017 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.989318ms
FetchForUpdate: 2020/08/12 22:30:42.125033 ** Cache FetchForUpdate Cache Key Value: [WKj2251ATmeLeTLUKtv34g==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.125040 +++  Cache FetchItems for sortk A#G#:S UID: [WKj2251ATmeLeTLUKtv34g==] 
FetchNode: 2020/08/12 22:30:42.125045  node: WKj2251ATmeLeTLUKtv34g== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:30:42.125234 ** Cache FetchForUpdate Cache Key Value: [f9yJtsWpRIuXOEiJMtW1sw==]   sortk: A#
fetchItems: 2020/08/12 22:30:42.125244 +++  Cache FetchItems for sortk A# UID: [f9yJtsWpRIuXOEiJMtW1sw==] 
FetchNode: 2020/08/12 22:30:42.125289  node: f9yJtsWpRIuXOEiJMtW1sw== subKey: A#
DB: 2020/08/12 22:30:42.129036 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.951995ms
DB: 2020/08/12 22:30:42.130123 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.781473ms
GetType:2020/08/12 22:30:42.130290 len(d.m)= 10
GetType: 2020/08/12 22:30:42.130311  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.130326  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.130349  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.130361  A#:A : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.130377  A#G#:S : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:30:42.130389  A#:C : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.130418  A#:D : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.130433  A#:N : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.130445  A#G#:F : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:42.130456  A#T : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:30:42.131401 len(d.m)= 10
GetType: 2020/08/12 22:30:42.131444  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.131467  A#:A : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.131480  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.131492  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.131503  A#:D : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.131514  A#:N : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.131526  A#G#:F : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:42.131537  A#T : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.131553  A#G#:S : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:30:42.131566  A#:C : &block.DataItem{PKey:[]uint8{0x7f, 0xdc, 0x89, 0xb6, 0xc5, 0xa9, 0x44, 0x8b, 0x97, 0x38, 0x48, 0x89, 0x32, 0xd5, 0xb5, 0xb3}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:30:42.131893 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:30:42.135157 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.614199ms
DB: 2020/08/12 22:30:42.140340 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.150799ms
DB: 2020/08/12 22:30:42.140356 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.150799ms
DB: 2020/08/12 22:30:42.145738 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.346478ms
DB: 2020/08/12 22:30:42.145758 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.346478ms
DB: 2020/08/12 22:30:42.154585 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 8.507724ms
DB: 2020/08/12 22:30:42.160631 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.692048ms
Unlock: 2020/08/12 22:30:42.160647 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:30:42.167722 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.095587ms
DB: 2020/08/12 22:30:42.173776 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.732076ms
DB: 2020/08/12 22:30:42.180250 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.802008ms
DB: 2020/08/12 22:30:42.187746 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.018874ms
DB: 2020/08/12 22:30:42.193462 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.211475ms
DB: 2020/08/12 22:30:42.201941 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 8.1362ms
DB: 2020/08/12 22:30:42.209058 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.377978ms
DB: 2020/08/12 22:30:42.214649 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.517884ms
DB: 2020/08/12 22:30:42.219948 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.227373ms
DB: 2020/08/12 22:30:42.225485 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.480626ms
FetchForUpdate: 2020/08/12 22:30:42.225497 ** Cache FetchForUpdate Cache Key Value: [WKj2251ATmeLeTLUKtv34g==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.225504 +++  Cache FetchItems for sortk A#G#:S UID: [WKj2251ATmeLeTLUKtv34g==] 
FetchNode: 2020/08/12 22:30:42.225509  node: WKj2251ATmeLeTLUKtv34g== subKey: A#G#:S
DB: 2020/08/12 22:30:42.229215 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.657632ms
AttachNode: gr1 2020/08/12 22:30:42.229317 Errored: SetUpredAvailable :for  WKj2251ATmeLeTLUKtv34g==
Cache: 2020/08/12 22:30:42.229326 In SetUpredAvailable: pUid, tUID:  WKj2251ATmeLeTLUKtv34g== GXJJwsFlS3Os5d73T0G1mg== A#G#:S
Cache: 2020/08/12 22:30:42.229330 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:30:42.235270 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.905862ms
Unlock: 2020/08/12 22:30:42.235281 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:30:42.240999 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.616055ms
DB: 2020/08/12 22:30:42.245278 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.248905 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.252818 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.256814 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.262355 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.476852ms
DB: 2020/08/12 22:30:42.267769 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.179554ms
FetchForUpdate: 2020/08/12 22:30:42.267789 ** Cache FetchForUpdate Cache Key Value: [IbljfXLER+ye+LyC+OYVcA==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.267795 +++  Cache FetchItems for sortk A#G#:S UID: [IbljfXLER+ye+LyC+OYVcA==] 
FetchNode: 2020/08/12 22:30:42.267800  node: IbljfXLER+ye+LyC+OYVcA== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:30:42.267993 ** Cache FetchForUpdate Cache Key Value: [WKj2251ATmeLeTLUKtv34g==]   sortk: A#
fetchItems: 2020/08/12 22:30:42.268002 +++  Cache FetchItems for sortk A# UID: [WKj2251ATmeLeTLUKtv34g==] 
FetchNode: 2020/08/12 22:30:42.268032  node: WKj2251ATmeLeTLUKtv34g== subKey: A#
DB: 2020/08/12 22:30:42.271728 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.891709ms
DB: 2020/08/12 22:30:42.272406 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.328588ms
GetType:2020/08/12 22:30:42.272548 len(d.m)= 10
GetType: 2020/08/12 22:30:42.272568  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272581  A#:A : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272595  A#:C : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272606  A#:D : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272618  A#:N : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272630  A#G#:F : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:42.272652  A#T : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272670  A#G#:S : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, []uint8{0x19, 0x72, 0x49, 0xc2, 0xc1, 0x65, 0x4b, 0x73, 0xac, 0xe5, 0xde, 0xf7, 0x4f, 0x41, 0xb5, 0x9a}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:30:42.272684  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272696  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:30:42.272721 len(d.m)= 10
GetType: 2020/08/12 22:30:42.272745  A#G#:S : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, []uint8{0x19, 0x72, 0x49, 0xc2, 0xc1, 0x65, 0x4b, 0x73, 0xac, 0xe5, 0xde, 0xf7, 0x4f, 0x41, 0xb5, 0x9a}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:30:42.272757  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272769  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272780  A#:D : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272794  A#:N : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272809  A#G#:F : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:42.272821  A#T : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272841  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272853  A#:A : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.272866  A#:C : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:30:42.272882 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:30:42.278341 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.45556ms
DB: 2020/08/12 22:30:42.283553 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.179098ms
DB: 2020/08/12 22:30:42.283568 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.179098ms
DB: 2020/08/12 22:30:42.288676 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.073567ms
DB: 2020/08/12 22:30:42.288691 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.073567ms
DB: 2020/08/12 22:30:42.311566 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 22.687154ms
DB: 2020/08/12 22:30:42.317685 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.933065ms
Unlock: 2020/08/12 22:30:42.317696 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:30:42.325918 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.51716ms
DB: 2020/08/12 22:30:42.332686 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.577154ms
DB: 2020/08/12 22:30:42.338472 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.399245ms
DB: 2020/08/12 22:30:42.344931 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.138873ms
DB: 2020/08/12 22:30:42.350516 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.144648ms
DB: 2020/08/12 22:30:42.356556 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.560635ms
DB: 2020/08/12 22:30:42.363187 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.163287ms
DB: 2020/08/12 22:30:42.368923 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.321801ms
DB: 2020/08/12 22:30:42.374944 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.542419ms
DB: 2020/08/12 22:30:42.380379 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.192275ms
FetchForUpdate: 2020/08/12 22:30:42.380390 ** Cache FetchForUpdate Cache Key Value: [IbljfXLER+ye+LyC+OYVcA==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.380396 +++  Cache FetchItems for sortk A#G#:S UID: [IbljfXLER+ye+LyC+OYVcA==] 
FetchNode: 2020/08/12 22:30:42.380400  node: IbljfXLER+ye+LyC+OYVcA== subKey: A#G#:S
DB: 2020/08/12 22:30:42.385001 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.568783ms
AttachNode: gr1 2020/08/12 22:30:42.385110 Errored: SetUpredAvailable :for  IbljfXLER+ye+LyC+OYVcA==
Cache: 2020/08/12 22:30:42.385119 In SetUpredAvailable: pUid, tUID:  IbljfXLER+ye+LyC+OYVcA== 44LGJe0fRMy8u1p4D0eM8A== A#G#:S
Cache: 2020/08/12 22:30:42.385123 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:30:42.390806 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.64808ms
Unlock: 2020/08/12 22:30:42.390816 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:30:42.396739 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.452935ms
DB: 2020/08/12 22:30:42.400009 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.405544 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.409082 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.412666 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:30:42.418048 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.32602ms
DB: 2020/08/12 22:30:42.423553 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.161028ms
FetchForUpdate: 2020/08/12 22:30:42.423575 ** Cache FetchForUpdate Cache Key Value: [f9yJtsWpRIuXOEiJMtW1sw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.423582 +++  Cache FetchItems for sortk A#G#:S UID: [f9yJtsWpRIuXOEiJMtW1sw==] 
FetchNode: 2020/08/12 22:30:42.423606  node: f9yJtsWpRIuXOEiJMtW1sw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:30:42.423856 ** Cache FetchForUpdate Cache Key Value: [WKj2251ATmeLeTLUKtv34g==]   sortk: A#
fetchItems: 2020/08/12 22:30:42.423866 +++  Cache FetchItems for sortk A# UID: [WKj2251ATmeLeTLUKtv34g==] 
FetchNode: 2020/08/12 22:30:42.423878  node: WKj2251ATmeLeTLUKtv34g== subKey: A#
DB: 2020/08/12 22:30:42.428140 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.178179ms
GetType:2020/08/12 22:30:42.428335 len(d.m)= 10
GetType: 2020/08/12 22:30:42.428367  A#T : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.428402  A#G#:S : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, []uint8{0x19, 0x72, 0x49, 0xc2, 0xc1, 0x65, 0x4b, 0x73, 0xac, 0xe5, 0xde, 0xf7, 0x4f, 0x41, 0xb5, 0x9a}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:30:42.428421  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.428436  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.428448  A#:D : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.428459  A#:N : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.428472  A#G#:F : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:42.428484  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.428494  A#:A : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.428515  A#:C : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:30:42.429443 len(d.m)= 10
GetType: 2020/08/12 22:30:42.429464  A#G#:F : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:30:42.429497  A#T : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.429516  A#G#:S : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0x21, 0xb9, 0x63, 0x7d, 0x72, 0xc4, 0x47, 0xec, 0x9e, 0xf8, 0xbc, 0x82, 0xf8, 0xe6, 0x15, 0x70}, []uint8{0x19, 0x72, 0x49, 0xc2, 0xc1, 0x65, 0x4b, 0x73, 0xac, 0xe5, 0xde, 0xf7, 0x4f, 0x41, 0xb5, 0x9a}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:30:42.429529  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.429541  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.429552  A#:D : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.429563  A#:N : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.429575  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.429591  A#:A : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:30:42.429603  A#:C : &block.DataItem{PKey:[]uint8{0x58, 0xa8, 0xf6, 0xdb, 0x9d, 0x40, 0x4e, 0x67, 0x8b, 0x79, 0x32, 0xd4, 0x2a, 0xdb, 0xf7, 0xe2}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:30:42.429910 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:30:42.430557 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 6.903997ms
DB: 2020/08/12 22:30:42.438952 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.908719ms
DB: 2020/08/12 22:30:42.444164 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.170168ms
DB: 2020/08/12 22:30:42.444184 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.170168ms
DB: 2020/08/12 22:30:42.449564 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.340942ms
DB: 2020/08/12 22:30:42.449582 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.340942ms
DB: 2020/08/12 22:30:42.456364 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.461772ms
DB: 2020/08/12 22:30:42.462951 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.309759ms
Unlock: 2020/08/12 22:30:42.462967 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:30:42.469941 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.002613ms
DB: 2020/08/12 22:30:42.479474 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 9.214539ms
DB: 2020/08/12 22:30:42.485709 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.569636ms
DB: 2020/08/12 22:30:42.493081 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.858456ms
DB: 2020/08/12 22:30:42.498950 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.440799ms
DB: 2020/08/12 22:30:42.505014 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.607233ms
DB: 2020/08/12 22:30:42.511471 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.961107ms
DB: 2020/08/12 22:30:42.517219 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.332152ms
DB: 2020/08/12 22:30:42.523307 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.610719ms
DB: 2020/08/12 22:30:42.528807 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.199347ms
FetchForUpdate: 2020/08/12 22:30:42.528819 ** Cache FetchForUpdate Cache Key Value: [f9yJtsWpRIuXOEiJMtW1sw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:30:42.528825 +++  Cache FetchItems for sortk A#G#:S UID: [f9yJtsWpRIuXOEiJMtW1sw==] 
FetchNode: 2020/08/12 22:30:42.528840  node: f9yJtsWpRIuXOEiJMtW1sw== subKey: A#G#:S
DB: 2020/08/12 22:30:42.533639 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.765009ms
AttachNode: gr1 2020/08/12 22:30:42.533755 Errored: SetUpredAvailable :for  f9yJtsWpRIuXOEiJMtW1sw==
Cache: 2020/08/12 22:30:42.533763 In SetUpredAvailable: pUid, tUID:  f9yJtsWpRIuXOEiJMtW1sw== v2U+Gv1/RfOqRaB+G/a1LA== A#G#:S
Cache: 2020/08/12 22:30:42.533767 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:30:42.539272 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.458808ms
Unlock: 2020/08/12 22:30:42.539282 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:30:42.544931 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.161592ms
rdfLoader: 2020/08/12 22:30:42.544973 saveNode finished waiting...exiting
grmgr: 2020/08/12 22:30:42.544983 Powering down...
rdfuuid: 2020/08/12 22:30:42.544989 Powering down...
DB:2020/08/12 22:52:45 log.go:18: ===============================================================================
grmgr: 2020/08/12 22:52:45.031323 Powering on...
rdfLoader: 2020/08/12 22:52:45.031411 verify started....xx.
rdfLoader: 2020/08/12 22:52:45.031422 saveNode started......
rdfuuid: 2020/08/12 22:52:45.031434 Powering on...
rdfLoader: 2020/08/12 22:52:45.031441 *************** All started 
rdfLoader: 2020/08/12 22:52:45.040032 .  getType..
rdfLoader: 2020/08/12 22:52:45.040046 node.TyName : [Person]
DB: 2020/08/12 22:52:45.118028 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 77.925148ms
verify: 2020/08/12 22:52:45.118694 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 22:52:45.119152 Find Ty Address
rdfLoader: 2020/08/12 22:52:45.119174 Find Ty Age
rdfLoader: 2020/08/12 22:52:45.119181 Find Ty Cars
rdfLoader: 2020/08/12 22:52:45.119191 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:52:45.119197 Add to SS . [Alfa]
rdfLoader: 2020/08/12 22:52:45.119201 Find Ty DOB
rdfLoader: 2020/08/12 22:52:45.119206 Find Ty Friends
rdfLoader: 2020/08/12 22:52:45.119210 Find Ty Jobs
rdfLoader: 2020/08/12 22:52:45.119214 Find Ty Name
rdfLoader: 2020/08/12 22:52:45.119219 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:52:45.119223 Find Ty Siblings
rdfLoader: 2020/08/12 22:52:45.119235 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:52:45.119269 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:52:45.119275 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:52:45.119303 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.119310 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.119336 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.119342 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.119349 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.119365 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.119371 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:52:45.119375 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:52:45.119401 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0007cc1e0)}
SaveRDFNode: 2020/08/12 22:52:45.119407 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:52:45.119417 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.119422 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.119428 UID received  : sgegPgXUTlyeElGUSxiEkg==
verify: 2020/08/12 22:52:45.119677 *** Verify running...... 1
rdfLoader: 2020/08/12 22:52:45.119685 .  getType..
rdfLoader: 2020/08/12 22:52:45.119719 node.TyName : [Person]
verify: 2020/08/12 22:52:45.120088 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 22:52:45.120517 Find Ty Address
rdfLoader: 2020/08/12 22:52:45.120547 Find Ty Age
rdfLoader: 2020/08/12 22:52:45.120570 Find Ty Cars
rdfLoader: 2020/08/12 22:52:45.120576 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:52:45.120581 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 22:52:45.120585 Find Ty DOB
rdfLoader: 2020/08/12 22:52:45.120590 Find Ty Friends
rdfLoader: 2020/08/12 22:52:45.120594 Find Ty Jobs
rdfLoader: 2020/08/12 22:52:45.120607 Find Ty Name
rdfLoader: 2020/08/12 22:52:45.120612 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:52:45.120616 Find Ty Siblings
rdfLoader: 2020/08/12 22:52:45.120626 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:52:45.120657 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:52:45.120662 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:52:45.120684 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.120710 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.120716 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.120721 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.120727 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.120733 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.120738 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:52:45.120742 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:52:45.120748 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0007cc5a0)}
SaveRDFNode: 2020/08/12 22:52:45.120752 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:52:45.120760 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.120766 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.120772 UID received  : 12dLLTQWTC20SElXIho0sw==
verify: 2020/08/12 22:52:45.121213 *** Verify running...... 1
rdfLoader: 2020/08/12 22:52:45.123383 .  getType..
rdfLoader: 2020/08/12 22:52:45.123398 node.TyName : [Person]
verify: 2020/08/12 22:52:45.124018 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 22:52:45.124598 Find Ty Address
rdfLoader: 2020/08/12 22:52:45.124607 Find Ty Age
rdfLoader: 2020/08/12 22:52:45.124613 Find Ty Cars
rdfLoader: 2020/08/12 22:52:45.124619 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 22:52:45.124624 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 22:52:45.124629 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:52:45.124633 Find Ty DOB
rdfLoader: 2020/08/12 22:52:45.124637 Find Ty Friends
rdfLoader: 2020/08/12 22:52:45.124650 Find Ty Jobs
rdfLoader: 2020/08/12 22:52:45.124654 Find Ty Name
rdfLoader: 2020/08/12 22:52:45.124659 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:52:45.124663 Find Ty Siblings
rdfLoader: 2020/08/12 22:52:45.124673 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:52:45.124703 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:52:45.124707 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:52:45.124747 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.124754 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.124759 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.124778 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.124785 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.124791 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.124797 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:52:45.124801 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:52:45.124807 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0007cccc0)}
SaveRDFNode: 2020/08/12 22:52:45.124811 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:52:45.124819 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.124823 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.124829 UID received  : 5pkcIynXQwmaQDFLvI0tVw==
verify: 2020/08/12 22:52:45.125212 *** Verify running...... 2
rdfLoader: 2020/08/12 22:52:45.125240 .  getType..
rdfLoader: 2020/08/12 22:52:45.125244 node.TyName : [Person]
verify: 2020/08/12 22:52:45.125673 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 22:52:45.126243 Find Ty Address
rdfLoader: 2020/08/12 22:52:45.126254 Find Ty Age
rdfLoader: 2020/08/12 22:52:45.126260 Find Ty Cars
rdfLoader: 2020/08/12 22:52:45.126265 Add to SS . [Bentley]
rdfLoader: 2020/08/12 22:52:45.126269 Find Ty DOB
rdfLoader: 2020/08/12 22:52:45.126277 Find Ty Friends
rdfLoader: 2020/08/12 22:52:45.126281 Find Ty Jobs
rdfLoader: 2020/08/12 22:52:45.126284 Find Ty Name
rdfLoader: 2020/08/12 22:52:45.126289 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:52:45.126293 Find Ty Siblings
rdfLoader: 2020/08/12 22:52:45.126307 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:52:45.126331 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:52:45.126335 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:52:45.126357 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.126364 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.126388 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.126395 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.126421 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.126428 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:52:45.126434 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:52:45.126438 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:52:45.126444 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007cd200)}
SaveRDFNode: 2020/08/12 22:52:45.126448 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:52:45.126522 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.126529 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.126556 UID received  : vnTqhyrdQFGF7vhfPhLkTg==
verify: 2020/08/12 22:52:45.126834 *** Verify running...... 2
verify: 2020/08/12 22:52:45.126842 verify exited.....
DB: 2020/08/12 22:52:45.128803 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 9.34361ms
DB: 2020/08/12 22:52:45.132853 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.050721ms
DB: 2020/08/12 22:52:45.137032 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.194562ms
DB: 2020/08/12 22:52:45.141595 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 8.705288ms
DB: 2020/08/12 22:52:45.149190 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 24.331125ms
DB: 2020/08/12 22:52:45.149560 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 22.976324ms
DB: 2020/08/12 22:52:45.153578 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.981303ms
DB: 2020/08/12 22:52:45.156567 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 19.500194ms
DB: 2020/08/12 22:52:45.157223 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.611004ms
DB: 2020/08/12 22:52:45.159194 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.565541ms
DB: 2020/08/12 22:52:45.160780 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.522919ms
DB: 2020/08/12 22:52:45.161260 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.661912ms
DB: 2020/08/12 22:52:45.162589 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.349624ms
DB: 2020/08/12 22:52:45.164915 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.106246ms
SaveRDFNode: 2020/08/12 22:52:45.164929 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd200)}
rdfUIDdb: 2020/08/12 22:52:45.164937 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.164941 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.164947 Received UID: X18=
SaveRDFNode: 2020/08/12 22:52:45.164961 a: = db.Item{PKey:[]uint8{0xbe, 0x74, 0xea, 0x87, 0x2a, 0xdd, 0x40, 0x51, 0x85, 0xee, 0xf8, 0x5f, 0x3e, 0x12, 0xe4, 0x4e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:52:45.166471 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.14128ms
SaveRDFNode: 2020/08/12 22:52:45.166485 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/12 22:52:45.166493 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.166497 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.166510 Received UID: X18=
SaveRDFNode: 2020/08/12 22:52:45.166528 a: = db.Item{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:52:45.167488 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.863267ms
SaveRDFNode: 2020/08/12 22:52:45.167508 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/12 22:52:45.167516 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.167520 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.167532 Received UID: X18=
SaveRDFNode: 2020/08/12 22:52:45.167547 a: = db.Item{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:52:45.167957 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.720588ms
DB: 2020/08/12 22:52:45.169900 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.91071ms
SaveRDFNode: 2020/08/12 22:52:45.169913 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd200)}
rdfUIDdb: 2020/08/12 22:52:45.169919 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.169923 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.169929 Received UID: X18=
SaveRDFNode: 2020/08/12 22:52:45.169939 a: = db.Item{PKey:[]uint8{0xbe, 0x74, 0xea, 0x87, 0x2a, 0xdd, 0x40, 0x51, 0x85, 0xee, 0xf8, 0x5f, 0x3e, 0x12, 0xe4, 0x4e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:52:45.171343 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.339674ms
DB: 2020/08/12 22:52:45.171684 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.115383ms
SaveRDFNode: 2020/08/12 22:52:45.171696 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/12 22:52:45.171702 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.171706 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.171711 Received UID: X18=
SaveRDFNode: 2020/08/12 22:52:45.171721 a: = db.Item{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:52:45.172112 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.508048ms
SaveRDFNode: 2020/08/12 22:52:45.172130 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/12 22:52:45.172135 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.172139 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.172145 Received UID: X18=
SaveRDFNode: 2020/08/12 22:52:45.172154 a: = db.Item{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:52:45.173505 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.535207ms
SaveRDFNode: 2020/08/12 22:52:45.173514 Returned.+++++++++++ No error
DB: 2020/08/12 22:52:45.174616 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.236144ms
DB: 2020/08/12 22:52:45.175279 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.097247ms
SaveRDFNode: 2020/08/12 22:52:45.175288 Returned.+++++++++++ No error
DB: 2020/08/12 22:52:45.176247 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.493827ms
SaveRDFNode: 2020/08/12 22:52:45.176255 Returned.+++++++++++ No error
DB: 2020/08/12 22:52:45.178147 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.483977ms
SaveRDFNode: 2020/08/12 22:52:45.178159 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cccc0)}
rdfUIDdb: 2020/08/12 22:52:45.178164 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.178168 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.178173 Received UID: X18=
SaveRDFNode: 2020/08/12 22:52:45.178183 a: = db.Item{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:52:45.181392 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.17977ms
SaveRDFNode: 2020/08/12 22:52:45.181404 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cccc0)}
rdfUIDdb: 2020/08/12 22:52:45.181409 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:52:45.181413 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:52:45.181418 Received UID: X18=
SaveRDFNode: 2020/08/12 22:52:45.181428 a: = db.Item{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:52:45.184729 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.254761ms
SaveRDFNode: 2020/08/12 22:52:45.184739 Returned.+++++++++++ No error
DB: 2020/08/12 22:52:45.187358 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.189454 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.191676 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.193734 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.197296 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.455132ms
DB: 2020/08/12 22:52:45.204076 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.223448ms
FetchForUpdate: 2020/08/12 22:52:45.204090 ** Cache FetchForUpdate Cache Key Value: [12dLLTQWTC20SElXIho0sw==]   sortk: A#G#:S
FetchNode: 2020/08/12 22:52:45.204096  node: 12dLLTQWTC20SElXIho0sw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:52:45.204264 ** Cache FetchForUpdate Cache Key Value: [sgegPgXUTlyeElGUSxiEkg==]   sortk: A#
FetchNode: 2020/08/12 22:52:45.204285  node: sgegPgXUTlyeElGUSxiEkg== subKey: A#
DB: 2020/08/12 22:52:45.206962 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.834042ms
FetchForUpdate: 2020/08/12 22:52:45.207005 len(nb): 1
fetchItems: 2020/08/12 22:52:45.207012 +++  Cache FetchItems for sortk A#G#:S UID: [12dLLTQWTC20SElXIho0sw==] 
FetchNode: 2020/08/12 22:52:45.207017  node: 12dLLTQWTC20SElXIho0sw== subKey: A#G#:S
DB: 2020/08/12 22:52:45.209390 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.343224ms
DB: 2020/08/12 22:52:45.213509 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.426836ms
Unlock: 2020/08/12 22:52:45.213522 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:52:45.230699 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 26.337701ms
FetchForUpdate: 2020/08/12 22:52:45.230823 len(nb): 7
fetchItems: 2020/08/12 22:52:45.230832 +++  Cache FetchItems for sortk A# UID: [sgegPgXUTlyeElGUSxiEkg==] 
FetchNode: 2020/08/12 22:52:45.230837  node: sgegPgXUTlyeElGUSxiEkg== subKey: A#
DB: 2020/08/12 22:52:45.236061 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 5.189308ms
GetType:2020/08/12 22:52:45.236174 len(d.m)= 7
GetType: 2020/08/12 22:52:45.236194  A#:A : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.236208  A#:C : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.236220  A#:D : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.236235  A#:N : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.236247  A#G#:F : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.236259  A#G#:S : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.236277  A#T : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:52:45.236300 len(d.m)= 7
GetType: 2020/08/12 22:52:45.236313  A#:N : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.236324  A#G#:F : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.236338  A#G#:S : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.236349  A#T : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.236363  A#:A : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.236375  A#:C : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.236385  A#:D : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:52:45.236401 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/12 22:52:45.236425 ** Cache FetchForUpdate Cache Key Value: [12dLLTQWTC20SElXIho0sw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.236431 +++  Cache FetchItems for sortk A#G#:S UID: [12dLLTQWTC20SElXIho0sw==] 
FetchNode: 2020/08/12 22:52:45.236435  node: 12dLLTQWTC20SElXIho0sw== subKey: A#G#:S
DB: 2020/08/12 22:52:45.240334 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.868552ms
DB: 2020/08/12 22:52:45.248261 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.131298ms
DB: 2020/08/12 22:52:45.254360 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.823828ms
DB: 2020/08/12 22:52:45.260622 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.685614ms
DB: 2020/08/12 22:52:45.267977 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.871139ms
DB: 2020/08/12 22:52:45.276169 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.745884ms
DB: 2020/08/12 22:52:45.283695 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.012349ms
DB: 2020/08/12 22:52:45.291871 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.658028ms
DB: 2020/08/12 22:52:45.297633 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.301628ms
DB: 2020/08/12 22:52:45.304030 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.846956ms
Unlock: 2020/08/12 22:52:45.304042 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:52:45.311578 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.074889ms
FetchForUpdate: 2020/08/12 22:52:45.311591 ** Cache FetchForUpdate Cache Key Value: [12dLLTQWTC20SElXIho0sw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.311598 +++  Cache FetchItems for sortk A#G#:S UID: [12dLLTQWTC20SElXIho0sw==] 
FetchNode: 2020/08/12 22:52:45.311603  node: 12dLLTQWTC20SElXIho0sw== subKey: A#G#:S
DB: 2020/08/12 22:52:45.316810 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.173935ms
AttachNode: gr1 2020/08/12 22:52:45.316914 Errored: SetUpredAvailable :for  12dLLTQWTC20SElXIho0sw==
Cache: 2020/08/12 22:52:45.316923 In SetUpredAvailable: pUid, tUID:  12dLLTQWTC20SElXIho0sw== 12dLLTQWTC20SElXIho0sw== A#G#:S
Cache: 2020/08/12 22:52:45.316927 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:52:45.322724 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.745033ms
Unlock: 2020/08/12 22:52:45.322735 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:52:45.332458 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 9.186718ms
DB: 2020/08/12 22:52:45.335958 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.339994 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.343946 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.348196 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.353573 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.324182ms
DB: 2020/08/12 22:52:45.359381 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.475359ms
FetchForUpdate: 2020/08/12 22:52:45.359395 ** Cache FetchForUpdate Cache Key Value: [5pkcIynXQwmaQDFLvI0tVw==]   sortk: A#G#:S
FetchNode: 2020/08/12 22:52:45.359402  node: 5pkcIynXQwmaQDFLvI0tVw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:52:45.359580 ** Cache FetchForUpdate Cache Key Value: [sgegPgXUTlyeElGUSxiEkg==]   sortk: A#
fetchItems: 2020/08/12 22:52:45.359589 +++  Cache FetchItems for sortk A# UID: [sgegPgXUTlyeElGUSxiEkg==] 
FetchNode: 2020/08/12 22:52:45.359601  node: sgegPgXUTlyeElGUSxiEkg== subKey: A#
DB: 2020/08/12 22:52:45.363268 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.588409ms
GetType:2020/08/12 22:52:45.363427 len(d.m)= 7
GetType: 2020/08/12 22:52:45.363449  A#:A : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.363464  A#:C : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.363476  A#:D : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.363487  A#:N : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.363499  A#G#:F : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.363528  A#G#:S : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.363542  A#T : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:52:45.364201 len(d.m)= 7
GetType: 2020/08/12 22:52:45.364244  A#:N : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.364260  A#G#:F : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.364273  A#G#:S : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.364292  A#T : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.364305  A#:A : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.364317  A#:C : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.364328  A#:D : &block.DataItem{PKey:[]uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:52:45.364644 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:52:45.365136 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.699956ms
FetchForUpdate: 2020/08/12 22:52:45.365167 len(nb): 1
fetchItems: 2020/08/12 22:52:45.365173 +++  Cache FetchItems for sortk A#G#:S UID: [5pkcIynXQwmaQDFLvI0tVw==] 
FetchNode: 2020/08/12 22:52:45.365178  node: 5pkcIynXQwmaQDFLvI0tVw== subKey: A#G#:S
DB: 2020/08/12 22:52:45.368765 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.559744ms
DB: 2020/08/12 22:52:45.374498 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.441882ms
Unlock: 2020/08/12 22:52:45.374510 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 22:52:45.374795 ** Cache FetchForUpdate Cache Key Value: [5pkcIynXQwmaQDFLvI0tVw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.374805 +++  Cache FetchItems for sortk A#G#:S UID: [5pkcIynXQwmaQDFLvI0tVw==] 
FetchNode: 2020/08/12 22:52:45.374810  node: 5pkcIynXQwmaQDFLvI0tVw== subKey: A#G#:S
DB: 2020/08/12 22:52:45.378835 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.992961ms
DB: 2020/08/12 22:52:45.386272 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.874532ms
DB: 2020/08/12 22:52:45.402589 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 16.03289ms
DB: 2020/08/12 22:52:45.408601 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.446241ms
DB: 2020/08/12 22:52:45.416332 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.306727ms
DB: 2020/08/12 22:52:45.422056 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.295338ms
DB: 2020/08/12 22:52:45.428152 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.593388ms
DB: 2020/08/12 22:52:45.435483 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.86611ms
DB: 2020/08/12 22:52:45.442209 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.246496ms
DB: 2020/08/12 22:52:45.451923 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 9.22836ms
Unlock: 2020/08/12 22:52:45.451935 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:52:45.458471 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.002627ms
FetchForUpdate: 2020/08/12 22:52:45.458483 ** Cache FetchForUpdate Cache Key Value: [5pkcIynXQwmaQDFLvI0tVw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.458490 +++  Cache FetchItems for sortk A#G#:S UID: [5pkcIynXQwmaQDFLvI0tVw==] 
FetchNode: 2020/08/12 22:52:45.458495  node: 5pkcIynXQwmaQDFLvI0tVw== subKey: A#G#:S
DB: 2020/08/12 22:52:45.462568 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.038565ms
AttachNode: gr1 2020/08/12 22:52:45.462675 Errored: SetUpredAvailable :for  5pkcIynXQwmaQDFLvI0tVw==
Cache: 2020/08/12 22:52:45.462686 In SetUpredAvailable: pUid, tUID:  5pkcIynXQwmaQDFLvI0tVw== 5pkcIynXQwmaQDFLvI0tVw== A#G#:S
Cache: 2020/08/12 22:52:45.462690 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:52:45.468167 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.444388ms
Unlock: 2020/08/12 22:52:45.468177 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:52:45.473893 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.3193ms
DB: 2020/08/12 22:52:45.479264 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.482813 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.486965 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.491456 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.497812 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.998008ms
DB: 2020/08/12 22:52:45.505622 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.523733ms
FetchForUpdate: 2020/08/12 22:52:45.505637 ** Cache FetchForUpdate Cache Key Value: [sgegPgXUTlyeElGUSxiEkg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.505643 +++  Cache FetchItems for sortk A#G#:S UID: [sgegPgXUTlyeElGUSxiEkg==] 
FetchNode: 2020/08/12 22:52:45.505648  node: sgegPgXUTlyeElGUSxiEkg== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:52:45.505865 ** Cache FetchForUpdate Cache Key Value: [12dLLTQWTC20SElXIho0sw==]   sortk: A#
fetchItems: 2020/08/12 22:52:45.505903 +++  Cache FetchItems for sortk A# UID: [12dLLTQWTC20SElXIho0sw==] 
FetchNode: 2020/08/12 22:52:45.505933  node: 12dLLTQWTC20SElXIho0sw== subKey: A#
DB: 2020/08/12 22:52:45.509112 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.128954ms
GetType:2020/08/12 22:52:45.509290 len(d.m)= 10
GetType: 2020/08/12 22:52:45.509311  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.509337  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.509349  A#:A : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.509361  A#:C : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.509385  A#G#:F : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.509412  A#T : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.509429  A#G#:S : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:52:45.509442  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.509453  A#:D : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.509464  A#:N : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:52:45.510383 len(d.m)= 10
GetType: 2020/08/12 22:52:45.510408  A#G#:S : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:52:45.510427  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.510457  A#:D : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.510472  A#:N : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.510485  A#G#:F : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.510496  A#T : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.510512  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.510524  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.510536  A#:A : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.510547  A#:C : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:52:45.510869 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:52:45.511496 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.816305ms
DB: 2020/08/12 22:52:45.517646 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.827716ms
Unlock: 2020/08/12 22:52:45.517657 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 22:52:45.518110 ** Cache FetchForUpdate Cache Key Value: [sgegPgXUTlyeElGUSxiEkg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.518120 +++  Cache FetchItems for sortk A#G#:S UID: [sgegPgXUTlyeElGUSxiEkg==] 
FetchNode: 2020/08/12 22:52:45.518124  node: sgegPgXUTlyeElGUSxiEkg== subKey: A#G#:S
DB: 2020/08/12 22:52:45.523267 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.112585ms
DB: 2020/08/12 22:52:45.530404 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.054812ms
DB: 2020/08/12 22:52:45.535594 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.140518ms
DB: 2020/08/12 22:52:45.552559 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 16.851539ms
DB: 2020/08/12 22:52:45.559817 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.18828ms
DB: 2020/08/12 22:52:45.564991 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.118172ms
DB: 2020/08/12 22:52:45.570468 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.373962ms
DB: 2020/08/12 22:52:45.577805 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.864017ms
DB: 2020/08/12 22:52:45.601371 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 23.113895ms
DB: 2020/08/12 22:52:45.607614 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.558572ms
Unlock: 2020/08/12 22:52:45.607626 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:52:45.613846 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.540461ms
FetchForUpdate: 2020/08/12 22:52:45.613858 ** Cache FetchForUpdate Cache Key Value: [sgegPgXUTlyeElGUSxiEkg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.613864 +++  Cache FetchItems for sortk A#G#:S UID: [sgegPgXUTlyeElGUSxiEkg==] 
FetchNode: 2020/08/12 22:52:45.613898  node: sgegPgXUTlyeElGUSxiEkg== subKey: A#G#:S
DB: 2020/08/12 22:52:45.617507 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.573521ms
AttachNode: gr1 2020/08/12 22:52:45.617620 Errored: SetUpredAvailable :for  sgegPgXUTlyeElGUSxiEkg==
Cache: 2020/08/12 22:52:45.617628 In SetUpredAvailable: pUid, tUID:  sgegPgXUTlyeElGUSxiEkg== sgegPgXUTlyeElGUSxiEkg== A#G#:S
Cache: 2020/08/12 22:52:45.617633 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:52:45.623853 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.189896ms
Unlock: 2020/08/12 22:52:45.623862 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:52:45.630519 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.139335ms
DB: 2020/08/12 22:52:45.634410 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.638629 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.642300 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.645476 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.651225 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.679773ms
DB: 2020/08/12 22:52:45.656658 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.127276ms
FetchForUpdate: 2020/08/12 22:52:45.656672 ** Cache FetchForUpdate Cache Key Value: [5pkcIynXQwmaQDFLvI0tVw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.656678 +++  Cache FetchItems for sortk A#G#:S UID: [5pkcIynXQwmaQDFLvI0tVw==] 
FetchNode: 2020/08/12 22:52:45.656683  node: 5pkcIynXQwmaQDFLvI0tVw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:52:45.656862 ** Cache FetchForUpdate Cache Key Value: [12dLLTQWTC20SElXIho0sw==]   sortk: A#
fetchItems: 2020/08/12 22:52:45.656872 +++  Cache FetchItems for sortk A# UID: [12dLLTQWTC20SElXIho0sw==] 
FetchNode: 2020/08/12 22:52:45.656884  node: 12dLLTQWTC20SElXIho0sw== subKey: A#
DB: 2020/08/12 22:52:45.660352 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.373161ms
GetType:2020/08/12 22:52:45.660517 len(d.m)= 10
GetType: 2020/08/12 22:52:45.660539  A#:D : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.660552  A#:N : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.660565  A#G#:F : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.660576  A#T : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.660592  A#G#:S : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:52:45.660605  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.660626  A#:A : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.660655  A#:C : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.660669  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.660681  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:52:45.661484 len(d.m)= 10
GetType: 2020/08/12 22:52:45.661504  A#T : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.661520  A#G#:S : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:52:45.661532  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.661547  A#:D : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.661559  A#:N : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.661597  A#G#:F : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.661610  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.661623  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.661634  A#:A : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.661646  A#:C : &block.DataItem{PKey:[]uint8{0xd7, 0x67, 0x4b, 0x2d, 0x34, 0x16, 0x4c, 0x2d, 0xb4, 0x48, 0x49, 0x57, 0x22, 0x1a, 0x34, 0xb3}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:52:45.662014 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:52:45.662710 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.982676ms
DB: 2020/08/12 22:52:45.673304 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.141927ms
DB: 2020/08/12 22:52:45.678220 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.882188ms
DB: 2020/08/12 22:52:45.678235 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.882188ms
DB: 2020/08/12 22:52:45.683510 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.235462ms
DB: 2020/08/12 22:52:45.683526 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.235462ms
DB: 2020/08/12 22:52:45.689366 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.768172ms
DB: 2020/08/12 22:52:45.695360 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.924103ms
Unlock: 2020/08/12 22:52:45.695372 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:52:45.701605 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.137324ms
DB: 2020/08/12 22:52:45.706658 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.993402ms
DB: 2020/08/12 22:52:45.712379 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.618638ms
DB: 2020/08/12 22:52:45.719328 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.589219ms
DB: 2020/08/12 22:52:45.724526 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.924332ms
DB: 2020/08/12 22:52:45.730113 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.275508ms
DB: 2020/08/12 22:52:45.738128 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.723574ms
DB: 2020/08/12 22:52:45.743517 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.059397ms
DB: 2020/08/12 22:52:45.749371 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.542603ms
DB: 2020/08/12 22:52:45.754748 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.182699ms
FetchForUpdate: 2020/08/12 22:52:45.754759 ** Cache FetchForUpdate Cache Key Value: [5pkcIynXQwmaQDFLvI0tVw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.754766 +++  Cache FetchItems for sortk A#G#:S UID: [5pkcIynXQwmaQDFLvI0tVw==] 
FetchNode: 2020/08/12 22:52:45.754771  node: 5pkcIynXQwmaQDFLvI0tVw== subKey: A#G#:S
DB: 2020/08/12 22:52:45.758925 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.120048ms
AttachNode: gr1 2020/08/12 22:52:45.759027 Errored: SetUpredAvailable :for  5pkcIynXQwmaQDFLvI0tVw==
Cache: 2020/08/12 22:52:45.759035 In SetUpredAvailable: pUid, tUID:  5pkcIynXQwmaQDFLvI0tVw== odXlyl1mRfqOoVbFpFyyiA== A#G#:S
Cache: 2020/08/12 22:52:45.759039 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:52:45.764163 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.091651ms
Unlock: 2020/08/12 22:52:45.764173 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:52:45.770111 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.561268ms
DB: 2020/08/12 22:52:45.774564 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.778309 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.782151 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.786076 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.793359 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 7.220435ms
DB: 2020/08/12 22:52:45.804700 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 11.099181ms
FetchForUpdate: 2020/08/12 22:52:45.804715 ** Cache FetchForUpdate Cache Key Value: [sgegPgXUTlyeElGUSxiEkg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.804721 +++  Cache FetchItems for sortk A#G#:S UID: [sgegPgXUTlyeElGUSxiEkg==] 
FetchNode: 2020/08/12 22:52:45.804727  node: sgegPgXUTlyeElGUSxiEkg== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:52:45.804915 ** Cache FetchForUpdate Cache Key Value: [5pkcIynXQwmaQDFLvI0tVw==]   sortk: A#
fetchItems: 2020/08/12 22:52:45.804924 +++  Cache FetchItems for sortk A# UID: [5pkcIynXQwmaQDFLvI0tVw==] 
FetchNode: 2020/08/12 22:52:45.804935  node: 5pkcIynXQwmaQDFLvI0tVw== subKey: A#
DB: 2020/08/12 22:52:45.807776 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 2.755619ms
GetType:2020/08/12 22:52:45.807970 len(d.m)= 10
GetType: 2020/08/12 22:52:45.807998  A#G#:S : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, []uint8{0xa1, 0xd5, 0xe5, 0xca, 0x5d, 0x66, 0x45, 0xfa, 0x8e, 0xa1, 0x56, 0xc5, 0xa4, 0x5c, 0xb2, 0x88}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:52:45.808023  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.808036  A#:A : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.808066  A#:C : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.808079  A#:D : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.808091  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.808104  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.808115  A#:N : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.808126  A#G#:F : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.808137  A#T : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:52:45.808990 len(d.m)= 10
GetType: 2020/08/12 22:52:45.809010  A#:A : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.809022  A#:C : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.809036  A#:D : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.809053  A#G#:S : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, []uint8{0xa1, 0xd5, 0xe5, 0xca, 0x5d, 0x66, 0x45, 0xfa, 0x8e, 0xa1, 0x56, 0xc5, 0xa4, 0x5c, 0xb2, 0x88}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:52:45.809065  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.809075  A#:N : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.809087  A#G#:F : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.809115  A#T : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.809129  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.809150  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:52:45.809430 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:52:45.810038 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.263955ms
DB: 2020/08/12 22:52:45.816166 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.601315ms
DB: 2020/08/12 22:52:45.821607 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.409036ms
DB: 2020/08/12 22:52:45.821623 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.409036ms
DB: 2020/08/12 22:52:45.826831 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.180266ms
DB: 2020/08/12 22:52:45.826846 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.180266ms
DB: 2020/08/12 22:52:45.832362 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.454072ms
DB: 2020/08/12 22:52:45.838276 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.85265ms
Unlock: 2020/08/12 22:52:45.838287 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:52:45.845946 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.745384ms
DB: 2020/08/12 22:52:45.851582 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.328296ms
DB: 2020/08/12 22:52:45.857750 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.617063ms
DB: 2020/08/12 22:52:45.864783 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.482186ms
DB: 2020/08/12 22:52:45.869904 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.066933ms
DB: 2020/08/12 22:52:45.876706 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.722591ms
DB: 2020/08/12 22:52:45.885521 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 8.755746ms
DB: 2020/08/12 22:52:45.890680 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.10638ms
DB: 2020/08/12 22:52:45.896330 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.585059ms
DB: 2020/08/12 22:52:45.902070 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.47096ms
FetchForUpdate: 2020/08/12 22:52:45.902081 ** Cache FetchForUpdate Cache Key Value: [sgegPgXUTlyeElGUSxiEkg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.902088 +++  Cache FetchItems for sortk A#G#:S UID: [sgegPgXUTlyeElGUSxiEkg==] 
FetchNode: 2020/08/12 22:52:45.902092  node: sgegPgXUTlyeElGUSxiEkg== subKey: A#G#:S
DB: 2020/08/12 22:52:45.906117 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.991502ms
AttachNode: gr1 2020/08/12 22:52:45.906215 Errored: SetUpredAvailable :for  sgegPgXUTlyeElGUSxiEkg==
Cache: 2020/08/12 22:52:45.906223 In SetUpredAvailable: pUid, tUID:  sgegPgXUTlyeElGUSxiEkg== RHH1t2k4TMOcfyb1tQA3wQ== A#G#:S
Cache: 2020/08/12 22:52:45.906227 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:52:45.911856 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.597115ms
Unlock: 2020/08/12 22:52:45.911866 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:52:45.917872 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.451321ms
DB: 2020/08/12 22:52:45.922006 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.925847 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.929364 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.933151 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:52:45.939065 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.846808ms
DB: 2020/08/12 22:52:45.944582 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.232653ms
FetchForUpdate: 2020/08/12 22:52:45.944616 ** Cache FetchForUpdate Cache Key Value: [12dLLTQWTC20SElXIho0sw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:45.944623 +++  Cache FetchItems for sortk A#G#:S UID: [12dLLTQWTC20SElXIho0sw==] 
FetchNode: 2020/08/12 22:52:45.944628  node: 12dLLTQWTC20SElXIho0sw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:52:45.944818 ** Cache FetchForUpdate Cache Key Value: [5pkcIynXQwmaQDFLvI0tVw==]   sortk: A#
fetchItems: 2020/08/12 22:52:45.944828 +++  Cache FetchItems for sortk A# UID: [5pkcIynXQwmaQDFLvI0tVw==] 
FetchNode: 2020/08/12 22:52:45.944840  node: 5pkcIynXQwmaQDFLvI0tVw== subKey: A#
DB: 2020/08/12 22:52:45.948009 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.108895ms
GetType:2020/08/12 22:52:45.948180 len(d.m)= 10
GetType: 2020/08/12 22:52:45.948200  A#:D : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.948220  A#G#:S : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, []uint8{0xa1, 0xd5, 0xe5, 0xca, 0x5d, 0x66, 0x45, 0xfa, 0x8e, 0xa1, 0x56, 0xc5, 0xa4, 0x5c, 0xb2, 0x88}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:52:45.948234  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.948260  A#:A : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.948285  A#:C : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.948297  A#T : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.948310  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.948322  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.948333  A#:N : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.948345  A#G#:F : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 22:52:45.949156 len(d.m)= 10
GetType: 2020/08/12 22:52:45.949198  A#G#:S : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xb2, 0x7, 0xa0, 0x3e, 0x5, 0xd4, 0x4e, 0x5c, 0x9e, 0x12, 0x51, 0x94, 0x4b, 0x18, 0x84, 0x92}, []uint8{0xa1, 0xd5, 0xe5, 0xca, 0x5d, 0x66, 0x45, 0xfa, 0x8e, 0xa1, 0x56, 0xc5, 0xa4, 0x5c, 0xb2, 0x88}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:52:45.949213  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.949224  A#:A : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.949242  A#:C : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.949254  A#:D : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.949267  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.949279  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.949290  A#:N : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:52:45.949303  A#G#:F : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:52:45.949314  A#T : &block.DataItem{PKey:[]uint8{0xe6, 0x99, 0x1c, 0x23, 0x29, 0xd7, 0x43, 0x9, 0x9a, 0x40, 0x31, 0x4b, 0xbc, 0x8d, 0x2d, 0x57}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:52:45.949613 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:52:45.950301 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.637483ms
DB: 2020/08/12 22:52:45.956220 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.777589ms
DB: 2020/08/12 22:52:45.961348 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.094946ms
DB: 2020/08/12 22:52:45.961363 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.094946ms
DB: 2020/08/12 22:52:45.967008 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.605016ms
DB: 2020/08/12 22:52:45.967024 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.605016ms
DB: 2020/08/12 22:52:45.973298 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.039312ms
DB: 2020/08/12 22:52:45.979556 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.056208ms
Unlock: 2020/08/12 22:52:45.979567 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:52:45.987375 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.862549ms
DB: 2020/08/12 22:52:45.992880 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.257206ms
DB: 2020/08/12 22:52:46.003903 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 10.417682ms
DB: 2020/08/12 22:52:46.011425 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.919988ms
DB: 2020/08/12 22:52:46.017707 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.800174ms
DB: 2020/08/12 22:52:46.024095 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.823064ms
DB: 2020/08/12 22:52:46.031639 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.037467ms
DB: 2020/08/12 22:52:46.039388 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.279832ms
DB: 2020/08/12 22:52:46.046347 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.404785ms
DB: 2020/08/12 22:52:46.051726 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.110951ms
FetchForUpdate: 2020/08/12 22:52:46.051737 ** Cache FetchForUpdate Cache Key Value: [12dLLTQWTC20SElXIho0sw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:52:46.051744 +++  Cache FetchItems for sortk A#G#:S UID: [12dLLTQWTC20SElXIho0sw==] 
FetchNode: 2020/08/12 22:52:46.051748  node: 12dLLTQWTC20SElXIho0sw== subKey: A#G#:S
DB: 2020/08/12 22:52:46.056675 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.833041ms
AttachNode: gr1 2020/08/12 22:52:46.056811 Errored: SetUpredAvailable :for  12dLLTQWTC20SElXIho0sw==
Cache: 2020/08/12 22:52:46.056820 In SetUpredAvailable: pUid, tUID:  12dLLTQWTC20SElXIho0sw== GZR6poMZQKGaQ+ZfTZPkOA== A#G#:S
Cache: 2020/08/12 22:52:46.056824 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:52:46.062422 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.564947ms
Unlock: 2020/08/12 22:52:46.062453 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:52:46.068391 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.408683ms
rdfLoader: 2020/08/12 22:52:46.068403 saveNode finished waiting...exiting
grmgr: 2020/08/12 22:52:46.068413 Powering down...
rdfuuid: 2020/08/12 22:52:46.068419 Powering down...
DB:2020/08/12 22:54:36 log.go:18: ===============================================================================
grmgr: 2020/08/12 22:54:36.545207 Powering on...
rdfLoader: 2020/08/12 22:54:36.545274 verify started....xx.
rdfLoader: 2020/08/12 22:54:36.545284 saveNode started......
rdfuuid: 2020/08/12 22:54:36.545297 Powering on...
rdfLoader: 2020/08/12 22:54:36.545304 *************** All started 
rdfLoader: 2020/08/12 22:54:36.552792 .  getType..
rdfLoader: 2020/08/12 22:54:36.552808 node.TyName : [Person]
DB: 2020/08/12 22:54:36.626738 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 73.871953ms
verify: 2020/08/12 22:54:36.627380 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 22:54:36.627895 Find Ty Address
rdfLoader: 2020/08/12 22:54:36.627905 Find Ty Age
rdfLoader: 2020/08/12 22:54:36.627911 Find Ty Cars
rdfLoader: 2020/08/12 22:54:36.627917 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:54:36.627926 Add to SS . [Alfa]
rdfLoader: 2020/08/12 22:54:36.627931 Find Ty DOB
rdfLoader: 2020/08/12 22:54:36.627935 Find Ty Friends
rdfLoader: 2020/08/12 22:54:36.627939 Find Ty Jobs
rdfLoader: 2020/08/12 22:54:36.627943 Find Ty Name
rdfLoader: 2020/08/12 22:54:36.627947 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:54:36.627951 Find Ty Siblings
rdfLoader: 2020/08/12 22:54:36.627963 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:54:36.627996 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:54:36.628001 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:54:36.628068 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.628077 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.628083 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.628089 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.628094 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.628100 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.628106 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:54:36.628110 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:54:36.628117 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000386240)}
SaveRDFNode: 2020/08/12 22:54:36.628122 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:54:36.628131 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.628135 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.628141 UID received  : y1GV8MaqSUi0Ad6jswUH/A==
verify: 2020/08/12 22:54:36.628415 *** Verify running...... 1
rdfLoader: 2020/08/12 22:54:36.628427 .  getType..
rdfLoader: 2020/08/12 22:54:36.628431 node.TyName : [Person]
verify: 2020/08/12 22:54:36.628805 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 22:54:36.633607 Find Ty Address
rdfLoader: 2020/08/12 22:54:36.633624 Find Ty Age
rdfLoader: 2020/08/12 22:54:36.633632 Find Ty Cars
rdfLoader: 2020/08/12 22:54:36.633638 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:54:36.633642 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 22:54:36.633647 Find Ty DOB
rdfLoader: 2020/08/12 22:54:36.633651 Find Ty Friends
rdfLoader: 2020/08/12 22:54:36.633655 Find Ty Jobs
rdfLoader: 2020/08/12 22:54:36.633659 Find Ty Name
rdfLoader: 2020/08/12 22:54:36.633663 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:54:36.633667 Find Ty Siblings
rdfLoader: 2020/08/12 22:54:36.633682 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:54:36.633731 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:54:36.633736 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:54:36.633796 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.633804 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.633811 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.633817 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.633823 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.633828 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.633834 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:54:36.633838 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:54:36.633845 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000386780)}
SaveRDFNode: 2020/08/12 22:54:36.633849 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:54:36.633860 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.633864 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.633870 UID received  : 9EYyINEqQNuOz4s/BfHcNg==
verify: 2020/08/12 22:54:36.634371 *** Verify running...... 1
rdfLoader: 2020/08/12 22:54:36.637218 .  getType..
rdfLoader: 2020/08/12 22:54:36.637229 node.TyName : [Person]
verify: 2020/08/12 22:54:36.637632 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 22:54:36.638187 Find Ty Address
rdfLoader: 2020/08/12 22:54:36.638197 Find Ty Age
rdfLoader: 2020/08/12 22:54:36.638204 Find Ty Cars
rdfLoader: 2020/08/12 22:54:36.638209 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 22:54:36.638214 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 22:54:36.638218 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:54:36.638222 Find Ty DOB
rdfLoader: 2020/08/12 22:54:36.638227 Find Ty Friends
rdfLoader: 2020/08/12 22:54:36.638231 Find Ty Jobs
rdfLoader: 2020/08/12 22:54:36.638235 Find Ty Name
rdfLoader: 2020/08/12 22:54:36.638239 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:54:36.638243 Find Ty Siblings
rdfLoader: 2020/08/12 22:54:36.638254 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:54:36.638302 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:54:36.638308 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:54:36.638330 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.638343 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.638350 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.638357 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.638362 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.638368 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.638388 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:54:36.638396 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:54:36.638403 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000387080)}
SaveRDFNode: 2020/08/12 22:54:36.638407 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:54:36.638415 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.638419 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.638424 UID received  : jDWyBvIURM6kqnavyXgDgg==
verify: 2020/08/12 22:54:36.638817 *** Verify running...... 2
rdfLoader: 2020/08/12 22:54:36.638834 .  getType..
rdfLoader: 2020/08/12 22:54:36.638850 node.TyName : [Person]
DB: 2020/08/12 22:54:36.639294 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.117876ms
verify: 2020/08/12 22:54:36.641404 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 22:54:36.641875 Find Ty Address
rdfLoader: 2020/08/12 22:54:36.641885 Find Ty Age
rdfLoader: 2020/08/12 22:54:36.641891 Find Ty Cars
rdfLoader: 2020/08/12 22:54:36.641896 Add to SS . [Bentley]
rdfLoader: 2020/08/12 22:54:36.641901 Find Ty DOB
rdfLoader: 2020/08/12 22:54:36.641905 Find Ty Friends
rdfLoader: 2020/08/12 22:54:36.641909 Find Ty Jobs
rdfLoader: 2020/08/12 22:54:36.641913 Find Ty Name
rdfLoader: 2020/08/12 22:54:36.641917 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:54:36.641932 Find Ty Siblings
rdfLoader: 2020/08/12 22:54:36.641977 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:54:36.642023 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:54:36.642029 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:54:36.642054 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.642060 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.642066 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.642072 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.642078 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.642083 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:54:36.642095 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:54:36.642099 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:54:36.642104 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000387c20)}
SaveRDFNode: 2020/08/12 22:54:36.642108 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:54:36.642116 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.642138 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.642144 UID received  : 8GXogTUETQWPYHLq5lAooA==
verify: 2020/08/12 22:54:36.642532 *** Verify running...... 2
verify: 2020/08/12 22:54:36.642549 verify exited.....
DB: 2020/08/12 22:54:36.644231 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.326116ms
DB: 2020/08/12 22:54:36.649454 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.113574ms
DB: 2020/08/12 22:54:36.654590 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.099355ms
DB: 2020/08/12 22:54:36.659649 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.999828ms
DB: 2020/08/12 22:54:36.662282 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 23.830537ms
DB: 2020/08/12 22:54:36.667454 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.139833ms
DB: 2020/08/12 22:54:36.669362 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.09884ms
DB: 2020/08/12 22:54:36.670298 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 28.126986ms
DB: 2020/08/12 22:54:36.672474 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.983378ms
DB: 2020/08/12 22:54:36.674294 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.899816ms
DB: 2020/08/12 22:54:36.675291 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.956567ms
DB: 2020/08/12 22:54:36.678061 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.556715ms
DB: 2020/08/12 22:54:36.679150 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.826953ms
DB: 2020/08/12 22:54:36.680180 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.8526ms
DB: 2020/08/12 22:54:36.683134 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.006676ms
SaveRDFNode: 2020/08/12 22:54:36.683149 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387080)}
rdfUIDdb: 2020/08/12 22:54:36.683157 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.683161 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.683167 Received UID: X18=
SaveRDFNode: 2020/08/12 22:54:36.683183 a: = db.Item{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:54:36.684056 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 24.375442ms
SaveRDFNode: 2020/08/12 22:54:36.684068 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386240)}
rdfUIDdb: 2020/08/12 22:54:36.684074 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.684077 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.684083 Received UID: X18=
SaveRDFNode: 2020/08/12 22:54:36.684093 a: = db.Item{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:54:36.684364 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.182681ms
SaveRDFNode: 2020/08/12 22:54:36.684375 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386780)}
rdfUIDdb: 2020/08/12 22:54:36.684380 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.684384 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.684405 Received UID: X18=
SaveRDFNode: 2020/08/12 22:54:36.684421 a: = db.Item{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:54:36.685118 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.907716ms
DB: 2020/08/12 22:54:36.689106 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.883754ms
SaveRDFNode: 2020/08/12 22:54:36.689118 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387080)}
rdfUIDdb: 2020/08/12 22:54:36.689124 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.689128 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.689133 Received UID: X18=
SaveRDFNode: 2020/08/12 22:54:36.689143 a: = db.Item{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:54:36.689474 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.026158ms
SaveRDFNode: 2020/08/12 22:54:36.689486 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386780)}
rdfUIDdb: 2020/08/12 22:54:36.689491 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.689495 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.689500 Received UID: X18=
SaveRDFNode: 2020/08/12 22:54:36.689510 a: = db.Item{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:54:36.689808 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.673353ms
SaveRDFNode: 2020/08/12 22:54:36.689820 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386240)}
rdfUIDdb: 2020/08/12 22:54:36.689826 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.689829 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.689835 Received UID: X18=
SaveRDFNode: 2020/08/12 22:54:36.689845 a: = db.Item{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:54:36.690119 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.933143ms
SaveRDFNode: 2020/08/12 22:54:36.690131 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387c20)}
rdfUIDdb: 2020/08/12 22:54:36.690137 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.690141 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.690146 Received UID: X18=
SaveRDFNode: 2020/08/12 22:54:36.690160 a: = db.Item{PKey:[]uint8{0xf0, 0x65, 0xe8, 0x81, 0x35, 0x4, 0x4d, 0x5, 0x8f, 0x60, 0x72, 0xea, 0xe6, 0x50, 0x28, 0xa0}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:54:36.694325 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.151545ms
SaveRDFNode: 2020/08/12 22:54:36.694335 Returned.+++++++++++ No error
DB: 2020/08/12 22:54:36.694449 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.910678ms
SaveRDFNode: 2020/08/12 22:54:36.694463 Returned.+++++++++++ No error
DB: 2020/08/12 22:54:36.695256 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.065849ms
SaveRDFNode: 2020/08/12 22:54:36.695268 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387c20)}
rdfUIDdb: 2020/08/12 22:54:36.695303 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:54:36.695309 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:54:36.695315 Received UID: X18=
SaveRDFNode: 2020/08/12 22:54:36.695328 a: = db.Item{PKey:[]uint8{0xf0, 0x65, 0xe8, 0x81, 0x35, 0x4, 0x4d, 0x5, 0x8f, 0x60, 0x72, 0xea, 0xe6, 0x50, 0x28, 0xa0}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:54:36.695575 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.687739ms
SaveRDFNode: 2020/08/12 22:54:36.695583 Returned.+++++++++++ No error
DB: 2020/08/12 22:54:36.700439 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.081734ms
SaveRDFNode: 2020/08/12 22:54:36.700448 Returned.+++++++++++ No error
DB: 2020/08/12 22:54:36.705483 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.709122 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.712606 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.716505 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.723458 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.894652ms
DB: 2020/08/12 22:54:36.732392 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 8.222231ms
FetchForUpdate: 2020/08/12 22:54:36.732416 ** Cache FetchForUpdate Cache Key Value: [9EYyINEqQNuOz4s/BfHcNg==]   sortk: A#G#:S
FetchNode: 2020/08/12 22:54:36.732424  node: 9EYyINEqQNuOz4s/BfHcNg== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:54:36.732669 ** Cache FetchForUpdate Cache Key Value: [y1GV8MaqSUi0Ad6jswUH/A==]   sortk: A#
FetchNode: 2020/08/12 22:54:36.732685  node: y1GV8MaqSUi0Ad6jswUH/A== subKey: A#
DB: 2020/08/12 22:54:36.735972 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.485645ms
FetchForUpdate: 2020/08/12 22:54:36.736047 len(nb): 1
fetchItems: 2020/08/12 22:54:36.736055 +++  Cache FetchItems for sortk A#G#:S UID: [9EYyINEqQNuOz4s/BfHcNg==] 
FetchNode: 2020/08/12 22:54:36.736060  node: 9EYyINEqQNuOz4s/BfHcNg== subKey: A#G#:S
DB: 2020/08/12 22:54:36.740276 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.187723ms
DB: 2020/08/12 22:54:36.746208 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.18857ms
Unlock: 2020/08/12 22:54:36.746220 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:54:36.757114 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 24.366695ms
FetchForUpdate: 2020/08/12 22:54:36.757262 len(nb): 7
fetchItems: 2020/08/12 22:54:36.757271 +++  Cache FetchItems for sortk A# UID: [y1GV8MaqSUi0Ad6jswUH/A==] 
FetchNode: 2020/08/12 22:54:36.757276  node: y1GV8MaqSUi0Ad6jswUH/A== subKey: A#
DB: 2020/08/12 22:54:36.760752 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.441895ms
GetType:2020/08/12 22:54:36.760853 len(d.m)= 7
GetType: 2020/08/12 22:54:36.760874  A#:A : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.760898  A#:C : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.760910  A#:D : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.760927  A#:N : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.760940  A#G#:F : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:36.760963  A#G#:S : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:36.760976  A#T : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:54:36.762766 len(d.m)= 7
GetType: 2020/08/12 22:54:36.762789  A#:A : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.762803  A#:C : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.762821  A#:D : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.762846  A#:N : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.762859  A#G#:F : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:36.762899  A#G#:S : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:36.762916  A#T : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:54:36.763774 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/12 22:54:36.764371 ** Cache FetchForUpdate Cache Key Value: [9EYyINEqQNuOz4s/BfHcNg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:36.764382 +++  Cache FetchItems for sortk A#G#:S UID: [9EYyINEqQNuOz4s/BfHcNg==] 
FetchNode: 2020/08/12 22:54:36.764388  node: 9EYyINEqQNuOz4s/BfHcNg== subKey: A#G#:S
DB: 2020/08/12 22:54:36.768600 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.176893ms
DB: 2020/08/12 22:54:36.776824 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.444128ms
DB: 2020/08/12 22:54:36.781977 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.099862ms
DB: 2020/08/12 22:54:36.787239 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.16036ms
DB: 2020/08/12 22:54:36.793070 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.768919ms
DB: 2020/08/12 22:54:36.798218 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.874258ms
DB: 2020/08/12 22:54:36.803717 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.174489ms
DB: 2020/08/12 22:54:36.810554 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.524261ms
DB: 2020/08/12 22:54:36.815879 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.017622ms
DB: 2020/08/12 22:54:36.821592 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.376356ms
Unlock: 2020/08/12 22:54:36.821622 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:54:36.827958 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.19273ms
FetchForUpdate: 2020/08/12 22:54:36.827970 ** Cache FetchForUpdate Cache Key Value: [9EYyINEqQNuOz4s/BfHcNg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:36.827976 +++  Cache FetchItems for sortk A#G#:S UID: [9EYyINEqQNuOz4s/BfHcNg==] 
FetchNode: 2020/08/12 22:54:36.827981  node: 9EYyINEqQNuOz4s/BfHcNg== subKey: A#G#:S
DB: 2020/08/12 22:54:36.831471 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.448135ms
AttachNode: gr1 2020/08/12 22:54:36.831577 Errored: SetUpredAvailable :for  9EYyINEqQNuOz4s/BfHcNg==
Cache: 2020/08/12 22:54:36.831584 In SetUpredAvailable: pUid, tUID:  9EYyINEqQNuOz4s/BfHcNg== 9EYyINEqQNuOz4s/BfHcNg== A#G#:S
Cache: 2020/08/12 22:54:36.831589 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:54:36.840616 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 8.996722ms
Unlock: 2020/08/12 22:54:36.840627 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:54:36.852285 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 11.001075ms
DB: 2020/08/12 22:54:36.856057 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.860979 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.865155 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.868143 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.873860 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.663284ms
DB: 2020/08/12 22:54:36.879085 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.949531ms
FetchForUpdate: 2020/08/12 22:54:36.879101 ** Cache FetchForUpdate Cache Key Value: [jDWyBvIURM6kqnavyXgDgg==]   sortk: A#G#:S
FetchNode: 2020/08/12 22:54:36.879107  node: jDWyBvIURM6kqnavyXgDgg== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:54:36.879294 ** Cache FetchForUpdate Cache Key Value: [y1GV8MaqSUi0Ad6jswUH/A==]   sortk: A#
fetchItems: 2020/08/12 22:54:36.879303 +++  Cache FetchItems for sortk A# UID: [y1GV8MaqSUi0Ad6jswUH/A==] 
FetchNode: 2020/08/12 22:54:36.879315  node: y1GV8MaqSUi0Ad6jswUH/A== subKey: A#
DB: 2020/08/12 22:54:36.883114 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.714222ms
GetType:2020/08/12 22:54:36.883246 len(d.m)= 7
GetType: 2020/08/12 22:54:36.883267  A#:A : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.883281  A#:C : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.883306  A#:D : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.883320  A#:N : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.883345  A#G#:F : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:36.883374  A#G#:S : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:36.883387  A#T : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:54:36.884026 len(d.m)= 7
GetType: 2020/08/12 22:54:36.884064  A#:D : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:D", N:0, S:"13 March 1958", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.884078  A#:N : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:N", N:0, S:"Ross Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.884090  A#G#:F : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:36.884105  A#G#:S : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:36.884116  A#T : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.884128  A#:A : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:A", N:62, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:36.884140  A#:C : &block.DataItem{PKey:[]uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Alfa", "Fiat", "Honda"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:54:36.884477 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:54:36.884949 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.803475ms
FetchForUpdate: 2020/08/12 22:54:36.884980 len(nb): 1
fetchItems: 2020/08/12 22:54:36.884986 +++  Cache FetchItems for sortk A#G#:S UID: [jDWyBvIURM6kqnavyXgDgg==] 
FetchNode: 2020/08/12 22:54:36.884991  node: jDWyBvIURM6kqnavyXgDgg== subKey: A#G#:S
DB: 2020/08/12 22:54:36.888513 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.491014ms
DB: 2020/08/12 22:54:36.894037 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.209968ms
Unlock: 2020/08/12 22:54:36.894053 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 22:54:36.894376 ** Cache FetchForUpdate Cache Key Value: [jDWyBvIURM6kqnavyXgDgg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:36.894386 +++  Cache FetchItems for sortk A#G#:S UID: [jDWyBvIURM6kqnavyXgDgg==] 
FetchNode: 2020/08/12 22:54:36.894392  node: jDWyBvIURM6kqnavyXgDgg== subKey: A#G#:S
DB: 2020/08/12 22:54:36.898011 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.578254ms
DB: 2020/08/12 22:54:36.905192 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.630559ms
DB: 2020/08/12 22:54:36.910445 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.961306ms
DB: 2020/08/12 22:54:36.916228 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.221717ms
DB: 2020/08/12 22:54:36.928714 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 12.035914ms
DB: 2020/08/12 22:54:36.934323 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.14172ms
DB: 2020/08/12 22:54:36.940442 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.607743ms
DB: 2020/08/12 22:54:36.947413 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.547412ms
DB: 2020/08/12 22:54:36.953078 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.239601ms
DB: 2020/08/12 22:54:36.958831 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.317089ms
Unlock: 2020/08/12 22:54:36.958843 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:54:36.964367 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.031528ms
FetchForUpdate: 2020/08/12 22:54:36.964380 ** Cache FetchForUpdate Cache Key Value: [jDWyBvIURM6kqnavyXgDgg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:36.964388 +++  Cache FetchItems for sortk A#G#:S UID: [jDWyBvIURM6kqnavyXgDgg==] 
FetchNode: 2020/08/12 22:54:36.964393  node: jDWyBvIURM6kqnavyXgDgg== subKey: A#G#:S
DB: 2020/08/12 22:54:36.968050 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.623711ms
AttachNode: gr1 2020/08/12 22:54:36.968154 Errored: SetUpredAvailable :for  jDWyBvIURM6kqnavyXgDgg==
Cache: 2020/08/12 22:54:36.968162 In SetUpredAvailable: pUid, tUID:  jDWyBvIURM6kqnavyXgDgg== jDWyBvIURM6kqnavyXgDgg== A#G#:S
Cache: 2020/08/12 22:54:36.968167 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:54:36.973458 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.255128ms
Unlock: 2020/08/12 22:54:36.973481 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:54:36.978823 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.865285ms
DB: 2020/08/12 22:54:36.982352 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.986435 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.990703 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:36.994145 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.000179 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.976458ms
DB: 2020/08/12 22:54:37.005179 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.925438ms
FetchForUpdate: 2020/08/12 22:54:37.005197 ** Cache FetchForUpdate Cache Key Value: [y1GV8MaqSUi0Ad6jswUH/A==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.005203 +++  Cache FetchItems for sortk A#G#:S UID: [y1GV8MaqSUi0Ad6jswUH/A==] 
FetchNode: 2020/08/12 22:54:37.005208  node: y1GV8MaqSUi0Ad6jswUH/A== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:54:37.005383 ** Cache FetchForUpdate Cache Key Value: [9EYyINEqQNuOz4s/BfHcNg==]   sortk: A#
fetchItems: 2020/08/12 22:54:37.005393 +++  Cache FetchItems for sortk A# UID: [9EYyINEqQNuOz4s/BfHcNg==] 
FetchNode: 2020/08/12 22:54:37.005404  node: 9EYyINEqQNuOz4s/BfHcNg== subKey: A#
DB: 2020/08/12 22:54:37.008453 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.205984ms
DB: 2020/08/12 22:54:37.009403 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.940705ms
GetType:2020/08/12 22:54:37.009581 len(d.m)= 10
GetType: 2020/08/12 22:54:37.009603  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.009620  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.009633  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.009645  A#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.009674  A#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.009698  A#G#:F : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:37.009718  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:54:37.009734  A#:C : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.009747  A#T : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.009758  A#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:54:37.010612 len(d.m)= 10
GetType: 2020/08/12 22:54:37.010633  A#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.010645  A#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.010657  A#G#:F : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:37.010692  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:54:37.010711  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.010724  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.010736  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.010747  A#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.010759  A#:C : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.010770  A#T : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:54:37.011080 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:54:37.014044 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.194086ms
Unlock: 2020/08/12 22:54:37.014055 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 22:54:37.014424 ** Cache FetchForUpdate Cache Key Value: [y1GV8MaqSUi0Ad6jswUH/A==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.014435 +++  Cache FetchItems for sortk A#G#:S UID: [y1GV8MaqSUi0Ad6jswUH/A==] 
FetchNode: 2020/08/12 22:54:37.014440  node: y1GV8MaqSUi0Ad6jswUH/A== subKey: A#G#:S
DB: 2020/08/12 22:54:37.017767 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.289735ms
DB: 2020/08/12 22:54:37.024893 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.530563ms
DB: 2020/08/12 22:54:37.031193 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.005164ms
DB: 2020/08/12 22:54:37.037070 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.165993ms
DB: 2020/08/12 22:54:37.044041 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.489569ms
DB: 2020/08/12 22:54:37.049567 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.101992ms
DB: 2020/08/12 22:54:37.056432 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.268494ms
DB: 2020/08/12 22:54:37.063448 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.569569ms
DB: 2020/08/12 22:54:37.069238 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.357985ms
DB: 2020/08/12 22:54:37.075109 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.424387ms
Unlock: 2020/08/12 22:54:37.075123 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:54:37.081700 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.931908ms
FetchForUpdate: 2020/08/12 22:54:37.081719 ** Cache FetchForUpdate Cache Key Value: [y1GV8MaqSUi0Ad6jswUH/A==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.081725 +++  Cache FetchItems for sortk A#G#:S UID: [y1GV8MaqSUi0Ad6jswUH/A==] 
FetchNode: 2020/08/12 22:54:37.081730  node: y1GV8MaqSUi0Ad6jswUH/A== subKey: A#G#:S
DB: 2020/08/12 22:54:37.086288 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.514653ms
AttachNode: gr1 2020/08/12 22:54:37.086406 Errored: SetUpredAvailable :for  y1GV8MaqSUi0Ad6jswUH/A==
Cache: 2020/08/12 22:54:37.086415 In SetUpredAvailable: pUid, tUID:  y1GV8MaqSUi0Ad6jswUH/A== y1GV8MaqSUi0Ad6jswUH/A== A#G#:S
Cache: 2020/08/12 22:54:37.086419 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:54:37.091691 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.227491ms
Unlock: 2020/08/12 22:54:37.091706 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:54:37.097366 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.989736ms
DB: 2020/08/12 22:54:37.100633 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.104611 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.108350 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.111493 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.117458 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.893352ms
DB: 2020/08/12 22:54:37.122690 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.947687ms
FetchForUpdate: 2020/08/12 22:54:37.122704 ** Cache FetchForUpdate Cache Key Value: [jDWyBvIURM6kqnavyXgDgg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.122711 +++  Cache FetchItems for sortk A#G#:S UID: [jDWyBvIURM6kqnavyXgDgg==] 
FetchNode: 2020/08/12 22:54:37.122716  node: jDWyBvIURM6kqnavyXgDgg== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:54:37.122892 ** Cache FetchForUpdate Cache Key Value: [9EYyINEqQNuOz4s/BfHcNg==]   sortk: A#
fetchItems: 2020/08/12 22:54:37.122901 +++  Cache FetchItems for sortk A# UID: [9EYyINEqQNuOz4s/BfHcNg==] 
FetchNode: 2020/08/12 22:54:37.122913  node: 9EYyINEqQNuOz4s/BfHcNg== subKey: A#
DB: 2020/08/12 22:54:37.126536 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.784977ms
DB: 2020/08/12 22:54:37.128599 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 5.608296ms
GetType:2020/08/12 22:54:37.129037 len(d.m)= 10
GetType: 2020/08/12 22:54:37.129069  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.129128  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.129153  A#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.129185  A#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.129202  A#G#:F : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:37.129226  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:54:37.129246  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.129262  A#T : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.129413  A#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.129451  A#:C : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType:2020/08/12 22:54:37.130327 len(d.m)= 10
GetType: 2020/08/12 22:54:37.130357  A#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:N", N:0, S:"Paul Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.130377  A#G#:F : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType: 2020/08/12 22:54:37.130404  A#G#:S : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1}, Id:[]int{0, 0}}
GetType: 2020/08/12 22:54:37.130428  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.130465  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.130487  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.130504  A#:D : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:D", N:0, S:"2 June 1960", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.130527  A#:A : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:A", N:58, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.130545  A#:C : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Holden Commodore", "Honda", "VW Golf"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.130569  A#T : &block.DataItem{PKey:[]uint8{0xf4, 0x46, 0x32, 0x20, 0xd1, 0x2a, 0x40, 0xdb, 0x8e, 0xcf, 0x8b, 0x3f, 0x5, 0xf1, 0xdc, 0x36}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
Unlock: 2020/08/12 22:54:37.130895 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:54:37.133679 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.357075ms
DB: 2020/08/12 22:54:37.138560 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.850748ms
DB: 2020/08/12 22:54:37.138576 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.850748ms
DB: 2020/08/12 22:54:37.143503 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.896132ms
DB: 2020/08/12 22:54:37.143530 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.896132ms
DB: 2020/08/12 22:54:37.149773 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.165188ms
DB: 2020/08/12 22:54:37.155078 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.238518ms
Unlock: 2020/08/12 22:54:37.155089 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:54:37.162509 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.606346ms
DB: 2020/08/12 22:54:37.167578 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.016112ms
DB: 2020/08/12 22:54:37.172782 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.091203ms
DB: 2020/08/12 22:54:37.179313 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.469678ms
DB: 2020/08/12 22:54:37.184435 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.059049ms
DB: 2020/08/12 22:54:37.190082 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.18449ms
DB: 2020/08/12 22:54:37.197683 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.927422ms
DB: 2020/08/12 22:54:37.203349 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.215356ms
DB: 2020/08/12 22:54:37.209394 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.510465ms
DB: 2020/08/12 22:54:37.214747 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.081843ms
FetchForUpdate: 2020/08/12 22:54:37.214759 ** Cache FetchForUpdate Cache Key Value: [jDWyBvIURM6kqnavyXgDgg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.214765 +++  Cache FetchItems for sortk A#G#:S UID: [jDWyBvIURM6kqnavyXgDgg==] 
FetchNode: 2020/08/12 22:54:37.214770  node: jDWyBvIURM6kqnavyXgDgg== subKey: A#G#:S
DB: 2020/08/12 22:54:37.219172 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.366862ms
AttachNode: gr1 2020/08/12 22:54:37.219279 Errored: SetUpredAvailable :for  jDWyBvIURM6kqnavyXgDgg==
Cache: 2020/08/12 22:54:37.219288 In SetUpredAvailable: pUid, tUID:  jDWyBvIURM6kqnavyXgDgg== p8QRllKMSyiTOUjEjQ9cvA== A#G#:S
Cache: 2020/08/12 22:54:37.219301 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:54:37.224551 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.216846ms
Unlock: 2020/08/12 22:54:37.224561 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:54:37.230183 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.195871ms
DB: 2020/08/12 22:54:37.233374 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.236324 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.239547 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.243070 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.248326 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.180985ms
DB: 2020/08/12 22:54:37.253546 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.803327ms
FetchForUpdate: 2020/08/12 22:54:37.253583 ** Cache FetchForUpdate Cache Key Value: [y1GV8MaqSUi0Ad6jswUH/A==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.253591 +++  Cache FetchItems for sortk A#G#:S UID: [y1GV8MaqSUi0Ad6jswUH/A==] 
FetchNode: 2020/08/12 22:54:37.253595  node: y1GV8MaqSUi0Ad6jswUH/A== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:54:37.253775 ** Cache FetchForUpdate Cache Key Value: [jDWyBvIURM6kqnavyXgDgg==]   sortk: A#
fetchItems: 2020/08/12 22:54:37.253785 +++  Cache FetchItems for sortk A# UID: [jDWyBvIURM6kqnavyXgDgg==] 
FetchNode: 2020/08/12 22:54:37.253820  node: jDWyBvIURM6kqnavyXgDgg== subKey: A#
DB: 2020/08/12 22:54:37.257763 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.893042ms
GetType:2020/08/12 22:54:37.257937 len(d.m)= 10
GetType: 2020/08/12 22:54:37.257959  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.257972  A#:A : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.257986  A#:C : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.257997  A#T : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258017  A#G#:S : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, []uint8{0xa7, 0xc4, 0x11, 0x96, 0x52, 0x8c, 0x4b, 0x28, 0x93, 0x39, 0x48, 0xc4, 0x8d, 0xf, 0x5c, 0xbc}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:54:37.258042  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258057  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258069  A#:D : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258081  A#:N : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258092  A#G#:F : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 22:54:37.258122 len(d.m)= 10
GetType: 2020/08/12 22:54:37.258135  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258155  A#:A : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258169  A#:C : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258181  A#T : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258202  A#G#:S : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, []uint8{0xa7, 0xc4, 0x11, 0x96, 0x52, 0x8c, 0x4b, 0x28, 0x93, 0x39, 0x48, 0xc4, 0x8d, 0xf, 0x5c, 0xbc}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:54:37.258214  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258227  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258238  A#:D : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258249  A#:N : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.258261  A#G#:F : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 22:54:37.258277 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:54:37.259059 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.431193ms
DB: 2020/08/12 22:54:37.264954 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.579729ms
DB: 2020/08/12 22:54:37.270928 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.936977ms
DB: 2020/08/12 22:54:37.270947 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.936977ms
DB: 2020/08/12 22:54:37.277036 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.049312ms
DB: 2020/08/12 22:54:37.277054 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.049312ms
DB: 2020/08/12 22:54:37.283559 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.427381ms
DB: 2020/08/12 22:54:37.289638 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.993807ms
Unlock: 2020/08/12 22:54:37.289658 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:54:37.296418 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.650271ms
DB: 2020/08/12 22:54:37.302680 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.08632ms
DB: 2020/08/12 22:54:37.309427 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.374658ms
DB: 2020/08/12 22:54:37.316370 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.662413ms
DB: 2020/08/12 22:54:37.321855 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.186396ms
DB: 2020/08/12 22:54:37.328493 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.329997ms
DB: 2020/08/12 22:54:37.335407 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.610652ms
DB: 2020/08/12 22:54:37.341669 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.982543ms
DB: 2020/08/12 22:54:37.348182 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.194618ms
DB: 2020/08/12 22:54:37.353474 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.042626ms
FetchForUpdate: 2020/08/12 22:54:37.353486 ** Cache FetchForUpdate Cache Key Value: [y1GV8MaqSUi0Ad6jswUH/A==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.353492 +++  Cache FetchItems for sortk A#G#:S UID: [y1GV8MaqSUi0Ad6jswUH/A==] 
FetchNode: 2020/08/12 22:54:37.353497  node: y1GV8MaqSUi0Ad6jswUH/A== subKey: A#G#:S
DB: 2020/08/12 22:54:37.357391 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.858655ms
AttachNode: gr1 2020/08/12 22:54:37.357494 Errored: SetUpredAvailable :for  y1GV8MaqSUi0Ad6jswUH/A==
Cache: 2020/08/12 22:54:37.357502 In SetUpredAvailable: pUid, tUID:  y1GV8MaqSUi0Ad6jswUH/A== UbxViWOZT/euN61i7zNUuw== A#G#:S
Cache: 2020/08/12 22:54:37.357507 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:54:37.362768 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.228287ms
Unlock: 2020/08/12 22:54:37.362778 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:54:37.370719 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.456984ms
DB: 2020/08/12 22:54:37.374112 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.380979 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.384960 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.389015 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:54:37.394269 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.190033ms
DB: 2020/08/12 22:54:37.399576 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.962635ms
FetchForUpdate: 2020/08/12 22:54:37.399591 ** Cache FetchForUpdate Cache Key Value: [9EYyINEqQNuOz4s/BfHcNg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.399597 +++  Cache FetchItems for sortk A#G#:S UID: [9EYyINEqQNuOz4s/BfHcNg==] 
FetchNode: 2020/08/12 22:54:37.399614  node: 9EYyINEqQNuOz4s/BfHcNg== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:54:37.399826 ** Cache FetchForUpdate Cache Key Value: [jDWyBvIURM6kqnavyXgDgg==]   sortk: A#
fetchItems: 2020/08/12 22:54:37.399836 +++  Cache FetchItems for sortk A# UID: [jDWyBvIURM6kqnavyXgDgg==] 
FetchNode: 2020/08/12 22:54:37.399862  node: jDWyBvIURM6kqnavyXgDgg== subKey: A#
DB: 2020/08/12 22:54:37.403963 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.284032ms
DB: 2020/08/12 22:54:37.405111 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 5.180752ms
GetType:2020/08/12 22:54:37.405270 len(d.m)= 10
GetType: 2020/08/12 22:54:37.405293  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.405318  A#:A : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.405334  A#:C : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.405345  A#T : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.405363  A#G#:S : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, []uint8{0xa7, 0xc4, 0x11, 0x96, 0x52, 0x8c, 0x4b, 0x28, 0x93, 0x39, 0x48, 0xc4, 0x8d, 0xf, 0x5c, 0xbc}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:54:37.405376  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.405387  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.405401  A#:D : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.405433  A#:N : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.405446  A#G#:F : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
GetType:2020/08/12 22:54:37.406278 len(d.m)= 10
GetType: 2020/08/12 22:54:37.406315  A#G#:S#:N : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:N", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "Ross Payne"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.406328  A#:A : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:A", N:67, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.406340  A#:C : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:C", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string{"Ford Laser", "Honda", "Mitsubishi", "VW Passat"}, BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.406351  A#T : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#T", N:0, S:"Person", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.406368  A#G#:S : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}, []uint8{0xcb, 0x51, 0x95, 0xf0, 0xc6, 0xaa, 0x49, 0x48, 0xb4, 0x1, 0xde, 0xa3, 0xb3, 0x5, 0x7, 0xfc}, []uint8{0xa7, 0xc4, 0x11, 0x96, 0x52, 0x8c, 0x4b, 0x28, 0x93, 0x39, 0x48, 0xc4, 0x8d, 0xf, 0x5c, 0xbc}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1, 1, 4}, Id:[]int{0, 0, 1}}
GetType: 2020/08/12 22:54:37.406380  A#G#:S#:A : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:A", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64{0, 62}, LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.406393  A#G#:S#:D : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:S#:D", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string{"__NULL__", "13 March 1958"}, LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool{false, false}, XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.406422  A#:D : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:D", N:0, S:"29 Jan 1953", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.406435  A#:N : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#:N", N:0, S:"Ian Payne", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8(nil), NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int(nil), Id:[]int(nil)}
GetType: 2020/08/12 22:54:37.406453  A#G#:F : &block.DataItem{PKey:[]uint8{0x8c, 0x35, 0xb2, 0x6, 0xf2, 0x14, 0x44, 0xce, 0xa4, 0xaa, 0x76, 0xaf, 0xc9, 0x78, 0x3, 0x82}, SortK:"A#G#:F", N:0, S:"", Bl:false, B:[]uint8(nil), LS:[]string(nil), LN:[]float64(nil), LB:[][]uint8(nil), LBl:[]bool(nil), Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, NS:[]float64(nil), SS:[]string(nil), BS:[][]uint8(nil), XBl:[]bool(nil), XF:[]int{1}, Id:[]int{0}}
Unlock: 2020/08/12 22:54:37.406748 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:54:37.410323 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.824001ms
DB: 2020/08/12 22:54:37.415275 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.92201ms
DB: 2020/08/12 22:54:37.415289 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.92201ms
DB: 2020/08/12 22:54:37.420224 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.902616ms
DB: 2020/08/12 22:54:37.420239 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.902616ms
DB: 2020/08/12 22:54:37.425712 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.269836ms
DB: 2020/08/12 22:54:37.430987 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.099504ms
Unlock: 2020/08/12 22:54:37.430998 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:54:37.438459 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.552204ms
DB: 2020/08/12 22:54:37.443950 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.239191ms
DB: 2020/08/12 22:54:37.449129 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.079004ms
DB: 2020/08/12 22:54:37.455817 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.628441ms
DB: 2020/08/12 22:54:37.460819 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.946904ms
DB: 2020/08/12 22:54:37.466104 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.220267ms
DB: 2020/08/12 22:54:37.473166 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.598947ms
DB: 2020/08/12 22:54:37.478515 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.941602ms
DB: 2020/08/12 22:54:37.484084 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.128009ms
DB: 2020/08/12 22:54:37.489467 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.116411ms
FetchForUpdate: 2020/08/12 22:54:37.489478 ** Cache FetchForUpdate Cache Key Value: [9EYyINEqQNuOz4s/BfHcNg==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:54:37.489484 +++  Cache FetchItems for sortk A#G#:S UID: [9EYyINEqQNuOz4s/BfHcNg==] 
FetchNode: 2020/08/12 22:54:37.489500  node: 9EYyINEqQNuOz4s/BfHcNg== subKey: A#G#:S
DB: 2020/08/12 22:54:37.492915 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.350243ms
AttachNode: gr1 2020/08/12 22:54:37.492997 Errored: SetUpredAvailable :for  9EYyINEqQNuOz4s/BfHcNg==
Cache: 2020/08/12 22:54:37.493005 In SetUpredAvailable: pUid, tUID:  9EYyINEqQNuOz4s/BfHcNg== LdAklEL4QlCGEr6Wmb28MA== A#G#:S
Cache: 2020/08/12 22:54:37.493009 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:54:37.498324 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.272358ms
Unlock: 2020/08/12 22:54:37.498333 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:54:37.503996 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.075817ms
rdfLoader: 2020/08/12 22:54:37.504007 saveNode finished waiting...exiting
grmgr: 2020/08/12 22:54:37.504017 Powering down...
rdfuuid: 2020/08/12 22:54:37.504023 Powering down...
DB:2020/08/12 22:57:37 log.go:18: ===============================================================================
grmgr: 2020/08/12 22:57:37.020391 Powering on...
rdfLoader: 2020/08/12 22:57:37.020440 verify started....xx.
rdfLoader: 2020/08/12 22:57:37.020448 saveNode started......
rdfuuid: 2020/08/12 22:57:37.020459 Powering on...
rdfLoader: 2020/08/12 22:57:37.020466 *************** All started 
rdfLoader: 2020/08/12 22:57:37.028349 .  getType..
rdfLoader: 2020/08/12 22:57:37.028360 node.TyName : [Person]
DB: 2020/08/12 22:57:37.099542 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.1043ms
verify: 2020/08/12 22:57:37.099697 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 22:57:37.099743 Find Ty Address
rdfLoader: 2020/08/12 22:57:37.099749 Find Ty Age
rdfLoader: 2020/08/12 22:57:37.099755 Find Ty Cars
rdfLoader: 2020/08/12 22:57:37.099760 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:57:37.099765 Add to SS . [Alfa]
rdfLoader: 2020/08/12 22:57:37.099769 Find Ty DOB
rdfLoader: 2020/08/12 22:57:37.099774 Find Ty Friends
rdfLoader: 2020/08/12 22:57:37.099778 Find Ty Jobs
rdfLoader: 2020/08/12 22:57:37.099782 Find Ty Name
rdfLoader: 2020/08/12 22:57:37.099786 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:57:37.099791 Find Ty Siblings
rdfLoader: 2020/08/12 22:57:37.099800 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:57:37.099828 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:57:37.099833 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:57:37.099857 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.099864 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.099879 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.099886 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.099891 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.099897 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.099902 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:57:37.099906 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:57:37.099913 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003845a0)}
SaveRDFNode: 2020/08/12 22:57:37.099917 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:57:37.099925 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.099930 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.099935 UID received  : jpDjNuQ7ScOhlUhTDfYRuw==
grmgr: 2020/08/12 22:57:37.100123 	limit.ch <- struct{}{} 
verify: 2020/08/12 22:57:37.100134 *** Verify running...... 1
rdfLoader: 2020/08/12 22:57:37.100138 .  getType..
rdfLoader: 2020/08/12 22:57:37.100142 node.TyName : [Person]
verify: 2020/08/12 22:57:37.100182 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/12 22:57:37.100223 Find Ty Address
rdfLoader: 2020/08/12 22:57:37.100228 Find Ty Age
rdfLoader: 2020/08/12 22:57:37.100233 Find Ty Cars
rdfLoader: 2020/08/12 22:57:37.100238 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:57:37.100243 Add to SS . [VW Golf]
rdfLoader: 2020/08/12 22:57:37.100247 Find Ty DOB
rdfLoader: 2020/08/12 22:57:37.100251 Find Ty Friends
rdfLoader: 2020/08/12 22:57:37.100255 Find Ty Jobs
rdfLoader: 2020/08/12 22:57:37.100259 Find Ty Name
rdfLoader: 2020/08/12 22:57:37.100263 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:57:37.100267 Find Ty Siblings
rdfLoader: 2020/08/12 22:57:37.100275 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:57:37.100302 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:57:37.100307 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:57:37.100326 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.100332 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.100339 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.100344 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.100349 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.100355 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.100361 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:57:37.100370 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:57:37.100376 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000384ae0)}
SaveRDFNode: 2020/08/12 22:57:37.100380 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:57:37.100387 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.100391 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.100396 UID received  : N9WnoFxsTGycbQsCLqMIzQ==
grmgr: 2020/08/12 22:57:37.100670 	limit.ch <- struct{}{} 
verify: 2020/08/12 22:57:37.100753 *** Verify running...... 1
rdfLoader: 2020/08/12 22:57:37.100804 .  getType..
rdfLoader: 2020/08/12 22:57:37.100809 node.TyName : [Person]
verify: 2020/08/12 22:57:37.100828 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 22:57:37.100864 Find Ty Address
rdfLoader: 2020/08/12 22:57:37.100869 Find Ty Age
rdfLoader: 2020/08/12 22:57:37.100874 Find Ty Cars
rdfLoader: 2020/08/12 22:57:37.100879 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/12 22:57:37.100884 Add to SS . [Ford Laser]
rdfLoader: 2020/08/12 22:57:37.100888 Add to SS . [Honda]
rdfLoader: 2020/08/12 22:57:37.100892 Find Ty DOB
rdfLoader: 2020/08/12 22:57:37.100896 Find Ty Friends
rdfLoader: 2020/08/12 22:57:37.100900 Find Ty Jobs
rdfLoader: 2020/08/12 22:57:37.100904 Find Ty Name
rdfLoader: 2020/08/12 22:57:37.100908 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:57:37.100912 Find Ty Siblings
rdfLoader: 2020/08/12 22:57:37.100920 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:57:37.100945 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:57:37.100949 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:57:37.100967 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.100975 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.100995 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101002 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101008 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101014 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101019 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:57:37.101023 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:57:37.101029 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000385020)}
SaveRDFNode: 2020/08/12 22:57:37.101033 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:57:37.101040 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.101044 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.101050 UID received  : KOT4LGk/Sv+CJanvOexvWQ==
grmgr: 2020/08/12 22:57:37.101221 	limit.ch <- struct{}{} 
verify: 2020/08/12 22:57:37.101232 *** Verify running...... 2
rdfLoader: 2020/08/12 22:57:37.101236 .  getType..
rdfLoader: 2020/08/12 22:57:37.101240 node.TyName : [Person]
verify: 2020/08/12 22:57:37.101260 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/12 22:57:37.101287 Find Ty Address
rdfLoader: 2020/08/12 22:57:37.101292 Find Ty Age
rdfLoader: 2020/08/12 22:57:37.101296 Find Ty Cars
rdfLoader: 2020/08/12 22:57:37.101301 Add to SS . [Bentley]
rdfLoader: 2020/08/12 22:57:37.101305 Find Ty DOB
rdfLoader: 2020/08/12 22:57:37.101309 Find Ty Friends
rdfLoader: 2020/08/12 22:57:37.101313 Find Ty Jobs
rdfLoader: 2020/08/12 22:57:37.101316 Find Ty Name
rdfLoader: 2020/08/12 22:57:37.101320 Find Ty SalaryLast3Year
rdfLoader: 2020/08/12 22:57:37.101324 Find Ty Siblings
rdfLoader: 2020/08/12 22:57:37.101330 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/12 22:57:37.101351 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/12 22:57:37.101355 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/12 22:57:37.101388 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101394 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101400 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101406 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101411 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101417 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/12 22:57:37.101422 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/12 22:57:37.101426 SaveRDFNode : 7 
SaveRDFNode: 2020/08/12 22:57:37.101432 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000385440)}
SaveRDFNode: 2020/08/12 22:57:37.101435 Waiting for UID ......................
rdfUIDdb: 2020/08/12 22:57:37.101442 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.101446 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.101451 UID received  : jehZBsrQQMi9k6vv06s+HA==
grmgr: 2020/08/12 22:57:37.101586 	limit.ch <- struct{}{} 
verify: 2020/08/12 22:57:37.101596 *** Verify running...... 2
verify: 2020/08/12 22:57:37.101600 verify exited.....
DB: 2020/08/12 22:57:37.109650 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 9.687066ms
DB: 2020/08/12 22:57:37.113297 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.873075ms
DB: 2020/08/12 22:57:37.117323 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.614975ms
DB: 2020/08/12 22:57:37.120812 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.451344ms
DB: 2020/08/12 22:57:37.123564 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 22.069652ms
DB: 2020/08/12 22:57:37.124230 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.383161ms
DB: 2020/08/12 22:57:37.127625 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.363794ms
SaveRDFNode: 2020/08/12 22:57:37.127646 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/12 22:57:37.127653 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.127656 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.127662 Received UID: X18=
SaveRDFNode: 2020/08/12 22:57:37.127675 a: = db.Item{PKey:[]uint8{0x8e, 0x90, 0xe3, 0x36, 0xe4, 0x3b, 0x49, 0xc3, 0xa1, 0x95, 0x48, 0x53, 0xd, 0xf6, 0x11, 0xbb}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:57:37.128534 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 27.438811ms
DB: 2020/08/12 22:57:37.131126 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.421921ms
SaveRDFNode: 2020/08/12 22:57:37.131139 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003845a0)}
rdfUIDdb: 2020/08/12 22:57:37.131144 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.131148 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.131154 Received UID: X18=
SaveRDFNode: 2020/08/12 22:57:37.131167 a: = db.Item{PKey:[]uint8{0x8e, 0x90, 0xe3, 0x36, 0xe4, 0x3b, 0x49, 0xc3, 0xa1, 0x95, 0x48, 0x53, 0xd, 0xf6, 0x11, 0xbb}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:57:37.132045 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.478447ms
DB: 2020/08/12 22:57:37.133278 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 19.944655ms
DB: 2020/08/12 22:57:37.134717 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.522599ms
SaveRDFNode: 2020/08/12 22:57:37.134727 Returned.+++++++++++ No error
DB: 2020/08/12 22:57:37.135677 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.584793ms
DB: 2020/08/12 22:57:37.136862 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.553028ms
DB: 2020/08/12 22:57:37.140131 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.423113ms
DB: 2020/08/12 22:57:37.140776 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.884603ms
DB: 2020/08/12 22:57:37.143243 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 19.646088ms
DB: 2020/08/12 22:57:37.144429 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.621833ms
SaveRDFNode: 2020/08/12 22:57:37.144441 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/12 22:57:37.144447 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.144452 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.144457 Received UID: X18=
SaveRDFNode: 2020/08/12 22:57:37.144468 a: = db.Item{PKey:[]uint8{0x37, 0xd5, 0xa7, 0xa0, 0x5c, 0x6c, 0x4c, 0x6c, 0x9c, 0x6d, 0xb, 0x2, 0x2e, 0xa3, 0x8, 0xcd}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:57:37.144901 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.738774ms
SaveRDFNode: 2020/08/12 22:57:37.144913 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385020)}
rdfUIDdb: 2020/08/12 22:57:37.144918 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.144922 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.144927 Received UID: X18=
SaveRDFNode: 2020/08/12 22:57:37.144937 a: = db.Item{PKey:[]uint8{0x28, 0xe4, 0xf8, 0x2c, 0x69, 0x3f, 0x4a, 0xff, 0x82, 0x25, 0xa9, 0xef, 0x39, 0xec, 0x6f, 0x59}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:57:37.149664 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.388798ms
DB: 2020/08/12 22:57:37.150629 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.132922ms
SaveRDFNode: 2020/08/12 22:57:37.150656 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/12 22:57:37.150662 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.150666 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.150672 Received UID: X18=
SaveRDFNode: 2020/08/12 22:57:37.150682 a: = db.Item{PKey:[]uint8{0x37, 0xd5, 0xa7, 0xa0, 0x5c, 0x6c, 0x4c, 0x6c, 0x9c, 0x6d, 0xb, 0x2, 0x2e, 0xa3, 0x8, 0xcd}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:57:37.150952 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.979038ms
SaveRDFNode: 2020/08/12 22:57:37.150963 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385020)}
rdfUIDdb: 2020/08/12 22:57:37.150973 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.150977 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.150982 Received UID: X18=
SaveRDFNode: 2020/08/12 22:57:37.150992 a: = db.Item{PKey:[]uint8{0x28, 0xe4, 0xf8, 0x2c, 0x69, 0x3f, 0x4a, 0xff, 0x82, 0x25, 0xa9, 0xef, 0x39, 0xec, 0x6f, 0x59}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:57:37.153414 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.720084ms
DB: 2020/08/12 22:57:37.154350 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.626692ms
SaveRDFNode: 2020/08/12 22:57:37.154360 Returned.+++++++++++ No error
DB: 2020/08/12 22:57:37.154601 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.570123ms
SaveRDFNode: 2020/08/12 22:57:37.154610 Returned.+++++++++++ No error
DB: 2020/08/12 22:57:37.156970 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.522963ms
SaveRDFNode: 2020/08/12 22:57:37.156982 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385440)}
rdfUIDdb: 2020/08/12 22:57:37.156988 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.156991 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.156997 Received UID: X18=
SaveRDFNode: 2020/08/12 22:57:37.157031 a: = db.Item{PKey:[]uint8{0x8d, 0xe8, 0x59, 0x6, 0xca, 0xd0, 0x40, 0xc8, 0xbd, 0x93, 0xab, 0xef, 0xd3, 0xab, 0x3e, 0x1c}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:57:37.160870 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.806742ms
SaveRDFNode: 2020/08/12 22:57:37.160883 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385440)}
rdfUIDdb: 2020/08/12 22:57:37.160889 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/12 22:57:37.160893 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/12 22:57:37.160898 Received UID: X18=
SaveRDFNode: 2020/08/12 22:57:37.160907 a: = db.Item{PKey:[]uint8{0x8d, 0xe8, 0x59, 0x6, 0xca, 0xd0, 0x40, 0xc8, 0xbd, 0x93, 0xab, 0xef, 0xd3, 0xab, 0x3e, 0x1c}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/12 22:57:37.164601 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.665489ms
SaveRDFNode: 2020/08/12 22:57:37.164611 Returned.+++++++++++ No error
DB: 2020/08/12 22:57:37.168603 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.171302 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.174189 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.176918 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.180850 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.881658ms
DB: 2020/08/12 22:57:37.189054 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.613361ms
FetchForUpdate: 2020/08/12 22:57:37.189068 ** Cache FetchForUpdate Cache Key Value: [N9WnoFxsTGycbQsCLqMIzQ==]   sortk: A#G#:S
FetchNode: 2020/08/12 22:57:37.189074  node: N9WnoFxsTGycbQsCLqMIzQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:57:37.189254 ** Cache FetchForUpdate Cache Key Value: [jpDjNuQ7ScOhlUhTDfYRuw==]   sortk: A#
FetchNode: 2020/08/12 22:57:37.189269  node: jpDjNuQ7ScOhlUhTDfYRuw== subKey: A#
DB: 2020/08/12 22:57:37.192581 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.450714ms
FetchForUpdate: 2020/08/12 22:57:37.192626 len(nb): 1
fetchItems: 2020/08/12 22:57:37.192633 +++  Cache FetchItems for sortk A#G#:S UID: [N9WnoFxsTGycbQsCLqMIzQ==] 
FetchNode: 2020/08/12 22:57:37.192638  node: N9WnoFxsTGycbQsCLqMIzQ== subKey: A#G#:S
DB: 2020/08/12 22:57:37.196115 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.437803ms
DB: 2020/08/12 22:57:37.200084 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.866982ms
Unlock: 2020/08/12 22:57:37.200096 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:57:37.205168 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 15.841523ms
FetchForUpdate: 2020/08/12 22:57:37.205272 len(nb): 7
fetchItems: 2020/08/12 22:57:37.205280 +++  Cache FetchItems for sortk A# UID: [jpDjNuQ7ScOhlUhTDfYRuw==] 
FetchNode: 2020/08/12 22:57:37.205284  node: jpDjNuQ7ScOhlUhTDfYRuw== subKey: A#
DB: 2020/08/12 22:57:37.208462 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.148851ms
Unlock: 2020/08/12 22:57:37.210159 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/12 22:57:37.210715 ** Cache FetchForUpdate Cache Key Value: [N9WnoFxsTGycbQsCLqMIzQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.210725 +++  Cache FetchItems for sortk A#G#:S UID: [N9WnoFxsTGycbQsCLqMIzQ==] 
FetchNode: 2020/08/12 22:57:37.210730  node: N9WnoFxsTGycbQsCLqMIzQ== subKey: A#G#:S
DB: 2020/08/12 22:57:37.213699 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.929488ms
DB: 2020/08/12 22:57:37.220448 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.407552ms
DB: 2020/08/12 22:57:37.224311 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.689474ms
DB: 2020/08/12 22:57:37.228775 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.077547ms
DB: 2020/08/12 22:57:37.235641 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.560476ms
DB: 2020/08/12 22:57:37.239734 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.754052ms
DB: 2020/08/12 22:57:37.243962 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.924629ms
DB: 2020/08/12 22:57:37.250968 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.690827ms
DB: 2020/08/12 22:57:37.256352 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.92364ms
DB: 2020/08/12 22:57:37.260435 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.778851ms
Unlock: 2020/08/12 22:57:37.260462 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:57:37.264833 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.00262ms
FetchForUpdate: 2020/08/12 22:57:37.264845 ** Cache FetchForUpdate Cache Key Value: [N9WnoFxsTGycbQsCLqMIzQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.264851 +++  Cache FetchItems for sortk A#G#:S UID: [N9WnoFxsTGycbQsCLqMIzQ==] 
FetchNode: 2020/08/12 22:57:37.264855  node: N9WnoFxsTGycbQsCLqMIzQ== subKey: A#G#:S
DB: 2020/08/12 22:57:37.269381 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.495227ms
AttachNode: gr1 2020/08/12 22:57:37.269475 Errored: SetUpredAvailable :for  N9WnoFxsTGycbQsCLqMIzQ==
Cache: 2020/08/12 22:57:37.269483 In SetUpredAvailable: pUid, tUID:  N9WnoFxsTGycbQsCLqMIzQ== N9WnoFxsTGycbQsCLqMIzQ== A#G#:S
Cache: 2020/08/12 22:57:37.269487 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:57:37.273216 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.695103ms
Unlock: 2020/08/12 22:57:37.273226 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:57:37.279816 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.233039ms
DB: 2020/08/12 22:57:37.283060 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.285848 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.288765 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.291335 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.295382 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.001531ms
DB: 2020/08/12 22:57:37.300233 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.603411ms
FetchForUpdate: 2020/08/12 22:57:37.300246 ** Cache FetchForUpdate Cache Key Value: [KOT4LGk/Sv+CJanvOexvWQ==]   sortk: A#G#:S
FetchNode: 2020/08/12 22:57:37.300252  node: KOT4LGk/Sv+CJanvOexvWQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:57:37.300420 ** Cache FetchForUpdate Cache Key Value: [jpDjNuQ7ScOhlUhTDfYRuw==]   sortk: A#
fetchItems: 2020/08/12 22:57:37.300429 +++  Cache FetchItems for sortk A# UID: [jpDjNuQ7ScOhlUhTDfYRuw==] 
FetchNode: 2020/08/12 22:57:37.300441  node: jpDjNuQ7ScOhlUhTDfYRuw== subKey: A#
DB: 2020/08/12 22:57:37.303133 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.851403ms
FetchForUpdate: 2020/08/12 22:57:37.303190 len(nb): 1
fetchItems: 2020/08/12 22:57:37.303198 +++  Cache FetchItems for sortk A#G#:S UID: [KOT4LGk/Sv+CJanvOexvWQ==] 
FetchNode: 2020/08/12 22:57:37.303202  node: KOT4LGk/Sv+CJanvOexvWQ== subKey: A#G#:S
DB: 2020/08/12 22:57:37.303611 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.107692ms
Unlock: 2020/08/12 22:57:37.304657 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:57:37.306809 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.579021ms
DB: 2020/08/12 22:57:37.312149 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.810713ms
Unlock: 2020/08/12 22:57:37.312159 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 22:57:37.312425 ** Cache FetchForUpdate Cache Key Value: [KOT4LGk/Sv+CJanvOexvWQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.312435 +++  Cache FetchItems for sortk A#G#:S UID: [KOT4LGk/Sv+CJanvOexvWQ==] 
FetchNode: 2020/08/12 22:57:37.312440  node: KOT4LGk/Sv+CJanvOexvWQ== subKey: A#G#:S
DB: 2020/08/12 22:57:37.316931 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.43122ms
DB: 2020/08/12 22:57:37.323828 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.280074ms
DB: 2020/08/12 22:57:37.327921 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.838922ms
DB: 2020/08/12 22:57:37.332621 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.136117ms
DB: 2020/08/12 22:57:37.339488 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.417261ms
DB: 2020/08/12 22:57:37.343773 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.882038ms
DB: 2020/08/12 22:57:37.348139 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.920755ms
DB: 2020/08/12 22:57:37.354950 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.34593ms
DB: 2020/08/12 22:57:37.358995 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.5976ms
DB: 2020/08/12 22:57:37.363320 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.852909ms
Unlock: 2020/08/12 22:57:37.363332 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:57:37.368016 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.175636ms
FetchForUpdate: 2020/08/12 22:57:37.368030 ** Cache FetchForUpdate Cache Key Value: [KOT4LGk/Sv+CJanvOexvWQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.368037 +++  Cache FetchItems for sortk A#G#:S UID: [KOT4LGk/Sv+CJanvOexvWQ==] 
FetchNode: 2020/08/12 22:57:37.368041  node: KOT4LGk/Sv+CJanvOexvWQ== subKey: A#G#:S
DB: 2020/08/12 22:57:37.371206 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.128236ms
AttachNode: gr1 2020/08/12 22:57:37.371328 Errored: SetUpredAvailable :for  KOT4LGk/Sv+CJanvOexvWQ==
Cache: 2020/08/12 22:57:37.371335 In SetUpredAvailable: pUid, tUID:  KOT4LGk/Sv+CJanvOexvWQ== KOT4LGk/Sv+CJanvOexvWQ== A#G#:S
Cache: 2020/08/12 22:57:37.371340 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:57:37.376275 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.905363ms
Unlock: 2020/08/12 22:57:37.376284 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:57:37.381122 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.431648ms
DB: 2020/08/12 22:57:37.383967 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.387640 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.390796 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.394105 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.398007 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.854938ms
DB: 2020/08/12 22:57:37.402431 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.166394ms
FetchForUpdate: 2020/08/12 22:57:37.402448 ** Cache FetchForUpdate Cache Key Value: [jpDjNuQ7ScOhlUhTDfYRuw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.402454 +++  Cache FetchItems for sortk A#G#:S UID: [jpDjNuQ7ScOhlUhTDfYRuw==] 
FetchNode: 2020/08/12 22:57:37.402459  node: jpDjNuQ7ScOhlUhTDfYRuw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:57:37.402687 ** Cache FetchForUpdate Cache Key Value: [N9WnoFxsTGycbQsCLqMIzQ==]   sortk: A#
fetchItems: 2020/08/12 22:57:37.402723 +++  Cache FetchItems for sortk A# UID: [N9WnoFxsTGycbQsCLqMIzQ==] 
FetchNode: 2020/08/12 22:57:37.402740  node: N9WnoFxsTGycbQsCLqMIzQ== subKey: A#
DB: 2020/08/12 22:57:37.405387 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.894579ms
DB: 2020/08/12 22:57:37.406316 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.531419ms
Unlock: 2020/08/12 22:57:37.407713 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:57:37.409628 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.867638ms
Unlock: 2020/08/12 22:57:37.409638 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/12 22:57:37.409669 ** Cache FetchForUpdate Cache Key Value: [jpDjNuQ7ScOhlUhTDfYRuw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.409675 +++  Cache FetchItems for sortk A#G#:S UID: [jpDjNuQ7ScOhlUhTDfYRuw==] 
FetchNode: 2020/08/12 22:57:37.409679  node: jpDjNuQ7ScOhlUhTDfYRuw== subKey: A#G#:S
DB: 2020/08/12 22:57:37.413225 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.493347ms
DB: 2020/08/12 22:57:37.419638 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.319547ms
DB: 2020/08/12 22:57:37.423261 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.57522ms
DB: 2020/08/12 22:57:37.427274 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.915537ms
DB: 2020/08/12 22:57:37.433959 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.328819ms
DB: 2020/08/12 22:57:37.439997 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.602437ms
DB: 2020/08/12 22:57:37.444511 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.02517ms
DB: 2020/08/12 22:57:37.451427 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.404895ms
DB: 2020/08/12 22:57:37.455508 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.63352ms
DB: 2020/08/12 22:57:37.459894 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.863917ms
Unlock: 2020/08/12 22:57:37.459905 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/12 22:57:37.464293 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.764727ms
FetchForUpdate: 2020/08/12 22:57:37.464305 ** Cache FetchForUpdate Cache Key Value: [jpDjNuQ7ScOhlUhTDfYRuw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.464311 +++  Cache FetchItems for sortk A#G#:S UID: [jpDjNuQ7ScOhlUhTDfYRuw==] 
FetchNode: 2020/08/12 22:57:37.464316  node: jpDjNuQ7ScOhlUhTDfYRuw== subKey: A#G#:S
DB: 2020/08/12 22:57:37.467434 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.085678ms
AttachNode: gr1 2020/08/12 22:57:37.467509 Errored: SetUpredAvailable :for  jpDjNuQ7ScOhlUhTDfYRuw==
Cache: 2020/08/12 22:57:37.467516 In SetUpredAvailable: pUid, tUID:  jpDjNuQ7ScOhlUhTDfYRuw== jpDjNuQ7ScOhlUhTDfYRuw== A#G#:S
Cache: 2020/08/12 22:57:37.467521 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:57:37.471405 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.838956ms
Unlock: 2020/08/12 22:57:37.471415 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:57:37.475774 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.273896ms
DB: 2020/08/12 22:57:37.478531 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.481925 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.490675 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.493388 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.497524 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.06854ms
DB: 2020/08/12 22:57:37.501883 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.098851ms
FetchForUpdate: 2020/08/12 22:57:37.501896 ** Cache FetchForUpdate Cache Key Value: [KOT4LGk/Sv+CJanvOexvWQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.501902 +++  Cache FetchItems for sortk A#G#:S UID: [KOT4LGk/Sv+CJanvOexvWQ==] 
FetchNode: 2020/08/12 22:57:37.501907  node: KOT4LGk/Sv+CJanvOexvWQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:57:37.502090 ** Cache FetchForUpdate Cache Key Value: [N9WnoFxsTGycbQsCLqMIzQ==]   sortk: A#
fetchItems: 2020/08/12 22:57:37.502100 +++  Cache FetchItems for sortk A# UID: [N9WnoFxsTGycbQsCLqMIzQ==] 
FetchNode: 2020/08/12 22:57:37.502111  node: N9WnoFxsTGycbQsCLqMIzQ== subKey: A#
DB: 2020/08/12 22:57:37.505491 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.301496ms
Unlock: 2020/08/12 22:57:37.506887 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:57:37.507492 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.550617ms
DB: 2020/08/12 22:57:37.512335 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.30529ms
DB: 2020/08/12 22:57:37.516024 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.643862ms
DB: 2020/08/12 22:57:37.516039 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.643862ms
DB: 2020/08/12 22:57:37.519818 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.749203ms
DB: 2020/08/12 22:57:37.519832 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.749203ms
DB: 2020/08/12 22:57:37.524484 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.440962ms
DB: 2020/08/12 22:57:37.528526 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.844938ms
Unlock: 2020/08/12 22:57:37.528537 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:57:37.535721 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.291958ms
DB: 2020/08/12 22:57:37.539383 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.597725ms
DB: 2020/08/12 22:57:37.543441 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.928945ms
DB: 2020/08/12 22:57:37.550152 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.638175ms
DB: 2020/08/12 22:57:37.553978 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.763022ms
DB: 2020/08/12 22:57:37.559241 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.180382ms
DB: 2020/08/12 22:57:37.567623 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 8.31295ms
DB: 2020/08/12 22:57:37.571466 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.771951ms
DB: 2020/08/12 22:57:37.575775 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.020876ms
DB: 2020/08/12 22:57:37.579668 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.63776ms
FetchForUpdate: 2020/08/12 22:57:37.579679 ** Cache FetchForUpdate Cache Key Value: [KOT4LGk/Sv+CJanvOexvWQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.579686 +++  Cache FetchItems for sortk A#G#:S UID: [KOT4LGk/Sv+CJanvOexvWQ==] 
FetchNode: 2020/08/12 22:57:37.579690  node: KOT4LGk/Sv+CJanvOexvWQ== subKey: A#G#:S
DB: 2020/08/12 22:57:37.582961 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.236173ms
AttachNode: gr1 2020/08/12 22:57:37.583067 Errored: SetUpredAvailable :for  KOT4LGk/Sv+CJanvOexvWQ==
Cache: 2020/08/12 22:57:37.583076 In SetUpredAvailable: pUid, tUID:  KOT4LGk/Sv+CJanvOexvWQ== ejlJBAgQSJGmU903nSp81Q== A#G#:S
Cache: 2020/08/12 22:57:37.583080 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:57:37.586871 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.760808ms
Unlock: 2020/08/12 22:57:37.586881 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:57:37.591200 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.242551ms
DB: 2020/08/12 22:57:37.594428 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.597693 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.600395 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.603098 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.607310 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.135879ms
DB: 2020/08/12 22:57:37.612222 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.434247ms
FetchForUpdate: 2020/08/12 22:57:37.612235 ** Cache FetchForUpdate Cache Key Value: [jpDjNuQ7ScOhlUhTDfYRuw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.612241 +++  Cache FetchItems for sortk A#G#:S UID: [jpDjNuQ7ScOhlUhTDfYRuw==] 
FetchNode: 2020/08/12 22:57:37.612246  node: jpDjNuQ7ScOhlUhTDfYRuw== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:57:37.612422 ** Cache FetchForUpdate Cache Key Value: [KOT4LGk/Sv+CJanvOexvWQ==]   sortk: A#
fetchItems: 2020/08/12 22:57:37.612431 +++  Cache FetchItems for sortk A# UID: [KOT4LGk/Sv+CJanvOexvWQ==] 
FetchNode: 2020/08/12 22:57:37.612443  node: KOT4LGk/Sv+CJanvOexvWQ== subKey: A#
DB: 2020/08/12 22:57:37.615792 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.256697ms
Unlock: 2020/08/12 22:57:37.617104 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:57:37.617738 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.461737ms
DB: 2020/08/12 22:57:37.622393 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.203592ms
DB: 2020/08/12 22:57:37.626004 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.579373ms
DB: 2020/08/12 22:57:37.626019 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.579373ms
DB: 2020/08/12 22:57:37.632270 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.219544ms
DB: 2020/08/12 22:57:37.632284 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.219544ms
DB: 2020/08/12 22:57:37.639875 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 7.391407ms
DB: 2020/08/12 22:57:37.644057 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.967848ms
Unlock: 2020/08/12 22:57:37.644067 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:57:37.650695 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.979002ms
DB: 2020/08/12 22:57:37.654656 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.793822ms
DB: 2020/08/12 22:57:37.658978 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.94773ms
DB: 2020/08/12 22:57:37.665649 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.358761ms
DB: 2020/08/12 22:57:37.669641 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.633735ms
DB: 2020/08/12 22:57:37.673809 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.83893ms
DB: 2020/08/12 22:57:37.680578 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.493611ms
DB: 2020/08/12 22:57:37.684545 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.654877ms
DB: 2020/08/12 22:57:37.688938 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.09352ms
DB: 2020/08/12 22:57:37.694217 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.100775ms
FetchForUpdate: 2020/08/12 22:57:37.694230 ** Cache FetchForUpdate Cache Key Value: [jpDjNuQ7ScOhlUhTDfYRuw==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.694258 +++  Cache FetchItems for sortk A#G#:S UID: [jpDjNuQ7ScOhlUhTDfYRuw==] 
FetchNode: 2020/08/12 22:57:37.694263  node: jpDjNuQ7ScOhlUhTDfYRuw== subKey: A#G#:S
DB: 2020/08/12 22:57:37.698701 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.402896ms
AttachNode: gr1 2020/08/12 22:57:37.699019 Errored: SetUpredAvailable :for  jpDjNuQ7ScOhlUhTDfYRuw==
Cache: 2020/08/12 22:57:37.699031 In SetUpredAvailable: pUid, tUID:  jpDjNuQ7ScOhlUhTDfYRuw== DNQ79BAjSvSb23F9MEfUCA== A#G#:S
Cache: 2020/08/12 22:57:37.699036 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:57:37.702804 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.722616ms
Unlock: 2020/08/12 22:57:37.702817 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:57:37.707230 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.268072ms
DB: 2020/08/12 22:57:37.710991 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.713845 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.716552 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.719258 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/12 22:57:37.723100 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.786878ms
DB: 2020/08/12 22:57:37.727292 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.120502ms
FetchForUpdate: 2020/08/12 22:57:37.727307 ** Cache FetchForUpdate Cache Key Value: [N9WnoFxsTGycbQsCLqMIzQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.727313 +++  Cache FetchItems for sortk A#G#:S UID: [N9WnoFxsTGycbQsCLqMIzQ==] 
FetchNode: 2020/08/12 22:57:37.727318  node: N9WnoFxsTGycbQsCLqMIzQ== subKey: A#G#:S
FetchForUpdate: 2020/08/12 22:57:37.727516 ** Cache FetchForUpdate Cache Key Value: [KOT4LGk/Sv+CJanvOexvWQ==]   sortk: A#
fetchItems: 2020/08/12 22:57:37.727526 +++  Cache FetchItems for sortk A# UID: [KOT4LGk/Sv+CJanvOexvWQ==] 
FetchNode: 2020/08/12 22:57:37.727559  node: KOT4LGk/Sv+CJanvOexvWQ== subKey: A#
DB: 2020/08/12 22:57:37.730461 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.095609ms
DB: 2020/08/12 22:57:37.731402 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.78855ms
Unlock: 2020/08/12 22:57:37.732130 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/12 22:57:37.734664 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.869928ms
DB: 2020/08/12 22:57:37.738197 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.486985ms
DB: 2020/08/12 22:57:37.738215 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.486985ms
DB: 2020/08/12 22:57:37.741753 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.505414ms
DB: 2020/08/12 22:57:37.741767 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.505414ms
DB: 2020/08/12 22:57:37.746095 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.237348ms
DB: 2020/08/12 22:57:37.750014 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.859656ms
Unlock: 2020/08/12 22:57:37.750025 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/12 22:57:37.760852 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 10.374555ms
DB: 2020/08/12 22:57:37.765930 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.014806ms
DB: 2020/08/12 22:57:37.769885 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.846259ms
DB: 2020/08/12 22:57:37.776304 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.366385ms
DB: 2020/08/12 22:57:37.779909 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.546985ms
DB: 2020/08/12 22:57:37.783849 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.852389ms
DB: 2020/08/12 22:57:37.789779 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.853772ms
DB: 2020/08/12 22:57:37.793553 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.696514ms
DB: 2020/08/12 22:57:37.797447 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.822206ms
DB: 2020/08/12 22:57:37.801401 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.810533ms
FetchForUpdate: 2020/08/12 22:57:37.801412 ** Cache FetchForUpdate Cache Key Value: [N9WnoFxsTGycbQsCLqMIzQ==]   sortk: A#G#:S
fetchItems: 2020/08/12 22:57:37.801418 +++  Cache FetchItems for sortk A#G#:S UID: [N9WnoFxsTGycbQsCLqMIzQ==] 
FetchNode: 2020/08/12 22:57:37.801423  node: N9WnoFxsTGycbQsCLqMIzQ== subKey: A#G#:S
DB: 2020/08/12 22:57:37.804636 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.16049ms
AttachNode: gr1 2020/08/12 22:57:37.804739 Errored: SetUpredAvailable :for  N9WnoFxsTGycbQsCLqMIzQ==
Cache: 2020/08/12 22:57:37.804747 In SetUpredAvailable: pUid, tUID:  N9WnoFxsTGycbQsCLqMIzQ== Yup5fuD7SF2eJr9OZTCSEQ== A#G#:S
Cache: 2020/08/12 22:57:37.804752 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/12 22:57:37.808819 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.025187ms
Unlock: 2020/08/12 22:57:37.808829 ******* IN UNLOCK NC ********************
DB: 2020/08/12 22:57:37.813604 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.249324ms
rdfLoader: 2020/08/12 22:57:37.813616 saveNode finished waiting...exiting
grmgr: 2020/08/12 22:57:37.813638 Powering down...
rdfuuid: 2020/08/12 22:57:37.813646 Powering down...
DB:2020/08/13 04:26:04 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:26:04.087016 Powering on...
rdfLoader: 2020/08/13 04:26:04.087287 verify started....xx.
rdfLoader: 2020/08/13 04:26:04.087302 saveNode started......
rdfuuid: 2020/08/13 04:26:04.087315 Powering on...
rdfLoader: 2020/08/13 04:26:04.087322 *************** All started 
rdfLoader: 2020/08/13 04:26:04.092322 .  getType..
rdfLoader: 2020/08/13 04:26:04.092332 node.TyName : [Person]
DB: 2020/08/13 04:26:04.165999 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 73.610265ms
verify: 2020/08/13 04:26:04.166170 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:26:04.166216 Find Ty Address
rdfLoader: 2020/08/13 04:26:04.166234 Find Ty Age
rdfLoader: 2020/08/13 04:26:04.166240 Find Ty Cars
rdfLoader: 2020/08/13 04:26:04.166246 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:26:04.166251 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:26:04.166255 Find Ty DOB
rdfLoader: 2020/08/13 04:26:04.166260 Find Ty Friends
rdfLoader: 2020/08/13 04:26:04.166264 Find Ty Jobs
rdfLoader: 2020/08/13 04:26:04.166269 Find Ty Name
rdfLoader: 2020/08/13 04:26:04.166273 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:26:04.166278 Find Ty Siblings
rdfLoader: 2020/08/13 04:26:04.166288 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:26:04.166315 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:26:04.166321 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:26:04.166345 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166351 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166358 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166364 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166370 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166377 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166383 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:26:04.166387 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:26:04.166394 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc00037c480)}
SaveRDFNode: 2020/08/13 04:26:04.166399 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:26:04.166417 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.166421 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.166427 UID received  : dsf4WOubQZOqpDwxHkcqcQ==
grmgr: 2020/08/13 04:26:04.166629 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:26:04.166641 *** Verify running...... 1
rdfLoader: 2020/08/13 04:26:04.166646 .  getType..
rdfLoader: 2020/08/13 04:26:04.166650 node.TyName : [Person]
verify: 2020/08/13 04:26:04.166668 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:26:04.166723 Find Ty Address
rdfLoader: 2020/08/13 04:26:04.166729 Find Ty Age
rdfLoader: 2020/08/13 04:26:04.166734 Find Ty Cars
rdfLoader: 2020/08/13 04:26:04.166739 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:26:04.166748 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:26:04.166753 Find Ty DOB
rdfLoader: 2020/08/13 04:26:04.166757 Find Ty Friends
rdfLoader: 2020/08/13 04:26:04.166761 Find Ty Jobs
rdfLoader: 2020/08/13 04:26:04.166765 Find Ty Name
rdfLoader: 2020/08/13 04:26:04.166769 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:26:04.166773 Find Ty Siblings
rdfLoader: 2020/08/13 04:26:04.166781 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:26:04.166808 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:26:04.166813 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:26:04.166832 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166838 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166845 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166851 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166856 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166862 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.166867 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:26:04.166871 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:26:04.166877 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc00037ca20)}
SaveRDFNode: 2020/08/13 04:26:04.166881 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:26:04.166888 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.166892 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.166897 UID received  : JmfUUopoQAeO5/RIIfCpkA==
grmgr: 2020/08/13 04:26:04.167181 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:26:04.167263 *** Verify running...... 1
rdfLoader: 2020/08/13 04:26:04.167327 .  getType..
rdfLoader: 2020/08/13 04:26:04.167333 node.TyName : [Person]
verify: 2020/08/13 04:26:04.167352 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:26:04.167411 Find Ty Address
rdfLoader: 2020/08/13 04:26:04.167417 Find Ty Age
rdfLoader: 2020/08/13 04:26:04.167423 Find Ty Cars
rdfLoader: 2020/08/13 04:26:04.167428 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:26:04.167438 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:26:04.167443 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:26:04.167447 Find Ty DOB
rdfLoader: 2020/08/13 04:26:04.167451 Find Ty Friends
rdfLoader: 2020/08/13 04:26:04.167456 Find Ty Jobs
rdfLoader: 2020/08/13 04:26:04.167460 Find Ty Name
rdfLoader: 2020/08/13 04:26:04.167464 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:26:04.167482 Find Ty Siblings
rdfLoader: 2020/08/13 04:26:04.167491 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:26:04.167518 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:26:04.167522 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:26:04.167542 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167549 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167556 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167562 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167568 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167574 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167579 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:26:04.167583 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:26:04.167589 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc00037cf60)}
SaveRDFNode: 2020/08/13 04:26:04.167593 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:26:04.167601 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.167605 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.167610 UID received  : CyqR+rEmSYSNGV+fssiKOA==
grmgr: 2020/08/13 04:26:04.167775 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:26:04.167787 *** Verify running...... 2
rdfLoader: 2020/08/13 04:26:04.167791 .  getType..
rdfLoader: 2020/08/13 04:26:04.167795 node.TyName : [Person]
verify: 2020/08/13 04:26:04.167811 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:26:04.167840 Find Ty Address
rdfLoader: 2020/08/13 04:26:04.167845 Find Ty Age
rdfLoader: 2020/08/13 04:26:04.167850 Find Ty Cars
rdfLoader: 2020/08/13 04:26:04.167855 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:26:04.167859 Find Ty DOB
rdfLoader: 2020/08/13 04:26:04.167864 Find Ty Friends
rdfLoader: 2020/08/13 04:26:04.167868 Find Ty Jobs
rdfLoader: 2020/08/13 04:26:04.167872 Find Ty Name
rdfLoader: 2020/08/13 04:26:04.167876 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:26:04.167880 Find Ty Siblings
rdfLoader: 2020/08/13 04:26:04.167887 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:26:04.167911 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:26:04.167920 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:26:04.167940 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167947 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167953 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167959 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167964 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167970 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:04.167976 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:26:04.167980 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:26:04.167986 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc00037d380)}
SaveRDFNode: 2020/08/13 04:26:04.167990 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:26:04.167997 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.168002 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.168007 UID received  : e2I49N41T1+JPtyTZfUrJw==
grmgr: 2020/08/13 04:26:04.168142 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:26:04.168154 *** Verify running...... 2
verify: 2020/08/13 04:26:04.168158 verify exited.....
DB: 2020/08/13 04:26:04.173013 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.545704ms
DB: 2020/08/13 04:26:04.178533 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.561507ms
DB: 2020/08/13 04:26:04.182089 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.519407ms
DB: 2020/08/13 04:26:04.185552 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.427122ms
DB: 2020/08/13 04:26:04.190001 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.27646ms
DB: 2020/08/13 04:26:04.193642 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.602658ms
SaveRDFNode: 2020/08/13 04:26:04.193671 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037ca20)}
rdfUIDdb: 2020/08/13 04:26:04.193680 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.193684 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.193690 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:04.193704 a: = db.Item{PKey:[]uint8{0x26, 0x67, 0xd4, 0x52, 0x8a, 0x68, 0x40, 0x7, 0x8e, 0xe7, 0xf4, 0x48, 0x21, 0xf0, 0xa9, 0x90}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:04.193982 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.946456ms
DB: 2020/08/13 04:26:04.194248 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 26.595459ms
DB: 2020/08/13 04:26:04.195713 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 22.657737ms
DB: 2020/08/13 04:26:04.197472 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.458637ms
DB: 2020/08/13 04:26:04.197836 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.100181ms
SaveRDFNode: 2020/08/13 04:26:04.197866 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037ca20)}
rdfUIDdb: 2020/08/13 04:26:04.197881 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.197885 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.197892 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:04.197909 a: = db.Item{PKey:[]uint8{0x26, 0x67, 0xd4, 0x52, 0x8a, 0x68, 0x40, 0x7, 0x8e, 0xe7, 0xf4, 0x48, 0x21, 0xf0, 0xa9, 0x90}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:04.198529 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.244344ms
DB: 2020/08/13 04:26:04.199478 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.72805ms
DB: 2020/08/13 04:26:04.200806 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.282748ms
DB: 2020/08/13 04:26:04.201669 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.696244ms
SaveRDFNode: 2020/08/13 04:26:04.201681 Returned.+++++++++++ No error
DB: 2020/08/13 04:26:04.201972 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.400153ms
DB: 2020/08/13 04:26:04.202786 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.278037ms
DB: 2020/08/13 04:26:04.203963 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.114285ms
DB: 2020/08/13 04:26:04.205961 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.958896ms
DB: 2020/08/13 04:26:04.206219 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.399865ms
SaveRDFNode: 2020/08/13 04:26:04.206247 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037c480)}
rdfUIDdb: 2020/08/13 04:26:04.206257 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.206261 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.206267 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:04.206277 a: = db.Item{PKey:[]uint8{0x76, 0xc7, 0xf8, 0x58, 0xeb, 0x9b, 0x41, 0x93, 0xaa, 0xa4, 0x3c, 0x31, 0x1e, 0x47, 0x2a, 0x71}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:04.207287 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.292725ms
SaveRDFNode: 2020/08/13 04:26:04.207299 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037d380)}
rdfUIDdb: 2020/08/13 04:26:04.207305 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.207309 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.207314 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:04.207325 a: = db.Item{PKey:[]uint8{0x7b, 0x62, 0x38, 0xf4, 0xde, 0x35, 0x4f, 0x5f, 0x89, 0x3e, 0xdc, 0x93, 0x65, 0xf5, 0x2b, 0x27}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:04.209483 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.486225ms
SaveRDFNode: 2020/08/13 04:26:04.209495 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037cf60)}
rdfUIDdb: 2020/08/13 04:26:04.209500 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.209504 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.209509 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:04.209519 a: = db.Item{PKey:[]uint8{0xb, 0x2a, 0x91, 0xfa, 0xb1, 0x26, 0x49, 0x84, 0x8d, 0x19, 0x5f, 0x9f, 0xb2, 0xc8, 0x8a, 0x38}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:04.209821 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.51244ms
SaveRDFNode: 2020/08/13 04:26:04.209838 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037c480)}
rdfUIDdb: 2020/08/13 04:26:04.209845 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.209848 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.209853 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:04.209868 a: = db.Item{PKey:[]uint8{0x76, 0xc7, 0xf8, 0x58, 0xeb, 0x9b, 0x41, 0x93, 0xaa, 0xa4, 0x3c, 0x31, 0x1e, 0x47, 0x2a, 0x71}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:04.210383 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.028815ms
SaveRDFNode: 2020/08/13 04:26:04.210395 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037d380)}
rdfUIDdb: 2020/08/13 04:26:04.210400 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.210404 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.210409 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:04.210418 a: = db.Item{PKey:[]uint8{0x7b, 0x62, 0x38, 0xf4, 0xde, 0x35, 0x4f, 0x5f, 0x89, 0x3e, 0xdc, 0x93, 0x65, 0xf5, 0x2b, 0x27}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:04.212949 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.385544ms
SaveRDFNode: 2020/08/13 04:26:04.212961 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037cf60)}
rdfUIDdb: 2020/08/13 04:26:04.212966 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:04.212969 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:04.212975 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:04.212996 a: = db.Item{PKey:[]uint8{0xb, 0x2a, 0x91, 0xfa, 0xb1, 0x26, 0x49, 0x84, 0x8d, 0x19, 0x5f, 0x9f, 0xb2, 0xc8, 0x8a, 0x38}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:04.213416 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.520184ms
SaveRDFNode: 2020/08/13 04:26:04.213425 Returned.+++++++++++ No error
DB: 2020/08/13 04:26:04.213667 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.215348ms
SaveRDFNode: 2020/08/13 04:26:04.213676 Returned.+++++++++++ No error
DB: 2020/08/13 04:26:04.216515 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.489567ms
SaveRDFNode: 2020/08/13 04:26:04.216525 Returned.+++++++++++ No error
DB: 2020/08/13 04:26:04.219456 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.221990 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.224666 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.227146 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.230777 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.577151ms
DB: 2020/08/13 04:26:04.238687 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.403084ms
FetchForUpdate: 2020/08/13 04:26:04.238703 ** Cache FetchForUpdate Cache Key Value: [JmfUUopoQAeO5/RIIfCpkA==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:26:04.238711  node: JmfUUopoQAeO5/RIIfCpkA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:04.238869 ** Cache FetchForUpdate Cache Key Value: [dsf4WOubQZOqpDwxHkcqcQ==]   sortk: A#
FetchNode: 2020/08/13 04:26:04.238885  node: dsf4WOubQZOqpDwxHkcqcQ== subKey: A#
DB: 2020/08/13 04:26:04.241845 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.099677ms
FetchForUpdate: 2020/08/13 04:26:04.241912 len(nb): 1
fetchItems: 2020/08/13 04:26:04.241922 +++  Cache FetchItems for sortk A#G#:S UID: [JmfUUopoQAeO5/RIIfCpkA==] 
FetchNode: 2020/08/13 04:26:04.241926  node: JmfUUopoQAeO5/RIIfCpkA== subKey: A#G#:S
DB: 2020/08/13 04:26:04.244130 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.17525ms
DB: 2020/08/13 04:26:04.248371 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.664382ms
Unlock: 2020/08/13 04:26:04.248384 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:26:04.252863 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 13.918768ms
FetchForUpdate: 2020/08/13 04:26:04.252972 len(nb): 7
fetchItems: 2020/08/13 04:26:04.252980 +++  Cache FetchItems for sortk A# UID: [dsf4WOubQZOqpDwxHkcqcQ==] 
FetchNode: 2020/08/13 04:26:04.252984  node: dsf4WOubQZOqpDwxHkcqcQ== subKey: A#
DB: 2020/08/13 04:26:04.256112 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.096271ms
Unlock: 2020/08/13 04:26:04.259099 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 04:26:04.259671 ** Cache FetchForUpdate Cache Key Value: [JmfUUopoQAeO5/RIIfCpkA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.259681 +++  Cache FetchItems for sortk A#G#:S UID: [JmfUUopoQAeO5/RIIfCpkA==] 
FetchNode: 2020/08/13 04:26:04.259686  node: JmfUUopoQAeO5/RIIfCpkA== subKey: A#G#:S
DB: 2020/08/13 04:26:04.262557 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.832249ms
DB: 2020/08/13 04:26:04.269487 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.582352ms
DB: 2020/08/13 04:26:04.272933 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.24513ms
DB: 2020/08/13 04:26:04.276890 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.573084ms
DB: 2020/08/13 04:26:04.283174 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.977271ms
DB: 2020/08/13 04:26:04.286895 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.418966ms
DB: 2020/08/13 04:26:04.290665 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.459231ms
DB: 2020/08/13 04:26:04.296902 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.911854ms
DB: 2020/08/13 04:26:04.300436 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.239553ms
DB: 2020/08/13 04:26:04.304051 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.320818ms
Unlock: 2020/08/13 04:26:04.304063 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:26:04.307882 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.441699ms
FetchForUpdate: 2020/08/13 04:26:04.307897 ** Cache FetchForUpdate Cache Key Value: [JmfUUopoQAeO5/RIIfCpkA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.307905 +++  Cache FetchItems for sortk A#G#:S UID: [JmfUUopoQAeO5/RIIfCpkA==] 
FetchNode: 2020/08/13 04:26:04.307910  node: JmfUUopoQAeO5/RIIfCpkA== subKey: A#G#:S
DB: 2020/08/13 04:26:04.310715 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.772355ms
AttachNode: gr1 2020/08/13 04:26:04.310816 Errored: SetUpredAvailable :for  JmfUUopoQAeO5/RIIfCpkA==
Cache: 2020/08/13 04:26:04.310824 In SetUpredAvailable: pUid, tUID:  JmfUUopoQAeO5/RIIfCpkA== JmfUUopoQAeO5/RIIfCpkA== A#G#:S
Cache: 2020/08/13 04:26:04.310829 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:04.314124 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.253476ms
Unlock: 2020/08/13 04:26:04.314133 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:04.321405 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.910612ms
DB: 2020/08/13 04:26:04.324395 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.327075 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.329602 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.331880 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.335427 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.497056ms
DB: 2020/08/13 04:26:04.342608 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.004846ms
FetchForUpdate: 2020/08/13 04:26:04.342629 ** Cache FetchForUpdate Cache Key Value: [CyqR+rEmSYSNGV+fssiKOA==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:26:04.342637  node: CyqR+rEmSYSNGV+fssiKOA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:04.342976 ** Cache FetchForUpdate Cache Key Value: [dsf4WOubQZOqpDwxHkcqcQ==]   sortk: A#
fetchItems: 2020/08/13 04:26:04.343020 +++  Cache FetchItems for sortk A# UID: [dsf4WOubQZOqpDwxHkcqcQ==] 
FetchNode: 2020/08/13 04:26:04.343034  node: dsf4WOubQZOqpDwxHkcqcQ== subKey: A#
DB: 2020/08/13 04:26:04.345184 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.486139ms
FetchForUpdate: 2020/08/13 04:26:04.345222 len(nb): 1
fetchItems: 2020/08/13 04:26:04.345248 +++  Cache FetchItems for sortk A#G#:S UID: [CyqR+rEmSYSNGV+fssiKOA==] 
FetchNode: 2020/08/13 04:26:04.345253  node: CyqR+rEmSYSNGV+fssiKOA== subKey: A#G#:S
DB: 2020/08/13 04:26:04.345914 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.82826ms
DB: 2020/08/13 04:26:04.348016 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.733014ms
Unlock: 2020/08/13 04:26:04.348794 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:04.353256 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.820565ms
Unlock: 2020/08/13 04:26:04.353267 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:26:04.353296 ** Cache FetchForUpdate Cache Key Value: [CyqR+rEmSYSNGV+fssiKOA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.353303 +++  Cache FetchItems for sortk A#G#:S UID: [CyqR+rEmSYSNGV+fssiKOA==] 
FetchNode: 2020/08/13 04:26:04.353308  node: CyqR+rEmSYSNGV+fssiKOA== subKey: A#G#:S
DB: 2020/08/13 04:26:04.355964 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.625818ms
DB: 2020/08/13 04:26:04.362004 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.959779ms
DB: 2020/08/13 04:26:04.365243 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.188276ms
DB: 2020/08/13 04:26:04.368877 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.531281ms
DB: 2020/08/13 04:26:04.374852 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.906699ms
DB: 2020/08/13 04:26:04.378391 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.259789ms
DB: 2020/08/13 04:26:04.382218 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.539502ms
DB: 2020/08/13 04:26:04.388551 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.031144ms
DB: 2020/08/13 04:26:04.393114 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.238354ms
DB: 2020/08/13 04:26:04.396849 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.430061ms
Unlock: 2020/08/13 04:26:04.396863 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:26:04.400472 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.240006ms
FetchForUpdate: 2020/08/13 04:26:04.400484 ** Cache FetchForUpdate Cache Key Value: [CyqR+rEmSYSNGV+fssiKOA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.400490 +++  Cache FetchItems for sortk A#G#:S UID: [CyqR+rEmSYSNGV+fssiKOA==] 
FetchNode: 2020/08/13 04:26:04.400495  node: CyqR+rEmSYSNGV+fssiKOA== subKey: A#G#:S
DB: 2020/08/13 04:26:04.403124 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.594959ms
AttachNode: gr1 2020/08/13 04:26:04.403234 Errored: SetUpredAvailable :for  CyqR+rEmSYSNGV+fssiKOA==
Cache: 2020/08/13 04:26:04.403242 In SetUpredAvailable: pUid, tUID:  CyqR+rEmSYSNGV+fssiKOA== CyqR+rEmSYSNGV+fssiKOA== A#G#:S
Cache: 2020/08/13 04:26:04.403246 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:04.412510 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 9.232956ms
Unlock: 2020/08/13 04:26:04.412522 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:04.420794 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.924029ms
DB: 2020/08/13 04:26:04.423762 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.426698 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.429650 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.432217 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.435704 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.437463ms
DB: 2020/08/13 04:26:04.440166 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.077911ms
FetchForUpdate: 2020/08/13 04:26:04.440309 ** Cache FetchForUpdate Cache Key Value: [dsf4WOubQZOqpDwxHkcqcQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.440320 +++  Cache FetchItems for sortk A#G#:S UID: [dsf4WOubQZOqpDwxHkcqcQ==] 
FetchNode: 2020/08/13 04:26:04.440325  node: dsf4WOubQZOqpDwxHkcqcQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:04.440506 ** Cache FetchForUpdate Cache Key Value: [JmfUUopoQAeO5/RIIfCpkA==]   sortk: A#
fetchItems: 2020/08/13 04:26:04.440515 +++  Cache FetchItems for sortk A# UID: [JmfUUopoQAeO5/RIIfCpkA==] 
FetchNode: 2020/08/13 04:26:04.440526  node: JmfUUopoQAeO5/RIIfCpkA== subKey: A#
DB: 2020/08/13 04:26:04.442661 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.299207ms
DB: 2020/08/13 04:26:04.443616 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.027265ms
Unlock: 2020/08/13 04:26:04.445021 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:04.446381 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.399485ms
Unlock: 2020/08/13 04:26:04.446392 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:26:04.446766 ** Cache FetchForUpdate Cache Key Value: [dsf4WOubQZOqpDwxHkcqcQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.446785 +++  Cache FetchItems for sortk A#G#:S UID: [dsf4WOubQZOqpDwxHkcqcQ==] 
FetchNode: 2020/08/13 04:26:04.446790  node: dsf4WOubQZOqpDwxHkcqcQ== subKey: A#G#:S
DB: 2020/08/13 04:26:04.449180 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.359009ms
DB: 2020/08/13 04:26:04.455622 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.866798ms
DB: 2020/08/13 04:26:04.459170 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.170772ms
DB: 2020/08/13 04:26:04.463867 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.012542ms
DB: 2020/08/13 04:26:04.470139 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.825053ms
DB: 2020/08/13 04:26:04.473649 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.120107ms
DB: 2020/08/13 04:26:04.480157 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.640097ms
DB: 2020/08/13 04:26:04.486040 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.817895ms
DB: 2020/08/13 04:26:04.489293 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.198486ms
DB: 2020/08/13 04:26:04.492726 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.36696ms
Unlock: 2020/08/13 04:26:04.492738 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:26:04.496205 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.40019ms
FetchForUpdate: 2020/08/13 04:26:04.496219 ** Cache FetchForUpdate Cache Key Value: [dsf4WOubQZOqpDwxHkcqcQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.496227 +++  Cache FetchItems for sortk A#G#:S UID: [dsf4WOubQZOqpDwxHkcqcQ==] 
FetchNode: 2020/08/13 04:26:04.496231  node: dsf4WOubQZOqpDwxHkcqcQ== subKey: A#G#:S
DB: 2020/08/13 04:26:04.499219 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.954503ms
AttachNode: gr1 2020/08/13 04:26:04.499300 Errored: SetUpredAvailable :for  dsf4WOubQZOqpDwxHkcqcQ==
Cache: 2020/08/13 04:26:04.499308 In SetUpredAvailable: pUid, tUID:  dsf4WOubQZOqpDwxHkcqcQ== dsf4WOubQZOqpDwxHkcqcQ== A#G#:S
Cache: 2020/08/13 04:26:04.499312 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:04.502702 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.341008ms
Unlock: 2020/08/13 04:26:04.502711 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:04.507305 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.144332ms
DB: 2020/08/13 04:26:04.509438 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.511959 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.515690 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.517834 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.521204 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.281845ms
DB: 2020/08/13 04:26:04.525559 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.072953ms
FetchForUpdate: 2020/08/13 04:26:04.525573 ** Cache FetchForUpdate Cache Key Value: [CyqR+rEmSYSNGV+fssiKOA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.525579 +++  Cache FetchItems for sortk A#G#:S UID: [CyqR+rEmSYSNGV+fssiKOA==] 
FetchNode: 2020/08/13 04:26:04.525593  node: CyqR+rEmSYSNGV+fssiKOA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:04.525765 ** Cache FetchForUpdate Cache Key Value: [JmfUUopoQAeO5/RIIfCpkA==]   sortk: A#
fetchItems: 2020/08/13 04:26:04.525774 +++  Cache FetchItems for sortk A# UID: [JmfUUopoQAeO5/RIIfCpkA==] 
FetchNode: 2020/08/13 04:26:04.525815  node: JmfUUopoQAeO5/RIIfCpkA== subKey: A#
DB: 2020/08/13 04:26:04.528163 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.539026ms
DB: 2020/08/13 04:26:04.529470 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.582267ms
Unlock: 2020/08/13 04:26:04.530131 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:04.532195 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.444231ms
DB: 2020/08/13 04:26:04.535270 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.045262ms
DB: 2020/08/13 04:26:04.535285 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.045262ms
DB: 2020/08/13 04:26:04.538487 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.17249ms
DB: 2020/08/13 04:26:04.538501 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.17249ms
DB: 2020/08/13 04:26:04.542286 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.596196ms
DB: 2020/08/13 04:26:04.545871 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.408789ms
Unlock: 2020/08/13 04:26:04.545884 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:26:04.553256 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.112402ms
DB: 2020/08/13 04:26:04.556709 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.400956ms
DB: 2020/08/13 04:26:04.560413 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.599466ms
DB: 2020/08/13 04:26:04.566439 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.951764ms
DB: 2020/08/13 04:26:04.569690 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.175557ms
DB: 2020/08/13 04:26:04.573191 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.396809ms
DB: 2020/08/13 04:26:04.579129 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.849493ms
DB: 2020/08/13 04:26:04.582639 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.185025ms
DB: 2020/08/13 04:26:04.586503 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.54511ms
DB: 2020/08/13 04:26:04.590618 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.916415ms
FetchForUpdate: 2020/08/13 04:26:04.590631 ** Cache FetchForUpdate Cache Key Value: [CyqR+rEmSYSNGV+fssiKOA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.590638 +++  Cache FetchItems for sortk A#G#:S UID: [CyqR+rEmSYSNGV+fssiKOA==] 
FetchNode: 2020/08/13 04:26:04.590643  node: CyqR+rEmSYSNGV+fssiKOA== subKey: A#G#:S
DB: 2020/08/13 04:26:04.594038 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.356895ms
AttachNode: gr1 2020/08/13 04:26:04.594166 Errored: SetUpredAvailable :for  CyqR+rEmSYSNGV+fssiKOA==
Cache: 2020/08/13 04:26:04.594176 In SetUpredAvailable: pUid, tUID:  CyqR+rEmSYSNGV+fssiKOA== mdq3aJA7ShunNt2kB3Nlxg== A#G#:S
Cache: 2020/08/13 04:26:04.594189 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:04.597512 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.287003ms
Unlock: 2020/08/13 04:26:04.597522 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:04.602082 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.08596ms
DB: 2020/08/13 04:26:04.604831 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.607078 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.609279 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.611441 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.615425 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.913487ms
DB: 2020/08/13 04:26:04.619825 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.104035ms
FetchForUpdate: 2020/08/13 04:26:04.619840 ** Cache FetchForUpdate Cache Key Value: [dsf4WOubQZOqpDwxHkcqcQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.619847 +++  Cache FetchItems for sortk A#G#:S UID: [dsf4WOubQZOqpDwxHkcqcQ==] 
FetchNode: 2020/08/13 04:26:04.619852  node: dsf4WOubQZOqpDwxHkcqcQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:04.620041 ** Cache FetchForUpdate Cache Key Value: [CyqR+rEmSYSNGV+fssiKOA==]   sortk: A#
fetchItems: 2020/08/13 04:26:04.620050 +++  Cache FetchItems for sortk A# UID: [CyqR+rEmSYSNGV+fssiKOA==] 
FetchNode: 2020/08/13 04:26:04.620062  node: CyqR+rEmSYSNGV+fssiKOA== subKey: A#
DB: 2020/08/13 04:26:04.622602 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.712577ms
DB: 2020/08/13 04:26:04.623787 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.63925ms
Unlock: 2020/08/13 04:26:04.624485 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:04.626754 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.508025ms
DB: 2020/08/13 04:26:04.629935 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.110212ms
DB: 2020/08/13 04:26:04.629951 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.110212ms
DB: 2020/08/13 04:26:04.633396 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.411158ms
DB: 2020/08/13 04:26:04.633411 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.411158ms
DB: 2020/08/13 04:26:04.637665 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.035528ms
DB: 2020/08/13 04:26:04.641782 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.658447ms
Unlock: 2020/08/13 04:26:04.641798 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:26:04.648202 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.723135ms
DB: 2020/08/13 04:26:04.651650 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.269648ms
DB: 2020/08/13 04:26:04.656214 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.981127ms
DB: 2020/08/13 04:26:04.663289 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.441154ms
DB: 2020/08/13 04:26:04.667797 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.13358ms
DB: 2020/08/13 04:26:04.678525 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 10.415816ms
DB: 2020/08/13 04:26:04.685013 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.046835ms
DB: 2020/08/13 04:26:04.688815 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.73674ms
DB: 2020/08/13 04:26:04.692577 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.470702ms
DB: 2020/08/13 04:26:04.696137 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.364589ms
FetchForUpdate: 2020/08/13 04:26:04.696288 ** Cache FetchForUpdate Cache Key Value: [dsf4WOubQZOqpDwxHkcqcQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.696299 +++  Cache FetchItems for sortk A#G#:S UID: [dsf4WOubQZOqpDwxHkcqcQ==] 
FetchNode: 2020/08/13 04:26:04.696304  node: dsf4WOubQZOqpDwxHkcqcQ== subKey: A#G#:S
DB: 2020/08/13 04:26:04.698860 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.520029ms
AttachNode: gr1 2020/08/13 04:26:04.698966 Errored: SetUpredAvailable :for  dsf4WOubQZOqpDwxHkcqcQ==
Cache: 2020/08/13 04:26:04.698974 In SetUpredAvailable: pUid, tUID:  dsf4WOubQZOqpDwxHkcqcQ== 3iO0YKV5RnCVi79RWG4HSA== A#G#:S
Cache: 2020/08/13 04:26:04.698979 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:04.703392 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.380986ms
Unlock: 2020/08/13 04:26:04.703402 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:04.708024 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.166591ms
DB: 2020/08/13 04:26:04.710392 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.713203 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.715957 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.718604 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:04.722359 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.706665ms
DB: 2020/08/13 04:26:04.726501 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.966697ms
FetchForUpdate: 2020/08/13 04:26:04.726516 ** Cache FetchForUpdate Cache Key Value: [JmfUUopoQAeO5/RIIfCpkA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.726522 +++  Cache FetchItems for sortk A#G#:S UID: [JmfUUopoQAeO5/RIIfCpkA==] 
FetchNode: 2020/08/13 04:26:04.726527  node: JmfUUopoQAeO5/RIIfCpkA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:04.726704 ** Cache FetchForUpdate Cache Key Value: [CyqR+rEmSYSNGV+fssiKOA==]   sortk: A#
fetchItems: 2020/08/13 04:26:04.726714 +++  Cache FetchItems for sortk A# UID: [CyqR+rEmSYSNGV+fssiKOA==] 
FetchNode: 2020/08/13 04:26:04.726726  node: CyqR+rEmSYSNGV+fssiKOA== subKey: A#
DB: 2020/08/13 04:26:04.729474 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.91395ms
DB: 2020/08/13 04:26:04.730541 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.735676ms
Unlock: 2020/08/13 04:26:04.731265 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:04.733426 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.453117ms
DB: 2020/08/13 04:26:04.736862 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.387289ms
DB: 2020/08/13 04:26:04.736887 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.387289ms
DB: 2020/08/13 04:26:04.740080 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.142324ms
DB: 2020/08/13 04:26:04.740096 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.142324ms
DB: 2020/08/13 04:26:04.744088 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.807518ms
DB: 2020/08/13 04:26:04.803679 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 59.43378ms
Unlock: 2020/08/13 04:26:04.803896 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:26:04.809878 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.287162ms
DB: 2020/08/13 04:26:04.813458 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.390967ms
DB: 2020/08/13 04:26:04.818566 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.736647ms
DB: 2020/08/13 04:26:04.824915 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.943696ms
DB: 2020/08/13 04:26:04.828531 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.34511ms
DB: 2020/08/13 04:26:04.832472 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.668161ms
DB: 2020/08/13 04:26:04.842715 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 9.949369ms
DB: 2020/08/13 04:26:04.846460 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.286334ms
DB: 2020/08/13 04:26:04.850378 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.609225ms
DB: 2020/08/13 04:26:04.854269 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.718222ms
FetchForUpdate: 2020/08/13 04:26:04.854281 ** Cache FetchForUpdate Cache Key Value: [JmfUUopoQAeO5/RIIfCpkA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:04.854287 +++  Cache FetchItems for sortk A#G#:S UID: [JmfUUopoQAeO5/RIIfCpkA==] 
FetchNode: 2020/08/13 04:26:04.854292  node: JmfUUopoQAeO5/RIIfCpkA== subKey: A#G#:S
DB: 2020/08/13 04:26:04.857592 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.267101ms
AttachNode: gr1 2020/08/13 04:26:04.857808 Errored: SetUpredAvailable :for  JmfUUopoQAeO5/RIIfCpkA==
Cache: 2020/08/13 04:26:04.857820 In SetUpredAvailable: pUid, tUID:  JmfUUopoQAeO5/RIIfCpkA== LKYqxRgYTYaGhH6Co99Wsg== A#G#:S
Cache: 2020/08/13 04:26:04.857825 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:04.861347 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.489549ms
Unlock: 2020/08/13 04:26:04.861357 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:04.866054 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.245773ms
rdfLoader: 2020/08/13 04:26:04.866065 saveNode finished waiting...exiting
grmgr: 2020/08/13 04:26:04.866075 Powering down...
rdfuuid: 2020/08/13 04:26:04.866081 Powering down...
DB:2020/08/13 04:26:39 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:26:39.312173 Powering on...
rdfLoader: 2020/08/13 04:26:39.312562 verify started....xx.
rdfLoader: 2020/08/13 04:26:39.312577 saveNode started......
rdfuuid: 2020/08/13 04:26:39.312590 Powering on...
rdfLoader: 2020/08/13 04:26:39.312597 *************** All started 
rdfLoader: 2020/08/13 04:26:39.320515 .  getType..
rdfLoader: 2020/08/13 04:26:39.320532 node.TyName : [Person]
DB: 2020/08/13 04:26:39.440561 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 119.978034ms
verify: 2020/08/13 04:26:39.440731 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:26:39.440781 Find Ty Address
rdfLoader: 2020/08/13 04:26:39.440787 Find Ty Age
rdfLoader: 2020/08/13 04:26:39.440793 Find Ty Cars
rdfLoader: 2020/08/13 04:26:39.440798 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:26:39.440803 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:26:39.440808 Find Ty DOB
rdfLoader: 2020/08/13 04:26:39.440813 Find Ty Friends
rdfLoader: 2020/08/13 04:26:39.440817 Find Ty Jobs
rdfLoader: 2020/08/13 04:26:39.440821 Find Ty Name
rdfLoader: 2020/08/13 04:26:39.440828 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:26:39.440844 Find Ty Siblings
rdfLoader: 2020/08/13 04:26:39.440854 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:26:39.440882 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:26:39.440888 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:26:39.440912 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.440919 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.440925 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.440931 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.440938 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.440944 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.440950 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:26:39.440967 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:26:39.440973 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0007cc1e0)}
SaveRDFNode: 2020/08/13 04:26:39.440978 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:26:39.440986 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.440990 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.440995 UID received  : 9gGV39IuQ1SMw4WcMHuPnQ==
grmgr: 2020/08/13 04:26:39.441198 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:26:39.441210 *** Verify running...... 1
rdfLoader: 2020/08/13 04:26:39.441214 .  getType..
rdfLoader: 2020/08/13 04:26:39.441218 node.TyName : [Person]
verify: 2020/08/13 04:26:39.441237 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:26:39.441308 Find Ty Address
rdfLoader: 2020/08/13 04:26:39.441315 Find Ty Age
rdfLoader: 2020/08/13 04:26:39.441320 Find Ty Cars
rdfLoader: 2020/08/13 04:26:39.441325 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:26:39.441331 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:26:39.441335 Find Ty DOB
rdfLoader: 2020/08/13 04:26:39.441340 Find Ty Friends
rdfLoader: 2020/08/13 04:26:39.441344 Find Ty Jobs
rdfLoader: 2020/08/13 04:26:39.441348 Find Ty Name
rdfLoader: 2020/08/13 04:26:39.441363 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:26:39.441371 Find Ty Siblings
rdfLoader: 2020/08/13 04:26:39.441380 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:26:39.441408 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:26:39.441413 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:26:39.441433 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.441441 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.441447 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.441453 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.441458 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.441464 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.441470 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:26:39.441475 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:26:39.441480 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc0007cc5a0)}
SaveRDFNode: 2020/08/13 04:26:39.441485 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:26:39.441492 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.441496 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.441501 UID received  : 8FeGfIjFQEqj/2BJ4Q9dvg==
grmgr: 2020/08/13 04:26:39.441777 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:26:39.441859 *** Verify running...... 1
rdfLoader: 2020/08/13 04:26:39.444714 .  getType..
rdfLoader: 2020/08/13 04:26:39.444726 node.TyName : [Person]
verify: 2020/08/13 04:26:39.445296 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:26:39.445852 Find Ty Address
rdfLoader: 2020/08/13 04:26:39.445862 Find Ty Age
rdfLoader: 2020/08/13 04:26:39.445868 Find Ty Cars
rdfLoader: 2020/08/13 04:26:39.445873 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:26:39.445878 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:26:39.445882 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:26:39.445886 Find Ty DOB
rdfLoader: 2020/08/13 04:26:39.445890 Find Ty Friends
rdfLoader: 2020/08/13 04:26:39.445894 Find Ty Jobs
rdfLoader: 2020/08/13 04:26:39.445898 Find Ty Name
rdfLoader: 2020/08/13 04:26:39.445902 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:26:39.445907 Find Ty Siblings
rdfLoader: 2020/08/13 04:26:39.445917 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:26:39.445973 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:26:39.445985 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:26:39.446008 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.446014 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.446020 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.446027 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.446033 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.446038 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.446044 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:26:39.446048 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:26:39.446054 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0007cccc0)}
SaveRDFNode: 2020/08/13 04:26:39.446058 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:26:39.446065 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.446069 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.446075 UID received  : 59vAsWxkRFGgCSi1tRxXWw==
grmgr: 2020/08/13 04:26:39.446372 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:26:39.446485 *** Verify running...... 2
rdfLoader: 2020/08/13 04:26:39.446501 .  getType..
rdfLoader: 2020/08/13 04:26:39.446505 node.TyName : [Person]
verify: 2020/08/13 04:26:39.446979 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:26:39.447504 Find Ty Address
rdfLoader: 2020/08/13 04:26:39.447514 Find Ty Age
rdfLoader: 2020/08/13 04:26:39.447520 Find Ty Cars
rdfLoader: 2020/08/13 04:26:39.447525 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:26:39.447530 Find Ty DOB
rdfLoader: 2020/08/13 04:26:39.447534 Find Ty Friends
rdfLoader: 2020/08/13 04:26:39.447538 Find Ty Jobs
rdfLoader: 2020/08/13 04:26:39.447542 Find Ty Name
rdfLoader: 2020/08/13 04:26:39.447546 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:26:39.447550 Find Ty Siblings
rdfLoader: 2020/08/13 04:26:39.447559 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:26:39.447582 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:26:39.447586 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:26:39.447608 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.447614 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.447620 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.447626 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.447637 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.447643 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:26:39.447665 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:26:39.447670 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:26:39.447675 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc0007cd2c0)}
SaveRDFNode: 2020/08/13 04:26:39.447680 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:26:39.447688 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.447692 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.447698 UID received  : dsNOzPHkRoyKwxZLKdMWeA==
grmgr: 2020/08/13 04:26:39.448010 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:26:39.448113 *** Verify running...... 2
verify: 2020/08/13 04:26:39.448124 verify exited.....
DB: 2020/08/13 04:26:39.452592 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.557072ms
DB: 2020/08/13 04:26:39.457966 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.435829ms
DB: 2020/08/13 04:26:39.462894 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.782418ms
DB: 2020/08/13 04:26:39.468113 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.186975ms
DB: 2020/08/13 04:26:39.473116 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.971396ms
DB: 2020/08/13 04:26:39.473521 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 27.395948ms
DB: 2020/08/13 04:26:39.475986 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 28.257306ms
DB: 2020/08/13 04:26:39.478126 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.974798ms
SaveRDFNode: 2020/08/13 04:26:39.478140 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/13 04:26:39.478147 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.478154 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.478160 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:39.478173 a: = db.Item{PKey:[]uint8{0xf0, 0x57, 0x86, 0x7c, 0x88, 0xc5, 0x40, 0x4a, 0xa3, 0xff, 0x60, 0x49, 0xe1, 0xf, 0x5d, 0xbe}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:39.478472 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.7913ms
DB: 2020/08/13 04:26:39.478807 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 26.121316ms
DB: 2020/08/13 04:26:39.480737 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.719157ms
DB: 2020/08/13 04:26:39.483029 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.828038ms
SaveRDFNode: 2020/08/13 04:26:39.483042 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc5a0)}
rdfUIDdb: 2020/08/13 04:26:39.483048 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.483051 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.483057 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:39.483067 a: = db.Item{PKey:[]uint8{0xf0, 0x57, 0x86, 0x7c, 0x88, 0xc5, 0x40, 0x4a, 0xa3, 0xff, 0x60, 0x49, 0xe1, 0xf, 0x5d, 0xbe}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:39.483551 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.709904ms
DB: 2020/08/13 04:26:39.484251 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.749468ms
DB: 2020/08/13 04:26:39.485479 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.712778ms
DB: 2020/08/13 04:26:39.487828 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.729473ms
SaveRDFNode: 2020/08/13 04:26:39.487838 Returned.+++++++++++ No error
DB: 2020/08/13 04:26:39.488353 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.763585ms
DB: 2020/08/13 04:26:39.489195 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.913772ms
DB: 2020/08/13 04:26:39.490338 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.829721ms
DB: 2020/08/13 04:26:39.493349 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.959013ms
SaveRDFNode: 2020/08/13 04:26:39.493361 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/13 04:26:39.493366 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.493370 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.493375 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:39.493389 a: = db.Item{PKey:[]uint8{0xf6, 0x1, 0x95, 0xdf, 0xd2, 0x2e, 0x43, 0x54, 0x8c, 0xc3, 0x85, 0x9c, 0x30, 0x7b, 0x8f, 0x9d}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:39.494046 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.655012ms
SaveRDFNode: 2020/08/13 04:26:39.494058 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cccc0)}
rdfUIDdb: 2020/08/13 04:26:39.494064 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.494068 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.494073 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:39.494083 a: = db.Item{PKey:[]uint8{0xe7, 0xdb, 0xc0, 0xb1, 0x6c, 0x64, 0x44, 0x51, 0xa0, 0x9, 0x28, 0xb5, 0xb5, 0x1c, 0x57, 0x5b}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:39.495149 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.779143ms
SaveRDFNode: 2020/08/13 04:26:39.495161 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd2c0)}
rdfUIDdb: 2020/08/13 04:26:39.495167 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.495170 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.495175 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:39.495185 a: = db.Item{PKey:[]uint8{0x76, 0xc3, 0x4e, 0xcc, 0xf1, 0xe4, 0x46, 0x8c, 0x8a, 0xc3, 0x16, 0x4b, 0x29, 0xd3, 0x16, 0x78}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:39.498399 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.982925ms
SaveRDFNode: 2020/08/13 04:26:39.498410 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cc1e0)}
rdfUIDdb: 2020/08/13 04:26:39.498415 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.498419 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.498424 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:39.498433 a: = db.Item{PKey:[]uint8{0xf6, 0x1, 0x95, 0xdf, 0xd2, 0x2e, 0x43, 0x54, 0x8c, 0xc3, 0x85, 0x9c, 0x30, 0x7b, 0x8f, 0x9d}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:39.498852 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.735074ms
SaveRDFNode: 2020/08/13 04:26:39.498890 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cccc0)}
rdfUIDdb: 2020/08/13 04:26:39.498897 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.498907 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.498913 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:39.498923 a: = db.Item{PKey:[]uint8{0xe7, 0xdb, 0xc0, 0xb1, 0x6c, 0x64, 0x44, 0x51, 0xa0, 0x9, 0x28, 0xb5, 0xb5, 0x1c, 0x57, 0x5b}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:39.499922 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.7098ms
SaveRDFNode: 2020/08/13 04:26:39.499934 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0007cd2c0)}
rdfUIDdb: 2020/08/13 04:26:39.499939 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:26:39.499960 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:26:39.499966 Received UID: X18=
SaveRDFNode: 2020/08/13 04:26:39.499979 a: = db.Item{PKey:[]uint8{0x76, 0xc3, 0x4e, 0xcc, 0xf1, 0xe4, 0x46, 0x8c, 0x8a, 0xc3, 0x16, 0x4b, 0x29, 0xd3, 0x16, 0x78}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:26:39.503439 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.975247ms
SaveRDFNode: 2020/08/13 04:26:39.503457 Returned.+++++++++++ No error
DB: 2020/08/13 04:26:39.503660 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.707526ms
SaveRDFNode: 2020/08/13 04:26:39.503669 Returned.+++++++++++ No error
DB: 2020/08/13 04:26:39.504934 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.924513ms
SaveRDFNode: 2020/08/13 04:26:39.506813 Returned.+++++++++++ No error
DB: 2020/08/13 04:26:39.510591 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.514093 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.517395 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.521275 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.526965 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.635066ms
DB: 2020/08/13 04:26:39.536341 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 8.714901ms
FetchForUpdate: 2020/08/13 04:26:39.536367 ** Cache FetchForUpdate Cache Key Value: [8FeGfIjFQEqj/2BJ4Q9dvg==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:26:39.536373  node: 8FeGfIjFQEqj/2BJ4Q9dvg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:39.536549 ** Cache FetchForUpdate Cache Key Value: [9gGV39IuQ1SMw4WcMHuPnQ==]   sortk: A#
FetchNode: 2020/08/13 04:26:39.536564  node: 9gGV39IuQ1SMw4WcMHuPnQ== subKey: A#
DB: 2020/08/13 04:26:39.539494 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.08942ms
FetchForUpdate: 2020/08/13 04:26:39.539538 len(nb): 1
fetchItems: 2020/08/13 04:26:39.539547 +++  Cache FetchItems for sortk A#G#:S UID: [8FeGfIjFQEqj/2BJ4Q9dvg==] 
FetchNode: 2020/08/13 04:26:39.539552  node: 8FeGfIjFQEqj/2BJ4Q9dvg== subKey: A#G#:S
DB: 2020/08/13 04:26:39.543211 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.630717ms
DB: 2020/08/13 04:26:39.548411 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.08677ms
Unlock: 2020/08/13 04:26:39.548422 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:26:39.555192 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 18.588674ms
FetchForUpdate: 2020/08/13 04:26:39.555317 len(nb): 7
fetchItems: 2020/08/13 04:26:39.555327 +++  Cache FetchItems for sortk A# UID: [9gGV39IuQ1SMw4WcMHuPnQ==] 
FetchNode: 2020/08/13 04:26:39.555332  node: 9gGV39IuQ1SMw4WcMHuPnQ== subKey: A#
DB: 2020/08/13 04:26:39.558810 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.440654ms
Unlock: 2020/08/13 04:26:39.561622 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 04:26:39.562100 ** Cache FetchForUpdate Cache Key Value: [8FeGfIjFQEqj/2BJ4Q9dvg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:39.562111 +++  Cache FetchItems for sortk A#G#:S UID: [8FeGfIjFQEqj/2BJ4Q9dvg==] 
FetchNode: 2020/08/13 04:26:39.562116  node: 8FeGfIjFQEqj/2BJ4Q9dvg== subKey: A#G#:S
DB: 2020/08/13 04:26:39.566347 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.100115ms
DB: 2020/08/13 04:26:39.573365 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.614982ms
DB: 2020/08/13 04:26:39.578439 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.848946ms
DB: 2020/08/13 04:26:39.584020 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.167788ms
DB: 2020/08/13 04:26:39.590832 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.52636ms
DB: 2020/08/13 04:26:39.595840 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.730882ms
DB: 2020/08/13 04:26:39.601440 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.285866ms
DB: 2020/08/13 04:26:39.608370 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.586886ms
DB: 2020/08/13 04:26:39.613741 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.024938ms
DB: 2020/08/13 04:26:39.618945 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.888459ms
Unlock: 2020/08/13 04:26:39.618959 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:26:39.624384 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.056036ms
FetchForUpdate: 2020/08/13 04:26:39.624396 ** Cache FetchForUpdate Cache Key Value: [8FeGfIjFQEqj/2BJ4Q9dvg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:39.624403 +++  Cache FetchItems for sortk A#G#:S UID: [8FeGfIjFQEqj/2BJ4Q9dvg==] 
FetchNode: 2020/08/13 04:26:39.624408  node: 8FeGfIjFQEqj/2BJ4Q9dvg== subKey: A#G#:S
DB: 2020/08/13 04:26:39.628190 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.74853ms
AttachNode: gr1 2020/08/13 04:26:39.628296 Errored: SetUpredAvailable :for  8FeGfIjFQEqj/2BJ4Q9dvg==
Cache: 2020/08/13 04:26:39.628306 In SetUpredAvailable: pUid, tUID:  8FeGfIjFQEqj/2BJ4Q9dvg== 8FeGfIjFQEqj/2BJ4Q9dvg== A#G#:S
Cache: 2020/08/13 04:26:39.628311 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:39.633420 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.041847ms
Unlock: 2020/08/13 04:26:39.633431 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:39.641820 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 8.013682ms
DB: 2020/08/13 04:26:39.645747 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.648746 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.651844 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.655691 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.660873 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.131004ms
DB: 2020/08/13 04:26:39.665766 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.687934ms
FetchForUpdate: 2020/08/13 04:26:39.665783 ** Cache FetchForUpdate Cache Key Value: [59vAsWxkRFGgCSi1tRxXWw==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:26:39.665789  node: 59vAsWxkRFGgCSi1tRxXWw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:39.665973 ** Cache FetchForUpdate Cache Key Value: [9gGV39IuQ1SMw4WcMHuPnQ==]   sortk: A#
fetchItems: 2020/08/13 04:26:39.665983 +++  Cache FetchItems for sortk A# UID: [9gGV39IuQ1SMw4WcMHuPnQ==] 
FetchNode: 2020/08/13 04:26:39.666031  node: 9gGV39IuQ1SMw4WcMHuPnQ== subKey: A#
DB: 2020/08/13 04:26:39.669488 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.652421ms
FetchForUpdate: 2020/08/13 04:26:39.669527 len(nb): 1
fetchItems: 2020/08/13 04:26:39.669553 +++  Cache FetchItems for sortk A#G#:S UID: [59vAsWxkRFGgCSi1tRxXWw==] 
FetchNode: 2020/08/13 04:26:39.669558  node: 59vAsWxkRFGgCSi1tRxXWw== subKey: A#G#:S
DB: 2020/08/13 04:26:39.670037 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.944304ms
Unlock: 2020/08/13 04:26:39.670649 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:39.672815 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.218614ms
DB: 2020/08/13 04:26:39.678263 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.223727ms
Unlock: 2020/08/13 04:26:39.678321 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:26:39.678578 ** Cache FetchForUpdate Cache Key Value: [59vAsWxkRFGgCSi1tRxXWw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:39.678587 +++  Cache FetchItems for sortk A#G#:S UID: [59vAsWxkRFGgCSi1tRxXWw==] 
FetchNode: 2020/08/13 04:26:39.678591  node: 59vAsWxkRFGgCSi1tRxXWw== subKey: A#G#:S
DB: 2020/08/13 04:26:39.682688 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.005925ms
DB: 2020/08/13 04:26:39.689598 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.550946ms
DB: 2020/08/13 04:26:39.694882 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.059436ms
DB: 2020/08/13 04:26:39.700408 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.163837ms
DB: 2020/08/13 04:26:39.707427 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.671443ms
DB: 2020/08/13 04:26:39.712726 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.01255ms
DB: 2020/08/13 04:26:39.718203 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.159828ms
DB: 2020/08/13 04:26:39.725432 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.741083ms
DB: 2020/08/13 04:26:39.731039 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.142394ms
DB: 2020/08/13 04:26:39.741419 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 10.085153ms
Unlock: 2020/08/13 04:26:39.741435 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:26:39.747125 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.313049ms
FetchForUpdate: 2020/08/13 04:26:39.747139 ** Cache FetchForUpdate Cache Key Value: [59vAsWxkRFGgCSi1tRxXWw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:39.747146 +++  Cache FetchItems for sortk A#G#:S UID: [59vAsWxkRFGgCSi1tRxXWw==] 
FetchNode: 2020/08/13 04:26:39.747178  node: 59vAsWxkRFGgCSi1tRxXWw== subKey: A#G#:S
DB: 2020/08/13 04:26:39.752083 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.861683ms
AttachNode: gr1 2020/08/13 04:26:39.752163 Errored: SetUpredAvailable :for  59vAsWxkRFGgCSi1tRxXWw==
Cache: 2020/08/13 04:26:39.752170 In SetUpredAvailable: pUid, tUID:  59vAsWxkRFGgCSi1tRxXWw== 59vAsWxkRFGgCSi1tRxXWw== A#G#:S
Cache: 2020/08/13 04:26:39.752174 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:39.757483 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.261885ms
Unlock: 2020/08/13 04:26:39.757496 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:39.762999 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.033969ms
DB: 2020/08/13 04:26:39.766474 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.769900 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.773879 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.777721 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.782861 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.088799ms
DB: 2020/08/13 04:26:39.788080 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.959438ms
FetchForUpdate: 2020/08/13 04:26:39.788094 ** Cache FetchForUpdate Cache Key Value: [9gGV39IuQ1SMw4WcMHuPnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:39.788100 +++  Cache FetchItems for sortk A#G#:S UID: [9gGV39IuQ1SMw4WcMHuPnQ==] 
FetchNode: 2020/08/13 04:26:39.788105  node: 9gGV39IuQ1SMw4WcMHuPnQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:39.788291 ** Cache FetchForUpdate Cache Key Value: [8FeGfIjFQEqj/2BJ4Q9dvg==]   sortk: A#
fetchItems: 2020/08/13 04:26:39.788301 +++  Cache FetchItems for sortk A# UID: [8FeGfIjFQEqj/2BJ4Q9dvg==] 
FetchNode: 2020/08/13 04:26:39.788313  node: 8FeGfIjFQEqj/2BJ4Q9dvg== subKey: A#
DB: 2020/08/13 04:26:39.791805 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.417063ms
Unlock: 2020/08/13 04:26:39.793380 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:39.793847 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.712717ms
DB: 2020/08/13 04:26:39.799881 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.734084ms
Unlock: 2020/08/13 04:26:39.799892 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:26:39.800279 ** Cache FetchForUpdate Cache Key Value: [9gGV39IuQ1SMw4WcMHuPnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:39.800289 +++  Cache FetchItems for sortk A#G#:S UID: [9gGV39IuQ1SMw4WcMHuPnQ==] 
FetchNode: 2020/08/13 04:26:39.800294  node: 9gGV39IuQ1SMw4WcMHuPnQ== subKey: A#G#:S
DB: 2020/08/13 04:26:39.803942 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.612582ms
DB: 2020/08/13 04:26:39.811309 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.799925ms
DB: 2020/08/13 04:26:39.820556 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 8.120803ms
DB: 2020/08/13 04:26:39.826024 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.341367ms
DB: 2020/08/13 04:26:39.832530 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.441293ms
DB: 2020/08/13 04:26:39.837509 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.923181ms
DB: 2020/08/13 04:26:39.842618 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.034557ms
DB: 2020/08/13 04:26:39.852319 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 9.395876ms
DB: 2020/08/13 04:26:39.857614 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.895039ms
DB: 2020/08/13 04:26:39.863750 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.872335ms
Unlock: 2020/08/13 04:26:39.863761 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:26:39.869176 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.983217ms
FetchForUpdate: 2020/08/13 04:26:39.869193 ** Cache FetchForUpdate Cache Key Value: [9gGV39IuQ1SMw4WcMHuPnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:39.869200 +++  Cache FetchItems for sortk A#G#:S UID: [9gGV39IuQ1SMw4WcMHuPnQ==] 
FetchNode: 2020/08/13 04:26:39.869205  node: 9gGV39IuQ1SMw4WcMHuPnQ== subKey: A#G#:S
DB: 2020/08/13 04:26:39.872929 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.691624ms
AttachNode: gr1 2020/08/13 04:26:39.873316 Errored: SetUpredAvailable :for  9gGV39IuQ1SMw4WcMHuPnQ==
Cache: 2020/08/13 04:26:39.873327 In SetUpredAvailable: pUid, tUID:  9gGV39IuQ1SMw4WcMHuPnQ== 9gGV39IuQ1SMw4WcMHuPnQ== A#G#:S
Cache: 2020/08/13 04:26:39.873331 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:39.878948 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.526262ms
Unlock: 2020/08/13 04:26:39.878969 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:39.884733 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.223952ms
DB: 2020/08/13 04:26:39.888901 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.891995 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.895501 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.898481 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:39.903754 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.223364ms
DB: 2020/08/13 04:26:39.908907 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.750993ms
FetchForUpdate: 2020/08/13 04:26:39.908922 ** Cache FetchForUpdate Cache Key Value: [59vAsWxkRFGgCSi1tRxXWw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:39.908928 +++  Cache FetchItems for sortk A#G#:S UID: [59vAsWxkRFGgCSi1tRxXWw==] 
FetchNode: 2020/08/13 04:26:39.908933  node: 59vAsWxkRFGgCSi1tRxXWw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:39.909109 ** Cache FetchForUpdate Cache Key Value: [8FeGfIjFQEqj/2BJ4Q9dvg==]   sortk: A#
fetchItems: 2020/08/13 04:26:39.909118 +++  Cache FetchItems for sortk A# UID: [8FeGfIjFQEqj/2BJ4Q9dvg==] 
FetchNode: 2020/08/13 04:26:39.909128  node: 8FeGfIjFQEqj/2BJ4Q9dvg== subKey: A#
DB: 2020/08/13 04:26:39.912894 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.929675ms
DB: 2020/08/13 04:26:39.913960 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.747782ms
Unlock: 2020/08/13 04:26:39.915421 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:39.918496 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.142032ms
DB: 2020/08/13 04:26:39.923411 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.883101ms
DB: 2020/08/13 04:26:39.923529 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.883101ms
DB: 2020/08/13 04:26:39.928389 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.79394ms
DB: 2020/08/13 04:26:39.928458 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.79394ms
DB: 2020/08/13 04:26:39.934054 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.303658ms
DB: 2020/08/13 04:26:39.939332 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.08493ms
Unlock: 2020/08/13 04:26:39.939463 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:26:39.951709 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 11.393252ms
DB: 2020/08/13 04:26:39.956867 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.878462ms
DB: 2020/08/13 04:26:39.966109 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 8.498188ms
DB: 2020/08/13 04:26:39.973044 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.446859ms
DB: 2020/08/13 04:26:39.978389 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.826719ms
DB: 2020/08/13 04:26:39.984119 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.232472ms
DB: 2020/08/13 04:26:39.991118 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.521509ms
DB: 2020/08/13 04:26:39.996648 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.007683ms
DB: 2020/08/13 04:26:40.002194 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.00533ms
DB: 2020/08/13 04:26:40.011080 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 8.611759ms
FetchForUpdate: 2020/08/13 04:26:40.011243 ** Cache FetchForUpdate Cache Key Value: [59vAsWxkRFGgCSi1tRxXWw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:40.011255 +++  Cache FetchItems for sortk A#G#:S UID: [59vAsWxkRFGgCSi1tRxXWw==] 
FetchNode: 2020/08/13 04:26:40.011261  node: 59vAsWxkRFGgCSi1tRxXWw== subKey: A#G#:S
DB: 2020/08/13 04:26:40.015211 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.910709ms
AttachNode: gr1 2020/08/13 04:26:40.015313 Errored: SetUpredAvailable :for  59vAsWxkRFGgCSi1tRxXWw==
Cache: 2020/08/13 04:26:40.015322 In SetUpredAvailable: pUid, tUID:  59vAsWxkRFGgCSi1tRxXWw== iqDV6Qr1RWOPDYoaJcvvIQ== A#G#:S
Cache: 2020/08/13 04:26:40.015326 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:40.020533 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.167019ms
Unlock: 2020/08/13 04:26:40.020544 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:40.026168 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.184501ms
DB: 2020/08/13 04:26:40.030269 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:40.034155 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:40.037351 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:40.040419 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:40.045428 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.933585ms
DB: 2020/08/13 04:26:40.050670 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.799718ms
FetchForUpdate: 2020/08/13 04:26:40.050685 ** Cache FetchForUpdate Cache Key Value: [9gGV39IuQ1SMw4WcMHuPnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:40.050693 +++  Cache FetchItems for sortk A#G#:S UID: [9gGV39IuQ1SMw4WcMHuPnQ==] 
FetchNode: 2020/08/13 04:26:40.050697  node: 9gGV39IuQ1SMw4WcMHuPnQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:40.050874 ** Cache FetchForUpdate Cache Key Value: [59vAsWxkRFGgCSi1tRxXWw==]   sortk: A#
fetchItems: 2020/08/13 04:26:40.050885 +++  Cache FetchItems for sortk A# UID: [59vAsWxkRFGgCSi1tRxXWw==] 
FetchNode: 2020/08/13 04:26:40.050896  node: 59vAsWxkRFGgCSi1tRxXWw== subKey: A#
DB: 2020/08/13 04:26:40.053999 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.268871ms
DB: 2020/08/13 04:26:40.055098 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.119992ms
Unlock: 2020/08/13 04:26:40.056505 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:40.059517 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.985409ms
DB: 2020/08/13 04:26:40.064267 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.717244ms
DB: 2020/08/13 04:26:40.064286 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.717244ms
DB: 2020/08/13 04:26:40.069221 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.902881ms
DB: 2020/08/13 04:26:40.069237 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.902881ms
DB: 2020/08/13 04:26:40.074451 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.145462ms
DB: 2020/08/13 04:26:40.079438 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.924179ms
Unlock: 2020/08/13 04:26:40.079452 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:26:40.086896 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.416453ms
DB: 2020/08/13 04:26:40.091625 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.677124ms
DB: 2020/08/13 04:26:40.096768 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.039142ms
DB: 2020/08/13 04:26:40.103206 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.374703ms
DB: 2020/08/13 04:26:40.107998 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.727703ms
DB: 2020/08/13 04:26:40.113120 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.030224ms
DB: 2020/08/13 04:26:40.119887 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.555257ms
DB: 2020/08/13 04:26:40.125309 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.862652ms
DB: 2020/08/13 04:26:40.130658 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.901009ms
DB: 2020/08/13 04:26:40.135854 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.819269ms
FetchForUpdate: 2020/08/13 04:26:40.135865 ** Cache FetchForUpdate Cache Key Value: [9gGV39IuQ1SMw4WcMHuPnQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:40.135871 +++  Cache FetchItems for sortk A#G#:S UID: [9gGV39IuQ1SMw4WcMHuPnQ==] 
FetchNode: 2020/08/13 04:26:40.135884  node: 9gGV39IuQ1SMw4WcMHuPnQ== subKey: A#G#:S
DB: 2020/08/13 04:26:40.139590 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.675017ms
AttachNode: gr1 2020/08/13 04:26:40.139691 Errored: SetUpredAvailable :for  9gGV39IuQ1SMw4WcMHuPnQ==
Cache: 2020/08/13 04:26:40.139698 In SetUpredAvailable: pUid, tUID:  9gGV39IuQ1SMw4WcMHuPnQ== LIe+iUT7TrCqQwcpzhe2Qg== A#G#:S
Cache: 2020/08/13 04:26:40.139702 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:40.144768 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.023939ms
Unlock: 2020/08/13 04:26:40.144778 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:40.150371 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.00562ms
DB: 2020/08/13 04:26:40.154493 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:40.157539 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:40.162101 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:40.166728 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:26:40.171807 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.996971ms
DB: 2020/08/13 04:26:40.176728 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.836287ms
FetchForUpdate: 2020/08/13 04:26:40.176743 ** Cache FetchForUpdate Cache Key Value: [8FeGfIjFQEqj/2BJ4Q9dvg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:40.176749 +++  Cache FetchItems for sortk A#G#:S UID: [8FeGfIjFQEqj/2BJ4Q9dvg==] 
FetchNode: 2020/08/13 04:26:40.176754  node: 8FeGfIjFQEqj/2BJ4Q9dvg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:26:40.176978 ** Cache FetchForUpdate Cache Key Value: [59vAsWxkRFGgCSi1tRxXWw==]   sortk: A#
fetchItems: 2020/08/13 04:26:40.176987 +++  Cache FetchItems for sortk A# UID: [59vAsWxkRFGgCSi1tRxXWw==] 
FetchNode: 2020/08/13 04:26:40.177014  node: 59vAsWxkRFGgCSi1tRxXWw== subKey: A#
DB: 2020/08/13 04:26:40.181334 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.264688ms
Unlock: 2020/08/13 04:26:40.181567 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:26:40.182042 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.241862ms
DB: 2020/08/13 04:26:40.188095 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.840568ms
DB: 2020/08/13 04:26:40.192941 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.769297ms
DB: 2020/08/13 04:26:40.192966 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.769297ms
DB: 2020/08/13 04:26:40.197746 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.749735ms
DB: 2020/08/13 04:26:40.197761 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.749735ms
DB: 2020/08/13 04:26:40.203055 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.233654ms
DB: 2020/08/13 04:26:40.208323 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.212291ms
Unlock: 2020/08/13 04:26:40.208334 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:26:40.214878 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.43106ms
DB: 2020/08/13 04:26:40.219827 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.862078ms
DB: 2020/08/13 04:26:40.225353 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.114457ms
DB: 2020/08/13 04:26:40.231882 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.464571ms
DB: 2020/08/13 04:26:40.236956 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.013472ms
DB: 2020/08/13 04:26:40.242008 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.964059ms
DB: 2020/08/13 04:26:40.248444 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.382825ms
DB: 2020/08/13 04:26:40.253261 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.739262ms
DB: 2020/08/13 04:26:40.258686 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.131076ms
DB: 2020/08/13 04:26:40.263808 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.826997ms
FetchForUpdate: 2020/08/13 04:26:40.263819 ** Cache FetchForUpdate Cache Key Value: [8FeGfIjFQEqj/2BJ4Q9dvg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:26:40.263824 +++  Cache FetchItems for sortk A#G#:S UID: [8FeGfIjFQEqj/2BJ4Q9dvg==] 
FetchNode: 2020/08/13 04:26:40.263829  node: 8FeGfIjFQEqj/2BJ4Q9dvg== subKey: A#G#:S
DB: 2020/08/13 04:26:40.267287 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.426145ms
AttachNode: gr1 2020/08/13 04:26:40.267370 Errored: SetUpredAvailable :for  8FeGfIjFQEqj/2BJ4Q9dvg==
Cache: 2020/08/13 04:26:40.267379 In SetUpredAvailable: pUid, tUID:  8FeGfIjFQEqj/2BJ4Q9dvg== vxnC3aR7SIe3cBf+k949kQ== A#G#:S
Cache: 2020/08/13 04:26:40.267383 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:26:40.272329 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.911154ms
Unlock: 2020/08/13 04:26:40.272339 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:26:40.277631 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.850825ms
rdfLoader: 2020/08/13 04:26:40.277642 saveNode finished waiting...exiting
grmgr: 2020/08/13 04:26:40.277651 Powering down...
rdfuuid: 2020/08/13 04:26:40.277657 Powering down...
DB:2020/08/13 04:27:41 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:27:41.288569 Powering on...
rdfLoader: 2020/08/13 04:27:41.288877 verify started....xx.
rdfLoader: 2020/08/13 04:27:41.288892 saveNode started......
rdfuuid: 2020/08/13 04:27:41.288905 Powering on...
rdfLoader: 2020/08/13 04:27:41.288912 *************** All started 
rdfLoader: 2020/08/13 04:27:41.297221 .  getType..
rdfLoader: 2020/08/13 04:27:41.297233 node.TyName : [Person]
DB: 2020/08/13 04:27:41.367602 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 70.315337ms
verify: 2020/08/13 04:27:41.367767 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:27:41.367815 Find Ty Address
rdfLoader: 2020/08/13 04:27:41.367821 Find Ty Age
rdfLoader: 2020/08/13 04:27:41.367828 Find Ty Cars
rdfLoader: 2020/08/13 04:27:41.367834 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:27:41.367842 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:27:41.367847 Find Ty DOB
rdfLoader: 2020/08/13 04:27:41.367852 Find Ty Friends
rdfLoader: 2020/08/13 04:27:41.367856 Find Ty Jobs
rdfLoader: 2020/08/13 04:27:41.367860 Find Ty Name
rdfLoader: 2020/08/13 04:27:41.367865 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:27:41.367869 Find Ty Siblings
rdfLoader: 2020/08/13 04:27:41.367880 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:27:41.367920 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:27:41.367926 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:27:41.367952 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.367959 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.367966 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.367972 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.367977 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.367983 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.367989 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:27:41.367994 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:27:41.368001 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000017440)}
SaveRDFNode: 2020/08/13 04:27:41.368005 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:27:41.368015 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.368019 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.368025 UID received  : TqNUs6WxSNa+g8NDvtT5zg==
grmgr: 2020/08/13 04:27:41.368224 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:27:41.368236 *** Verify running...... 1
rdfLoader: 2020/08/13 04:27:41.368241 .  getType..
rdfLoader: 2020/08/13 04:27:41.368245 node.TyName : [Person]
verify: 2020/08/13 04:27:41.368266 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:27:41.368326 Find Ty Address
rdfLoader: 2020/08/13 04:27:41.368332 Find Ty Age
rdfLoader: 2020/08/13 04:27:41.368337 Find Ty Cars
rdfLoader: 2020/08/13 04:27:41.368347 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:27:41.368352 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:27:41.368357 Find Ty DOB
rdfLoader: 2020/08/13 04:27:41.368361 Find Ty Friends
rdfLoader: 2020/08/13 04:27:41.368365 Find Ty Jobs
rdfLoader: 2020/08/13 04:27:41.368369 Find Ty Name
rdfLoader: 2020/08/13 04:27:41.368374 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:27:41.368378 Find Ty Siblings
rdfLoader: 2020/08/13 04:27:41.368386 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:27:41.368414 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:27:41.368418 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:27:41.368438 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.368450 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.368457 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.368463 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.368469 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.368475 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.368481 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:27:41.368486 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:27:41.368491 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000017920)}
SaveRDFNode: 2020/08/13 04:27:41.368495 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:27:41.368503 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.368507 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.368513 UID received  : o4RLo+BQRW6nqPopDbrMPA==
grmgr: 2020/08/13 04:27:41.369944 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:27:41.370035 *** Verify running...... 1
rdfLoader: 2020/08/13 04:27:41.372393 .  getType..
rdfLoader: 2020/08/13 04:27:41.372403 node.TyName : [Person]
verify: 2020/08/13 04:27:41.372761 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:27:41.373353 Find Ty Address
rdfLoader: 2020/08/13 04:27:41.373374 Find Ty Age
rdfLoader: 2020/08/13 04:27:41.373392 Find Ty Cars
rdfLoader: 2020/08/13 04:27:41.373402 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:27:41.373407 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:27:41.373411 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:27:41.373415 Find Ty DOB
rdfLoader: 2020/08/13 04:27:41.373419 Find Ty Friends
rdfLoader: 2020/08/13 04:27:41.373423 Find Ty Jobs
rdfLoader: 2020/08/13 04:27:41.373427 Find Ty Name
rdfLoader: 2020/08/13 04:27:41.373431 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:27:41.373435 Find Ty Siblings
rdfLoader: 2020/08/13 04:27:41.373445 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:27:41.373473 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:27:41.373478 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:27:41.373516 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.373523 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.373531 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.373536 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.373542 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.373565 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.373571 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:27:41.373575 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:27:41.373580 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0003864e0)}
SaveRDFNode: 2020/08/13 04:27:41.373584 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:27:41.373592 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.373596 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.373601 UID received  : pbq/4cwOS6+ZWajRGGbg/g==
grmgr: 2020/08/13 04:27:41.373919 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:27:41.374037 *** Verify running...... 2
rdfLoader: 2020/08/13 04:27:41.374054 .  getType..
rdfLoader: 2020/08/13 04:27:41.374059 node.TyName : [Person]
verify: 2020/08/13 04:27:41.374478 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:27:41.375044 Find Ty Address
rdfLoader: 2020/08/13 04:27:41.375053 Find Ty Age
rdfLoader: 2020/08/13 04:27:41.375075 Find Ty Cars
rdfLoader: 2020/08/13 04:27:41.375080 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:27:41.375084 Find Ty DOB
rdfLoader: 2020/08/13 04:27:41.375089 Find Ty Friends
rdfLoader: 2020/08/13 04:27:41.375092 Find Ty Jobs
rdfLoader: 2020/08/13 04:27:41.375096 Find Ty Name
rdfLoader: 2020/08/13 04:27:41.375100 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:27:41.375104 Find Ty Siblings
rdfLoader: 2020/08/13 04:27:41.375112 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:27:41.375135 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:27:41.375139 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:27:41.375216 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.375226 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.375232 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.375237 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.375243 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.375248 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:27:41.375254 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:27:41.375258 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:27:41.375264 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000386d20)}
SaveRDFNode: 2020/08/13 04:27:41.375268 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:27:41.375275 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.375279 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.375285 UID received  : 8Dvl0RfyTGC8E32hmo1mUA==
grmgr: 2020/08/13 04:27:41.375607 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:27:41.375718 *** Verify running...... 2
verify: 2020/08/13 04:27:41.375729 verify exited.....
DB: 2020/08/13 04:27:41.378378 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.303035ms
DB: 2020/08/13 04:27:41.382626 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 14.087215ms
DB: 2020/08/13 04:27:41.386136 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.689504ms
DB: 2020/08/13 04:27:41.390400 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.062258ms
DB: 2020/08/13 04:27:41.394055 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.616806ms
DB: 2020/08/13 04:27:41.396141 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.829828ms
DB: 2020/08/13 04:27:41.398790 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.161828ms
DB: 2020/08/13 04:27:41.399508 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.324495ms
DB: 2020/08/13 04:27:41.401551 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.892534ms
DB: 2020/08/13 04:27:41.402114 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.280565ms
DB: 2020/08/13 04:27:41.403491 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.95323ms
DB: 2020/08/13 04:27:41.404864 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.166342ms
DB: 2020/08/13 04:27:41.405468 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.320714ms
DB: 2020/08/13 04:27:41.406872 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.352606ms
DB: 2020/08/13 04:27:41.408255 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.359555ms
DB: 2020/08/13 04:27:41.408873 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.37629ms
DB: 2020/08/13 04:27:41.410527 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.624391ms
SaveRDFNode: 2020/08/13 04:27:41.410541 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386d20)}
rdfUIDdb: 2020/08/13 04:27:41.410549 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.410553 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.410560 Received UID: X18=
SaveRDFNode: 2020/08/13 04:27:41.410573 a: = db.Item{PKey:[]uint8{0xf0, 0x3b, 0xe5, 0xd1, 0x17, 0xf2, 0x4c, 0x60, 0xbc, 0x13, 0x7d, 0xa1, 0x9a, 0x8d, 0x66, 0x50}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:27:41.410842 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.756076ms
SaveRDFNode: 2020/08/13 04:27:41.410856 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/13 04:27:41.410862 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.410867 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.410872 Received UID: X18=
SaveRDFNode: 2020/08/13 04:27:41.410883 a: = db.Item{PKey:[]uint8{0x4e, 0xa3, 0x54, 0xb3, 0xa5, 0xb1, 0x48, 0xd6, 0xbe, 0x83, 0xc3, 0x43, 0xbe, 0xd4, 0xf9, 0xce}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:27:41.411651 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.362593ms
SaveRDFNode: 2020/08/13 04:27:41.411662 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/13 04:27:41.411675 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.411679 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.411685 Received UID: X18=
SaveRDFNode: 2020/08/13 04:27:41.411694 a: = db.Item{PKey:[]uint8{0xa3, 0x84, 0x4b, 0xa3, 0xe0, 0x50, 0x45, 0x6e, 0xa7, 0xa8, 0xfa, 0x29, 0xd, 0xba, 0xcc, 0x3c}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:27:41.412357 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.45564ms
SaveRDFNode: 2020/08/13 04:27:41.412369 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003864e0)}
rdfUIDdb: 2020/08/13 04:27:41.412374 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.412378 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.412383 Received UID: X18=
SaveRDFNode: 2020/08/13 04:27:41.412393 a: = db.Item{PKey:[]uint8{0xa5, 0xba, 0xbf, 0xe1, 0xcc, 0xe, 0x4b, 0xaf, 0x99, 0x59, 0xa8, 0xd1, 0x18, 0x66, 0xe0, 0xfe}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:27:41.413954 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.335794ms
SaveRDFNode: 2020/08/13 04:27:41.413966 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386d20)}
rdfUIDdb: 2020/08/13 04:27:41.413971 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.413975 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.413980 Received UID: X18=
SaveRDFNode: 2020/08/13 04:27:41.414005 a: = db.Item{PKey:[]uint8{0xf0, 0x3b, 0xe5, 0xd1, 0x17, 0xf2, 0x4c, 0x60, 0xbc, 0x13, 0x7d, 0xa1, 0x9a, 0x8d, 0x66, 0x50}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:27:41.414378 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.458404ms
SaveRDFNode: 2020/08/13 04:27:41.414389 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017440)}
rdfUIDdb: 2020/08/13 04:27:41.414394 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.414398 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.414403 Received UID: X18=
SaveRDFNode: 2020/08/13 04:27:41.414412 a: = db.Item{PKey:[]uint8{0x4e, 0xa3, 0x54, 0xb3, 0xa5, 0xb1, 0x48, 0xd6, 0xbe, 0x83, 0xc3, 0x43, 0xbe, 0xd4, 0xf9, 0xce}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:27:41.415168 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.447046ms
SaveRDFNode: 2020/08/13 04:27:41.415179 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017920)}
rdfUIDdb: 2020/08/13 04:27:41.415184 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.415188 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.415193 Received UID: X18=
SaveRDFNode: 2020/08/13 04:27:41.415203 a: = db.Item{PKey:[]uint8{0xa3, 0x84, 0x4b, 0xa3, 0xe0, 0x50, 0x45, 0x6e, 0xa7, 0xa8, 0xfa, 0x29, 0xd, 0xba, 0xcc, 0x3c}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:27:41.415736 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.297598ms
SaveRDFNode: 2020/08/13 04:27:41.415748 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003864e0)}
rdfUIDdb: 2020/08/13 04:27:41.415753 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:27:41.415756 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:27:41.415762 Received UID: X18=
SaveRDFNode: 2020/08/13 04:27:41.415772 a: = db.Item{PKey:[]uint8{0xa5, 0xba, 0xbf, 0xe1, 0xcc, 0xe, 0x4b, 0xaf, 0x99, 0x59, 0xa8, 0xd1, 0x18, 0x66, 0xe0, 0xfe}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:27:41.417945 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.495182ms
SaveRDFNode: 2020/08/13 04:27:41.418084 Returned.+++++++++++ No error
DB: 2020/08/13 04:27:41.418192 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.156724ms
SaveRDFNode: 2020/08/13 04:27:41.418204 Returned.+++++++++++ No error
DB: 2020/08/13 04:27:41.418675 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.445271ms
SaveRDFNode: 2020/08/13 04:27:41.418687 Returned.+++++++++++ No error
DB: 2020/08/13 04:27:41.419375 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.570885ms
SaveRDFNode: 2020/08/13 04:27:41.419383 Returned.+++++++++++ No error
DB: 2020/08/13 04:27:41.422307 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.425360 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.427880 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.430166 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.434020 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.801162ms
DB: 2020/08/13 04:27:41.440890 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.262096ms
FetchForUpdate: 2020/08/13 04:27:41.440904 ** Cache FetchForUpdate Cache Key Value: [o4RLo+BQRW6nqPopDbrMPA==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:27:41.440910  node: o4RLo+BQRW6nqPopDbrMPA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:27:41.441086 ** Cache FetchForUpdate Cache Key Value: [TqNUs6WxSNa+g8NDvtT5zg==]   sortk: A#
FetchNode: 2020/08/13 04:27:41.441101  node: TqNUs6WxSNa+g8NDvtT5zg== subKey: A#
DB: 2020/08/13 04:27:41.444273 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.33063ms
FetchForUpdate: 2020/08/13 04:27:41.444356 len(nb): 1
fetchItems: 2020/08/13 04:27:41.444366 +++  Cache FetchItems for sortk A#G#:S UID: [o4RLo+BQRW6nqPopDbrMPA==] 
FetchNode: 2020/08/13 04:27:41.444370  node: o4RLo+BQRW6nqPopDbrMPA== subKey: A#G#:S
DB: 2020/08/13 04:27:41.447161 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.758447ms
DB: 2020/08/13 04:27:41.451726 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.963113ms
Unlock: 2020/08/13 04:27:41.451853 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:27:41.455416 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 14.275884ms
FetchForUpdate: 2020/08/13 04:27:41.455553 len(nb): 7
fetchItems: 2020/08/13 04:27:41.455562 +++  Cache FetchItems for sortk A# UID: [TqNUs6WxSNa+g8NDvtT5zg==] 
FetchNode: 2020/08/13 04:27:41.455567  node: TqNUs6WxSNa+g8NDvtT5zg== subKey: A#
DB: 2020/08/13 04:27:41.458336 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.739493ms
Unlock: 2020/08/13 04:27:41.460937 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 04:27:41.461980 ** Cache FetchForUpdate Cache Key Value: [o4RLo+BQRW6nqPopDbrMPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.461992 +++  Cache FetchItems for sortk A#G#:S UID: [o4RLo+BQRW6nqPopDbrMPA==] 
FetchNode: 2020/08/13 04:27:41.461996  node: o4RLo+BQRW6nqPopDbrMPA== subKey: A#G#:S
DB: 2020/08/13 04:27:41.464473 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.44465ms
DB: 2020/08/13 04:27:41.469703 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.139863ms
DB: 2020/08/13 04:27:41.473019 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.254721ms
DB: 2020/08/13 04:27:41.476624 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.478706ms
DB: 2020/08/13 04:27:41.482778 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.084608ms
DB: 2020/08/13 04:27:41.486356 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.260386ms
DB: 2020/08/13 04:27:41.490221 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.557443ms
DB: 2020/08/13 04:27:41.496423 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.919124ms
DB: 2020/08/13 04:27:41.499942 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.204539ms
DB: 2020/08/13 04:27:41.503695 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.449739ms
Unlock: 2020/08/13 04:27:41.503710 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:27:41.507936 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.648788ms
FetchForUpdate: 2020/08/13 04:27:41.507949 ** Cache FetchForUpdate Cache Key Value: [o4RLo+BQRW6nqPopDbrMPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.507955 +++  Cache FetchItems for sortk A#G#:S UID: [o4RLo+BQRW6nqPopDbrMPA==] 
FetchNode: 2020/08/13 04:27:41.507960  node: o4RLo+BQRW6nqPopDbrMPA== subKey: A#G#:S
DB: 2020/08/13 04:27:41.510957 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.948701ms
AttachNode: gr1 2020/08/13 04:27:41.511119 Errored: SetUpredAvailable :for  o4RLo+BQRW6nqPopDbrMPA==
Cache: 2020/08/13 04:27:41.511128 In SetUpredAvailable: pUid, tUID:  o4RLo+BQRW6nqPopDbrMPA== o4RLo+BQRW6nqPopDbrMPA== A#G#:S
Cache: 2020/08/13 04:27:41.511132 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:27:41.514974 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.795848ms
Unlock: 2020/08/13 04:27:41.514984 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:27:41.521854 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.287842ms
DB: 2020/08/13 04:27:41.524706 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.527514 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.529954 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.532384 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.536075 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.641181ms
DB: 2020/08/13 04:27:41.540461 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.737188ms
FetchForUpdate: 2020/08/13 04:27:41.540480 ** Cache FetchForUpdate Cache Key Value: [pbq/4cwOS6+ZWajRGGbg/g==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:27:41.540488  node: pbq/4cwOS6+ZWajRGGbg/g== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:27:41.540785 ** Cache FetchForUpdate Cache Key Value: [TqNUs6WxSNa+g8NDvtT5zg==]   sortk: A#
fetchItems: 2020/08/13 04:27:41.540796 +++  Cache FetchItems for sortk A# UID: [TqNUs6WxSNa+g8NDvtT5zg==] 
FetchNode: 2020/08/13 04:27:41.540808  node: TqNUs6WxSNa+g8NDvtT5zg== subKey: A#
DB: 2020/08/13 04:27:41.543167 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.645117ms
FetchForUpdate: 2020/08/13 04:27:41.543205 len(nb): 1
fetchItems: 2020/08/13 04:27:41.543231 +++  Cache FetchItems for sortk A#G#:S UID: [pbq/4cwOS6+ZWajRGGbg/g==] 
FetchNode: 2020/08/13 04:27:41.543244  node: pbq/4cwOS6+ZWajRGGbg/g== subKey: A#G#:S
DB: 2020/08/13 04:27:41.544398 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.526839ms
Unlock: 2020/08/13 04:27:41.545481 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:27:41.546087 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.813971ms
DB: 2020/08/13 04:27:41.549845 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.44573ms
Unlock: 2020/08/13 04:27:41.549855 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:27:41.550126 ** Cache FetchForUpdate Cache Key Value: [pbq/4cwOS6+ZWajRGGbg/g==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.550136 +++  Cache FetchItems for sortk A#G#:S UID: [pbq/4cwOS6+ZWajRGGbg/g==] 
FetchNode: 2020/08/13 04:27:41.550141  node: pbq/4cwOS6+ZWajRGGbg/g== subKey: A#G#:S
DB: 2020/08/13 04:27:41.553053 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.882132ms
DB: 2020/08/13 04:27:41.559729 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.095932ms
DB: 2020/08/13 04:27:41.563571 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.459023ms
DB: 2020/08/13 04:27:41.567761 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.606887ms
DB: 2020/08/13 04:27:41.574137 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.896306ms
DB: 2020/08/13 04:27:41.578065 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.4291ms
DB: 2020/08/13 04:27:41.582168 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.518626ms
DB: 2020/08/13 04:27:41.588507 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.900193ms
DB: 2020/08/13 04:27:41.592362 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.471196ms
DB: 2020/08/13 04:27:41.596473 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.666597ms
Unlock: 2020/08/13 04:27:41.596618 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:27:41.600614 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.532491ms
FetchForUpdate: 2020/08/13 04:27:41.600626 ** Cache FetchForUpdate Cache Key Value: [pbq/4cwOS6+ZWajRGGbg/g==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.600632 +++  Cache FetchItems for sortk A#G#:S UID: [pbq/4cwOS6+ZWajRGGbg/g==] 
FetchNode: 2020/08/13 04:27:41.600637  node: pbq/4cwOS6+ZWajRGGbg/g== subKey: A#G#:S
DB: 2020/08/13 04:27:41.603267 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.599011ms
AttachNode: gr1 2020/08/13 04:27:41.603364 Errored: SetUpredAvailable :for  pbq/4cwOS6+ZWajRGGbg/g==
Cache: 2020/08/13 04:27:41.603372 In SetUpredAvailable: pUid, tUID:  pbq/4cwOS6+ZWajRGGbg/g== pbq/4cwOS6+ZWajRGGbg/g== A#G#:S
Cache: 2020/08/13 04:27:41.603376 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:27:41.606866 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.457197ms
Unlock: 2020/08/13 04:27:41.606875 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:27:41.611533 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.271433ms
DB: 2020/08/13 04:27:41.614113 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.616483 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.619392 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.622602 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.626209 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.552544ms
DB: 2020/08/13 04:27:41.630279 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.716568ms
FetchForUpdate: 2020/08/13 04:27:41.630422 ** Cache FetchForUpdate Cache Key Value: [TqNUs6WxSNa+g8NDvtT5zg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.630434 +++  Cache FetchItems for sortk A#G#:S UID: [TqNUs6WxSNa+g8NDvtT5zg==] 
FetchNode: 2020/08/13 04:27:41.630442  node: TqNUs6WxSNa+g8NDvtT5zg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:27:41.630616 ** Cache FetchForUpdate Cache Key Value: [o4RLo+BQRW6nqPopDbrMPA==]   sortk: A#
fetchItems: 2020/08/13 04:27:41.630625 +++  Cache FetchItems for sortk A# UID: [o4RLo+BQRW6nqPopDbrMPA==] 
FetchNode: 2020/08/13 04:27:41.630637  node: o4RLo+BQRW6nqPopDbrMPA== subKey: A#
DB: 2020/08/13 04:27:41.633320 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.843619ms
DB: 2020/08/13 04:27:41.634206 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.508474ms
Unlock: 2020/08/13 04:27:41.635575 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:27:41.637180 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.508226ms
Unlock: 2020/08/13 04:27:41.637190 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:27:41.637532 ** Cache FetchForUpdate Cache Key Value: [TqNUs6WxSNa+g8NDvtT5zg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.637542 +++  Cache FetchItems for sortk A#G#:S UID: [TqNUs6WxSNa+g8NDvtT5zg==] 
FetchNode: 2020/08/13 04:27:41.637547  node: TqNUs6WxSNa+g8NDvtT5zg== subKey: A#G#:S
DB: 2020/08/13 04:27:41.640492 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.912815ms
DB: 2020/08/13 04:27:41.647197 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.130735ms
DB: 2020/08/13 04:27:41.650943 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.325889ms
DB: 2020/08/13 04:27:41.655698 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.172764ms
DB: 2020/08/13 04:27:41.662127 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.952574ms
DB: 2020/08/13 04:27:41.666248 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.597336ms
DB: 2020/08/13 04:27:41.670697 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.817699ms
DB: 2020/08/13 04:27:41.677233 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.063187ms
DB: 2020/08/13 04:27:41.681032 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.360354ms
DB: 2020/08/13 04:27:41.684818 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.714677ms
Unlock: 2020/08/13 04:27:41.684837 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:27:41.688296 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.373888ms
FetchForUpdate: 2020/08/13 04:27:41.688309 ** Cache FetchForUpdate Cache Key Value: [TqNUs6WxSNa+g8NDvtT5zg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.688325 +++  Cache FetchItems for sortk A#G#:S UID: [TqNUs6WxSNa+g8NDvtT5zg==] 
FetchNode: 2020/08/13 04:27:41.688330  node: TqNUs6WxSNa+g8NDvtT5zg== subKey: A#G#:S
DB: 2020/08/13 04:27:41.691448 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.084168ms
AttachNode: gr1 2020/08/13 04:27:41.691540 Errored: SetUpredAvailable :for  TqNUs6WxSNa+g8NDvtT5zg==
Cache: 2020/08/13 04:27:41.691548 In SetUpredAvailable: pUid, tUID:  TqNUs6WxSNa+g8NDvtT5zg== TqNUs6WxSNa+g8NDvtT5zg== A#G#:S
Cache: 2020/08/13 04:27:41.691552 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:27:41.695118 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.533994ms
Unlock: 2020/08/13 04:27:41.695127 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:27:41.700108 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.460581ms
DB: 2020/08/13 04:27:41.703142 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.705412 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.707717 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.710477 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.714255 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.721948ms
DB: 2020/08/13 04:27:41.718170 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.637568ms
FetchForUpdate: 2020/08/13 04:27:41.718184 ** Cache FetchForUpdate Cache Key Value: [pbq/4cwOS6+ZWajRGGbg/g==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.718190 +++  Cache FetchItems for sortk A#G#:S UID: [pbq/4cwOS6+ZWajRGGbg/g==] 
FetchNode: 2020/08/13 04:27:41.718195  node: pbq/4cwOS6+ZWajRGGbg/g== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:27:41.718360 ** Cache FetchForUpdate Cache Key Value: [o4RLo+BQRW6nqPopDbrMPA==]   sortk: A#
fetchItems: 2020/08/13 04:27:41.718369 +++  Cache FetchItems for sortk A# UID: [o4RLo+BQRW6nqPopDbrMPA==] 
FetchNode: 2020/08/13 04:27:41.718381  node: o4RLo+BQRW6nqPopDbrMPA== subKey: A#
DB: 2020/08/13 04:27:41.720616 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.390168ms
DB: 2020/08/13 04:27:41.721964 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.49645ms
Unlock: 2020/08/13 04:27:41.723321 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:27:41.724712 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.526055ms
DB: 2020/08/13 04:27:41.728129 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.385724ms
DB: 2020/08/13 04:27:41.728147 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.385724ms
DB: 2020/08/13 04:27:41.731610 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.429503ms
DB: 2020/08/13 04:27:41.731625 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.429503ms
DB: 2020/08/13 04:27:41.736114 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.251589ms
DB: 2020/08/13 04:27:41.740132 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.688875ms
Unlock: 2020/08/13 04:27:41.740144 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:27:41.750711 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 9.755633ms
DB: 2020/08/13 04:27:41.754546 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.391764ms
DB: 2020/08/13 04:27:41.759059 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.193635ms
DB: 2020/08/13 04:27:41.765562 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.06222ms
DB: 2020/08/13 04:27:41.769381 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.328347ms
DB: 2020/08/13 04:27:41.773491 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.593932ms
DB: 2020/08/13 04:27:41.780139 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.058509ms
DB: 2020/08/13 04:27:41.783983 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.44367ms
DB: 2020/08/13 04:27:41.787994 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.520812ms
DB: 2020/08/13 04:27:41.791820 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.505669ms
FetchForUpdate: 2020/08/13 04:27:41.791947 ** Cache FetchForUpdate Cache Key Value: [pbq/4cwOS6+ZWajRGGbg/g==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.791959 +++  Cache FetchItems for sortk A#G#:S UID: [pbq/4cwOS6+ZWajRGGbg/g==] 
FetchNode: 2020/08/13 04:27:41.791964  node: pbq/4cwOS6+ZWajRGGbg/g== subKey: A#G#:S
DB: 2020/08/13 04:27:41.794926 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.927732ms
AttachNode: gr1 2020/08/13 04:27:41.795035 Errored: SetUpredAvailable :for  pbq/4cwOS6+ZWajRGGbg/g==
Cache: 2020/08/13 04:27:41.795044 In SetUpredAvailable: pUid, tUID:  pbq/4cwOS6+ZWajRGGbg/g== oINXCdwhTi+UjnhvscL8NQ== A#G#:S
Cache: 2020/08/13 04:27:41.795049 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:27:41.798595 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.514175ms
Unlock: 2020/08/13 04:27:41.798605 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:27:41.802943 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.896733ms
DB: 2020/08/13 04:27:41.805066 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.807497 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.810055 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.812555 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.816112 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.477785ms
DB: 2020/08/13 04:27:41.820540 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.090909ms
FetchForUpdate: 2020/08/13 04:27:41.820558 ** Cache FetchForUpdate Cache Key Value: [TqNUs6WxSNa+g8NDvtT5zg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.820566 +++  Cache FetchItems for sortk A#G#:S UID: [TqNUs6WxSNa+g8NDvtT5zg==] 
FetchNode: 2020/08/13 04:27:41.820571  node: TqNUs6WxSNa+g8NDvtT5zg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:27:41.820767 ** Cache FetchForUpdate Cache Key Value: [pbq/4cwOS6+ZWajRGGbg/g==]   sortk: A#
fetchItems: 2020/08/13 04:27:41.820794 +++  Cache FetchItems for sortk A# UID: [pbq/4cwOS6+ZWajRGGbg/g==] 
FetchNode: 2020/08/13 04:27:41.820822  node: pbq/4cwOS6+ZWajRGGbg/g== subKey: A#
DB: 2020/08/13 04:27:41.823458 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.848388ms
DB: 2020/08/13 04:27:41.824620 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.748463ms
Unlock: 2020/08/13 04:27:41.826174 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:27:41.827665 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.653065ms
DB: 2020/08/13 04:27:41.831163 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.463889ms
DB: 2020/08/13 04:27:41.831179 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.463889ms
DB: 2020/08/13 04:27:41.834723 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.506921ms
DB: 2020/08/13 04:27:41.834740 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.506921ms
DB: 2020/08/13 04:27:41.838798 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.806799ms
DB: 2020/08/13 04:27:41.842691 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.678122ms
Unlock: 2020/08/13 04:27:41.842839 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:27:41.849510 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.928238ms
DB: 2020/08/13 04:27:41.853836 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.145159ms
DB: 2020/08/13 04:27:41.857743 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.528975ms
DB: 2020/08/13 04:27:41.863424 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.248836ms
DB: 2020/08/13 04:27:41.867404 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.667748ms
DB: 2020/08/13 04:27:41.871371 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.667672ms
DB: 2020/08/13 04:27:41.877633 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.966676ms
DB: 2020/08/13 04:27:41.881611 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.560519ms
DB: 2020/08/13 04:27:41.885508 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.574725ms
DB: 2020/08/13 04:27:41.889176 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.489829ms
FetchForUpdate: 2020/08/13 04:27:41.889190 ** Cache FetchForUpdate Cache Key Value: [TqNUs6WxSNa+g8NDvtT5zg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.889196 +++  Cache FetchItems for sortk A#G#:S UID: [TqNUs6WxSNa+g8NDvtT5zg==] 
FetchNode: 2020/08/13 04:27:41.889201  node: TqNUs6WxSNa+g8NDvtT5zg== subKey: A#G#:S
DB: 2020/08/13 04:27:41.891848 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.611308ms
AttachNode: gr1 2020/08/13 04:27:41.891949 Errored: SetUpredAvailable :for  TqNUs6WxSNa+g8NDvtT5zg==
Cache: 2020/08/13 04:27:41.891958 In SetUpredAvailable: pUid, tUID:  TqNUs6WxSNa+g8NDvtT5zg== o2RuzbllQamYnM6ZR9j9Lw== A#G#:S
Cache: 2020/08/13 04:27:41.891962 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:27:41.895546 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.549175ms
Unlock: 2020/08/13 04:27:41.895703 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:27:41.900063 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.881389ms
DB: 2020/08/13 04:27:41.902941 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.905700 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.907961 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.910064 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:27:41.913667 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.523059ms
DB: 2020/08/13 04:27:41.917947 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.987358ms
FetchForUpdate: 2020/08/13 04:27:41.917963 ** Cache FetchForUpdate Cache Key Value: [o4RLo+BQRW6nqPopDbrMPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.917969 +++  Cache FetchItems for sortk A#G#:S UID: [o4RLo+BQRW6nqPopDbrMPA==] 
FetchNode: 2020/08/13 04:27:41.917973  node: o4RLo+BQRW6nqPopDbrMPA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:27:41.918145 ** Cache FetchForUpdate Cache Key Value: [pbq/4cwOS6+ZWajRGGbg/g==]   sortk: A#
fetchItems: 2020/08/13 04:27:41.918155 +++  Cache FetchItems for sortk A# UID: [pbq/4cwOS6+ZWajRGGbg/g==] 
FetchNode: 2020/08/13 04:27:41.918167  node: pbq/4cwOS6+ZWajRGGbg/g== subKey: A#
DB: 2020/08/13 04:27:41.920436 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.431121ms
DB: 2020/08/13 04:27:41.922048 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.823787ms
Unlock: 2020/08/13 04:27:41.922224 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:27:41.924304 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.537809ms
DB: 2020/08/13 04:27:41.927511 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.173916ms
DB: 2020/08/13 04:27:41.927526 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.173916ms
DB: 2020/08/13 04:27:41.931071 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.51534ms
DB: 2020/08/13 04:27:41.931089 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.51534ms
DB: 2020/08/13 04:27:41.935143 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.773591ms
DB: 2020/08/13 04:27:41.938816 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.609889ms
Unlock: 2020/08/13 04:27:41.938829 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:27:41.944788 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.863922ms
DB: 2020/08/13 04:27:41.947985 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.145988ms
DB: 2020/08/13 04:27:41.951723 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.622006ms
DB: 2020/08/13 04:27:41.958047 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.018612ms
DB: 2020/08/13 04:27:41.961601 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.21259ms
DB: 2020/08/13 04:27:41.965480 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.569957ms
DB: 2020/08/13 04:27:41.971869 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.982077ms
DB: 2020/08/13 04:27:41.975543 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.356235ms
DB: 2020/08/13 04:27:41.979478 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.640944ms
DB: 2020/08/13 04:27:41.983123 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.462044ms
FetchForUpdate: 2020/08/13 04:27:41.983259 ** Cache FetchForUpdate Cache Key Value: [o4RLo+BQRW6nqPopDbrMPA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:27:41.983271 +++  Cache FetchItems for sortk A#G#:S UID: [o4RLo+BQRW6nqPopDbrMPA==] 
FetchNode: 2020/08/13 04:27:41.983276  node: o4RLo+BQRW6nqPopDbrMPA== subKey: A#G#:S
DB: 2020/08/13 04:27:41.986606 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.296536ms
AttachNode: gr1 2020/08/13 04:27:41.986712 Errored: SetUpredAvailable :for  o4RLo+BQRW6nqPopDbrMPA==
Cache: 2020/08/13 04:27:41.986720 In SetUpredAvailable: pUid, tUID:  o4RLo+BQRW6nqPopDbrMPA== HvXrDB5nTfq9YL9yx1rErA== A#G#:S
Cache: 2020/08/13 04:27:41.986724 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:27:41.990161 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.403032ms
Unlock: 2020/08/13 04:27:41.990170 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:27:41.994620 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 3.918856ms
rdfLoader: 2020/08/13 04:27:41.994634 saveNode finished waiting...exiting
grmgr: 2020/08/13 04:27:41.994644 Powering down...
rdfuuid: 2020/08/13 04:27:41.994650 Powering down...
DB:2020/08/13 04:28:15 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:28:15.348132 Powering on...
rdfLoader: 2020/08/13 04:28:15.348388 verify started....xx.
rdfLoader: 2020/08/13 04:28:15.348402 saveNode started......
rdfuuid: 2020/08/13 04:28:15.348414 Powering on...
rdfLoader: 2020/08/13 04:28:15.348420 *************** All started 
rdfLoader: 2020/08/13 04:28:15.356810 .  getType..
rdfLoader: 2020/08/13 04:28:15.356826 node.TyName : [Person]
DB: 2020/08/13 04:28:15.424544 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 67.665287ms
verify: 2020/08/13 04:28:15.424722 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:28:15.424785 Find Ty Address
rdfLoader: 2020/08/13 04:28:15.424791 Find Ty Age
rdfLoader: 2020/08/13 04:28:15.424797 Find Ty Cars
rdfLoader: 2020/08/13 04:28:15.424803 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:28:15.424807 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:28:15.424811 Find Ty DOB
rdfLoader: 2020/08/13 04:28:15.424816 Find Ty Friends
rdfLoader: 2020/08/13 04:28:15.424820 Find Ty Jobs
rdfLoader: 2020/08/13 04:28:15.424824 Find Ty Name
rdfLoader: 2020/08/13 04:28:15.424829 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:28:15.424833 Find Ty Siblings
rdfLoader: 2020/08/13 04:28:15.424842 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:28:15.424870 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:28:15.424875 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:28:15.424900 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.424906 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.424921 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.424927 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.424933 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.424939 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.424945 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:28:15.424949 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:28:15.424955 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000386ae0)}
SaveRDFNode: 2020/08/13 04:28:15.424960 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:28:15.424968 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.424972 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.424978 UID received  : 67JkyRZKQaOxb0xRGaGKtg==
grmgr: 2020/08/13 04:28:15.425165 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:28:15.425177 *** Verify running...... 1
rdfLoader: 2020/08/13 04:28:15.425180 .  getType..
rdfLoader: 2020/08/13 04:28:15.425184 node.TyName : [Person]
verify: 2020/08/13 04:28:15.425214 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:28:15.425267 Find Ty Address
rdfLoader: 2020/08/13 04:28:15.425277 Find Ty Age
rdfLoader: 2020/08/13 04:28:15.425282 Find Ty Cars
rdfLoader: 2020/08/13 04:28:15.425287 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:28:15.425292 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:28:15.425296 Find Ty DOB
rdfLoader: 2020/08/13 04:28:15.425300 Find Ty Friends
rdfLoader: 2020/08/13 04:28:15.425304 Find Ty Jobs
rdfLoader: 2020/08/13 04:28:15.425308 Find Ty Name
rdfLoader: 2020/08/13 04:28:15.425312 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:28:15.425320 Find Ty Siblings
rdfLoader: 2020/08/13 04:28:15.425328 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:28:15.425353 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:28:15.425357 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:28:15.425376 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.425383 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.425388 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.425394 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.425400 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.425406 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.425411 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:28:15.425421 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:28:15.425427 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000386ea0)}
SaveRDFNode: 2020/08/13 04:28:15.425431 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:28:15.425438 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.425442 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.425447 UID received  : d2aVUnAUTeOwQXcNDetHrA==
grmgr: 2020/08/13 04:28:15.426774 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:28:15.426897 *** Verify running...... 1
rdfLoader: 2020/08/13 04:28:15.428933 .  getType..
rdfLoader: 2020/08/13 04:28:15.428943 node.TyName : [Person]
verify: 2020/08/13 04:28:15.429563 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:28:15.430136 Find Ty Address
rdfLoader: 2020/08/13 04:28:15.430146 Find Ty Age
rdfLoader: 2020/08/13 04:28:15.430152 Find Ty Cars
rdfLoader: 2020/08/13 04:28:15.430157 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:28:15.430166 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:28:15.430171 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:28:15.430175 Find Ty DOB
rdfLoader: 2020/08/13 04:28:15.430180 Find Ty Friends
rdfLoader: 2020/08/13 04:28:15.430183 Find Ty Jobs
rdfLoader: 2020/08/13 04:28:15.430187 Find Ty Name
rdfLoader: 2020/08/13 04:28:15.430202 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:28:15.430207 Find Ty Siblings
rdfLoader: 2020/08/13 04:28:15.430217 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:28:15.430245 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:28:15.430249 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:28:15.430270 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.430277 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.430315 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.430320 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.430326 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.430332 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.430338 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:28:15.430342 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:28:15.430347 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000016840)}
SaveRDFNode: 2020/08/13 04:28:15.430351 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:28:15.430359 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.430362 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.430368 UID received  : i0jhVOfVSoW6CRUT45bUOg==
grmgr: 2020/08/13 04:28:15.430645 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:28:15.430721 *** Verify running...... 2
rdfLoader: 2020/08/13 04:28:15.430728 .  getType..
rdfLoader: 2020/08/13 04:28:15.430732 node.TyName : [Person]
verify: 2020/08/13 04:28:15.431148 *** Verify waiting on umarshal ch............................................. 2
DB: 2020/08/13 04:28:15.431654 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.646888ms
rdfLoader: 2020/08/13 04:28:15.434518 Find Ty Address
rdfLoader: 2020/08/13 04:28:15.434535 Find Ty Age
rdfLoader: 2020/08/13 04:28:15.434541 Find Ty Cars
rdfLoader: 2020/08/13 04:28:15.434547 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:28:15.434552 Find Ty DOB
rdfLoader: 2020/08/13 04:28:15.434557 Find Ty Friends
rdfLoader: 2020/08/13 04:28:15.434561 Find Ty Jobs
rdfLoader: 2020/08/13 04:28:15.434569 Find Ty Name
rdfLoader: 2020/08/13 04:28:15.434573 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:28:15.434578 Find Ty Siblings
rdfLoader: 2020/08/13 04:28:15.434592 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:28:15.434647 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:28:15.434658 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:28:15.434722 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.434729 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.434741 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.434746 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.434754 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.434764 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:28:15.434785 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:28:15.434790 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:28:15.434801 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000017e60)}
SaveRDFNode: 2020/08/13 04:28:15.434805 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:28:15.434964 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.434971 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.434984 UID received  : YbanfkxxQ+aUpWhfir257w==
grmgr: 2020/08/13 04:28:15.435548 	limit.ch <- struct{}{} 
verify: 2020/08/13 04:28:15.435795 *** Verify running...... 2
verify: 2020/08/13 04:28:15.435803 verify exited.....
DB: 2020/08/13 04:28:15.438376 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 12.901892ms
DB: 2020/08/13 04:28:15.442885 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.113455ms
DB: 2020/08/13 04:28:15.446531 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.113865ms
DB: 2020/08/13 04:28:15.449797 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.234712ms
DB: 2020/08/13 04:28:15.455566 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.514265ms
DB: 2020/08/13 04:28:15.456003 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.608872ms
DB: 2020/08/13 04:28:15.458777 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.175268ms
DB: 2020/08/13 04:28:15.459853 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.813996ms
DB: 2020/08/13 04:28:15.462041 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 19.012371ms
DB: 2020/08/13 04:28:15.462274 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.308854ms
DB: 2020/08/13 04:28:15.463274 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.385585ms
DB: 2020/08/13 04:28:15.465304 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.232395ms
DB: 2020/08/13 04:28:15.465524 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.200599ms
DB: 2020/08/13 04:28:15.466560 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.258329ms
DB: 2020/08/13 04:28:15.468240 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 18.409538ms
DB: 2020/08/13 04:28:15.468664 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.330298ms
SaveRDFNode: 2020/08/13 04:28:15.468677 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/13 04:28:15.468683 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.468687 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.468693 Received UID: X18=
SaveRDFNode: 2020/08/13 04:28:15.468706 a: = db.Item{PKey:[]uint8{0xeb, 0xb2, 0x64, 0xc9, 0x16, 0x4a, 0x41, 0xa3, 0xb1, 0x6f, 0x4c, 0x51, 0x19, 0xa1, 0x8a, 0xb6}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:28:15.468977 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.421638ms
SaveRDFNode: 2020/08/13 04:28:15.468988 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017e60)}
rdfUIDdb: 2020/08/13 04:28:15.468994 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.468998 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.469003 Received UID: X18=
SaveRDFNode: 2020/08/13 04:28:15.469014 a: = db.Item{PKey:[]uint8{0x61, 0xb6, 0xa7, 0x7e, 0x4c, 0x71, 0x43, 0xe6, 0x94, 0xa5, 0x68, 0x5f, 0x8a, 0xbd, 0xb9, 0xef}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:28:15.470169 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.576159ms
SaveRDFNode: 2020/08/13 04:28:15.470181 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016840)}
rdfUIDdb: 2020/08/13 04:28:15.470186 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.470190 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.470196 Received UID: X18=
SaveRDFNode: 2020/08/13 04:28:15.470206 a: = db.Item{PKey:[]uint8{0x8b, 0x48, 0xe1, 0x54, 0xe7, 0xd5, 0x4a, 0x85, 0xba, 0x9, 0x15, 0x13, 0xe3, 0x96, 0xd4, 0x3a}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:28:15.471715 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.446535ms
SaveRDFNode: 2020/08/13 04:28:15.471727 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ea0)}
rdfUIDdb: 2020/08/13 04:28:15.471732 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.471736 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.471741 Received UID: X18=
SaveRDFNode: 2020/08/13 04:28:15.471750 a: = db.Item{PKey:[]uint8{0x77, 0x66, 0x95, 0x52, 0x70, 0x14, 0x4d, 0xe3, 0xb0, 0x41, 0x77, 0xd, 0xd, 0xeb, 0x47, 0xac}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:28:15.472026 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.288842ms
SaveRDFNode: 2020/08/13 04:28:15.472036 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/13 04:28:15.472042 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.472046 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.472051 Received UID: X18=
SaveRDFNode: 2020/08/13 04:28:15.472060 a: = db.Item{PKey:[]uint8{0xeb, 0xb2, 0x64, 0xc9, 0x16, 0x4a, 0x41, 0xa3, 0xb1, 0x6f, 0x4c, 0x51, 0x19, 0xa1, 0x8a, 0xb6}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:28:15.472290 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.246172ms
SaveRDFNode: 2020/08/13 04:28:15.472348 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000017e60)}
rdfUIDdb: 2020/08/13 04:28:15.472359 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.472363 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.472368 Received UID: X18=
SaveRDFNode: 2020/08/13 04:28:15.472377 a: = db.Item{PKey:[]uint8{0x61, 0xb6, 0xa7, 0x7e, 0x4c, 0x71, 0x43, 0xe6, 0x94, 0xa5, 0x68, 0x5f, 0x8a, 0xbd, 0xb9, 0xef}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:28:15.473642 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.403468ms
SaveRDFNode: 2020/08/13 04:28:15.473765 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000016840)}
rdfUIDdb: 2020/08/13 04:28:15.473776 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.473780 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.473785 Received UID: X18=
SaveRDFNode: 2020/08/13 04:28:15.473795 a: = db.Item{PKey:[]uint8{0x8b, 0x48, 0xe1, 0x54, 0xe7, 0xd5, 0x4a, 0x85, 0xba, 0x9, 0x15, 0x13, 0xe3, 0x96, 0xd4, 0x3a}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:28:15.475061 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.274357ms
SaveRDFNode: 2020/08/13 04:28:15.475074 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ea0)}
rdfUIDdb: 2020/08/13 04:28:15.475079 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:28:15.475083 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:28:15.475088 Received UID: X18=
SaveRDFNode: 2020/08/13 04:28:15.475098 a: = db.Item{PKey:[]uint8{0x77, 0x66, 0x95, 0x52, 0x70, 0x14, 0x4d, 0xe3, 0xb0, 0x41, 0x77, 0xd, 0xd, 0xeb, 0x47, 0xac}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:28:15.475441 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.348141ms
SaveRDFNode: 2020/08/13 04:28:15.475449 Returned.+++++++++++ No error
DB: 2020/08/13 04:28:15.475565 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.161687ms
SaveRDFNode: 2020/08/13 04:28:15.475577 Returned.+++++++++++ No error
DB: 2020/08/13 04:28:15.477131 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.305048ms
SaveRDFNode: 2020/08/13 04:28:15.477143 Returned.+++++++++++ No error
DB: 2020/08/13 04:28:15.478645 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.506904ms
SaveRDFNode: 2020/08/13 04:28:15.478658 Returned.+++++++++++ No error
DB: 2020/08/13 04:28:15.482584 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.486158 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.489722 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.493161 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.496698 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.484497ms
DB: 2020/08/13 04:28:15.504302 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.080661ms
FetchForUpdate: 2020/08/13 04:28:15.504315 ** Cache FetchForUpdate Cache Key Value: [d2aVUnAUTeOwQXcNDetHrA==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:28:15.504322  node: d2aVUnAUTeOwQXcNDetHrA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:28:15.504488 ** Cache FetchForUpdate Cache Key Value: [67JkyRZKQaOxb0xRGaGKtg==]   sortk: A#
FetchNode: 2020/08/13 04:28:15.504503  node: 67JkyRZKQaOxb0xRGaGKtg== subKey: A#
DB: 2020/08/13 04:28:15.508064 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.711695ms
FetchForUpdate: 2020/08/13 04:28:15.508211 len(nb): 1
fetchItems: 2020/08/13 04:28:15.508223 +++  Cache FetchItems for sortk A#G#:S UID: [d2aVUnAUTeOwQXcNDetHrA==] 
FetchNode: 2020/08/13 04:28:15.508228  node: d2aVUnAUTeOwQXcNDetHrA== subKey: A#G#:S
DB: 2020/08/13 04:28:15.511037 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.781493ms
DB: 2020/08/13 04:28:15.515149 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.545607ms
Unlock: 2020/08/13 04:28:15.515160 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:28:15.521035 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 16.491519ms
FetchForUpdate: 2020/08/13 04:28:15.521187 len(nb): 7
fetchItems: 2020/08/13 04:28:15.521197 +++  Cache FetchItems for sortk A# UID: [67JkyRZKQaOxb0xRGaGKtg==] 
FetchNode: 2020/08/13 04:28:15.521202  node: 67JkyRZKQaOxb0xRGaGKtg== subKey: A#
DB: 2020/08/13 04:28:15.524877 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.645613ms
Unlock: 2020/08/13 04:28:15.527567 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 04:28:15.527951 ** Cache FetchForUpdate Cache Key Value: [d2aVUnAUTeOwQXcNDetHrA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.527960 +++  Cache FetchItems for sortk A#G#:S UID: [d2aVUnAUTeOwQXcNDetHrA==] 
FetchNode: 2020/08/13 04:28:15.527965  node: d2aVUnAUTeOwQXcNDetHrA== subKey: A#G#:S
DB: 2020/08/13 04:28:15.531694 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.69608ms
DB: 2020/08/13 04:28:15.538383 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.108453ms
DB: 2020/08/13 04:28:15.541946 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.327478ms
DB: 2020/08/13 04:28:15.546468 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.878048ms
DB: 2020/08/13 04:28:15.552918 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.970169ms
DB: 2020/08/13 04:28:15.557073 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.756749ms
DB: 2020/08/13 04:28:15.561477 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.861759ms
DB: 2020/08/13 04:28:15.568052 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.995346ms
DB: 2020/08/13 04:28:15.572018 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.56239ms
DB: 2020/08/13 04:28:15.576028 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.557705ms
Unlock: 2020/08/13 04:28:15.576046 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:28:15.579994 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.335621ms
FetchForUpdate: 2020/08/13 04:28:15.580190 ** Cache FetchForUpdate Cache Key Value: [d2aVUnAUTeOwQXcNDetHrA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.580201 +++  Cache FetchItems for sortk A#G#:S UID: [d2aVUnAUTeOwQXcNDetHrA==] 
FetchNode: 2020/08/13 04:28:15.580206  node: d2aVUnAUTeOwQXcNDetHrA== subKey: A#G#:S
DB: 2020/08/13 04:28:15.582985 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.73503ms
AttachNode: gr1 2020/08/13 04:28:15.583080 Errored: SetUpredAvailable :for  d2aVUnAUTeOwQXcNDetHrA==
Cache: 2020/08/13 04:28:15.583088 In SetUpredAvailable: pUid, tUID:  d2aVUnAUTeOwQXcNDetHrA== d2aVUnAUTeOwQXcNDetHrA== A#G#:S
Cache: 2020/08/13 04:28:15.583092 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:28:15.586705 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.578942ms
Unlock: 2020/08/13 04:28:15.586715 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:28:15.594907 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 7.798918ms
DB: 2020/08/13 04:28:15.598340 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.602153 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.605620 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.607967 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.611588 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.573319ms
DB: 2020/08/13 04:28:15.617264 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.400369ms
FetchForUpdate: 2020/08/13 04:28:15.617391 ** Cache FetchForUpdate Cache Key Value: [i0jhVOfVSoW6CRUT45bUOg==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:28:15.617400  node: i0jhVOfVSoW6CRUT45bUOg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:28:15.617618 ** Cache FetchForUpdate Cache Key Value: [67JkyRZKQaOxb0xRGaGKtg==]   sortk: A#
fetchItems: 2020/08/13 04:28:15.617627 +++  Cache FetchItems for sortk A# UID: [67JkyRZKQaOxb0xRGaGKtg==] 
FetchNode: 2020/08/13 04:28:15.617639  node: 67JkyRZKQaOxb0xRGaGKtg== subKey: A#
DB: 2020/08/13 04:28:15.620121 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.668268ms
FetchForUpdate: 2020/08/13 04:28:15.620178 len(nb): 1
fetchItems: 2020/08/13 04:28:15.620186 +++  Cache FetchItems for sortk A#G#:S UID: [i0jhVOfVSoW6CRUT45bUOg==] 
FetchNode: 2020/08/13 04:28:15.620191  node: i0jhVOfVSoW6CRUT45bUOg== subKey: A#G#:S
DB: 2020/08/13 04:28:15.620602 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.924157ms
Unlock: 2020/08/13 04:28:15.621645 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:28:15.622751 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.516162ms
DB: 2020/08/13 04:28:15.626667 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.584984ms
Unlock: 2020/08/13 04:28:15.626677 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:28:15.626940 ** Cache FetchForUpdate Cache Key Value: [i0jhVOfVSoW6CRUT45bUOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.626950 +++  Cache FetchItems for sortk A#G#:S UID: [i0jhVOfVSoW6CRUT45bUOg==] 
FetchNode: 2020/08/13 04:28:15.626960  node: i0jhVOfVSoW6CRUT45bUOg== subKey: A#G#:S
DB: 2020/08/13 04:28:15.630490 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.500825ms
DB: 2020/08/13 04:28:15.637139 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.087145ms
DB: 2020/08/13 04:28:15.640883 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.371762ms
DB: 2020/08/13 04:28:15.645474 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.023906ms
DB: 2020/08/13 04:28:15.652490 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.547853ms
DB: 2020/08/13 04:28:15.656553 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.588353ms
DB: 2020/08/13 04:28:15.660757 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.743416ms
DB: 2020/08/13 04:28:15.667210 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.025882ms
DB: 2020/08/13 04:28:15.671178 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.43018ms
DB: 2020/08/13 04:28:15.675479 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.730827ms
Unlock: 2020/08/13 04:28:15.675491 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:28:15.679444 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.508914ms
FetchForUpdate: 2020/08/13 04:28:15.679467 ** Cache FetchForUpdate Cache Key Value: [i0jhVOfVSoW6CRUT45bUOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.679472 +++  Cache FetchItems for sortk A#G#:S UID: [i0jhVOfVSoW6CRUT45bUOg==] 
FetchNode: 2020/08/13 04:28:15.679476  node: i0jhVOfVSoW6CRUT45bUOg== subKey: A#G#:S
DB: 2020/08/13 04:28:15.682498 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.990559ms
AttachNode: gr1 2020/08/13 04:28:15.682573 Errored: SetUpredAvailable :for  i0jhVOfVSoW6CRUT45bUOg==
Cache: 2020/08/13 04:28:15.682579 In SetUpredAvailable: pUid, tUID:  i0jhVOfVSoW6CRUT45bUOg== i0jhVOfVSoW6CRUT45bUOg== A#G#:S
Cache: 2020/08/13 04:28:15.682595 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:28:15.686263 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.610257ms
Unlock: 2020/08/13 04:28:15.686374 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:28:15.690913 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.099481ms
DB: 2020/08/13 04:28:15.694251 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.696633 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.699211 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.702478 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.706165 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.52703ms
DB: 2020/08/13 04:28:15.710233 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.834704ms
FetchForUpdate: 2020/08/13 04:28:15.710246 ** Cache FetchForUpdate Cache Key Value: [67JkyRZKQaOxb0xRGaGKtg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.710252 +++  Cache FetchItems for sortk A#G#:S UID: [67JkyRZKQaOxb0xRGaGKtg==] 
FetchNode: 2020/08/13 04:28:15.710257  node: 67JkyRZKQaOxb0xRGaGKtg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:28:15.710459 ** Cache FetchForUpdate Cache Key Value: [d2aVUnAUTeOwQXcNDetHrA==]   sortk: A#
fetchItems: 2020/08/13 04:28:15.710476 +++  Cache FetchItems for sortk A# UID: [d2aVUnAUTeOwQXcNDetHrA==] 
FetchNode: 2020/08/13 04:28:15.710504  node: d2aVUnAUTeOwQXcNDetHrA== subKey: A#
DB: 2020/08/13 04:28:15.713759 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.455763ms
DB: 2020/08/13 04:28:15.714710 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.1432ms
Unlock: 2020/08/13 04:28:15.716010 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:28:15.717635 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.561014ms
Unlock: 2020/08/13 04:28:15.717759 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:28:15.718134 ** Cache FetchForUpdate Cache Key Value: [67JkyRZKQaOxb0xRGaGKtg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.718144 +++  Cache FetchItems for sortk A#G#:S UID: [67JkyRZKQaOxb0xRGaGKtg==] 
FetchNode: 2020/08/13 04:28:15.718149  node: 67JkyRZKQaOxb0xRGaGKtg== subKey: A#G#:S
DB: 2020/08/13 04:28:15.721505 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.326548ms
DB: 2020/08/13 04:28:15.728066 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.970752ms
DB: 2020/08/13 04:28:15.731614 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.316906ms
DB: 2020/08/13 04:28:15.735826 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.582504ms
DB: 2020/08/13 04:28:15.742592 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.220672ms
DB: 2020/08/13 04:28:15.746602 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.601064ms
DB: 2020/08/13 04:28:15.751327 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.276546ms
DB: 2020/08/13 04:28:15.757439 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.036357ms
DB: 2020/08/13 04:28:15.763433 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.94081ms
DB: 2020/08/13 04:28:15.767452 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.943916ms
Unlock: 2020/08/13 04:28:15.767467 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:28:15.771487 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.953244ms
FetchForUpdate: 2020/08/13 04:28:15.771499 ** Cache FetchForUpdate Cache Key Value: [67JkyRZKQaOxb0xRGaGKtg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.771505 +++  Cache FetchItems for sortk A#G#:S UID: [67JkyRZKQaOxb0xRGaGKtg==] 
FetchNode: 2020/08/13 04:28:15.771510  node: 67JkyRZKQaOxb0xRGaGKtg== subKey: A#G#:S
DB: 2020/08/13 04:28:15.775451 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.898322ms
AttachNode: gr1 2020/08/13 04:28:15.775565 Errored: SetUpredAvailable :for  67JkyRZKQaOxb0xRGaGKtg==
Cache: 2020/08/13 04:28:15.775574 In SetUpredAvailable: pUid, tUID:  67JkyRZKQaOxb0xRGaGKtg== 67JkyRZKQaOxb0xRGaGKtg== A#G#:S
Cache: 2020/08/13 04:28:15.775578 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:28:15.779221 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.600061ms
Unlock: 2020/08/13 04:28:15.779242 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:28:15.783848 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.143941ms
DB: 2020/08/13 04:28:15.787394 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.790106 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.793457 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.796719 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.800907 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.136892ms
DB: 2020/08/13 04:28:15.805288 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.97606ms
FetchForUpdate: 2020/08/13 04:28:15.805303 ** Cache FetchForUpdate Cache Key Value: [i0jhVOfVSoW6CRUT45bUOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.805309 +++  Cache FetchItems for sortk A#G#:S UID: [i0jhVOfVSoW6CRUT45bUOg==] 
FetchNode: 2020/08/13 04:28:15.805313  node: i0jhVOfVSoW6CRUT45bUOg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:28:15.805491 ** Cache FetchForUpdate Cache Key Value: [d2aVUnAUTeOwQXcNDetHrA==]   sortk: A#
fetchItems: 2020/08/13 04:28:15.805500 +++  Cache FetchItems for sortk A# UID: [d2aVUnAUTeOwQXcNDetHrA==] 
FetchNode: 2020/08/13 04:28:15.805544  node: d2aVUnAUTeOwQXcNDetHrA== subKey: A#
DB: 2020/08/13 04:28:15.808700 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.106924ms
Unlock: 2020/08/13 04:28:15.810045 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:28:15.810673 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.325836ms
DB: 2020/08/13 04:28:15.815395 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.261372ms
DB: 2020/08/13 04:28:15.818684 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.235195ms
DB: 2020/08/13 04:28:15.818845 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.235195ms
DB: 2020/08/13 04:28:15.822386 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.497041ms
DB: 2020/08/13 04:28:15.822405 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.497041ms
DB: 2020/08/13 04:28:15.826348 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.695117ms
DB: 2020/08/13 04:28:15.830300 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.741764ms
Unlock: 2020/08/13 04:28:15.830313 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:28:15.837349 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.170219ms
DB: 2020/08/13 04:28:15.842040 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.282806ms
DB: 2020/08/13 04:28:15.846340 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.72001ms
DB: 2020/08/13 04:28:15.853120 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.324928ms
DB: 2020/08/13 04:28:15.857191 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.512645ms
DB: 2020/08/13 04:28:15.861318 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.80296ms
DB: 2020/08/13 04:28:15.867777 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.170119ms
DB: 2020/08/13 04:28:15.871826 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.769791ms
DB: 2020/08/13 04:28:15.875972 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.73782ms
DB: 2020/08/13 04:28:15.879690 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.542378ms
FetchForUpdate: 2020/08/13 04:28:15.879702 ** Cache FetchForUpdate Cache Key Value: [i0jhVOfVSoW6CRUT45bUOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.879709 +++  Cache FetchItems for sortk A#G#:S UID: [i0jhVOfVSoW6CRUT45bUOg==] 
FetchNode: 2020/08/13 04:28:15.879713  node: i0jhVOfVSoW6CRUT45bUOg== subKey: A#G#:S
DB: 2020/08/13 04:28:15.882763 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.017719ms
AttachNode: gr1 2020/08/13 04:28:15.882865 Errored: SetUpredAvailable :for  i0jhVOfVSoW6CRUT45bUOg==
Cache: 2020/08/13 04:28:15.882873 In SetUpredAvailable: pUid, tUID:  i0jhVOfVSoW6CRUT45bUOg== Cq3xqsviSail16bxRNjd0Q== A#G#:S
Cache: 2020/08/13 04:28:15.882878 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:28:15.886422 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.512094ms
Unlock: 2020/08/13 04:28:15.886432 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:28:15.890810 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.027536ms
DB: 2020/08/13 04:28:15.894089 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.896611 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.899082 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.902570 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:15.906480 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.860023ms
DB: 2020/08/13 04:28:15.911158 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.407141ms
FetchForUpdate: 2020/08/13 04:28:15.911174 ** Cache FetchForUpdate Cache Key Value: [67JkyRZKQaOxb0xRGaGKtg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.911180 +++  Cache FetchItems for sortk A#G#:S UID: [67JkyRZKQaOxb0xRGaGKtg==] 
FetchNode: 2020/08/13 04:28:15.911184  node: 67JkyRZKQaOxb0xRGaGKtg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:28:15.911378 ** Cache FetchForUpdate Cache Key Value: [i0jhVOfVSoW6CRUT45bUOg==]   sortk: A#
fetchItems: 2020/08/13 04:28:15.911388 +++  Cache FetchItems for sortk A# UID: [i0jhVOfVSoW6CRUT45bUOg==] 
FetchNode: 2020/08/13 04:28:15.911400  node: i0jhVOfVSoW6CRUT45bUOg== subKey: A#
DB: 2020/08/13 04:28:15.914481 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.00283ms
Unlock: 2020/08/13 04:28:15.915214 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:28:15.915832 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.616612ms
DB: 2020/08/13 04:28:15.920133 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.003994ms
DB: 2020/08/13 04:28:15.923530 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.365678ms
DB: 2020/08/13 04:28:15.923662 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.365678ms
DB: 2020/08/13 04:28:15.927539 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.837272ms
DB: 2020/08/13 04:28:15.927554 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.837272ms
DB: 2020/08/13 04:28:15.931520 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.795653ms
DB: 2020/08/13 04:28:15.935445 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.782876ms
Unlock: 2020/08/13 04:28:15.935456 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:28:15.942195 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.098441ms
DB: 2020/08/13 04:28:15.945847 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.293294ms
DB: 2020/08/13 04:28:15.949930 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.650126ms
DB: 2020/08/13 04:28:15.956343 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.138873ms
DB: 2020/08/13 04:28:15.960097 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.424889ms
DB: 2020/08/13 04:28:15.964372 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.74661ms
DB: 2020/08/13 04:28:15.971480 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.786672ms
DB: 2020/08/13 04:28:15.975141 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.370041ms
DB: 2020/08/13 04:28:15.979215 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.627467ms
DB: 2020/08/13 04:28:15.982780 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.493218ms
FetchForUpdate: 2020/08/13 04:28:15.982794 ** Cache FetchForUpdate Cache Key Value: [67JkyRZKQaOxb0xRGaGKtg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:15.982801 +++  Cache FetchItems for sortk A#G#:S UID: [67JkyRZKQaOxb0xRGaGKtg==] 
FetchNode: 2020/08/13 04:28:15.982806  node: 67JkyRZKQaOxb0xRGaGKtg== subKey: A#G#:S
DB: 2020/08/13 04:28:15.985601 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.761727ms
AttachNode: gr1 2020/08/13 04:28:15.985680 Errored: SetUpredAvailable :for  67JkyRZKQaOxb0xRGaGKtg==
Cache: 2020/08/13 04:28:15.985687 In SetUpredAvailable: pUid, tUID:  67JkyRZKQaOxb0xRGaGKtg== Yjd7N9auR9aeO9ziEFPYRg== A#G#:S
Cache: 2020/08/13 04:28:15.985692 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:28:15.990048 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.317971ms
Unlock: 2020/08/13 04:28:15.990058 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:28:15.995087 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.56438ms
DB: 2020/08/13 04:28:15.998549 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:16.001111 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:16.004790 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:16.007494 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:28:16.011257 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.681627ms
DB: 2020/08/13 04:28:16.015071 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.751678ms
FetchForUpdate: 2020/08/13 04:28:16.015086 ** Cache FetchForUpdate Cache Key Value: [d2aVUnAUTeOwQXcNDetHrA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:16.015092 +++  Cache FetchItems for sortk A#G#:S UID: [d2aVUnAUTeOwQXcNDetHrA==] 
FetchNode: 2020/08/13 04:28:16.015097  node: d2aVUnAUTeOwQXcNDetHrA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:28:16.015277 ** Cache FetchForUpdate Cache Key Value: [i0jhVOfVSoW6CRUT45bUOg==]   sortk: A#
fetchItems: 2020/08/13 04:28:16.015287 +++  Cache FetchItems for sortk A# UID: [i0jhVOfVSoW6CRUT45bUOg==] 
FetchNode: 2020/08/13 04:28:16.015298  node: i0jhVOfVSoW6CRUT45bUOg== subKey: A#
DB: 2020/08/13 04:28:16.018058 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.909199ms
DB: 2020/08/13 04:28:16.018890 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.523673ms
Unlock: 2020/08/13 04:28:16.019121 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:28:16.021925 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.669163ms
DB: 2020/08/13 04:28:16.025374 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.403946ms
DB: 2020/08/13 04:28:16.025391 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.403946ms
DB: 2020/08/13 04:28:16.028720 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.286768ms
DB: 2020/08/13 04:28:16.028737 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.286768ms
DB: 2020/08/13 04:28:16.032719 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.912787ms
DB: 2020/08/13 04:28:16.036466 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.690362ms
Unlock: 2020/08/13 04:28:16.036476 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:28:16.042504 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.935288ms
DB: 2020/08/13 04:28:16.046247 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.566888ms
DB: 2020/08/13 04:28:16.050774 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.114827ms
DB: 2020/08/13 04:28:16.057081 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.008642ms
DB: 2020/08/13 04:28:16.060681 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.31037ms
DB: 2020/08/13 04:28:16.064578 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.593897ms
DB: 2020/08/13 04:28:16.071783 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.895808ms
DB: 2020/08/13 04:28:16.075361 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.294ms
DB: 2020/08/13 04:28:16.079350 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.689868ms
DB: 2020/08/13 04:28:16.082917 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.515291ms
FetchForUpdate: 2020/08/13 04:28:16.082930 ** Cache FetchForUpdate Cache Key Value: [d2aVUnAUTeOwQXcNDetHrA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:28:16.082936 +++  Cache FetchItems for sortk A#G#:S UID: [d2aVUnAUTeOwQXcNDetHrA==] 
FetchNode: 2020/08/13 04:28:16.082941  node: d2aVUnAUTeOwQXcNDetHrA== subKey: A#G#:S
DB: 2020/08/13 04:28:16.085863 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.890181ms
AttachNode: gr1 2020/08/13 04:28:16.085969 Errored: SetUpredAvailable :for  d2aVUnAUTeOwQXcNDetHrA==
Cache: 2020/08/13 04:28:16.085979 In SetUpredAvailable: pUid, tUID:  d2aVUnAUTeOwQXcNDetHrA== uSSCWB8/QdGQKw+tvpF1gA== A#G#:S
Cache: 2020/08/13 04:28:16.085984 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:28:16.090129 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.101678ms
Unlock: 2020/08/13 04:28:16.090140 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:28:16.094884 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.144311ms
rdfLoader: 2020/08/13 04:28:16.094900 saveNode finished waiting...exiting
grmgr: 2020/08/13 04:28:16.094910 Powering down...
rdfuuid: 2020/08/13 04:28:16.094916 Powering down...
DB:2020/08/13 04:34:28 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:34:28.056415 Powering on...
rdfLoader: 2020/08/13 04:34:28.056750 verify started....xx.
rdfLoader: 2020/08/13 04:34:28.056768 saveNode started......
rdfuuid: 2020/08/13 04:34:28.056777 Powering on...
rdfLoader: 2020/08/13 04:34:28.056783 *************** All started 
rdfLoader: 2020/08/13 04:34:28.063179 .  getType..
rdfLoader: 2020/08/13 04:34:28.063189 node.TyName : [Person]
DB: 2020/08/13 04:34:28.136920 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 73.679844ms
verify: 2020/08/13 04:34:28.137090 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:34:28.137137 Find Ty Address
rdfLoader: 2020/08/13 04:34:28.137143 Find Ty Age
rdfLoader: 2020/08/13 04:34:28.137150 Find Ty Cars
rdfLoader: 2020/08/13 04:34:28.137156 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:34:28.137161 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:34:28.137166 Find Ty DOB
rdfLoader: 2020/08/13 04:34:28.137170 Find Ty Friends
rdfLoader: 2020/08/13 04:34:28.137175 Find Ty Jobs
rdfLoader: 2020/08/13 04:34:28.137179 Find Ty Name
rdfLoader: 2020/08/13 04:34:28.137184 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:34:28.137188 Find Ty Siblings
rdfLoader: 2020/08/13 04:34:28.137199 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:34:28.137235 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:34:28.137241 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:34:28.137273 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137280 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137287 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137294 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137300 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137306 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137313 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:34:28.137317 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:34:28.137325 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000384480)}
SaveRDFNode: 2020/08/13 04:34:28.137329 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:34:28.137348 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.137353 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.137359 UID received  : JSV4S9i0StO9n+Q+y+NPOg==
grmgr: 2020/08/13 04:34:28.137559 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:34:28.137568 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:34:28.137572 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:34:28.137578 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:34:28.137584 *** Verify running...... 1
rdfLoader: 2020/08/13 04:34:28.137589 .  getType..
rdfLoader: 2020/08/13 04:34:28.137593 node.TyName : [Person]
verify: 2020/08/13 04:34:28.137634 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:34:28.137677 Find Ty Address
rdfLoader: 2020/08/13 04:34:28.137682 Find Ty Age
rdfLoader: 2020/08/13 04:34:28.137688 Find Ty Cars
rdfLoader: 2020/08/13 04:34:28.137693 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:34:28.137698 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:34:28.137703 Find Ty DOB
rdfLoader: 2020/08/13 04:34:28.137707 Find Ty Friends
rdfLoader: 2020/08/13 04:34:28.137711 Find Ty Jobs
rdfLoader: 2020/08/13 04:34:28.137715 Find Ty Name
rdfLoader: 2020/08/13 04:34:28.137721 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:34:28.137725 Find Ty Siblings
rdfLoader: 2020/08/13 04:34:28.137733 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:34:28.137761 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:34:28.137766 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:34:28.137786 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137792 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137799 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137806 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137811 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137817 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.137823 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:34:28.137828 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:34:28.137833 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000384ae0)}
SaveRDFNode: 2020/08/13 04:34:28.137838 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:34:28.137845 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.137849 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.137854 UID received  : Oxco+StHRUug843KrzEt5A==
grmgr: 2020/08/13 04:34:28.139375 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:34:28.139388 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:34:28.139408 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:34:28.139415 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:34:28.139498 *** Verify running...... 1
rdfLoader: 2020/08/13 04:34:28.141846 .  getType..
rdfLoader: 2020/08/13 04:34:28.141856 node.TyName : [Person]
verify: 2020/08/13 04:34:28.142220 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:34:28.142812 Find Ty Address
rdfLoader: 2020/08/13 04:34:28.142826 Find Ty Age
rdfLoader: 2020/08/13 04:34:28.142832 Find Ty Cars
rdfLoader: 2020/08/13 04:34:28.142838 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:34:28.142855 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:34:28.142861 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:34:28.142865 Find Ty DOB
rdfLoader: 2020/08/13 04:34:28.142870 Find Ty Friends
rdfLoader: 2020/08/13 04:34:28.142874 Find Ty Jobs
rdfLoader: 2020/08/13 04:34:28.142878 Find Ty Name
rdfLoader: 2020/08/13 04:34:28.142882 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:34:28.142886 Find Ty Siblings
rdfLoader: 2020/08/13 04:34:28.142897 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:34:28.142926 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:34:28.142931 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:34:28.143007 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.143017 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.143025 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.143031 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.143036 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.143042 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.143048 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:34:28.143052 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:34:28.143084 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000385140)}
SaveRDFNode: 2020/08/13 04:34:28.143088 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:34:28.143096 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.143100 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.143106 UID received  : SGYiS9uwRtGxpfTLWRSWIg==
grmgr: 2020/08/13 04:34:28.143416 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:34:28.143424 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:34:28.143429 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:34:28.143434 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:34:28.143536 *** Verify running...... 2
rdfLoader: 2020/08/13 04:34:28.143544 .  getType..
rdfLoader: 2020/08/13 04:34:28.143548 node.TyName : [Person]
DB: 2020/08/13 04:34:28.145171 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.780385ms
verify: 2020/08/13 04:34:28.145553 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:34:28.146608 Find Ty Address
rdfLoader: 2020/08/13 04:34:28.146619 Find Ty Age
rdfLoader: 2020/08/13 04:34:28.146625 Find Ty Cars
rdfLoader: 2020/08/13 04:34:28.146630 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:34:28.146652 Find Ty DOB
rdfLoader: 2020/08/13 04:34:28.146657 Find Ty Friends
rdfLoader: 2020/08/13 04:34:28.146661 Find Ty Jobs
rdfLoader: 2020/08/13 04:34:28.146665 Find Ty Name
rdfLoader: 2020/08/13 04:34:28.146669 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:34:28.146682 Find Ty Siblings
rdfLoader: 2020/08/13 04:34:28.146694 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:34:28.146718 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:34:28.146733 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:34:28.146754 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.146760 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.146767 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.146772 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.146778 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.146783 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:34:28.146789 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:34:28.146793 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:34:28.146819 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000385e00)}
SaveRDFNode: 2020/08/13 04:34:28.146824 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:34:28.146831 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.146835 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.146841 UID received  : 0zEDEN9WQN2QfwZVfkJAew==
grmgr: 2020/08/13 04:34:28.147153 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:34:28.147162 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:34:28.147167 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:34:28.147172 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:34:28.147248 *** Verify running...... 2
verify: 2020/08/13 04:34:28.147255 verify exited.....
DB: 2020/08/13 04:34:28.148533 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.649602ms
DB: 2020/08/13 04:34:28.153446 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 8.24218ms
DB: 2020/08/13 04:34:28.159629 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.045471ms
DB: 2020/08/13 04:34:28.162991 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.3216ms
DB: 2020/08/13 04:34:28.176457 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 22.84491ms
DB: 2020/08/13 04:34:28.179367 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 36.233957ms
DB: 2020/08/13 04:34:28.179716 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 32.849582ms
DB: 2020/08/13 04:34:28.180067 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.412018ms
DB: 2020/08/13 04:34:28.180750 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.726779ms
DB: 2020/08/13 04:34:28.182942 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.535106ms
DB: 2020/08/13 04:34:28.183351 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.604446ms
DB: 2020/08/13 04:34:28.183596 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.476027ms
SaveRDFNode: 2020/08/13 04:34:28.183624 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384480)}
rdfUIDdb: 2020/08/13 04:34:28.183637 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.183641 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.183647 Received UID: X18=
SaveRDFNode: 2020/08/13 04:34:28.183660 a: = db.Item{PKey:[]uint8{0x25, 0x25, 0x78, 0x4b, 0xd8, 0xb4, 0x4a, 0xd3, 0xbd, 0x9f, 0xe4, 0x3e, 0xcb, 0xe3, 0x4f, 0x3a}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:34:28.184239 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.448426ms
SaveRDFNode: 2020/08/13 04:34:28.184251 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/13 04:34:28.184257 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.184261 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.184266 Received UID: X18=
SaveRDFNode: 2020/08/13 04:34:28.184277 a: = db.Item{PKey:[]uint8{0x3b, 0x17, 0x28, 0xf9, 0x2b, 0x47, 0x45, 0x4b, 0xa0, 0xf3, 0x8d, 0xca, 0xaf, 0x31, 0x2d, 0xe4}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:34:28.186284 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.309668ms
DB: 2020/08/13 04:34:28.186781 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.396944ms
DB: 2020/08/13 04:34:28.187179 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.488297ms
SaveRDFNode: 2020/08/13 04:34:28.187192 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384480)}
rdfUIDdb: 2020/08/13 04:34:28.187198 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.187202 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.187207 Received UID: X18=
SaveRDFNode: 2020/08/13 04:34:28.187221 a: = db.Item{PKey:[]uint8{0x25, 0x25, 0x78, 0x4b, 0xd8, 0xb4, 0x4a, 0xd3, 0xbd, 0x9f, 0xe4, 0x3e, 0xcb, 0xe3, 0x4f, 0x3a}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:34:28.187770 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.433239ms
SaveRDFNode: 2020/08/13 04:34:28.187782 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000384ae0)}
rdfUIDdb: 2020/08/13 04:34:28.187787 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.187791 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.187797 Received UID: X18=
SaveRDFNode: 2020/08/13 04:34:28.187806 a: = db.Item{PKey:[]uint8{0x3b, 0x17, 0x28, 0xf9, 0x2b, 0x47, 0x45, 0x4b, 0xa0, 0xf3, 0x8d, 0xca, 0xaf, 0x31, 0x2d, 0xe4}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:34:28.189800 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.482279ms
DB: 2020/08/13 04:34:28.190233 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.422349ms
DB: 2020/08/13 04:34:28.190574 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.324753ms
SaveRDFNode: 2020/08/13 04:34:28.190584 Returned.+++++++++++ No error
DB: 2020/08/13 04:34:28.191159 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.325922ms
SaveRDFNode: 2020/08/13 04:34:28.191168 Returned.+++++++++++ No error
DB: 2020/08/13 04:34:28.193254 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.419882ms
SaveRDFNode: 2020/08/13 04:34:28.193405 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385140)}
rdfUIDdb: 2020/08/13 04:34:28.193417 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.193421 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.193426 Received UID: X18=
SaveRDFNode: 2020/08/13 04:34:28.193437 a: = db.Item{PKey:[]uint8{0x48, 0x66, 0x22, 0x4b, 0xdb, 0xb0, 0x46, 0xd1, 0xb1, 0xa5, 0xf4, 0xcb, 0x59, 0x14, 0x96, 0x22}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:34:28.193721 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.439002ms
SaveRDFNode: 2020/08/13 04:34:28.193737 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385e00)}
rdfUIDdb: 2020/08/13 04:34:28.193743 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.193747 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.193752 Received UID: X18=
SaveRDFNode: 2020/08/13 04:34:28.193762 a: = db.Item{PKey:[]uint8{0xd3, 0x31, 0x3, 0x10, 0xdf, 0x56, 0x40, 0xdd, 0x90, 0x7f, 0x6, 0x55, 0x7e, 0x42, 0x40, 0x7b}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:34:28.196886 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.419888ms
SaveRDFNode: 2020/08/13 04:34:28.196899 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385140)}
rdfUIDdb: 2020/08/13 04:34:28.196904 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.196908 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.196914 Received UID: X18=
SaveRDFNode: 2020/08/13 04:34:28.196923 a: = db.Item{PKey:[]uint8{0x48, 0x66, 0x22, 0x4b, 0xdb, 0xb0, 0x46, 0xd1, 0xb1, 0xa5, 0xf4, 0xcb, 0x59, 0x14, 0x96, 0x22}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:34:28.197258 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.468567ms
SaveRDFNode: 2020/08/13 04:34:28.197269 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000385e00)}
rdfUIDdb: 2020/08/13 04:34:28.197275 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:34:28.197278 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:34:28.197284 Received UID: X18=
SaveRDFNode: 2020/08/13 04:34:28.197296 a: = db.Item{PKey:[]uint8{0xd3, 0x31, 0x3, 0x10, 0xdf, 0x56, 0x40, 0xdd, 0x90, 0x7f, 0x6, 0x55, 0x7e, 0x42, 0x40, 0x7b}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:34:28.200155 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.203743ms
SaveRDFNode: 2020/08/13 04:34:28.200164 Returned.+++++++++++ No error
DB: 2020/08/13 04:34:28.200759 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.43324ms
SaveRDFNode: 2020/08/13 04:34:28.200768 Returned.+++++++++++ No error
DB: 2020/08/13 04:34:28.203301 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.206280 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.208899 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.211443 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.215025 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.5261ms
DB: 2020/08/13 04:34:28.221236 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.701766ms
FetchForUpdate: 2020/08/13 04:34:28.221249 ** Cache FetchForUpdate Cache Key Value: [Oxco+StHRUug843KrzEt5A==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:34:28.221258  node: Oxco+StHRUug843KrzEt5A== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:34:28.221437 ** Cache FetchForUpdate Cache Key Value: [JSV4S9i0StO9n+Q+y+NPOg==]   sortk: A#
FetchNode: 2020/08/13 04:34:28.221452  node: JSV4S9i0StO9n+Q+y+NPOg== subKey: A#
DB: 2020/08/13 04:34:28.223796 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.505372ms
FetchForUpdate: 2020/08/13 04:34:28.223859 len(nb): 1
fetchItems: 2020/08/13 04:34:28.223868 +++  Cache FetchItems for sortk A#G#:S UID: [Oxco+StHRUug843KrzEt5A==] 
FetchNode: 2020/08/13 04:34:28.223872  node: Oxco+StHRUug843KrzEt5A== subKey: A#G#:S
DB: 2020/08/13 04:34:28.226368 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.465884ms
DB: 2020/08/13 04:34:28.230889 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.815074ms
Unlock: 2020/08/13 04:34:28.230901 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:34:28.237229 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 15.701003ms
FetchForUpdate: 2020/08/13 04:34:28.237332 len(nb): 7
fetchItems: 2020/08/13 04:34:28.237341 +++  Cache FetchItems for sortk A# UID: [JSV4S9i0StO9n+Q+y+NPOg==] 
FetchNode: 2020/08/13 04:34:28.237345  node: JSV4S9i0StO9n+Q+y+NPOg== subKey: A#
DB: 2020/08/13 04:34:28.239778 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.401113ms
Unlock: 2020/08/13 04:34:28.239913 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 04:34:28.239941 ** Cache FetchForUpdate Cache Key Value: [Oxco+StHRUug843KrzEt5A==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.239947 +++  Cache FetchItems for sortk A#G#:S UID: [Oxco+StHRUug843KrzEt5A==] 
FetchNode: 2020/08/13 04:34:28.239951  node: Oxco+StHRUug843KrzEt5A== subKey: A#G#:S
DB: 2020/08/13 04:34:28.242678 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.698497ms
DB: 2020/08/13 04:34:28.249517 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.532023ms
DB: 2020/08/13 04:34:28.253436 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.409142ms
DB: 2020/08/13 04:34:28.258604 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.753969ms
DB: 2020/08/13 04:34:28.265001 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.076579ms
DB: 2020/08/13 04:34:28.268872 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.556794ms
DB: 2020/08/13 04:34:28.273494 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.156777ms
DB: 2020/08/13 04:34:28.280128 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.097533ms
DB: 2020/08/13 04:34:28.284091 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.395158ms
DB: 2020/08/13 04:34:28.288288 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.678107ms
Unlock: 2020/08/13 04:34:28.288309 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:34:28.292428 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.529932ms
FetchForUpdate: 2020/08/13 04:34:28.292439 ** Cache FetchForUpdate Cache Key Value: [Oxco+StHRUug843KrzEt5A==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.292446 +++  Cache FetchItems for sortk A#G#:S UID: [Oxco+StHRUug843KrzEt5A==] 
FetchNode: 2020/08/13 04:34:28.292451  node: Oxco+StHRUug843KrzEt5A== subKey: A#G#:S
DB: 2020/08/13 04:34:28.295075 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.592897ms
AttachNode: gr1 2020/08/13 04:34:28.295174 Errored: SetUpredAvailable :for  Oxco+StHRUug843KrzEt5A==
Cache: 2020/08/13 04:34:28.295183 In SetUpredAvailable: pUid, tUID:  Oxco+StHRUug843KrzEt5A== Oxco+StHRUug843KrzEt5A== A#G#:S
Cache: 2020/08/13 04:34:28.295187 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:34:28.298765 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.546695ms
Unlock: 2020/08/13 04:34:28.298778 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:34:28.304968 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.656086ms
DB: 2020/08/13 04:34:28.307922 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.310178 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.312775 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.315251 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.319044 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.721061ms
DB: 2020/08/13 04:34:28.323164 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.876393ms
FetchForUpdate: 2020/08/13 04:34:28.323178 ** Cache FetchForUpdate Cache Key Value: [SGYiS9uwRtGxpfTLWRSWIg==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:34:28.323184  node: SGYiS9uwRtGxpfTLWRSWIg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:34:28.323343 ** Cache FetchForUpdate Cache Key Value: [JSV4S9i0StO9n+Q+y+NPOg==]   sortk: A#
fetchItems: 2020/08/13 04:34:28.323352 +++  Cache FetchItems for sortk A# UID: [JSV4S9i0StO9n+Q+y+NPOg==] 
FetchNode: 2020/08/13 04:34:28.323364  node: JSV4S9i0StO9n+Q+y+NPOg== subKey: A#
DB: 2020/08/13 04:34:28.325850 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.637487ms
FetchForUpdate: 2020/08/13 04:34:28.325910 len(nb): 1
fetchItems: 2020/08/13 04:34:28.325920 +++  Cache FetchItems for sortk A#G#:S UID: [SGYiS9uwRtGxpfTLWRSWIg==] 
FetchNode: 2020/08/13 04:34:28.325924  node: SGYiS9uwRtGxpfTLWRSWIg== subKey: A#G#:S
DB: 2020/08/13 04:34:28.326347 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.895454ms
Unlock: 2020/08/13 04:34:28.327448 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:34:28.328916 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.962921ms
DB: 2020/08/13 04:34:28.333072 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.839553ms
Unlock: 2020/08/13 04:34:28.333205 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:34:28.333469 ** Cache FetchForUpdate Cache Key Value: [SGYiS9uwRtGxpfTLWRSWIg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.333479 +++  Cache FetchItems for sortk A#G#:S UID: [SGYiS9uwRtGxpfTLWRSWIg==] 
FetchNode: 2020/08/13 04:34:28.333492  node: SGYiS9uwRtGxpfTLWRSWIg== subKey: A#G#:S
DB: 2020/08/13 04:34:28.336691 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.144646ms
DB: 2020/08/13 04:34:28.343358 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.12838ms
DB: 2020/08/13 04:34:28.347030 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.391831ms
DB: 2020/08/13 04:34:28.351367 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.759188ms
DB: 2020/08/13 04:34:28.358040 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.089212ms
DB: 2020/08/13 04:34:28.362027 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.590484ms
DB: 2020/08/13 04:34:28.366376 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.842183ms
DB: 2020/08/13 04:34:28.373080 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.152914ms
DB: 2020/08/13 04:34:28.377048 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.447425ms
DB: 2020/08/13 04:34:28.381756 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.253311ms
Unlock: 2020/08/13 04:34:28.381767 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:34:28.386137 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.897337ms
FetchForUpdate: 2020/08/13 04:34:28.386160 ** Cache FetchForUpdate Cache Key Value: [SGYiS9uwRtGxpfTLWRSWIg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.386166 +++  Cache FetchItems for sortk A#G#:S UID: [SGYiS9uwRtGxpfTLWRSWIg==] 
FetchNode: 2020/08/13 04:34:28.386171  node: SGYiS9uwRtGxpfTLWRSWIg== subKey: A#G#:S
DB: 2020/08/13 04:34:28.389766 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.553432ms
AttachNode: gr1 2020/08/13 04:34:28.389981 Errored: SetUpredAvailable :for  SGYiS9uwRtGxpfTLWRSWIg==
Cache: 2020/08/13 04:34:28.389994 In SetUpredAvailable: pUid, tUID:  SGYiS9uwRtGxpfTLWRSWIg== SGYiS9uwRtGxpfTLWRSWIg== A#G#:S
Cache: 2020/08/13 04:34:28.389998 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:34:28.393706 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.677245ms
Unlock: 2020/08/13 04:34:28.393716 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:34:28.398098 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.003548ms
DB: 2020/08/13 04:34:28.401009 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.403311 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.405919 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.408928 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.412638 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.659185ms
DB: 2020/08/13 04:34:28.416740 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.77532ms
FetchForUpdate: 2020/08/13 04:34:28.416755 ** Cache FetchForUpdate Cache Key Value: [JSV4S9i0StO9n+Q+y+NPOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.416761 +++  Cache FetchItems for sortk A#G#:S UID: [JSV4S9i0StO9n+Q+y+NPOg==] 
FetchNode: 2020/08/13 04:34:28.416766  node: JSV4S9i0StO9n+Q+y+NPOg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:34:28.416967 ** Cache FetchForUpdate Cache Key Value: [Oxco+StHRUug843KrzEt5A==]   sortk: A#
fetchItems: 2020/08/13 04:34:28.416986 +++  Cache FetchItems for sortk A# UID: [Oxco+StHRUug843KrzEt5A==] 
FetchNode: 2020/08/13 04:34:28.417032  node: Oxco+StHRUug843KrzEt5A== subKey: A#
DB: 2020/08/13 04:34:28.419470 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.666202ms
DB: 2020/08/13 04:34:28.420302 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.221722ms
Unlock: 2020/08/13 04:34:28.421772 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:34:28.423401 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.639873ms
Unlock: 2020/08/13 04:34:28.423412 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:34:28.423795 ** Cache FetchForUpdate Cache Key Value: [JSV4S9i0StO9n+Q+y+NPOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.423806 +++  Cache FetchItems for sortk A#G#:S UID: [JSV4S9i0StO9n+Q+y+NPOg==] 
FetchNode: 2020/08/13 04:34:28.423810  node: JSV4S9i0StO9n+Q+y+NPOg== subKey: A#G#:S
DB: 2020/08/13 04:34:28.426589 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.747054ms
DB: 2020/08/13 04:34:28.433132 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.993259ms
DB: 2020/08/13 04:34:28.436913 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.556981ms
DB: 2020/08/13 04:34:28.441298 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.679749ms
DB: 2020/08/13 04:34:28.447846 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.053491ms
DB: 2020/08/13 04:34:28.451700 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.443175ms
DB: 2020/08/13 04:34:28.456023 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.812273ms
DB: 2020/08/13 04:34:28.462628 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.982657ms
DB: 2020/08/13 04:34:28.467160 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.116654ms
DB: 2020/08/13 04:34:28.471261 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.647659ms
Unlock: 2020/08/13 04:34:28.471271 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:34:28.475504 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.579162ms
FetchForUpdate: 2020/08/13 04:34:28.475655 ** Cache FetchForUpdate Cache Key Value: [JSV4S9i0StO9n+Q+y+NPOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.475667 +++  Cache FetchItems for sortk A#G#:S UID: [JSV4S9i0StO9n+Q+y+NPOg==] 
FetchNode: 2020/08/13 04:34:28.475672  node: JSV4S9i0StO9n+Q+y+NPOg== subKey: A#G#:S
DB: 2020/08/13 04:34:28.478929 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.223928ms
AttachNode: gr1 2020/08/13 04:34:28.479038 Errored: SetUpredAvailable :for  JSV4S9i0StO9n+Q+y+NPOg==
Cache: 2020/08/13 04:34:28.479047 In SetUpredAvailable: pUid, tUID:  JSV4S9i0StO9n+Q+y+NPOg== JSV4S9i0StO9n+Q+y+NPOg== A#G#:S
Cache: 2020/08/13 04:34:28.479051 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:34:28.482792 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.703573ms
Unlock: 2020/08/13 04:34:28.482802 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:34:28.487606 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.235637ms
DB: 2020/08/13 04:34:28.490684 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.494446 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.496744 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.498961 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.502766 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.752855ms
DB: 2020/08/13 04:34:28.506913 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.876935ms
FetchForUpdate: 2020/08/13 04:34:28.506927 ** Cache FetchForUpdate Cache Key Value: [SGYiS9uwRtGxpfTLWRSWIg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.506933 +++  Cache FetchItems for sortk A#G#:S UID: [SGYiS9uwRtGxpfTLWRSWIg==] 
FetchNode: 2020/08/13 04:34:28.506938  node: SGYiS9uwRtGxpfTLWRSWIg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:34:28.507117 ** Cache FetchForUpdate Cache Key Value: [Oxco+StHRUug843KrzEt5A==]   sortk: A#
fetchItems: 2020/08/13 04:34:28.507126 +++  Cache FetchItems for sortk A# UID: [Oxco+StHRUug843KrzEt5A==] 
FetchNode: 2020/08/13 04:34:28.507137  node: Oxco+StHRUug843KrzEt5A== subKey: A#
DB: 2020/08/13 04:34:28.510079 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 2.865234ms
Unlock: 2020/08/13 04:34:28.511539 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:34:28.512171 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.20184ms
DB: 2020/08/13 04:34:28.516449 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.808807ms
DB: 2020/08/13 04:34:28.520214 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.733186ms
DB: 2020/08/13 04:34:28.520230 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.733186ms
DB: 2020/08/13 04:34:28.523612 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.348008ms
DB: 2020/08/13 04:34:28.523627 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.348008ms
DB: 2020/08/13 04:34:28.527785 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.958212ms
DB: 2020/08/13 04:34:28.531866 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.782617ms
Unlock: 2020/08/13 04:34:28.531878 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:34:28.538796 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.044963ms
DB: 2020/08/13 04:34:28.542522 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.481363ms
DB: 2020/08/13 04:34:28.547948 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.775983ms
DB: 2020/08/13 04:34:28.553795 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.272416ms
DB: 2020/08/13 04:34:28.565137 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 10.908777ms
DB: 2020/08/13 04:34:28.569397 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.687829ms
DB: 2020/08/13 04:34:28.576605 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.757047ms
DB: 2020/08/13 04:34:28.580440 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.434234ms
DB: 2020/08/13 04:34:28.584958 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.945923ms
DB: 2020/08/13 04:34:28.589363 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.149973ms
FetchForUpdate: 2020/08/13 04:34:28.589375 ** Cache FetchForUpdate Cache Key Value: [SGYiS9uwRtGxpfTLWRSWIg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.589381 +++  Cache FetchItems for sortk A#G#:S UID: [SGYiS9uwRtGxpfTLWRSWIg==] 
FetchNode: 2020/08/13 04:34:28.589386  node: SGYiS9uwRtGxpfTLWRSWIg== subKey: A#G#:S
DB: 2020/08/13 04:34:28.592512 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.09175ms
AttachNode: gr1 2020/08/13 04:34:28.592613 Errored: SetUpredAvailable :for  SGYiS9uwRtGxpfTLWRSWIg==
Cache: 2020/08/13 04:34:28.592621 In SetUpredAvailable: pUid, tUID:  SGYiS9uwRtGxpfTLWRSWIg== NCu7ksRZRvCj451BuYcQwg== A#G#:S
Cache: 2020/08/13 04:34:28.592625 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:34:28.596468 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.808577ms
Unlock: 2020/08/13 04:34:28.596603 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:34:28.601208 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.218894ms
DB: 2020/08/13 04:34:28.603878 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.607033 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.609257 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.611423 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.615362 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.76793ms
DB: 2020/08/13 04:34:28.619513 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 3.867786ms
FetchForUpdate: 2020/08/13 04:34:28.619527 ** Cache FetchForUpdate Cache Key Value: [JSV4S9i0StO9n+Q+y+NPOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.619534 +++  Cache FetchItems for sortk A#G#:S UID: [JSV4S9i0StO9n+Q+y+NPOg==] 
FetchNode: 2020/08/13 04:34:28.619538  node: JSV4S9i0StO9n+Q+y+NPOg== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:34:28.619714 ** Cache FetchForUpdate Cache Key Value: [SGYiS9uwRtGxpfTLWRSWIg==]   sortk: A#
fetchItems: 2020/08/13 04:34:28.619723 +++  Cache FetchItems for sortk A# UID: [SGYiS9uwRtGxpfTLWRSWIg==] 
FetchNode: 2020/08/13 04:34:28.619768  node: SGYiS9uwRtGxpfTLWRSWIg== subKey: A#
DB: 2020/08/13 04:34:28.622351 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.768729ms
DB: 2020/08/13 04:34:28.623539 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.708825ms
Unlock: 2020/08/13 04:34:28.624218 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:34:28.626437 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.71873ms
DB: 2020/08/13 04:34:28.630062 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.517768ms
DB: 2020/08/13 04:34:28.630134 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.517768ms
DB: 2020/08/13 04:34:28.633558 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.393727ms
DB: 2020/08/13 04:34:28.633687 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.393727ms
DB: 2020/08/13 04:34:28.637847 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.935203ms
DB: 2020/08/13 04:34:28.641752 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.732921ms
Unlock: 2020/08/13 04:34:28.641763 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:34:28.647701 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.257157ms
DB: 2020/08/13 04:34:28.651357 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.480761ms
DB: 2020/08/13 04:34:28.655633 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.806227ms
DB: 2020/08/13 04:34:28.662081 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.139652ms
DB: 2020/08/13 04:34:28.665976 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.495732ms
DB: 2020/08/13 04:34:28.669892 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.607304ms
DB: 2020/08/13 04:34:28.676541 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.216655ms
DB: 2020/08/13 04:34:28.680601 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.712478ms
DB: 2020/08/13 04:34:28.684691 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.772261ms
DB: 2020/08/13 04:34:28.688284 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.390689ms
FetchForUpdate: 2020/08/13 04:34:28.688447 ** Cache FetchForUpdate Cache Key Value: [JSV4S9i0StO9n+Q+y+NPOg==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.688460 +++  Cache FetchItems for sortk A#G#:S UID: [JSV4S9i0StO9n+Q+y+NPOg==] 
FetchNode: 2020/08/13 04:34:28.688465  node: JSV4S9i0StO9n+Q+y+NPOg== subKey: A#G#:S
DB: 2020/08/13 04:34:28.691250 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.751568ms
AttachNode: gr1 2020/08/13 04:34:28.691354 Errored: SetUpredAvailable :for  JSV4S9i0StO9n+Q+y+NPOg==
Cache: 2020/08/13 04:34:28.691363 In SetUpredAvailable: pUid, tUID:  JSV4S9i0StO9n+Q+y+NPOg== nOmZnOW/QsCgdL/yDzbmnA== A#G#:S
Cache: 2020/08/13 04:34:28.691369 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:34:28.695185 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.781829ms
Unlock: 2020/08/13 04:34:28.695195 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:34:28.699856 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.215472ms
DB: 2020/08/13 04:34:28.702599 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.705243 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.707929 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.714246 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:34:28.718087 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.758204ms
DB: 2020/08/13 04:34:28.722709 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.544855ms
FetchForUpdate: 2020/08/13 04:34:28.722724 ** Cache FetchForUpdate Cache Key Value: [Oxco+StHRUug843KrzEt5A==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.722749 +++  Cache FetchItems for sortk A#G#:S UID: [Oxco+StHRUug843KrzEt5A==] 
FetchNode: 2020/08/13 04:34:28.722755  node: Oxco+StHRUug843KrzEt5A== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:34:28.722991 ** Cache FetchForUpdate Cache Key Value: [SGYiS9uwRtGxpfTLWRSWIg==]   sortk: A#
fetchItems: 2020/08/13 04:34:28.723001 +++  Cache FetchItems for sortk A# UID: [SGYiS9uwRtGxpfTLWRSWIg==] 
FetchNode: 2020/08/13 04:34:28.723022  node: SGYiS9uwRtGxpfTLWRSWIg== subKey: A#
DB: 2020/08/13 04:34:28.729595 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 6.522132ms
Unlock: 2020/08/13 04:34:28.729793 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:34:28.730680 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 7.868588ms
DB: 2020/08/13 04:34:28.734903 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.068713ms
DB: 2020/08/13 04:34:28.738389 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.453841ms
DB: 2020/08/13 04:34:28.738407 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.453841ms
DB: 2020/08/13 04:34:28.742225 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.784281ms
DB: 2020/08/13 04:34:28.742243 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.784281ms
DB: 2020/08/13 04:34:28.746049 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.727013ms
DB: 2020/08/13 04:34:28.749657 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.545671ms
Unlock: 2020/08/13 04:34:28.749668 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:34:28.755913 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.132238ms
DB: 2020/08/13 04:34:28.759333 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.37047ms
DB: 2020/08/13 04:34:28.763538 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.820494ms
DB: 2020/08/13 04:34:28.769977 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.134817ms
DB: 2020/08/13 04:34:28.773453 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.422139ms
DB: 2020/08/13 04:34:28.777491 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.735714ms
DB: 2020/08/13 04:34:28.783074 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.283905ms
DB: 2020/08/13 04:34:28.786820 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.465632ms
DB: 2020/08/13 04:34:28.790938 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.807575ms
DB: 2020/08/13 04:34:28.794741 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.620973ms
FetchForUpdate: 2020/08/13 04:34:28.794756 ** Cache FetchForUpdate Cache Key Value: [Oxco+StHRUug843KrzEt5A==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:34:28.794763 +++  Cache FetchItems for sortk A#G#:S UID: [Oxco+StHRUug843KrzEt5A==] 
FetchNode: 2020/08/13 04:34:28.794768  node: Oxco+StHRUug843KrzEt5A== subKey: A#G#:S
DB: 2020/08/13 04:34:28.797337 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.536053ms
AttachNode: gr1 2020/08/13 04:34:28.797473 Errored: SetUpredAvailable :for  Oxco+StHRUug843KrzEt5A==
Cache: 2020/08/13 04:34:28.797482 In SetUpredAvailable: pUid, tUID:  Oxco+StHRUug843KrzEt5A== PDrTlihjSS+9I7woHscSfg== A#G#:S
Cache: 2020/08/13 04:34:28.797487 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:34:28.801199 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.668859ms
Unlock: 2020/08/13 04:34:28.801209 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:34:28.806126 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.49657ms
rdfLoader: 2020/08/13 04:34:28.806137 saveNode finished waiting...exiting
grmgr: 2020/08/13 04:34:28.806159 Powering down...
rdfuuid: 2020/08/13 04:34:28.806165 Powering down...
DB:2020/08/13 04:37:32 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:37:32.141729 Powering on...
rdfLoader: 2020/08/13 04:37:32.142042 verify started....xx.
rdfLoader: 2020/08/13 04:37:32.142058 saveNode started......
rdfuuid: 2020/08/13 04:37:32.142067 Powering on...
rdfLoader: 2020/08/13 04:37:32.142074 *************** All started 
rdfLoader: 2020/08/13 04:37:32.148563 .  getType..
rdfLoader: 2020/08/13 04:37:32.148572 node.TyName : [Person]
DB: 2020/08/13 04:37:32.219963 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 71.341217ms
verify: 2020/08/13 04:37:32.220116 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:37:32.220160 Find Ty Address
rdfLoader: 2020/08/13 04:37:32.220166 Find Ty Age
rdfLoader: 2020/08/13 04:37:32.220172 Find Ty Cars
rdfLoader: 2020/08/13 04:37:32.220178 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:37:32.220182 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:37:32.220187 Find Ty DOB
rdfLoader: 2020/08/13 04:37:32.220192 Find Ty Friends
rdfLoader: 2020/08/13 04:37:32.220196 Find Ty Jobs
rdfLoader: 2020/08/13 04:37:32.220200 Find Ty Name
rdfLoader: 2020/08/13 04:37:32.220205 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:37:32.220222 Find Ty Siblings
rdfLoader: 2020/08/13 04:37:32.220231 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:37:32.220259 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:37:32.220264 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:37:32.220288 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220295 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220300 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220306 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220313 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220319 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220325 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:37:32.220330 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:37:32.220337 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc000386480)}
SaveRDFNode: 2020/08/13 04:37:32.220341 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:37:32.220360 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.220364 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.220369 UID received  : RcAq/W0DR3S90J4jd/2ItA==
grmgr: 2020/08/13 04:37:32.220552 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:37:32.220561 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:37:32.220565 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:37:32.220570 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:37:32.220577 *** Verify running...... 1
rdfLoader: 2020/08/13 04:37:32.220581 .  getType..
rdfLoader: 2020/08/13 04:37:32.220585 node.TyName : [Person]
verify: 2020/08/13 04:37:32.220603 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:37:32.220658 Find Ty Address
rdfLoader: 2020/08/13 04:37:32.220664 Find Ty Age
rdfLoader: 2020/08/13 04:37:32.220669 Find Ty Cars
rdfLoader: 2020/08/13 04:37:32.220674 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:37:32.220679 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:37:32.220683 Find Ty DOB
rdfLoader: 2020/08/13 04:37:32.220688 Find Ty Friends
rdfLoader: 2020/08/13 04:37:32.220692 Find Ty Jobs
rdfLoader: 2020/08/13 04:37:32.220699 Find Ty Name
rdfLoader: 2020/08/13 04:37:32.220704 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:37:32.220708 Find Ty Siblings
rdfLoader: 2020/08/13 04:37:32.220716 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:37:32.220743 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:37:32.220748 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:37:32.220767 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220774 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220780 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220786 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220791 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220797 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.220802 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:37:32.220806 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:37:32.220812 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000386a20)}
SaveRDFNode: 2020/08/13 04:37:32.220816 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:37:32.220826 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.220831 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.220836 UID received  : DFvtPFdmQSuiFUp2dq7ZRQ==
grmgr: 2020/08/13 04:37:32.221122 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:37:32.221136 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:37:32.221141 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:37:32.221146 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:37:32.221223 *** Verify running...... 1
rdfLoader: 2020/08/13 04:37:32.221278 .  getType..
rdfLoader: 2020/08/13 04:37:32.221284 node.TyName : [Person]
verify: 2020/08/13 04:37:32.221303 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:37:32.221349 Find Ty Address
rdfLoader: 2020/08/13 04:37:32.221354 Find Ty Age
rdfLoader: 2020/08/13 04:37:32.221359 Find Ty Cars
rdfLoader: 2020/08/13 04:37:32.221364 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:37:32.221368 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:37:32.221373 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:37:32.221377 Find Ty DOB
rdfLoader: 2020/08/13 04:37:32.221381 Find Ty Friends
rdfLoader: 2020/08/13 04:37:32.221385 Find Ty Jobs
rdfLoader: 2020/08/13 04:37:32.221389 Find Ty Name
rdfLoader: 2020/08/13 04:37:32.221394 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:37:32.221411 Find Ty Siblings
rdfLoader: 2020/08/13 04:37:32.221421 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:37:32.221472 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:37:32.221478 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:37:32.221498 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.221515 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.221523 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.221529 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.221534 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.221540 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.221546 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:37:32.221550 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:37:32.221556 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc000386f60)}
SaveRDFNode: 2020/08/13 04:37:32.221560 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:37:32.221568 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.221572 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.221577 UID received  : KuPLpJf2R3ymi+kkByfPLw==
grmgr: 2020/08/13 04:37:32.221732 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:37:32.221740 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:37:32.221745 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:37:32.221750 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:37:32.221756 *** Verify running...... 2
rdfLoader: 2020/08/13 04:37:32.221760 .  getType..
rdfLoader: 2020/08/13 04:37:32.221764 node.TyName : [Person]
verify: 2020/08/13 04:37:32.221780 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:37:32.221809 Find Ty Address
rdfLoader: 2020/08/13 04:37:32.221814 Find Ty Age
rdfLoader: 2020/08/13 04:37:32.221824 Find Ty Cars
rdfLoader: 2020/08/13 04:37:32.221829 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:37:32.221833 Find Ty DOB
rdfLoader: 2020/08/13 04:37:32.221838 Find Ty Friends
rdfLoader: 2020/08/13 04:37:32.221842 Find Ty Jobs
rdfLoader: 2020/08/13 04:37:32.221846 Find Ty Name
rdfLoader: 2020/08/13 04:37:32.221850 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:37:32.221854 Find Ty Siblings
rdfLoader: 2020/08/13 04:37:32.221861 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:37:32.221886 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:37:32.223856 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:37:32.223891 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.223899 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.223906 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.223911 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.223917 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.223922 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:37:32.223928 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:37:32.223932 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:37:32.223937 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000387380)}
SaveRDFNode: 2020/08/13 04:37:32.223942 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:37:32.223956 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.223961 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.223966 UID received  : sIOI4xi+SWCrnGUhCyUFCA==
grmgr: 2020/08/13 04:37:32.224165 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:37:32.224174 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:37:32.224178 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:37:32.224183 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:37:32.224190 *** Verify running...... 2
verify: 2020/08/13 04:37:32.224194 verify exited.....
DB: 2020/08/13 04:37:32.227282 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 6.883993ms
DB: 2020/08/13 04:37:32.232126 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.248414ms
DB: 2020/08/13 04:37:32.238429 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 16.826069ms
DB: 2020/08/13 04:37:32.242494 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.73605ms
DB: 2020/08/13 04:37:32.249200 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 21.883488ms
DB: 2020/08/13 04:37:32.249506 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 17.314836ms
DB: 2020/08/13 04:37:32.249778 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 25.751754ms
DB: 2020/08/13 04:37:32.252596 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.356795ms
DB: 2020/08/13 04:37:32.252981 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.426738ms
DB: 2020/08/13 04:37:32.253387 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.562777ms
DB: 2020/08/13 04:37:32.255803 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.162615ms
DB: 2020/08/13 04:37:32.256572 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.55888ms
DB: 2020/08/13 04:37:32.257002 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.583934ms
DB: 2020/08/13 04:37:32.258732 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 16.200305ms
DB: 2020/08/13 04:37:32.259135 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.154305ms
SaveRDFNode: 2020/08/13 04:37:32.259149 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386480)}
rdfUIDdb: 2020/08/13 04:37:32.259157 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.259161 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.259167 Received UID: X18=
SaveRDFNode: 2020/08/13 04:37:32.259181 a: = db.Item{PKey:[]uint8{0x45, 0xc0, 0x2a, 0xfd, 0x6d, 0x3, 0x47, 0x74, 0xbd, 0xd0, 0x9e, 0x23, 0x77, 0xfd, 0x88, 0xb4}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:37:32.260243 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.639415ms
SaveRDFNode: 2020/08/13 04:37:32.260255 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386a20)}
rdfUIDdb: 2020/08/13 04:37:32.260260 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.260264 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.260269 Received UID: X18=
SaveRDFNode: 2020/08/13 04:37:32.260279 a: = db.Item{PKey:[]uint8{0xc, 0x5b, 0xed, 0x3c, 0x57, 0x66, 0x41, 0x2b, 0xa2, 0x15, 0x4a, 0x76, 0x76, 0xae, 0xd9, 0x45}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:37:32.260667 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.615439ms
DB: 2020/08/13 04:37:32.262436 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.223194ms
SaveRDFNode: 2020/08/13 04:37:32.262450 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386480)}
rdfUIDdb: 2020/08/13 04:37:32.262456 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.262460 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.262465 Received UID: X18=
SaveRDFNode: 2020/08/13 04:37:32.262495 a: = db.Item{PKey:[]uint8{0x45, 0xc0, 0x2a, 0xfd, 0x6d, 0x3, 0x47, 0x74, 0xbd, 0xd0, 0x9e, 0x23, 0x77, 0xfd, 0x88, 0xb4}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:37:32.263433 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.668959ms
DB: 2020/08/13 04:37:32.264143 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.445856ms
SaveRDFNode: 2020/08/13 04:37:32.264156 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387380)}
rdfUIDdb: 2020/08/13 04:37:32.264161 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.264165 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.264171 Received UID: X18=
SaveRDFNode: 2020/08/13 04:37:32.264181 a: = db.Item{PKey:[]uint8{0xb0, 0x83, 0x88, 0xe3, 0x18, 0xbe, 0x49, 0x60, 0xab, 0x9c, 0x65, 0x21, 0xb, 0x25, 0x5, 0x8}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:37:32.265229 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.922384ms
SaveRDFNode: 2020/08/13 04:37:32.265241 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386a20)}
rdfUIDdb: 2020/08/13 04:37:32.265247 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.265251 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.265256 Received UID: X18=
SaveRDFNode: 2020/08/13 04:37:32.265266 a: = db.Item{PKey:[]uint8{0xc, 0x5b, 0xed, 0x3c, 0x57, 0x66, 0x41, 0x2b, 0xa2, 0x15, 0x4a, 0x76, 0x76, 0xae, 0xd9, 0x45}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:37:32.265733 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.207093ms
SaveRDFNode: 2020/08/13 04:37:32.265742 Returned.+++++++++++ No error
DB: 2020/08/13 04:37:32.267020 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.554911ms
SaveRDFNode: 2020/08/13 04:37:32.267033 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386f60)}
rdfUIDdb: 2020/08/13 04:37:32.267039 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.267062 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.267068 Received UID: X18=
SaveRDFNode: 2020/08/13 04:37:32.267079 a: = db.Item{PKey:[]uint8{0x2a, 0xe3, 0xcb, 0xa4, 0x97, 0xf6, 0x47, 0x7c, 0xa6, 0x8b, 0xe9, 0x24, 0x7, 0x27, 0xcf, 0x2f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:37:32.268835 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.537649ms
SaveRDFNode: 2020/08/13 04:37:32.268847 Returned.+++++++++++ No error
DB: 2020/08/13 04:37:32.269698 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.477614ms
SaveRDFNode: 2020/08/13 04:37:32.269711 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387380)}
rdfUIDdb: 2020/08/13 04:37:32.269717 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.269721 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.269726 Received UID: X18=
SaveRDFNode: 2020/08/13 04:37:32.269737 a: = db.Item{PKey:[]uint8{0xb0, 0x83, 0x88, 0xe3, 0x18, 0xbe, 0x49, 0x60, 0xab, 0x9c, 0x65, 0x21, 0xb, 0x25, 0x5, 0x8}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:37:32.270525 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.416483ms
SaveRDFNode: 2020/08/13 04:37:32.270538 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386f60)}
rdfUIDdb: 2020/08/13 04:37:32.270544 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:37:32.270548 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:37:32.270553 Received UID: X18=
SaveRDFNode: 2020/08/13 04:37:32.270563 a: = db.Item{PKey:[]uint8{0x2a, 0xe3, 0xcb, 0xa4, 0x97, 0xf6, 0x47, 0x7c, 0xa6, 0x8b, 0xe9, 0x24, 0x7, 0x27, 0xcf, 0x2f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:37:32.273220 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.447651ms
SaveRDFNode: 2020/08/13 04:37:32.273233 Returned.+++++++++++ No error
DB: 2020/08/13 04:37:32.274101 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.504974ms
SaveRDFNode: 2020/08/13 04:37:32.274111 Returned.+++++++++++ No error
DB: 2020/08/13 04:37:32.278636 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.281722 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.284636 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.288033 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.291946 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.840869ms
DB: 2020/08/13 04:37:32.298964 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 6.36022ms
FetchForUpdate: 2020/08/13 04:37:32.298978 ** Cache FetchForUpdate Cache Key Value: [DFvtPFdmQSuiFUp2dq7ZRQ==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:37:32.298984  node: DFvtPFdmQSuiFUp2dq7ZRQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:37:32.299155 ** Cache FetchForUpdate Cache Key Value: [RcAq/W0DR3S90J4jd/2ItA==]   sortk: A#
FetchNode: 2020/08/13 04:37:32.299171  node: RcAq/W0DR3S90J4jd/2ItA== subKey: A#
DB: 2020/08/13 04:37:32.301674 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.657611ms
FetchForUpdate: 2020/08/13 04:37:32.301715 len(nb): 1
fetchItems: 2020/08/13 04:37:32.301740 +++  Cache FetchItems for sortk A#G#:S UID: [DFvtPFdmQSuiFUp2dq7ZRQ==] 
FetchNode: 2020/08/13 04:37:32.301745  node: DFvtPFdmQSuiFUp2dq7ZRQ== subKey: A#G#:S
DB: 2020/08/13 04:37:32.304425 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.651394ms
DB: 2020/08/13 04:37:32.308537 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.543962ms
Unlock: 2020/08/13 04:37:32.308550 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:37:32.315209 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 15.996618ms
FetchForUpdate: 2020/08/13 04:37:32.315325 len(nb): 7
fetchItems: 2020/08/13 04:37:32.315334 +++  Cache FetchItems for sortk A# UID: [RcAq/W0DR3S90J4jd/2ItA==] 
FetchNode: 2020/08/13 04:37:32.315338  node: RcAq/W0DR3S90J4jd/2ItA== subKey: A#
DB: 2020/08/13 04:37:32.318279 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.91098ms
Unlock: 2020/08/13 04:37:32.321359 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 04:37:32.321987 ** Cache FetchForUpdate Cache Key Value: [DFvtPFdmQSuiFUp2dq7ZRQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.321999 +++  Cache FetchItems for sortk A#G#:S UID: [DFvtPFdmQSuiFUp2dq7ZRQ==] 
FetchNode: 2020/08/13 04:37:32.322004  node: DFvtPFdmQSuiFUp2dq7ZRQ== subKey: A#G#:S
DB: 2020/08/13 04:37:32.324754 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.713922ms
DB: 2020/08/13 04:37:32.331272 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.177329ms
DB: 2020/08/13 04:37:32.335033 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.589404ms
DB: 2020/08/13 04:37:32.339060 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.671554ms
DB: 2020/08/13 04:37:32.345502 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.132647ms
DB: 2020/08/13 04:37:32.349507 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.680492ms
DB: 2020/08/13 04:37:32.353522 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.688938ms
DB: 2020/08/13 04:37:32.360049 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.172352ms
DB: 2020/08/13 04:37:32.364121 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.617056ms
DB: 2020/08/13 04:37:32.368135 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.711601ms
Unlock: 2020/08/13 04:37:32.368155 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:37:32.372033 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.494187ms
FetchForUpdate: 2020/08/13 04:37:32.372044 ** Cache FetchForUpdate Cache Key Value: [DFvtPFdmQSuiFUp2dq7ZRQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.372050 +++  Cache FetchItems for sortk A#G#:S UID: [DFvtPFdmQSuiFUp2dq7ZRQ==] 
FetchNode: 2020/08/13 04:37:32.372054  node: DFvtPFdmQSuiFUp2dq7ZRQ== subKey: A#G#:S
DB: 2020/08/13 04:37:32.375930 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.84558ms
AttachNode: gr1 2020/08/13 04:37:32.376004 Errored: SetUpredAvailable :for  DFvtPFdmQSuiFUp2dq7ZRQ==
Cache: 2020/08/13 04:37:32.376011 In SetUpredAvailable: pUid, tUID:  DFvtPFdmQSuiFUp2dq7ZRQ== DFvtPFdmQSuiFUp2dq7ZRQ== A#G#:S
Cache: 2020/08/13 04:37:32.376016 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:37:32.380029 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.968583ms
Unlock: 2020/08/13 04:37:32.380041 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:37:32.386369 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.956113ms
DB: 2020/08/13 04:37:32.388935 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.391504 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.394843 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.398158 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.402161 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.947006ms
DB: 2020/08/13 04:37:32.407959 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.598775ms
FetchForUpdate: 2020/08/13 04:37:32.407973 ** Cache FetchForUpdate Cache Key Value: [KuPLpJf2R3ymi+kkByfPLw==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:37:32.407979  node: KuPLpJf2R3ymi+kkByfPLw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:37:32.408178 ** Cache FetchForUpdate Cache Key Value: [RcAq/W0DR3S90J4jd/2ItA==]   sortk: A#
fetchItems: 2020/08/13 04:37:32.408205 +++  Cache FetchItems for sortk A# UID: [RcAq/W0DR3S90J4jd/2ItA==] 
FetchNode: 2020/08/13 04:37:32.408218  node: RcAq/W0DR3S90J4jd/2ItA== subKey: A#
DB: 2020/08/13 04:37:32.410709 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.699968ms
FetchForUpdate: 2020/08/13 04:37:32.410752 len(nb): 1
fetchItems: 2020/08/13 04:37:32.410781 +++  Cache FetchItems for sortk A#G#:S UID: [KuPLpJf2R3ymi+kkByfPLw==] 
FetchNode: 2020/08/13 04:37:32.410786  node: KuPLpJf2R3ymi+kkByfPLw== subKey: A#G#:S
DB: 2020/08/13 04:37:32.411225 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 2.963685ms
Unlock: 2020/08/13 04:37:32.411780 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:37:32.413536 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.722579ms
DB: 2020/08/13 04:37:32.417422 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.676194ms
Unlock: 2020/08/13 04:37:32.417435 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:37:32.417664 ** Cache FetchForUpdate Cache Key Value: [KuPLpJf2R3ymi+kkByfPLw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.417675 +++  Cache FetchItems for sortk A#G#:S UID: [KuPLpJf2R3ymi+kkByfPLw==] 
FetchNode: 2020/08/13 04:37:32.417690  node: KuPLpJf2R3ymi+kkByfPLw== subKey: A#G#:S
DB: 2020/08/13 04:37:32.420635 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.914404ms
DB: 2020/08/13 04:37:32.427146 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.173747ms
DB: 2020/08/13 04:37:32.430782 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.468286ms
DB: 2020/08/13 04:37:32.435039 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.884098ms
DB: 2020/08/13 04:37:32.440971 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.557107ms
DB: 2020/08/13 04:37:32.444701 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.433413ms
DB: 2020/08/13 04:37:32.448963 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.759862ms
DB: 2020/08/13 04:37:32.455557 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.162071ms
DB: 2020/08/13 04:37:32.459647 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.528201ms
DB: 2020/08/13 04:37:32.463417 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.695583ms
Unlock: 2020/08/13 04:37:32.463429 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:37:32.467065 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.55867ms
FetchForUpdate: 2020/08/13 04:37:32.467077 ** Cache FetchForUpdate Cache Key Value: [KuPLpJf2R3ymi+kkByfPLw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.467083 +++  Cache FetchItems for sortk A#G#:S UID: [KuPLpJf2R3ymi+kkByfPLw==] 
FetchNode: 2020/08/13 04:37:32.467088  node: KuPLpJf2R3ymi+kkByfPLw== subKey: A#G#:S
DB: 2020/08/13 04:37:32.471012 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.889113ms
AttachNode: gr1 2020/08/13 04:37:32.471203 Errored: SetUpredAvailable :for  KuPLpJf2R3ymi+kkByfPLw==
Cache: 2020/08/13 04:37:32.471214 In SetUpredAvailable: pUid, tUID:  KuPLpJf2R3ymi+kkByfPLw== KuPLpJf2R3ymi+kkByfPLw== A#G#:S
Cache: 2020/08/13 04:37:32.471218 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:37:32.475278 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.017257ms
Unlock: 2020/08/13 04:37:32.475290 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:37:32.480232 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.521466ms
DB: 2020/08/13 04:37:32.483012 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.485472 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.488861 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.491531 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.495500 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.802604ms
DB: 2020/08/13 04:37:32.500031 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.23601ms
FetchForUpdate: 2020/08/13 04:37:32.500048 ** Cache FetchForUpdate Cache Key Value: [RcAq/W0DR3S90J4jd/2ItA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.500055 +++  Cache FetchItems for sortk A#G#:S UID: [RcAq/W0DR3S90J4jd/2ItA==] 
FetchNode: 2020/08/13 04:37:32.500059  node: RcAq/W0DR3S90J4jd/2ItA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:37:32.500248 ** Cache FetchForUpdate Cache Key Value: [DFvtPFdmQSuiFUp2dq7ZRQ==]   sortk: A#
fetchItems: 2020/08/13 04:37:32.500285 +++  Cache FetchItems for sortk A# UID: [DFvtPFdmQSuiFUp2dq7ZRQ==] 
FetchNode: 2020/08/13 04:37:32.500297  node: DFvtPFdmQSuiFUp2dq7ZRQ== subKey: A#
DB: 2020/08/13 04:37:32.503438 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.079526ms
Unlock: 2020/08/13 04:37:32.504753 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:37:32.505316 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 5.222249ms
DB: 2020/08/13 04:37:32.509437 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.856428ms
Unlock: 2020/08/13 04:37:32.509567 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:37:32.509917 ** Cache FetchForUpdate Cache Key Value: [RcAq/W0DR3S90J4jd/2ItA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.509928 +++  Cache FetchItems for sortk A#G#:S UID: [RcAq/W0DR3S90J4jd/2ItA==] 
FetchNode: 2020/08/13 04:37:32.509933  node: RcAq/W0DR3S90J4jd/2ItA== subKey: A#G#:S
DB: 2020/08/13 04:37:32.512681 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 2.718607ms
DB: 2020/08/13 04:37:32.519543 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.320615ms
DB: 2020/08/13 04:37:32.523398 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.598334ms
DB: 2020/08/13 04:37:32.527848 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.805877ms
DB: 2020/08/13 04:37:32.534528 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.122713ms
DB: 2020/08/13 04:37:32.538351 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.424331ms
DB: 2020/08/13 04:37:32.542637 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.867815ms
DB: 2020/08/13 04:37:32.549285 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.102571ms
DB: 2020/08/13 04:37:32.553650 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.686223ms
DB: 2020/08/13 04:37:32.557523 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.811646ms
Unlock: 2020/08/13 04:37:32.557535 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:37:32.561198 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.586055ms
FetchForUpdate: 2020/08/13 04:37:32.561210 ** Cache FetchForUpdate Cache Key Value: [RcAq/W0DR3S90J4jd/2ItA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.561216 +++  Cache FetchItems for sortk A#G#:S UID: [RcAq/W0DR3S90J4jd/2ItA==] 
FetchNode: 2020/08/13 04:37:32.561221  node: RcAq/W0DR3S90J4jd/2ItA== subKey: A#G#:S
DB: 2020/08/13 04:37:32.564072 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.818464ms
AttachNode: gr1 2020/08/13 04:37:32.564160 Errored: SetUpredAvailable :for  RcAq/W0DR3S90J4jd/2ItA==
Cache: 2020/08/13 04:37:32.564169 In SetUpredAvailable: pUid, tUID:  RcAq/W0DR3S90J4jd/2ItA== RcAq/W0DR3S90J4jd/2ItA== A#G#:S
Cache: 2020/08/13 04:37:32.564173 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:37:32.568737 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.531516ms
Unlock: 2020/08/13 04:37:32.568752 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:37:32.579056 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 9.859495ms
DB: 2020/08/13 04:37:32.581902 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.584765 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.587871 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.591347 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.595253 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.834938ms
DB: 2020/08/13 04:37:32.602839 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.328404ms
FetchForUpdate: 2020/08/13 04:37:32.603005 ** Cache FetchForUpdate Cache Key Value: [KuPLpJf2R3ymi+kkByfPLw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.603017 +++  Cache FetchItems for sortk A#G#:S UID: [KuPLpJf2R3ymi+kkByfPLw==] 
FetchNode: 2020/08/13 04:37:32.603021  node: KuPLpJf2R3ymi+kkByfPLw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:37:32.603273 ** Cache FetchForUpdate Cache Key Value: [DFvtPFdmQSuiFUp2dq7ZRQ==]   sortk: A#
fetchItems: 2020/08/13 04:37:32.603282 +++  Cache FetchItems for sortk A# UID: [DFvtPFdmQSuiFUp2dq7ZRQ==] 
FetchNode: 2020/08/13 04:37:32.603293  node: DFvtPFdmQSuiFUp2dq7ZRQ== subKey: A#
DB: 2020/08/13 04:37:32.605992 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.934242ms
DB: 2020/08/13 04:37:32.607075 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.723749ms
Unlock: 2020/08/13 04:37:32.608439 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:37:32.610468 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.944185ms
DB: 2020/08/13 04:37:32.614586 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.043401ms
DB: 2020/08/13 04:37:32.614655 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.043401ms
DB: 2020/08/13 04:37:32.618351 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.637865ms
DB: 2020/08/13 04:37:32.618478 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.637865ms
DB: 2020/08/13 04:37:32.622603 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.910888ms
DB: 2020/08/13 04:37:32.626776 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.906115ms
Unlock: 2020/08/13 04:37:32.626787 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:37:32.633885 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.284027ms
DB: 2020/08/13 04:37:32.637817 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.566815ms
DB: 2020/08/13 04:37:32.642610 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.179765ms
DB: 2020/08/13 04:37:32.648898 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.779001ms
DB: 2020/08/13 04:37:32.653020 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.652777ms
DB: 2020/08/13 04:37:32.657336 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.729091ms
DB: 2020/08/13 04:37:32.664234 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.270293ms
DB: 2020/08/13 04:37:32.668243 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.508222ms
DB: 2020/08/13 04:37:32.672755 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.868574ms
DB: 2020/08/13 04:37:32.676671 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.556249ms
FetchForUpdate: 2020/08/13 04:37:32.676682 ** Cache FetchForUpdate Cache Key Value: [KuPLpJf2R3ymi+kkByfPLw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.676688 +++  Cache FetchItems for sortk A#G#:S UID: [KuPLpJf2R3ymi+kkByfPLw==] 
FetchNode: 2020/08/13 04:37:32.676692  node: KuPLpJf2R3ymi+kkByfPLw== subKey: A#G#:S
DB: 2020/08/13 04:37:32.680711 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.97599ms
AttachNode: gr1 2020/08/13 04:37:32.680805 Errored: SetUpredAvailable :for  KuPLpJf2R3ymi+kkByfPLw==
Cache: 2020/08/13 04:37:32.680815 In SetUpredAvailable: pUid, tUID:  KuPLpJf2R3ymi+kkByfPLw== GdO/rckkQHi0kux8MglhaA== A#G#:S
Cache: 2020/08/13 04:37:32.680819 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:37:32.684631 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.779382ms
Unlock: 2020/08/13 04:37:32.684642 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:37:32.689445 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.398366ms
DB: 2020/08/13 04:37:32.692996 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.696268 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.699020 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.701579 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.705368 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.738746ms
DB: 2020/08/13 04:37:32.710031 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.307895ms
FetchForUpdate: 2020/08/13 04:37:32.710046 ** Cache FetchForUpdate Cache Key Value: [RcAq/W0DR3S90J4jd/2ItA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.710052 +++  Cache FetchItems for sortk A#G#:S UID: [RcAq/W0DR3S90J4jd/2ItA==] 
FetchNode: 2020/08/13 04:37:32.710056  node: RcAq/W0DR3S90J4jd/2ItA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:37:32.710255 ** Cache FetchForUpdate Cache Key Value: [KuPLpJf2R3ymi+kkByfPLw==]   sortk: A#
fetchItems: 2020/08/13 04:37:32.710264 +++  Cache FetchItems for sortk A# UID: [KuPLpJf2R3ymi+kkByfPLw==] 
FetchNode: 2020/08/13 04:37:32.710291  node: KuPLpJf2R3ymi+kkByfPLw== subKey: A#
DB: 2020/08/13 04:37:32.713050 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.94546ms
DB: 2020/08/13 04:37:32.714174 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.808839ms
Unlock: 2020/08/13 04:37:32.715465 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:37:32.717285 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.689483ms
DB: 2020/08/13 04:37:32.721229 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.90355ms
DB: 2020/08/13 04:37:32.721346 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.90355ms
DB: 2020/08/13 04:37:32.726013 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.622998ms
DB: 2020/08/13 04:37:32.726028 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.622998ms
DB: 2020/08/13 04:37:32.730279 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.053177ms
DB: 2020/08/13 04:37:32.734031 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.553813ms
Unlock: 2020/08/13 04:37:32.734041 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:37:32.740951 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.176496ms
DB: 2020/08/13 04:37:32.744583 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.350142ms
DB: 2020/08/13 04:37:32.748810 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.792726ms
DB: 2020/08/13 04:37:32.755150 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.012653ms
DB: 2020/08/13 04:37:32.758969 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.552698ms
DB: 2020/08/13 04:37:32.763006 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.638764ms
DB: 2020/08/13 04:37:32.769459 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.125658ms
DB: 2020/08/13 04:37:32.773146 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.40126ms
DB: 2020/08/13 04:37:32.777039 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.613721ms
DB: 2020/08/13 04:37:32.780879 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.560132ms
FetchForUpdate: 2020/08/13 04:37:32.780890 ** Cache FetchForUpdate Cache Key Value: [RcAq/W0DR3S90J4jd/2ItA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.780896 +++  Cache FetchItems for sortk A#G#:S UID: [RcAq/W0DR3S90J4jd/2ItA==] 
FetchNode: 2020/08/13 04:37:32.780901  node: RcAq/W0DR3S90J4jd/2ItA== subKey: A#G#:S
DB: 2020/08/13 04:37:32.784402 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.46932ms
AttachNode: gr1 2020/08/13 04:37:32.784501 Errored: SetUpredAvailable :for  RcAq/W0DR3S90J4jd/2ItA==
Cache: 2020/08/13 04:37:32.784510 In SetUpredAvailable: pUid, tUID:  RcAq/W0DR3S90J4jd/2ItA== 4Om30ehoTO+3/3+Nazp6Jg== A#G#:S
Cache: 2020/08/13 04:37:32.784514 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:37:32.790219 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.671973ms
Unlock: 2020/08/13 04:37:32.790229 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:37:32.795160 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.50805ms
DB: 2020/08/13 04:37:32.798550 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.801153 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.804265 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.806901 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:37:32.810788 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.838921ms
DB: 2020/08/13 04:37:32.815093 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.241269ms
FetchForUpdate: 2020/08/13 04:37:32.815121 ** Cache FetchForUpdate Cache Key Value: [DFvtPFdmQSuiFUp2dq7ZRQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.815127 +++  Cache FetchItems for sortk A#G#:S UID: [DFvtPFdmQSuiFUp2dq7ZRQ==] 
FetchNode: 2020/08/13 04:37:32.815131  node: DFvtPFdmQSuiFUp2dq7ZRQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:37:32.815318 ** Cache FetchForUpdate Cache Key Value: [KuPLpJf2R3ymi+kkByfPLw==]   sortk: A#
fetchItems: 2020/08/13 04:37:32.815345 +++  Cache FetchItems for sortk A# UID: [KuPLpJf2R3ymi+kkByfPLw==] 
FetchNode: 2020/08/13 04:37:32.815358  node: KuPLpJf2R3ymi+kkByfPLw== subKey: A#
DB: 2020/08/13 04:37:32.818554 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.131278ms
Unlock: 2020/08/13 04:37:32.819229 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:37:32.819803 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.612581ms
DB: 2020/08/13 04:37:32.823998 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.866202ms
DB: 2020/08/13 04:37:32.827449 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.417522ms
DB: 2020/08/13 04:37:32.827574 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.417522ms
DB: 2020/08/13 04:37:32.831315 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.702278ms
DB: 2020/08/13 04:37:32.831329 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.702278ms
DB: 2020/08/13 04:37:32.835232 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.743909ms
DB: 2020/08/13 04:37:32.839006 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.59527ms
Unlock: 2020/08/13 04:37:32.839017 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:37:32.845868 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.171208ms
DB: 2020/08/13 04:37:32.854132 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 7.956131ms
DB: 2020/08/13 04:37:32.858331 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.811927ms
DB: 2020/08/13 04:37:32.864575 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.179726ms
DB: 2020/08/13 04:37:32.871622 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 6.964266ms
DB: 2020/08/13 04:37:32.875339 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.630357ms
DB: 2020/08/13 04:37:32.881721 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.307288ms
DB: 2020/08/13 04:37:32.885292 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.502934ms
DB: 2020/08/13 04:37:32.889636 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.272076ms
DB: 2020/08/13 04:37:32.893343 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 3.655747ms
FetchForUpdate: 2020/08/13 04:37:32.893357 ** Cache FetchForUpdate Cache Key Value: [DFvtPFdmQSuiFUp2dq7ZRQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:37:32.893364 +++  Cache FetchItems for sortk A#G#:S UID: [DFvtPFdmQSuiFUp2dq7ZRQ==] 
FetchNode: 2020/08/13 04:37:32.893368  node: DFvtPFdmQSuiFUp2dq7ZRQ== subKey: A#G#:S
DB: 2020/08/13 04:37:32.896266 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 2.865622ms
AttachNode: gr1 2020/08/13 04:37:32.896345 Errored: SetUpredAvailable :for  DFvtPFdmQSuiFUp2dq7ZRQ==
Cache: 2020/08/13 04:37:32.896353 In SetUpredAvailable: pUid, tUID:  DFvtPFdmQSuiFUp2dq7ZRQ== XGsmYTLmR32L4xtSxcB9Ww== A#G#:S
Cache: 2020/08/13 04:37:32.896357 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:37:32.899936 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 3.537454ms
Unlock: 2020/08/13 04:37:32.899945 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:37:32.905117 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.733392ms
rdfLoader: 2020/08/13 04:37:32.905128 saveNode finished waiting...exiting
grmgr: 2020/08/13 04:37:32.905146 Powering down...
rdfuuid: 2020/08/13 04:37:32.905152 Powering down...
DB:2020/08/13 04:38:07 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:38:07.788326 Powering on...
rdfLoader: 2020/08/13 04:38:07.788836 verify started....xx.
rdfLoader: 2020/08/13 04:38:07.788853 saveNode started......
rdfuuid: 2020/08/13 04:38:07.788863 Powering on...
rdfLoader: 2020/08/13 04:38:07.788869 *************** All started 
rdfLoader: 2020/08/13 04:38:07.796786 .  getType..
rdfLoader: 2020/08/13 04:38:07.796808 node.TyName : [Person]
DB: 2020/08/13 04:38:07.873602 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 76.719302ms
verify: 2020/08/13 04:38:07.873769 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:38:07.873816 Find Ty Address
rdfLoader: 2020/08/13 04:38:07.873822 Find Ty Age
rdfLoader: 2020/08/13 04:38:07.873828 Find Ty Cars
rdfLoader: 2020/08/13 04:38:07.873834 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:38:07.873839 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:38:07.873844 Find Ty DOB
rdfLoader: 2020/08/13 04:38:07.873849 Find Ty Friends
rdfLoader: 2020/08/13 04:38:07.873853 Find Ty Jobs
rdfLoader: 2020/08/13 04:38:07.873857 Find Ty Name
rdfLoader: 2020/08/13 04:38:07.873862 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:38:07.873867 Find Ty Siblings
rdfLoader: 2020/08/13 04:38:07.873878 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:38:07.873938 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:38:07.873947 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:38:07.873986 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.873993 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.873999 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.874006 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.874012 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.874018 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.874024 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:38:07.874029 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:38:07.874036 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc0003865a0)}
SaveRDFNode: 2020/08/13 04:38:07.874041 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:38:07.874061 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.874066 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.874072 UID received  : g94QfrBGTb2dxnx5upkPHw==
grmgr: 2020/08/13 04:38:07.874281 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:38:07.874290 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:38:07.874294 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:38:07.874300 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:38:07.874307 *** Verify running...... 1
rdfLoader: 2020/08/13 04:38:07.874323 .  getType..
rdfLoader: 2020/08/13 04:38:07.874327 node.TyName : [Person]
verify: 2020/08/13 04:38:07.874347 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:38:07.874404 Find Ty Address
rdfLoader: 2020/08/13 04:38:07.874422 Find Ty Age
rdfLoader: 2020/08/13 04:38:07.874428 Find Ty Cars
rdfLoader: 2020/08/13 04:38:07.874434 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:38:07.874438 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:38:07.874443 Find Ty DOB
rdfLoader: 2020/08/13 04:38:07.874448 Find Ty Friends
rdfLoader: 2020/08/13 04:38:07.874456 Find Ty Jobs
rdfLoader: 2020/08/13 04:38:07.874460 Find Ty Name
rdfLoader: 2020/08/13 04:38:07.874465 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:38:07.874470 Find Ty Siblings
rdfLoader: 2020/08/13 04:38:07.874478 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:38:07.874508 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:38:07.874513 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:38:07.874534 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.874540 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.874547 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.875748 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.875764 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.875771 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.875778 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:38:07.875783 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:38:07.875789 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc000386ae0)}
SaveRDFNode: 2020/08/13 04:38:07.875793 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:38:07.875808 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.875813 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.875819 UID received  : u56/eLl7Qwu/Jz2BMNaEzQ==
grmgr: 2020/08/13 04:38:07.876175 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:38:07.876189 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:38:07.876194 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:38:07.876200 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:38:07.876297 *** Verify running...... 1
rdfLoader: 2020/08/13 04:38:07.878405 .  getType..
rdfLoader: 2020/08/13 04:38:07.878431 node.TyName : [Person]
verify: 2020/08/13 04:38:07.878882 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:38:07.879507 Find Ty Address
rdfLoader: 2020/08/13 04:38:07.879517 Find Ty Age
rdfLoader: 2020/08/13 04:38:07.879523 Find Ty Cars
rdfLoader: 2020/08/13 04:38:07.879529 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:38:07.879533 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:38:07.879538 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:38:07.879542 Find Ty DOB
rdfLoader: 2020/08/13 04:38:07.879546 Find Ty Friends
rdfLoader: 2020/08/13 04:38:07.879550 Find Ty Jobs
rdfLoader: 2020/08/13 04:38:07.879554 Find Ty Name
rdfLoader: 2020/08/13 04:38:07.879558 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:38:07.879562 Find Ty Siblings
rdfLoader: 2020/08/13 04:38:07.879573 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:38:07.879602 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:38:07.879606 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:38:07.879627 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.879633 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.879641 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.879663 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.879669 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.879674 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.879680 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:38:07.879696 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:38:07.879702 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc0003870e0)}
SaveRDFNode: 2020/08/13 04:38:07.879706 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:38:07.879713 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.879717 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.879722 UID received  : sRH+q/XpRTGOgDTbC1/gsA==
grmgr: 2020/08/13 04:38:07.880055 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:38:07.880063 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:38:07.880068 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:38:07.880074 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:38:07.880188 *** Verify running...... 2
rdfLoader: 2020/08/13 04:38:07.880199 .  getType..
rdfLoader: 2020/08/13 04:38:07.880203 node.TyName : [Person]
verify: 2020/08/13 04:38:07.880893 *** Verify waiting on umarshal ch............................................. 2
rdfLoader: 2020/08/13 04:38:07.881425 Find Ty Address
rdfLoader: 2020/08/13 04:38:07.881440 Find Ty Age
rdfLoader: 2020/08/13 04:38:07.881464 Find Ty Cars
rdfLoader: 2020/08/13 04:38:07.881470 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:38:07.881475 Find Ty DOB
rdfLoader: 2020/08/13 04:38:07.881479 Find Ty Friends
rdfLoader: 2020/08/13 04:38:07.881483 Find Ty Jobs
rdfLoader: 2020/08/13 04:38:07.881487 Find Ty Name
rdfLoader: 2020/08/13 04:38:07.881492 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:38:07.881496 Find Ty Siblings
rdfLoader: 2020/08/13 04:38:07.881505 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:38:07.881529 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:38:07.881534 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:38:07.881557 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.881563 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.881609 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.881618 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.881623 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.881629 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:38:07.881635 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:38:07.881639 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:38:07.881645 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc000387680)}
SaveRDFNode: 2020/08/13 04:38:07.881649 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:38:07.881657 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.881661 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.881667 UID received  : qsLuOdz6QCCcXziCCj/aTA==
grmgr: 2020/08/13 04:38:07.881848 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:38:07.881868 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:38:07.881872 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:38:07.881877 EndCh received for unmarshall. rCnt = 0 
verify: 2020/08/13 04:38:07.881884 *** Verify running...... 2
verify: 2020/08/13 04:38:07.881888 verify exited.....
DB: 2020/08/13 04:38:07.884153 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 10.048534ms
DB: 2020/08/13 04:38:07.893558 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.706532ms
DB: 2020/08/13 04:38:07.898834 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 19.083397ms
DB: 2020/08/13 04:38:07.903813 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.934557ms
DB: 2020/08/13 04:38:07.912962 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 31.263104ms
DB: 2020/08/13 04:38:07.913787 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 29.602486ms
DB: 2020/08/13 04:38:07.914287 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 20.556351ms
DB: 2020/08/13 04:38:07.918054 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.890639ms
DB: 2020/08/13 04:38:07.918877 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.057912ms
DB: 2020/08/13 04:38:07.919157 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.805179ms
DB: 2020/08/13 04:38:07.922833 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.746654ms
DB: 2020/08/13 04:38:07.924283 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 20.43248ms
DB: 2020/08/13 04:38:07.924597 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.333846ms
DB: 2020/08/13 04:38:07.924821 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.911719ms
DB: 2020/08/13 04:38:07.927712 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.846471ms
DB: 2020/08/13 04:38:07.929228 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.913443ms
DB: 2020/08/13 04:38:07.929721 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.848476ms
SaveRDFNode: 2020/08/13 04:38:07.929736 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003865a0)}
rdfUIDdb: 2020/08/13 04:38:07.929744 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.929748 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.929754 Received UID: X18=
SaveRDFNode: 2020/08/13 04:38:07.929783 a: = db.Item{PKey:[]uint8{0x83, 0xde, 0x10, 0x7e, 0xb0, 0x46, 0x4d, 0xbd, 0x9d, 0xc6, 0x7c, 0x79, 0xba, 0x99, 0xf, 0x1f}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:38:07.930068 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 5.424913ms
SaveRDFNode: 2020/08/13 04:38:07.930082 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/13 04:38:07.930088 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.930092 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.930097 Received UID: X18=
SaveRDFNode: 2020/08/13 04:38:07.930107 a: = db.Item{PKey:[]uint8{0xbb, 0x9e, 0xbf, 0x78, 0xb9, 0x7b, 0x43, 0xb, 0xbf, 0x27, 0x3d, 0x81, 0x30, 0xd6, 0x84, 0xcd}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:38:07.932412 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.668166ms
SaveRDFNode: 2020/08/13 04:38:07.932424 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387680)}
rdfUIDdb: 2020/08/13 04:38:07.932430 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.932434 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.932440 Received UID: X18=
SaveRDFNode: 2020/08/13 04:38:07.932450 a: = db.Item{PKey:[]uint8{0xaa, 0xc2, 0xee, 0x39, 0xdc, 0xfa, 0x40, 0x20, 0x9c, 0x5f, 0x38, 0x82, 0xa, 0x3f, 0xda, 0x4c}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:38:07.933995 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 4.596127ms
SaveRDFNode: 2020/08/13 04:38:07.934008 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003870e0)}
rdfUIDdb: 2020/08/13 04:38:07.934014 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.934018 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.934024 Received UID: X18=
SaveRDFNode: 2020/08/13 04:38:07.934033 a: = db.Item{PKey:[]uint8{0xb1, 0x11, 0xfe, 0xab, 0xf5, 0xe9, 0x45, 0x31, 0x8e, 0x80, 0x34, 0xdb, 0xb, 0x5f, 0xe0, 0xb0}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:38:07.934845 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.029615ms
SaveRDFNode: 2020/08/13 04:38:07.934863 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003865a0)}
rdfUIDdb: 2020/08/13 04:38:07.934868 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.934872 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.934878 Received UID: X18=
SaveRDFNode: 2020/08/13 04:38:07.934887 a: = db.Item{PKey:[]uint8{0x83, 0xde, 0x10, 0x7e, 0xb0, 0x46, 0x4d, 0xbd, 0x9d, 0xc6, 0x7c, 0x79, 0xba, 0x99, 0xf, 0x1f}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:38:07.935174 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.031488ms
SaveRDFNode: 2020/08/13 04:38:07.935185 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000386ae0)}
rdfUIDdb: 2020/08/13 04:38:07.935191 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.935195 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.935200 Received UID: X18=
SaveRDFNode: 2020/08/13 04:38:07.935214 a: = db.Item{PKey:[]uint8{0xbb, 0x9e, 0xbf, 0x78, 0xb9, 0x7b, 0x43, 0xb, 0xbf, 0x27, 0x3d, 0x81, 0x30, 0xd6, 0x84, 0xcd}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:38:07.937150 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.671243ms
SaveRDFNode: 2020/08/13 04:38:07.937162 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc000387680)}
rdfUIDdb: 2020/08/13 04:38:07.937167 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.937171 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.937176 Received UID: X18=
SaveRDFNode: 2020/08/13 04:38:07.937186 a: = db.Item{PKey:[]uint8{0xaa, 0xc2, 0xee, 0x39, 0xdc, 0xfa, 0x40, 0x20, 0x9c, 0x5f, 0x38, 0x82, 0xa, 0x3f, 0xda, 0x4c}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:38:07.938804 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.733058ms
SaveRDFNode: 2020/08/13 04:38:07.938816 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc0003870e0)}
rdfUIDdb: 2020/08/13 04:38:07.938822 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:38:07.938826 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:38:07.938831 Received UID: X18=
SaveRDFNode: 2020/08/13 04:38:07.938840 a: = db.Item{PKey:[]uint8{0xb1, 0x11, 0xfe, 0xab, 0xf5, 0xe9, 0x45, 0x31, 0x8e, 0x80, 0x34, 0xdb, 0xb, 0x5f, 0xe0, 0xb0}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:38:07.939828 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.893685ms
SaveRDFNode: 2020/08/13 04:38:07.939837 Returned.+++++++++++ No error
DB: 2020/08/13 04:38:07.939991 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.749601ms
SaveRDFNode: 2020/08/13 04:38:07.939999 Returned.+++++++++++ No error
DB: 2020/08/13 04:38:07.941924 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.675311ms
SaveRDFNode: 2020/08/13 04:38:07.941937 Returned.+++++++++++ No error
DB: 2020/08/13 04:38:07.943596 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.72109ms
SaveRDFNode: 2020/08/13 04:38:07.943628 Returned.+++++++++++ No error
DB: 2020/08/13 04:38:07.948158 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:07.951769 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:07.955701 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:07.959116 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:07.964227 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.035123ms
DB: 2020/08/13 04:38:07.972972 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 7.594235ms
FetchForUpdate: 2020/08/13 04:38:07.972988 ** Cache FetchForUpdate Cache Key Value: [u56/eLl7Qwu/Jz2BMNaEzQ==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:38:07.972995  node: u56/eLl7Qwu/Jz2BMNaEzQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:38:07.973159 ** Cache FetchForUpdate Cache Key Value: [g94QfrBGTb2dxnx5upkPHw==]   sortk: A#
FetchNode: 2020/08/13 04:38:07.973178  node: g94QfrBGTb2dxnx5upkPHw== subKey: A#
DB: 2020/08/13 04:38:07.976277 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.245823ms
FetchForUpdate: 2020/08/13 04:38:07.976324 len(nb): 1
fetchItems: 2020/08/13 04:38:07.976332 +++  Cache FetchItems for sortk A#G#:S UID: [u56/eLl7Qwu/Jz2BMNaEzQ==] 
FetchNode: 2020/08/13 04:38:07.976337  node: u56/eLl7Qwu/Jz2BMNaEzQ== subKey: A#G#:S
DB: 2020/08/13 04:38:07.979943 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.57773ms
DB: 2020/08/13 04:38:07.985422 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.383879ms
Unlock: 2020/08/13 04:38:07.985435 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:38:07.991635 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 18.414998ms
FetchForUpdate: 2020/08/13 04:38:07.991737 len(nb): 7
fetchItems: 2020/08/13 04:38:07.991745 +++  Cache FetchItems for sortk A# UID: [g94QfrBGTb2dxnx5upkPHw==] 
FetchNode: 2020/08/13 04:38:07.991749  node: g94QfrBGTb2dxnx5upkPHw== subKey: A#
DB: 2020/08/13 04:38:07.996583 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 4.804245ms
Unlock: 2020/08/13 04:38:07.996716 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
FetchForUpdate: 2020/08/13 04:38:07.996745 ** Cache FetchForUpdate Cache Key Value: [u56/eLl7Qwu/Jz2BMNaEzQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:07.996752 +++  Cache FetchItems for sortk A#G#:S UID: [u56/eLl7Qwu/Jz2BMNaEzQ==] 
FetchNode: 2020/08/13 04:38:07.996757  node: u56/eLl7Qwu/Jz2BMNaEzQ== subKey: A#G#:S
DB: 2020/08/13 04:38:07.999900 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.114526ms
DB: 2020/08/13 04:38:08.007214 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 5.96754ms
DB: 2020/08/13 04:38:08.012716 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.307791ms
DB: 2020/08/13 04:38:08.018770 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.405936ms
DB: 2020/08/13 04:38:08.025787 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.735354ms
DB: 2020/08/13 04:38:08.031343 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.192483ms
DB: 2020/08/13 04:38:08.038105 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.357432ms
DB: 2020/08/13 04:38:08.045675 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.918226ms
DB: 2020/08/13 04:38:08.050910 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.927154ms
DB: 2020/08/13 04:38:08.056423 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.202492ms
Unlock: 2020/08/13 04:38:08.056444 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:38:08.061759 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.877008ms
FetchForUpdate: 2020/08/13 04:38:08.061771 ** Cache FetchForUpdate Cache Key Value: [u56/eLl7Qwu/Jz2BMNaEzQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.061777 +++  Cache FetchItems for sortk A#G#:S UID: [u56/eLl7Qwu/Jz2BMNaEzQ==] 
FetchNode: 2020/08/13 04:38:08.061782  node: u56/eLl7Qwu/Jz2BMNaEzQ== subKey: A#G#:S
DB: 2020/08/13 04:38:08.065232 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.413846ms
AttachNode: gr1 2020/08/13 04:38:08.065338 Errored: SetUpredAvailable :for  u56/eLl7Qwu/Jz2BMNaEzQ==
Cache: 2020/08/13 04:38:08.065347 In SetUpredAvailable: pUid, tUID:  u56/eLl7Qwu/Jz2BMNaEzQ== u56/eLl7Qwu/Jz2BMNaEzQ== A#G#:S
Cache: 2020/08/13 04:38:08.065351 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:38:08.070812 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.425468ms
Unlock: 2020/08/13 04:38:08.070826 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:38:08.081098 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 9.707637ms
DB: 2020/08/13 04:38:08.085182 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.089228 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.092203 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.095045 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.100192 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.093643ms
DB: 2020/08/13 04:38:08.105734 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.324449ms
FetchForUpdate: 2020/08/13 04:38:08.105760 ** Cache FetchForUpdate Cache Key Value: [sRH+q/XpRTGOgDTbC1/gsA==]   sortk: A#G#:S
FetchNode: 2020/08/13 04:38:08.105769  node: sRH+q/XpRTGOgDTbC1/gsA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:38:08.106646 ** Cache FetchForUpdate Cache Key Value: [g94QfrBGTb2dxnx5upkPHw==]   sortk: A#
fetchItems: 2020/08/13 04:38:08.106660 +++  Cache FetchItems for sortk A# UID: [g94QfrBGTb2dxnx5upkPHw==] 
FetchNode: 2020/08/13 04:38:08.106715  node: g94QfrBGTb2dxnx5upkPHw== subKey: A#
DB: 2020/08/13 04:38:08.109923 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.070399ms
FetchForUpdate: 2020/08/13 04:38:08.109974 len(nb): 1
fetchItems: 2020/08/13 04:38:08.109983 +++  Cache FetchItems for sortk A#G#:S UID: [sRH+q/XpRTGOgDTbC1/gsA==] 
FetchNode: 2020/08/13 04:38:08.109988  node: sRH+q/XpRTGOgDTbC1/gsA== subKey: A#G#:S
DB: 2020/08/13 04:38:08.110447 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 7  Duration: 3.671247ms
Unlock: 2020/08/13 04:38:08.111414 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:38:08.113514 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.495622ms
DB: 2020/08/13 04:38:08.121470 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 7.635549ms
Unlock: 2020/08/13 04:38:08.121487 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:38:08.122021 ** Cache FetchForUpdate Cache Key Value: [sRH+q/XpRTGOgDTbC1/gsA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.122037 +++  Cache FetchItems for sortk A#G#:S UID: [sRH+q/XpRTGOgDTbC1/gsA==] 
FetchNode: 2020/08/13 04:38:08.122052  node: sRH+q/XpRTGOgDTbC1/gsA== subKey: A#G#:S
DB: 2020/08/13 04:38:08.126188 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 4.096208ms
DB: 2020/08/13 04:38:08.132829 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.517335ms
DB: 2020/08/13 04:38:08.138089 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.197232ms
DB: 2020/08/13 04:38:08.143539 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.345541ms
DB: 2020/08/13 04:38:08.150690 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.067274ms
DB: 2020/08/13 04:38:08.155841 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.05242ms
DB: 2020/08/13 04:38:08.161209 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.162094ms
DB: 2020/08/13 04:38:08.168099 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.561257ms
DB: 2020/08/13 04:38:08.173489 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.061145ms
DB: 2020/08/13 04:38:08.178996 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.176717ms
Unlock: 2020/08/13 04:38:08.179009 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:38:08.184440 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.053727ms
FetchForUpdate: 2020/08/13 04:38:08.184452 ** Cache FetchForUpdate Cache Key Value: [sRH+q/XpRTGOgDTbC1/gsA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.184459 +++  Cache FetchItems for sortk A#G#:S UID: [sRH+q/XpRTGOgDTbC1/gsA==] 
FetchNode: 2020/08/13 04:38:08.184464  node: sRH+q/XpRTGOgDTbC1/gsA== subKey: A#G#:S
DB: 2020/08/13 04:38:08.189076 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.579224ms
AttachNode: gr1 2020/08/13 04:38:08.189180 Errored: SetUpredAvailable :for  sRH+q/XpRTGOgDTbC1/gsA==
Cache: 2020/08/13 04:38:08.189188 In SetUpredAvailable: pUid, tUID:  sRH+q/XpRTGOgDTbC1/gsA== sRH+q/XpRTGOgDTbC1/gsA== A#G#:S
Cache: 2020/08/13 04:38:08.189193 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:38:08.195672 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.446585ms
Unlock: 2020/08/13 04:38:08.195684 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:38:08.201867 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.656306ms
DB: 2020/08/13 04:38:08.204915 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.208264 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.212512 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.216756 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.223500 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 6.693953ms
DB: 2020/08/13 04:38:08.228473 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.667417ms
FetchForUpdate: 2020/08/13 04:38:08.228491 ** Cache FetchForUpdate Cache Key Value: [g94QfrBGTb2dxnx5upkPHw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.228498 +++  Cache FetchItems for sortk A#G#:S UID: [g94QfrBGTb2dxnx5upkPHw==] 
FetchNode: 2020/08/13 04:38:08.228503  node: g94QfrBGTb2dxnx5upkPHw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:38:08.228810 ** Cache FetchForUpdate Cache Key Value: [u56/eLl7Qwu/Jz2BMNaEzQ==]   sortk: A#
fetchItems: 2020/08/13 04:38:08.228830 +++  Cache FetchItems for sortk A# UID: [u56/eLl7Qwu/Jz2BMNaEzQ==] 
FetchNode: 2020/08/13 04:38:08.228843  node: u56/eLl7Qwu/Jz2BMNaEzQ== subKey: A#
DB: 2020/08/13 04:38:08.232130 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.593007ms
DB: 2020/08/13 04:38:08.235918 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 7.032528ms
Unlock: 2020/08/13 04:38:08.237269 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:38:08.239073 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.61975ms
Unlock: 2020/08/13 04:38:08.239083 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
FetchForUpdate: 2020/08/13 04:38:08.239436 ** Cache FetchForUpdate Cache Key Value: [g94QfrBGTb2dxnx5upkPHw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.239446 +++  Cache FetchItems for sortk A#G#:S UID: [g94QfrBGTb2dxnx5upkPHw==] 
FetchNode: 2020/08/13 04:38:08.239451  node: g94QfrBGTb2dxnx5upkPHw== subKey: A#G#:S
DB: 2020/08/13 04:38:08.242971 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 1  Duration: 3.489142ms
DB: 2020/08/13 04:38:08.250072 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.46941ms
DB: 2020/08/13 04:38:08.255467 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.028925ms
DB: 2020/08/13 04:38:08.261446 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.366192ms
DB: 2020/08/13 04:38:08.268581 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.699338ms
DB: 2020/08/13 04:38:08.273953 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.818756ms
DB: 2020/08/13 04:38:08.279788 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.334784ms
DB: 2020/08/13 04:38:08.286982 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.712389ms
DB: 2020/08/13 04:38:08.292690 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.190449ms
DB: 2020/08/13 04:38:08.298453 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.152514ms
Unlock: 2020/08/13 04:38:08.298467 ******* IN UNLOCK NC ********************  unSet parent lock in propgatechilddata...2
DB: 2020/08/13 04:38:08.304336 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.250034ms
FetchForUpdate: 2020/08/13 04:38:08.304506 ** Cache FetchForUpdate Cache Key Value: [g94QfrBGTb2dxnx5upkPHw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.304518 +++  Cache FetchItems for sortk A#G#:S UID: [g94QfrBGTb2dxnx5upkPHw==] 
FetchNode: 2020/08/13 04:38:08.304524  node: g94QfrBGTb2dxnx5upkPHw== subKey: A#G#:S
DB: 2020/08/13 04:38:08.307953 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 3.385599ms
AttachNode: gr1 2020/08/13 04:38:08.308063 Errored: SetUpredAvailable :for  g94QfrBGTb2dxnx5upkPHw==
Cache: 2020/08/13 04:38:08.308072 In SetUpredAvailable: pUid, tUID:  g94QfrBGTb2dxnx5upkPHw== g94QfrBGTb2dxnx5upkPHw== A#G#:S
Cache: 2020/08/13 04:38:08.308077 tuid=puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:38:08.313234 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.116859ms
Unlock: 2020/08/13 04:38:08.313248 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:38:08.319578 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.774512ms
DB: 2020/08/13 04:38:08.323022 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.326899 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.330371 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.333645 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.338748 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.051457ms
DB: 2020/08/13 04:38:08.343730 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.624441ms
FetchForUpdate: 2020/08/13 04:38:08.343744 ** Cache FetchForUpdate Cache Key Value: [sRH+q/XpRTGOgDTbC1/gsA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.343751 +++  Cache FetchItems for sortk A#G#:S UID: [sRH+q/XpRTGOgDTbC1/gsA==] 
FetchNode: 2020/08/13 04:38:08.343755  node: sRH+q/XpRTGOgDTbC1/gsA== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:38:08.343931 ** Cache FetchForUpdate Cache Key Value: [u56/eLl7Qwu/Jz2BMNaEzQ==]   sortk: A#
fetchItems: 2020/08/13 04:38:08.343941 +++  Cache FetchItems for sortk A# UID: [u56/eLl7Qwu/Jz2BMNaEzQ==] 
FetchNode: 2020/08/13 04:38:08.343952  node: u56/eLl7Qwu/Jz2BMNaEzQ== subKey: A#
DB: 2020/08/13 04:38:08.347527 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 3.503078ms
Unlock: 2020/08/13 04:38:08.348898 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:38:08.349511 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 5.725348ms
DB: 2020/08/13 04:38:08.355016 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.019136ms
DB: 2020/08/13 04:38:08.360038 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.865609ms
DB: 2020/08/13 04:38:08.360055 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.865609ms
DB: 2020/08/13 04:38:08.365008 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.920439ms
DB: 2020/08/13 04:38:08.365023 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.920439ms
DB: 2020/08/13 04:38:08.371103 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.865627ms
DB: 2020/08/13 04:38:08.376634 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.22148ms
Unlock: 2020/08/13 04:38:08.376645 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:38:08.384134 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.60126ms
DB: 2020/08/13 04:38:08.389328 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.935928ms
DB: 2020/08/13 04:38:08.395121 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.07421ms
DB: 2020/08/13 04:38:08.402221 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.580459ms
DB: 2020/08/13 04:38:08.407721 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.060132ms
DB: 2020/08/13 04:38:08.413683 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.36106ms
DB: 2020/08/13 04:38:08.420339 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.183172ms
DB: 2020/08/13 04:38:08.425766 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.993044ms
DB: 2020/08/13 04:38:08.431437 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.036688ms
DB: 2020/08/13 04:38:08.436874 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.184731ms
FetchForUpdate: 2020/08/13 04:38:08.436886 ** Cache FetchForUpdate Cache Key Value: [sRH+q/XpRTGOgDTbC1/gsA==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.436892 +++  Cache FetchItems for sortk A#G#:S UID: [sRH+q/XpRTGOgDTbC1/gsA==] 
FetchNode: 2020/08/13 04:38:08.436896  node: sRH+q/XpRTGOgDTbC1/gsA== subKey: A#G#:S
DB: 2020/08/13 04:38:08.441619 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.686967ms
AttachNode: gr1 2020/08/13 04:38:08.441943 Errored: SetUpredAvailable :for  sRH+q/XpRTGOgDTbC1/gsA==
Cache: 2020/08/13 04:38:08.442335 In SetUpredAvailable: pUid, tUID:  sRH+q/XpRTGOgDTbC1/gsA== pdd/c31WSxieNyT73Ny+oA== A#G#:S
Cache: 2020/08/13 04:38:08.442345 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:38:08.448522 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.110419ms
Unlock: 2020/08/13 04:38:08.448532 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:38:08.453589 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 4.959111ms
DB: 2020/08/13 04:38:08.457753 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.460857 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.464347 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.469047 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.474184 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.067811ms
DB: 2020/08/13 04:38:08.479911 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 5.350383ms
FetchForUpdate: 2020/08/13 04:38:08.479929 ** Cache FetchForUpdate Cache Key Value: [g94QfrBGTb2dxnx5upkPHw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.479936 +++  Cache FetchItems for sortk A#G#:S UID: [g94QfrBGTb2dxnx5upkPHw==] 
FetchNode: 2020/08/13 04:38:08.479941  node: g94QfrBGTb2dxnx5upkPHw== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:38:08.480132 ** Cache FetchForUpdate Cache Key Value: [sRH+q/XpRTGOgDTbC1/gsA==]   sortk: A#
fetchItems: 2020/08/13 04:38:08.480142 +++  Cache FetchItems for sortk A# UID: [sRH+q/XpRTGOgDTbC1/gsA==] 
FetchNode: 2020/08/13 04:38:08.480170  node: sRH+q/XpRTGOgDTbC1/gsA== subKey: A#
DB: 2020/08/13 04:38:08.484065 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.089579ms
DB: 2020/08/13 04:38:08.485212 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.978711ms
Unlock: 2020/08/13 04:38:08.486361 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:38:08.489852 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.234247ms
DB: 2020/08/13 04:38:08.494843 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.834673ms
DB: 2020/08/13 04:38:08.494860 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 4.834673ms
DB: 2020/08/13 04:38:08.502904 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 8.008843ms
DB: 2020/08/13 04:38:08.502922 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 8.008843ms
DB: 2020/08/13 04:38:08.508824 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.582084ms
DB: 2020/08/13 04:38:08.514687 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.767751ms
Unlock: 2020/08/13 04:38:08.514700 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:38:08.520892 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.099377ms
DB: 2020/08/13 04:38:08.525890 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.93552ms
DB: 2020/08/13 04:38:08.531330 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.303275ms
DB: 2020/08/13 04:38:08.538173 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.772691ms
DB: 2020/08/13 04:38:08.543070 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.826339ms
DB: 2020/08/13 04:38:08.548408 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.268283ms
DB: 2020/08/13 04:38:08.556327 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 7.83011ms
DB: 2020/08/13 04:38:08.561540 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.931005ms
DB: 2020/08/13 04:38:08.567097 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.477855ms
DB: 2020/08/13 04:38:08.572286 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.123626ms
FetchForUpdate: 2020/08/13 04:38:08.572297 ** Cache FetchForUpdate Cache Key Value: [g94QfrBGTb2dxnx5upkPHw==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.572304 +++  Cache FetchItems for sortk A#G#:S UID: [g94QfrBGTb2dxnx5upkPHw==] 
FetchNode: 2020/08/13 04:38:08.572309  node: g94QfrBGTb2dxnx5upkPHw== subKey: A#G#:S
DB: 2020/08/13 04:38:08.576643 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.300153ms
AttachNode: gr1 2020/08/13 04:38:08.576727 Errored: SetUpredAvailable :for  g94QfrBGTb2dxnx5upkPHw==
Cache: 2020/08/13 04:38:08.576736 In SetUpredAvailable: pUid, tUID:  g94QfrBGTb2dxnx5upkPHw== 7wv4YJ7wTneJhWTNpypMmw== A#G#:S
Cache: 2020/08/13 04:38:08.576741 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:38:08.581757 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 4.980105ms
Unlock: 2020/08/13 04:38:08.581770 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:38:08.588760 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 6.516298ms
DB: 2020/08/13 04:38:08.592758 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.596111 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.599598 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.603660 NodeExists: consumed capacity for GetItem: {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
} 
DB: 2020/08/13 04:38:08.609009 EdgeExists: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.298263ms
DB: 2020/08/13 04:38:08.613836 LogEvent for AttachNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}. Duration: 4.759899ms
FetchForUpdate: 2020/08/13 04:38:08.613851 ** Cache FetchForUpdate Cache Key Value: [u56/eLl7Qwu/Jz2BMNaEzQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.613857 +++  Cache FetchItems for sortk A#G#:S UID: [u56/eLl7Qwu/Jz2BMNaEzQ==] 
FetchNode: 2020/08/13 04:38:08.613862  node: u56/eLl7Qwu/Jz2BMNaEzQ== subKey: A#G#:S
FetchForUpdate: 2020/08/13 04:38:08.614070 ** Cache FetchForUpdate Cache Key Value: [sRH+q/XpRTGOgDTbC1/gsA==]   sortk: A#
fetchItems: 2020/08/13 04:38:08.614098 +++  Cache FetchItems for sortk A# UID: [sRH+q/XpRTGOgDTbC1/gsA==] 
FetchNode: 2020/08/13 04:38:08.614111  node: sRH+q/XpRTGOgDTbC1/gsA== subKey: A#
DB: 2020/08/13 04:38:08.617980 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.075921ms
DB: 2020/08/13 04:38:08.618997 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 10  Duration: 4.840612ms
Unlock: 2020/08/13 04:38:08.619716 ******* IN UNLOCK NC ********************  From UnmarshalCache  //// 
DB: 2020/08/13 04:38:08.624640 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 6.292797ms
DB: 2020/08/13 04:38:08.630186 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.512307ms
DB: 2020/08/13 04:38:08.630202 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.512307ms
DB: 2020/08/13 04:38:08.635569 MakeOverflowBlock: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.337872ms
DB: 2020/08/13 04:38:08.635584 MakeOverflowBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.337872ms
DB: 2020/08/13 04:38:08.645002 SaveChildUIDtoOvflBlock: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 9.193669ms
DB: 2020/08/13 04:38:08.651084 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.757661ms
Unlock: 2020/08/13 04:38:08.651098 ******* IN UNLOCK NC ********************  Unlock from main goroutine in AttachNode..
DB: 2020/08/13 04:38:08.658773 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.69727ms
DB: 2020/08/13 04:38:08.664047 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.96579ms
DB: 2020/08/13 04:38:08.669860 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.118571ms
DB: 2020/08/13 04:38:08.677006 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.638555ms
DB: 2020/08/13 04:38:08.682399 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.972177ms
DB: 2020/08/13 04:38:08.688319 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.308335ms
DB: 2020/08/13 04:38:08.695398 PropagateChildData:consumed capacity for UpdateItem  <nil>.  Duration: 6.639304ms
DB: 2020/08/13 04:38:08.700811 createPropagationScalarItem: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 5.002254ms
DB: 2020/08/13 04:38:08.706602 PropagateChildData:consumed capacity for UpdateItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.217408ms
DB: 2020/08/13 04:38:08.712197 AddReverseEdge: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGraph"
}, Duration: 5.348586ms
FetchForUpdate: 2020/08/13 04:38:08.712209 ** Cache FetchForUpdate Cache Key Value: [u56/eLl7Qwu/Jz2BMNaEzQ==]   sortk: A#G#:S
fetchItems: 2020/08/13 04:38:08.712215 +++  Cache FetchItems for sortk A#G#:S UID: [u56/eLl7Qwu/Jz2BMNaEzQ==] 
FetchNode: 2020/08/13 04:38:08.712221  node: u56/eLl7Qwu/Jz2BMNaEzQ== subKey: A#G#:S
DB: 2020/08/13 04:38:08.716629 FetchNode:consumed capacity for Query  {
  CapacityUnits: 0.5,
  TableName: "DyGraph"
}. ItemCount 4  Duration: 4.377704ms
AttachNode: gr1 2020/08/13 04:38:08.716738 Errored: SetUpredAvailable :for  u56/eLl7Qwu/Jz2BMNaEzQ==
Cache: 2020/08/13 04:38:08.716747 In SetUpredAvailable: pUid, tUID:  u56/eLl7Qwu/Jz2BMNaEzQ== NGLl1G45R8yEAwbNKK3axQ== A#G#:S
Cache: 2020/08/13 04:38:08.716751 tuid != puid: ABOUT TO SET UID_PREP AS AVAILABLE. in db
DB: 2020/08/13 04:38:08.721913 SaveUpredState:consumed capacity for Query  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}.  Duration: 5.118788ms
Unlock: 2020/08/13 04:38:08.722031 ******* IN UNLOCK NC ********************
DB: 2020/08/13 04:38:08.727492 UpdateEvent: consumed updateitem capacity: {
  CapacityUnits: 1,
  TableName: "DyGEvent"
}, Duration: 5.006276ms
rdfLoader: 2020/08/13 04:38:08.727503 saveNode finished waiting...exiting
grmgr: 2020/08/13 04:38:08.727513 Powering down...
rdfuuid: 2020/08/13 04:38:08.727519 Powering down...
DB:2020/08/13 04:41:18 log.go:18: ===============================================================================
grmgr: 2020/08/13 04:41:18.163285 Powering on...
rdfLoader: 2020/08/13 04:41:18.163356 verify started....xx.
rdfLoader: 2020/08/13 04:41:18.163367 saveNode started......
rdfuuid: 2020/08/13 04:41:18.163377 Powering on...
rdfLoader: 2020/08/13 04:41:18.163383 *************** All started 
rdfLoader: 2020/08/13 04:41:18.169798 .  getType..
rdfLoader: 2020/08/13 04:41:18.169808 node.TyName : [Person]
DB: 2020/08/13 04:41:18.242383 FetchType: consumed capacity for Query: {
  CapacityUnits: 0.5,
  TableName: "DyGTypes"
},  Item Count: 9 Duration: 72.516106ms
verify: 2020/08/13 04:41:18.244903 *** Verify waiting on umarshal ch............................................. 1
rdfLoader: 2020/08/13 04:41:18.245500 Find Ty Address
rdfLoader: 2020/08/13 04:41:18.245510 Find Ty Age
rdfLoader: 2020/08/13 04:41:18.245517 Find Ty Cars
rdfLoader: 2020/08/13 04:41:18.245523 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:41:18.245528 Add to SS . [Alfa]
rdfLoader: 2020/08/13 04:41:18.245532 Find Ty DOB
rdfLoader: 2020/08/13 04:41:18.245537 Find Ty Friends
rdfLoader: 2020/08/13 04:41:18.245541 Find Ty Jobs
rdfLoader: 2020/08/13 04:41:18.245545 Find Ty Name
rdfLoader: 2020/08/13 04:41:18.245549 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:41:18.245553 Find Ty Siblings
rdfLoader: 2020/08/13 04:41:18.245565 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:41:18.245596 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}, ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}, ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}, ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:41:18.245601 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:41:18.245649 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"abc", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.245658 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"abc", Name:"Cars", DT:"SS", Value:[]string{"Fiat", "Honda", "Alfa"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.245664 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"abc", Name:"DOB", DT:"S", Value:"13 March 1958"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.245670 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"abc", Name:"Name", DT:"S", Value:"Ross Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.245676 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"abc", Name:"Age", DT:"I", Value:62}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.245682 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.245687 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:41:18.245704 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:41:18.245711 UID request  : uuid.Request{SName:"abc", RespCh:(chan util.UID)(0xc00037c240)}
SaveRDFNode: 2020/08/13 04:41:18.245715 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:41:18.245733 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.245788 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.245798 UID received  : DPvbuCeDQMu+/tF9IbRTZA==
grmgr: 2020/08/13 04:41:18.246026 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:41:18.246034 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:41:18.246038 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:41:18.246044 EndCh received for unmarshall. rCnt = 0 
grmgr: 2020/08/13 04:41:18.246048 WAIT on end - send on unmarshall local channel 
verify: 2020/08/13 04:41:18.246106 *** Verify running...... 1
rdfLoader: 2020/08/13 04:41:18.246113 .  getType..
rdfLoader: 2020/08/13 04:41:18.246117 node.TyName : [Person]
verify: 2020/08/13 04:41:18.246143 *** Verify waiting on umarshal ch............................................. 1
verify: 2020/08/13 04:41:18.246148 *** Verify running...... 1
grmgr: 2020/08/13 04:41:18.246152 SENT on end - send on unmarshall local channel 
rdfLoader: 2020/08/13 04:41:18.246195 .  getType..
rdfLoader: 2020/08/13 04:41:18.246199 node.TyName : [Person]
verify: 2020/08/13 04:41:18.246215 *** Verify waiting on umarshal ch............................................. 2
grmgr: 2020/08/13 04:41:18.246292 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:41:18.246298 WAIT on start - send on unmarshall local channel 
grmgr: 2020/08/13 04:41:18.246302 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:41:18.246307 StartCh received for unmarshall. rCnt = 2 
grmgr: 2020/08/13 04:41:18.246310 WAIT on start - send on unmarshall local channel 
rdfLoader: 2020/08/13 04:41:18.246314 Find Ty Address
rdfLoader: 2020/08/13 04:41:18.246318 Find Ty Age
rdfLoader: 2020/08/13 04:41:18.246323 Find Ty Cars
rdfLoader: 2020/08/13 04:41:18.246328 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:41:18.246332 Add to SS . [VW Golf]
rdfLoader: 2020/08/13 04:41:18.246336 Find Ty DOB
rdfLoader: 2020/08/13 04:41:18.246340 Find Ty Friends
rdfLoader: 2020/08/13 04:41:18.246344 Find Ty Jobs
rdfLoader: 2020/08/13 04:41:18.246347 Find Ty Name
rdfLoader: 2020/08/13 04:41:18.246351 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:41:18.246355 Find Ty Siblings
rdfLoader: 2020/08/13 04:41:18.246363 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:41:18.246390 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}, ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}, ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}, ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:41:18.246420 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:41:18.246456 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"b", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.246463 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"b", Name:"Age", DT:"I", Value:58}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.246470 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"b", Name:"Cars", DT:"SS", Value:[]string{"Holden Commodore", "Honda", "VW Golf"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.246475 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"b", Name:"DOB", DT:"S", Value:"2 June 1960"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.246481 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"b", Name:"Name", DT:"S", Value:"Paul Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.246486 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.246492 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:41:18.246501 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:41:18.246507 UID request  : uuid.Request{SName:"b", RespCh:(chan util.UID)(0xc00037c780)}
SaveRDFNode: 2020/08/13 04:41:18.246511 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:41:18.246518 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.246522 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.246527 UID received  : eQES4aq3T0K4dqXdwsZ+7w==
rdfLoader: 2020/08/13 04:41:18.246864 Find Ty Address
rdfLoader: 2020/08/13 04:41:18.246873 Find Ty Age
rdfLoader: 2020/08/13 04:41:18.246879 Find Ty Cars
rdfLoader: 2020/08/13 04:41:18.246884 Add to SS . [Mitsubishi]
rdfLoader: 2020/08/13 04:41:18.246888 Add to SS . [Ford Laser]
rdfLoader: 2020/08/13 04:41:18.246907 Add to SS . [Honda]
rdfLoader: 2020/08/13 04:41:18.246911 Find Ty DOB
rdfLoader: 2020/08/13 04:41:18.246916 Find Ty Friends
rdfLoader: 2020/08/13 04:41:18.246919 Find Ty Jobs
rdfLoader: 2020/08/13 04:41:18.246923 Find Ty Name
rdfLoader: 2020/08/13 04:41:18.246927 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:41:18.246931 Find Ty Siblings
rdfLoader: 2020/08/13 04:41:18.246941 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:41:18.246968 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}, ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}, ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}, ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:41:18.246972 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:41:18.246992 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"c", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.246998 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"c", Name:"Age", DT:"I", Value:67}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.247005 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"c", Name:"Cars", DT:"SS", Value:[]string{"VW Passat", "Mitsubishi", "Ford Laser", "Honda"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.247011 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"c", Name:"DOB", DT:"S", Value:"29 Jan 1953"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.247016 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"c", Name:"Name", DT:"S", Value:"Ian Payne"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.247022 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.247027 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:41:18.247031 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:41:18.247037 UID request  : uuid.Request{SName:"c", RespCh:(chan util.UID)(0xc00037ce40)}
SaveRDFNode: 2020/08/13 04:41:18.247040 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:41:18.247047 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.247051 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.247072 UID received  : Zf+YZGWsSmujwHKSHBYjkg==
verify: 2020/08/13 04:41:18.248683 *** Verify running...... 2
rdfLoader: 2020/08/13 04:41:18.248692 .  getType..
rdfLoader: 2020/08/13 04:41:18.248697 node.TyName : [Person]
verify: 2020/08/13 04:41:18.248720 *** Verify waiting on umarshal ch............................................. 2
verify: 2020/08/13 04:41:18.248725 *** Verify running...... 2
grmgr: 2020/08/13 04:41:18.248730 SENT on start - on unmarshall local channel 
grmgr: 2020/08/13 04:41:18.248737 EndCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:41:18.248747 EndCh received for unmarshall. rCnt = 0 
rdfLoader: 2020/08/13 04:41:18.249150 Find Ty Address
rdfLoader: 2020/08/13 04:41:18.249158 Find Ty Age
rdfLoader: 2020/08/13 04:41:18.249163 Find Ty Cars
rdfLoader: 2020/08/13 04:41:18.249168 Add to SS . [Bentley]
rdfLoader: 2020/08/13 04:41:18.249173 Find Ty DOB
rdfLoader: 2020/08/13 04:41:18.249177 Find Ty Friends
rdfLoader: 2020/08/13 04:41:18.249181 Find Ty Jobs
rdfLoader: 2020/08/13 04:41:18.249184 Find Ty Name
rdfLoader: 2020/08/13 04:41:18.249189 Find Ty SalaryLast3Year
rdfLoader: 2020/08/13 04:41:18.249192 Find Ty Siblings
rdfLoader: 2020/08/13 04:41:18.249649 Add Type to NV........................... ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
rdfLoader: 2020/08/13 04:41:18.249691 send on saveCh: nv: []ds.NV{ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}, ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}, ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}, ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}, ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}, ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}, ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}}
unmarshal: 2020/08/13 04:41:18.249697 Send End on channel grmgr.EndCh
SaveRDFNode: xxx 2020/08/13 04:41:18.249731 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#T", SName:"d", Name:"", DT:"ty", Value:"Person"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.249737 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:N", SName:"d", Name:"Name", DT:"S", Value:"Phil Smith"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.249743 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:A", SName:"d", Name:"Age", DT:"I", Value:36}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.249749 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:C", SName:"d", Name:"Cars", DT:"SS", Value:[]string{"Roll Roycet", "Bentley"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.249754 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#:D", SName:"d", Name:"DOB", DT:"S", Value:"17 June 1976"}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.249759 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:F", SName:"__", Name:"Friends", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: xxx 2020/08/13 04:41:18.249782 +++++++++++++++++ SaveRDFNode:ds.NV{Sortk:"A#G#:S", SName:"__", Name:"Siblings", DT:"Nd", Value:[]string{"__"}}
 
SaveRDFNode: 2020/08/13 04:41:18.249787 SaveRDFNode : 7 
SaveRDFNode: 2020/08/13 04:41:18.249793 UID request  : uuid.Request{SName:"d", RespCh:(chan util.UID)(0xc00037d2c0)}
SaveRDFNode: 2020/08/13 04:41:18.249797 Waiting for UID ......................
rdfUIDdb: 2020/08/13 04:41:18.249805 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.249809 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.249814 UID received  : icpKzNNgT8CakPQHcrGhPg==
grmgr: 2020/08/13 04:41:18.250001 StartCh received for unmarshall. rCnt = 1 
grmgr: 2020/08/13 04:41:18.250011 WAIT on start - send on unmarshall local channel 
DB: 2020/08/13 04:41:18.253495 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 7.666081ms
DB: 2020/08/13 04:41:18.258349 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 11.795299ms
DB: 2020/08/13 04:41:18.261689 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 8.09312ms
DB: 2020/08/13 04:41:18.265105 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.21521ms
DB: 2020/08/13 04:41:18.268277 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.134931ms
DB: 2020/08/13 04:41:18.270924 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 21.083414ms
DB: 2020/08/13 04:41:18.273936 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 26.837172ms
DB: 2020/08/13 04:41:18.274346 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.391524ms
DB: 2020/08/13 04:41:18.276210 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 17.817814ms
DB: 2020/08/13 04:41:18.277805 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.828939ms
DB: 2020/08/13 04:41:18.278219 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.83923ms
DB: 2020/08/13 04:41:18.279658 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.415404ms
DB: 2020/08/13 04:41:18.281255 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.24748ms
DB: 2020/08/13 04:41:18.282053 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.795761ms
DB: 2020/08/13 04:41:18.282964 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.274757ms
DB: 2020/08/13 04:41:18.283235 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 14.926455ms
SaveRDFNode: 2020/08/13 04:41:18.283262 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037c240)}
rdfUIDdb: 2020/08/13 04:41:18.283270 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.283274 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.283280 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:18.283295 a: = db.Item{PKey:[]uint8{0xc, 0xfb, 0xdb, 0xb8, 0x27, 0x83, 0x40, 0xcb, 0xbe, 0xfe, 0xd1, 0x7d, 0x21, 0xb4, 0x53, 0x64}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:18.284595 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.310622ms
DB: 2020/08/13 04:41:18.285320 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.236466ms
SaveRDFNode: 2020/08/13 04:41:18.285348 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037d2c0)}
rdfUIDdb: 2020/08/13 04:41:18.285356 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.285360 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.285366 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:18.285376 a: = db.Item{PKey:[]uint8{0x89, 0xca, 0x4a, 0xcc, 0xd3, 0x60, 0x4f, 0xc0, 0x9a, 0x90, 0xf4, 0x7, 0x72, 0xb1, 0xa1, 0x3e}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:18.286192 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.196968ms
SaveRDFNode: 2020/08/13 04:41:18.286205 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037c780)}
rdfUIDdb: 2020/08/13 04:41:18.286211 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.286215 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.286220 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:18.286231 a: = db.Item{PKey:[]uint8{0x79, 0x1, 0x12, 0xe1, 0xaa, 0xb7, 0x4f, 0x42, 0xb8, 0x76, 0xa5, 0xdd, 0xc2, 0xc6, 0x7e, 0xef}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:18.286777 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.453486ms
SaveRDFNode: 2020/08/13 04:41:18.286789 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037c240)}
rdfUIDdb: 2020/08/13 04:41:18.286794 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.286798 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.286804 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:18.286814 a: = db.Item{PKey:[]uint8{0xc, 0xfb, 0xdb, 0xb8, 0x27, 0x83, 0x40, 0xcb, 0xbe, 0xfe, 0xd1, 0x7d, 0x21, 0xb4, 0x53, 0x64}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:18.287896 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 2,
  TableName: "DyGraph"
}. Duration: 3.264247ms
SaveRDFNode: 2020/08/13 04:41:18.287908 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037ce40)}
rdfUIDdb: 2020/08/13 04:41:18.287914 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.287918 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.287923 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:18.287933 a: = db.Item{PKey:[]uint8{0x65, 0xff, 0x98, 0x64, 0x65, 0xac, 0x4a, 0x6b, 0xa3, 0xc0, 0x72, 0x92, 0x1c, 0x16, 0x23, 0x92}, SortK:"A#G#:F", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:18.289521 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.113993ms
SaveRDFNode: 2020/08/13 04:41:18.289534 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037d2c0)}
rdfUIDdb: 2020/08/13 04:41:18.289539 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.289543 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.289548 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:18.289572 a: = db.Item{PKey:[]uint8{0x89, 0xca, 0x4a, 0xcc, 0xd3, 0x60, 0x4f, 0xc0, 0x9a, 0x90, 0xf4, 0x7, 0x72, 0xb1, 0xa1, 0x3e}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:18.289902 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.642892ms
SaveRDFNode: 2020/08/13 04:41:18.289914 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037c780)}
rdfUIDdb: 2020/08/13 04:41:18.289920 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.289924 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.289929 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:18.289970 a: = db.Item{PKey:[]uint8{0x79, 0x1, 0x12, 0xe1, 0xaa, 0xb7, 0x4f, 0x42, 0xb8, 0x76, 0xa5, 0xdd, 0xc2, 0xc6, 0x7e, 0xef}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:18.290863 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.013867ms
SaveRDFNode: 2020/08/13 04:41:18.290872 Returned.+++++++++++ No error
DB: 2020/08/13 04:41:18.291196 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.22702ms
SaveRDFNode: 2020/08/13 04:41:18.291207 UID Nd request  : uuid.Request{SName:"__", RespCh:(chan util.UID)(0xc00037ce40)}
rdfUIDdb: 2020/08/13 04:41:18.291212 Send back uuid on RespCh.......
rdfUIDdb: 2020/08/13 04:41:18.291216 Sent back uuid on RespCh+++++
SaveRDFNode: 2020/08/13 04:41:18.291222 Received UID: X18=
SaveRDFNode: 2020/08/13 04:41:18.291232 a: = db.Item{PKey:[]uint8{0x65, 0xff, 0x98, 0x64, 0x65, 0xac, 0x4a, 0x6b, 0xa3, 0xc0, 0x72, 0x92, 0x1c, 0x16, 0x23, 0x92}, SortK:"A#G#:S", Nd:[][]uint8{[]uint8{0x5f, 0x5f}}, XF:[]int{1}, Id:[]int{0}}
DB: 2020/08/13 04:41:18.293299 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.698002ms
SaveRDFNode: 2020/08/13 04:41:18.293973 Returned.+++++++++++ No error
DB: 2020/08/13 04:41:18.294090 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 4.091097ms
SaveRDFNode: 2020/08/13 04:41:18.294103 Returned.+++++++++++ No error
DB: 2020/08/13 04:41:18.294645 SaveRDFNode: consumed capacity for PutItem  {
  CapacityUnits: 1,
  TableName: "DyGraph"
}. Duration: 3.361531ms
SaveRDFNode: 2020/08/13 04:41:18.294654 Returned.+++++++++++ No error
